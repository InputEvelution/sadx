.include "macros.s"

.section .text, "ax"  # 0x800058A0 - 0x800764A0 ; 0x00070C00


.global __AXOutNewFrame
__AXOutNewFrame:
/* 8001E984 0001B7A4  7C 08 02 A6 */	mflr r0
/* 8001E988 0001B7A8  3C 80 80 09 */	lis r4, __AXOutBuffer@ha
/* 8001E98C 0001B7AC  90 01 00 04 */	stw r0, 0x4(r1)
/* 8001E990 0001B7B0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 8001E994 0001B7B4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 8001E998 0001B7B8  3B E4 E0 E0 */	addi r31, r4, __AXOutBuffer@l
/* 8001E99C 0001B7BC  93 C1 00 10 */	stw r30, 0x10(r1)
/* 8001E9A0 0001B7C0  3B C3 00 00 */	addi r30, r3, 0x0
/* 8001E9A4 0001B7C4  48 02 42 C1 */	bl OSGetTime
/* 8001E9A8 0001B7C8  90 9F 47 D4 */	stw r4, 0x47d4(r31)
/* 8001E9AC 0001B7CC  90 7F 47 D0 */	stw r3, 0x47d0(r31)
/* 8001E9B0 0001B7D0  7F C3 F3 78 */	mr r3, r30
/* 8001E9B4 0001B7D4  48 00 12 39 */	bl __AXSyncPBs
/* 8001E9B8 0001B7D8  48 00 06 6D */	bl __AXPrintStudio
/* 8001E9BC 0001B7DC  4B FF F8 A5 */	bl __AXGetCommandListAddress
/* 8001E9C0 0001B7E0  3C 80 BA BE */	lis r4, 0xBABE0180@ha
/* 8001E9C4 0001B7E4  3B C3 00 00 */	addi r30, r3, 0x0
/* 8001E9C8 0001B7E8  38 64 01 80 */	addi r3, r4, 0xBABE0180@l
/* 8001E9CC 0001B7EC  48 00 B2 91 */	bl DSPSendMailToDSP
lbl_8001E9D0:
/* 8001E9D0 0001B7F0  48 00 B2 55 */	bl DSPCheckMailFromDSP
/* 8001E9D4 0001B7F4  28 03 00 00 */	cmplwi r3, 0x0
/* 8001E9D8 0001B7F8  40 82 FF F8 */	bne lbl_8001E9D0
/* 8001E9DC 0001B7FC  7F C3 F3 78 */	mr r3, r30
/* 8001E9E0 0001B800  48 00 B2 7D */	bl DSPSendMailToDSP
lbl_8001E9E4:
/* 8001E9E4 0001B804  48 00 B2 41 */	bl DSPCheckMailFromDSP
/* 8001E9E8 0001B808  28 03 00 00 */	cmplwi r3, 0x0
/* 8001E9EC 0001B80C  40 82 FF F8 */	bne lbl_8001E9E4
/* 8001E9F0 0001B810  4B FF EF DD */	bl __AXServiceCallbackStack
/* 8001E9F4 0001B814  48 02 42 71 */	bl OSGetTime
/* 8001E9F8 0001B818  90 9F 47 DC */	stw r4, 0x47dc(r31)
/* 8001E9FC 0001B81C  90 7F 47 D8 */	stw r3, 0x47d8(r31)
/* 8001EA00 0001B820  4B FF F6 05 */	bl __AXProcessAux
/* 8001EA04 0001B824  48 02 42 61 */	bl OSGetTime
/* 8001EA08 0001B828  90 9F 47 E4 */	stw r4, 0x47e4(r31)
/* 8001EA0C 0001B82C  90 7F 47 E0 */	stw r3, 0x47e0(r31)
/* 8001EA10 0001B830  48 02 42 55 */	bl OSGetTime
/* 8001EA14 0001B834  90 9F 47 EC */	stw r4, 0x47ec(r31)
/* 8001EA18 0001B838  90 7F 47 E8 */	stw r3, 0x47e8(r31)
/* 8001EA1C 0001B83C  81 8D 83 88 */	lwz r12, __AXUserFrameCallback@sda21(r13)
/* 8001EA20 0001B840  28 0C 00 00 */	cmplwi r12, 0x0
/* 8001EA24 0001B844  41 82 00 0C */	beq lbl_8001EA30
/* 8001EA28 0001B848  7D 88 03 A6 */	mtlr r12
/* 8001EA2C 0001B84C  4E 80 00 21 */	blrl
lbl_8001EA30:
/* 8001EA30 0001B850  48 02 42 35 */	bl OSGetTime
/* 8001EA34 0001B854  90 9F 47 F4 */	stw r4, 0x47f4(r31)
/* 8001EA38 0001B858  90 7F 47 F0 */	stw r3, 0x47f0(r31)
/* 8001EA3C 0001B85C  38 7F 05 00 */	addi r3, r31, 0x500
/* 8001EA40 0001B860  80 0D 83 78 */	lwz r0, __AXOutFrame@sda21(r13)
/* 8001EA44 0001B864  1C 00 02 80 */	mulli r0, r0, 0x280
/* 8001EA48 0001B868  7C 9F 02 14 */	add r4, r31, r0
/* 8001EA4C 0001B86C  4B FF F8 51 */	bl __AXNextFrame
/* 8001EA50 0001B870  80 6D 83 78 */	lwz r3, __AXOutFrame@sda21(r13)
/* 8001EA54 0001B874  38 80 02 80 */	li r4, 0x280
/* 8001EA58 0001B878  38 03 00 01 */	addi r0, r3, 0x1
/* 8001EA5C 0001B87C  90 0D 83 78 */	stw r0, __AXOutFrame@sda21(r13)
/* 8001EA60 0001B880  80 0D 83 78 */	lwz r0, __AXOutFrame@sda21(r13)
/* 8001EA64 0001B884  54 00 07 FE */	clrlwi r0, r0, 31
/* 8001EA68 0001B888  90 0D 83 78 */	stw r0, __AXOutFrame@sda21(r13)
/* 8001EA6C 0001B88C  80 0D 83 78 */	lwz r0, __AXOutFrame@sda21(r13)
/* 8001EA70 0001B890  1C 00 02 80 */	mulli r0, r0, 0x280
/* 8001EA74 0001B894  7C 7F 02 14 */	add r3, r31, r0
/* 8001EA78 0001B898  4B FF C7 6D */	bl AIInitDMA
/* 8001EA7C 0001B89C  48 02 41 E9 */	bl OSGetTime
/* 8001EA80 0001B8A0  90 9F 47 FC */	stw r4, 0x47fc(r31)
/* 8001EA84 0001B8A4  90 7F 47 F8 */	stw r3, 0x47f8(r31)
/* 8001EA88 0001B8A8  48 00 0A 55 */	bl  __AXGetNumVoices
/* 8001EA8C 0001B8AC  90 7F 48 00 */	stw r3, 0x4800(r31)
/* 8001EA90 0001B8B0  48 00 1C CD */	bl __AXGetCurrentProfile
/* 8001EA94 0001B8B4  28 03 00 00 */	cmplwi r3, 0x0
/* 8001EA98 0001B8B8  41 82 00 5C */	beq lbl_8001EAF4
/* 8001EA9C 0001B8BC  38 00 00 07 */	li r0, 0x7
/* 8001EAA0 0001B8C0  7C 09 03 A6 */	mtctr r0
/* 8001EAA4 0001B8C4  38 9F 47 D0 */	addi r4, r31, 0x47d0
lbl_8001EAA8:
/* 8001EAA8 0001B8C8  88 04 00 00 */	lbz r0, 0x0(r4)
/* 8001EAAC 0001B8CC  98 03 00 00 */	stb r0, 0x0(r3)
/* 8001EAB0 0001B8D0  88 04 00 01 */	lbz r0, 0x1(r4)
/* 8001EAB4 0001B8D4  98 03 00 01 */	stb r0, 0x1(r3)
/* 8001EAB8 0001B8D8  88 04 00 02 */	lbz r0, 0x2(r4)
/* 8001EABC 0001B8DC  98 03 00 02 */	stb r0, 0x2(r3)
/* 8001EAC0 0001B8E0  88 04 00 03 */	lbz r0, 0x3(r4)
/* 8001EAC4 0001B8E4  98 03 00 03 */	stb r0, 0x3(r3)
/* 8001EAC8 0001B8E8  88 04 00 04 */	lbz r0, 0x4(r4)
/* 8001EACC 0001B8EC  98 03 00 04 */	stb r0, 0x4(r3)
/* 8001EAD0 0001B8F0  88 04 00 05 */	lbz r0, 0x5(r4)
/* 8001EAD4 0001B8F4  98 03 00 05 */	stb r0, 0x5(r3)
/* 8001EAD8 0001B8F8  88 04 00 06 */	lbz r0, 0x6(r4)
/* 8001EADC 0001B8FC  98 03 00 06 */	stb r0, 0x6(r3)
/* 8001EAE0 0001B900  88 04 00 07 */	lbz r0, 0x7(r4)
/* 8001EAE4 0001B904  38 84 00 08 */	addi r4, r4, 0x8
/* 8001EAE8 0001B908  98 03 00 07 */	stb r0, 0x7(r3)
/* 8001EAEC 0001B90C  38 63 00 08 */	addi r3, r3, 0x8
/* 8001EAF0 0001B910  42 00 FF B8 */	bdnz lbl_8001EAA8
lbl_8001EAF4:
/* 8001EAF4 0001B914  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 8001EAF8 0001B918  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 8001EAFC 0001B91C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 8001EB00 0001B920  38 21 00 18 */	addi r1, r1, 0x18
/* 8001EB04 0001B924  7C 08 03 A6 */	mtlr r0
/* 8001EB08 0001B928  4E 80 00 20 */	blr

.global __AXOutAiCallback
__AXOutAiCallback:
/* 8001EB0C 0001B92C  7C 08 02 A6 */	mflr r0
/* 8001EB10 0001B930  90 01 00 04 */	stw r0, 0x4(r1)
/* 8001EB14 0001B934  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 8001EB18 0001B938  80 0D 83 7C */	lwz r0, __AXOutDspReady@sda21(r13)
/* 8001EB1C 0001B93C  28 00 00 00 */	cmplwi r0, 0x0
/* 8001EB20 0001B940  40 82 00 10 */	bne lbl_8001EB30
/* 8001EB24 0001B944  48 02 41 41 */	bl OSGetTime
/* 8001EB28 0001B948  90 8D 83 84 */	stw r4, __AXOsTime+4@sda21(r13)
/* 8001EB2C 0001B94C  90 6D 83 80 */	stw r3, __AXOsTime@sda21(r13)
lbl_8001EB30:
/* 8001EB30 0001B950  80 0D 83 7C */	lwz r0, __AXOutDspReady@sda21(r13)
/* 8001EB34 0001B954  28 00 00 01 */	cmplwi r0, 0x1
/* 8001EB38 0001B958  40 82 00 18 */	bne lbl_8001EB50
/* 8001EB3C 0001B95C  38 00 00 00 */	li r0, 0x0
/* 8001EB40 0001B960  90 0D 83 7C */	stw r0, __AXOutDspReady@sda21(r13)
/* 8001EB44 0001B964  38 60 00 00 */	li r3, 0x0
/* 8001EB48 0001B968  4B FF FE 3D */	bl __AXOutNewFrame
/* 8001EB4C 0001B96C  48 00 00 18 */	b lbl_8001EB64
lbl_8001EB50:
/* 8001EB50 0001B970  38 00 00 02 */	li r0, 0x2
/* 8001EB54 0001B974  3C 60 80 09 */	lis r3, __AXDSPTask@ha
/* 8001EB58 0001B978  90 0D 83 7C */	stw r0, __AXOutDspReady@sda21(r13)
/* 8001EB5C 0001B97C  38 63 E8 60 */	addi r3, r3, __AXDSPTask@l
/* 8001EB60 0001B980  48 00 B2 4D */	bl func_80029DAC
lbl_8001EB64:
/* 8001EB64 0001B984  80 01 00 0C */	lwz r0, 0xc(r1)
/* 8001EB68 0001B988  38 21 00 08 */	addi r1, r1, 0x8
/* 8001EB6C 0001B98C  7C 08 03 A6 */	mtlr r0
/* 8001EB70 0001B990  4E 80 00 20 */	blr

.global __AXDSPInitCallback
__AXDSPInitCallback:
/* 8001EB74 0001B994  38 00 00 01 */	li r0, 0x1
/* 8001EB78 0001B998  90 0D 83 8C */	stw r0, __AXDSPInitFlag@sda21(r13)
/* 8001EB7C 0001B99C  4E 80 00 20 */	blr

__AXDSPResumeCallback:
/* 8001EB80 0001B9A0  7C 08 02 A6 */	mflr r0
/* 8001EB84 0001B9A4  90 01 00 04 */	stw r0, 0x4(r1)
/* 8001EB88 0001B9A8  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 8001EB8C 0001B9AC  80 0D 83 7C */	lwz r0, __AXOutDspReady@sda21(r13)
/* 8001EB90 0001B9B0  28 00 00 02 */	cmplwi r0, 0x2
/* 8001EB94 0001B9B4  40 82 00 2C */	bne lbl_8001EBC0
/* 8001EB98 0001B9B8  38 00 00 00 */	li r0, 0x0
/* 8001EB9C 0001B9BC  90 0D 83 7C */	stw r0, __AXOutDspReady@sda21(r13)
/* 8001EBA0 0001B9C0  48 02 40 C5 */	bl OSGetTime
/* 8001EBA4 0001B9C4  80 AD 83 80 */	lwz r5, __AXOsTime@sda21(r13)
/* 8001EBA8 0001B9C8  80 0D 83 84 */	lwz r0, __AXOsTime+4@sda21(r13)
/* 8001EBAC 0001B9CC  7C 00 20 10 */	subfc r0, r0, r4
/* 8001EBB0 0001B9D0  54 00 F0 BE */	srwi r0, r0, 2
/* 8001EBB4 0001B9D4  7C 03 03 78 */	mr r3, r0
/* 8001EBB8 0001B9D8  4B FF FD CD */	bl __AXOutNewFrame
/* 8001EBBC 0001B9DC  48 00 00 0C */	b lbl_8001EBC8
lbl_8001EBC0:
/* 8001EBC0 0001B9E0  38 00 00 01 */	li r0, 0x1
/* 8001EBC4 0001B9E4  90 0D 83 7C */	stw r0, __AXOutDspReady@sda21(r13)
lbl_8001EBC8:
/* 8001EBC8 0001B9E8  80 01 00 0C */	lwz r0, 0xc(r1)
/* 8001EBCC 0001B9EC  38 21 00 08 */	addi r1, r1, 0x8
/* 8001EBD0 0001B9F0  7C 08 03 A6 */	mtlr r0
/* 8001EBD4 0001B9F4  4E 80 00 20 */	blr

__AXDSPDoneCallback:
/* 8001EBD8 0001B9F8  7C 08 02 A6 */	mflr r0
/* 8001EBDC 0001B9FC  38 6D 83 98 */	addi r3, r13, __AXOutThreadQueue@sda21
/* 8001EBE0 0001BA00  90 01 00 04 */	stw r0, 0x4(r1)
/* 8001EBE4 0001BA04  38 00 00 01 */	li r0, 0x1
/* 8001EBE8 0001BA08  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 8001EBEC 0001BA0C  90 0D 83 90 */	stw r0, __AXDSPDoneFlag@sda21(r13)
/* 8001EBF0 0001BA10  48 02 3D FD */	bl OSWakeupThread
/* 8001EBF4 0001BA14  80 01 00 0C */	lwz r0, 0xc(r1)
/* 8001EBF8 0001BA18  38 21 00 08 */	addi r1, r1, 0x8
/* 8001EBFC 0001BA1C  7C 08 03 A6 */	mtlr r0
/* 8001EC00 0001BA20  4E 80 00 20 */	blr

.global __AXOutInitDSP
__AXOutInitDSP:
/* 8001EC04 0001BA24  7C 08 02 A6 */	mflr r0
/* 8001EC08 0001BA28  3C A0 80 02 */	lis r5, __AXDSPInitCallback@ha
/* 8001EC0C 0001BA2C  90 01 00 04 */	stw r0, 0x4(r1)
/* 8001EC10 0001BA30  3C 60 80 08 */	lis r3, axDspSlave@ha
/* 8001EC14 0001BA34  38 03 C6 40 */	addi r0, r3, axDspSlave@l
/* 8001EC18 0001BA38  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 8001EC1C 0001BA3C  3C 80 80 09 */	lis r4, __AXOutBuffer@ha
/* 8001EC20 0001BA40  39 20 00 00 */	li r9, 0x0
/* 8001EC24 0001BA44  93 E1 00 0C */	stw r31, 0xc(r1)
/* 8001EC28 0001BA48  3B E4 E0 E0 */	addi r31, r4, __AXOutBuffer@l
/* 8001EC2C 0001BA4C  3C 80 80 02 */	lis r4, __AXDSPResumeCallback@ha
/* 8001EC30 0001BA50  90 1F 07 8C */	stw r0, 0x78c(r31)
/* 8001EC34 0001BA54  39 1F 07 D0 */	addi r8, r31, 0x7d0
/* 8001EC38 0001BA58  38 E0 00 10 */	li r7, 0x10
/* 8001EC3C 0001BA5C  A0 0D 80 80 */	lhz r0, axDspSlaveLength@sda21(r13)
/* 8001EC40 0001BA60  38 C0 00 30 */	li r6, 0x30
/* 8001EC44 0001BA64  38 A5 EB 74 */	addi r5, r5, __AXDSPInitCallback@l
/* 8001EC48 0001BA68  90 1F 07 90 */	stw r0, 0x790(r31)
/* 8001EC4C 0001BA6C  38 00 20 00 */	li r0, 0x2000
/* 8001EC50 0001BA70  38 84 EB 80 */	addi r4, r4, __AXDSPResumeCallback@l
/* 8001EC54 0001BA74  91 3F 07 94 */	stw r9, 0x794(r31)
/* 8001EC58 0001BA78  3C 60 80 02 */	lis r3, __AXDSPDoneCallback@ha
/* 8001EC5C 0001BA7C  91 1F 07 98 */	stw r8, 0x798(r31)
/* 8001EC60 0001BA80  90 1F 07 9C */	stw r0, 0x79c(r31)
/* 8001EC64 0001BA84  38 03 EB D8 */	addi r0, r3, __AXDSPDoneCallback@l
/* 8001EC68 0001BA88  38 6D 83 98 */	addi r3, r13, __AXOutThreadQueue@sda21
/* 8001EC6C 0001BA8C  91 3F 07 A0 */	stw r9, 0x7a0(r31)
/* 8001EC70 0001BA90  B0 FF 07 A4 */	sth r7, 0x7a4(r31)
/* 8001EC74 0001BA94  B0 DF 07 A6 */	sth r6, 0x7a6(r31)
/* 8001EC78 0001BA98  90 BF 07 A8 */	stw r5, 0x7a8(r31)
/* 8001EC7C 0001BA9C  90 9F 07 AC */	stw r4, 0x7ac(r31)
/* 8001EC80 0001BAA0  90 1F 07 B0 */	stw r0, 0x7b0(r31)
/* 8001EC84 0001BAA4  91 3F 07 B4 */	stw r9, 0x7b4(r31)
/* 8001EC88 0001BAA8  91 3F 07 84 */	stw r9, 0x784(r31)
/* 8001EC8C 0001BAAC  91 2D 83 8C */	stw r9, __AXDSPInitFlag@sda21(r13)
/* 8001EC90 0001BAB0  91 2D 83 90 */	stw r9, __AXDSPDoneFlag@sda21(r13)
/* 8001EC94 0001BAB4  48 02 2E 95 */	bl OSInitThreadQueue
/* 8001EC98 0001BAB8  48 00 B0 9D */	bl func_80029D34
/* 8001EC9C 0001BABC  2C 03 00 00 */	cmpwi r3, 0x0
/* 8001ECA0 0001BAC0  40 82 00 08 */	bne lbl_8001ECA8
/* 8001ECA4 0001BAC4  48 00 AF CD */	bl DSPInit
lbl_8001ECA8:
/* 8001ECA8 0001BAC8  38 7F 07 80 */	addi r3, r31, 0x780
/* 8001ECAC 0001BACC  48 00 B0 91 */	bl func_80029D3C
lbl_8001ECB0:
/* 8001ECB0 0001BAD0  80 0D 83 8C */	lwz r0, __AXDSPInitFlag@sda21(r13)
/* 8001ECB4 0001BAD4  2C 00 00 00 */	cmpwi r0, 0x0
/* 8001ECB8 0001BAD8  41 82 FF F8 */	beq lbl_8001ECB0
/* 8001ECBC 0001BADC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 8001ECC0 0001BAE0  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 8001ECC4 0001BAE4  38 21 00 10 */	addi r1, r1, 0x10
/* 8001ECC8 0001BAE8  7C 08 03 A6 */	mtlr r0
/* 8001ECCC 0001BAEC  4E 80 00 20 */	blr

.global __AXOutInit
__AXOutInit:
/* 8001ECD0 0001BAF0  7C 08 02 A6 */	mflr r0
/* 8001ECD4 0001BAF4  38 60 00 00 */	li r3, 0x0
/* 8001ECD8 0001BAF8  90 01 00 04 */	stw r0, 0x4(r1)
/* 8001ECDC 0001BAFC  38 00 00 04 */	li r0, 0x4
/* 8001ECE0 0001BB00  3C 80 80 09 */	lis r4, __AXOutBuffer@ha
/* 8001ECE4 0001BB04  7C 09 03 A6 */	mtctr r0
/* 8001ECE8 0001BB08  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 8001ECEC 0001BB0C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 8001ECF0 0001BB10  3B E4 E0 E0 */	addi r31, r4, __AXOutBuffer@l
/* 8001ECF4 0001BB14  38 9F 00 00 */	addi r4, r31, 0x0
/* 8001ECF8 0001BB18  90 6D 83 78 */	stw r3, __AXOutFrame@sda21(r13)
/* 8001ECFC 0001BB1C  90 6D 83 94 */	stw r3, __AXDebugSteppingMode@sda21(r13)
lbl_8001ED00:
/* 8001ED00 0001BB20  90 64 00 00 */	stw r3, 0x0(r4)
/* 8001ED04 0001BB24  90 64 00 04 */	stw r3, 0x4(r4)
/* 8001ED08 0001BB28  90 64 00 08 */	stw r3, 0x8(r4)
/* 8001ED0C 0001BB2C  90 64 00 0C */	stw r3, 0xc(r4)
/* 8001ED10 0001BB30  90 64 00 10 */	stw r3, 0x10(r4)
/* 8001ED14 0001BB34  90 64 00 14 */	stw r3, 0x14(r4)
/* 8001ED18 0001BB38  90 64 00 18 */	stw r3, 0x18(r4)
/* 8001ED1C 0001BB3C  90 64 00 1C */	stw r3, 0x1c(r4)
/* 8001ED20 0001BB40  90 64 00 20 */	stw r3, 0x20(r4)
/* 8001ED24 0001BB44  90 64 00 24 */	stw r3, 0x24(r4)
/* 8001ED28 0001BB48  90 64 00 28 */	stw r3, 0x28(r4)
/* 8001ED2C 0001BB4C  90 64 00 2C */	stw r3, 0x2c(r4)
/* 8001ED30 0001BB50  90 64 00 30 */	stw r3, 0x30(r4)
/* 8001ED34 0001BB54  90 64 00 34 */	stw r3, 0x34(r4)
/* 8001ED38 0001BB58  90 64 00 38 */	stw r3, 0x38(r4)
/* 8001ED3C 0001BB5C  90 64 00 3C */	stw r3, 0x3c(r4)
/* 8001ED40 0001BB60  90 64 00 40 */	stw r3, 0x40(r4)
/* 8001ED44 0001BB64  90 64 00 44 */	stw r3, 0x44(r4)
/* 8001ED48 0001BB68  90 64 00 48 */	stw r3, 0x48(r4)
/* 8001ED4C 0001BB6C  90 64 00 4C */	stw r3, 0x4c(r4)
/* 8001ED50 0001BB70  90 64 00 50 */	stw r3, 0x50(r4)
/* 8001ED54 0001BB74  90 64 00 54 */	stw r3, 0x54(r4)
/* 8001ED58 0001BB78  90 64 00 58 */	stw r3, 0x58(r4)
/* 8001ED5C 0001BB7C  90 64 00 5C */	stw r3, 0x5c(r4)
/* 8001ED60 0001BB80  90 64 00 60 */	stw r3, 0x60(r4)
/* 8001ED64 0001BB84  90 64 00 64 */	stw r3, 0x64(r4)
/* 8001ED68 0001BB88  90 64 00 68 */	stw r3, 0x68(r4)
/* 8001ED6C 0001BB8C  90 64 00 6C */	stw r3, 0x6c(r4)
/* 8001ED70 0001BB90  90 64 00 70 */	stw r3, 0x70(r4)
/* 8001ED74 0001BB94  90 64 00 74 */	stw r3, 0x74(r4)
/* 8001ED78 0001BB98  90 64 00 78 */	stw r3, 0x78(r4)
/* 8001ED7C 0001BB9C  90 64 00 7C */	stw r3, 0x7c(r4)
/* 8001ED80 0001BBA0  90 64 00 80 */	stw r3, 0x80(r4)
/* 8001ED84 0001BBA4  90 64 00 84 */	stw r3, 0x84(r4)
/* 8001ED88 0001BBA8  90 64 00 88 */	stw r3, 0x88(r4)
/* 8001ED8C 0001BBAC  90 64 00 8C */	stw r3, 0x8c(r4)
/* 8001ED90 0001BBB0  90 64 00 90 */	stw r3, 0x90(r4)
/* 8001ED94 0001BBB4  90 64 00 94 */	stw r3, 0x94(r4)
/* 8001ED98 0001BBB8  90 64 00 98 */	stw r3, 0x98(r4)
/* 8001ED9C 0001BBBC  90 64 00 9C */	stw r3, 0x9c(r4)
/* 8001EDA0 0001BBC0  90 64 00 A0 */	stw r3, 0xa0(r4)
/* 8001EDA4 0001BBC4  90 64 00 A4 */	stw r3, 0xa4(r4)
/* 8001EDA8 0001BBC8  90 64 00 A8 */	stw r3, 0xa8(r4)
/* 8001EDAC 0001BBCC  90 64 00 AC */	stw r3, 0xac(r4)
/* 8001EDB0 0001BBD0  90 64 00 B0 */	stw r3, 0xb0(r4)
/* 8001EDB4 0001BBD4  90 64 00 B4 */	stw r3, 0xb4(r4)
/* 8001EDB8 0001BBD8  90 64 00 B8 */	stw r3, 0xb8(r4)
/* 8001EDBC 0001BBDC  90 64 00 BC */	stw r3, 0xbc(r4)
/* 8001EDC0 0001BBE0  90 64 00 C0 */	stw r3, 0xc0(r4)
/* 8001EDC4 0001BBE4  90 64 00 C4 */	stw r3, 0xc4(r4)
/* 8001EDC8 0001BBE8  90 64 00 C8 */	stw r3, 0xc8(r4)
/* 8001EDCC 0001BBEC  90 64 00 CC */	stw r3, 0xcc(r4)
/* 8001EDD0 0001BBF0  90 64 00 D0 */	stw r3, 0xd0(r4)
/* 8001EDD4 0001BBF4  90 64 00 D4 */	stw r3, 0xd4(r4)
/* 8001EDD8 0001BBF8  90 64 00 D8 */	stw r3, 0xd8(r4)
/* 8001EDDC 0001BBFC  90 64 00 DC */	stw r3, 0xdc(r4)
/* 8001EDE0 0001BC00  90 64 00 E0 */	stw r3, 0xe0(r4)
/* 8001EDE4 0001BC04  90 64 00 E4 */	stw r3, 0xe4(r4)
/* 8001EDE8 0001BC08  90 64 00 E8 */	stw r3, 0xe8(r4)
/* 8001EDEC 0001BC0C  90 64 00 EC */	stw r3, 0xec(r4)
/* 8001EDF0 0001BC10  90 64 00 F0 */	stw r3, 0xf0(r4)
/* 8001EDF4 0001BC14  90 64 00 F4 */	stw r3, 0xf4(r4)
/* 8001EDF8 0001BC18  90 64 00 F8 */	stw r3, 0xf8(r4)
/* 8001EDFC 0001BC1C  90 64 00 FC */	stw r3, 0xfc(r4)
/* 8001EE00 0001BC20  90 64 01 00 */	stw r3, 0x100(r4)
/* 8001EE04 0001BC24  90 64 01 04 */	stw r3, 0x104(r4)
/* 8001EE08 0001BC28  90 64 01 08 */	stw r3, 0x108(r4)
/* 8001EE0C 0001BC2C  90 64 01 0C */	stw r3, 0x10c(r4)
/* 8001EE10 0001BC30  90 64 01 10 */	stw r3, 0x110(r4)
/* 8001EE14 0001BC34  90 64 01 14 */	stw r3, 0x114(r4)
/* 8001EE18 0001BC38  90 64 01 18 */	stw r3, 0x118(r4)
/* 8001EE1C 0001BC3C  90 64 01 1C */	stw r3, 0x11c(r4)
/* 8001EE20 0001BC40  90 64 01 20 */	stw r3, 0x120(r4)
/* 8001EE24 0001BC44  90 64 01 24 */	stw r3, 0x124(r4)
/* 8001EE28 0001BC48  90 64 01 28 */	stw r3, 0x128(r4)
/* 8001EE2C 0001BC4C  90 64 01 2C */	stw r3, 0x12c(r4)
/* 8001EE30 0001BC50  90 64 01 30 */	stw r3, 0x130(r4)
/* 8001EE34 0001BC54  90 64 01 34 */	stw r3, 0x134(r4)
/* 8001EE38 0001BC58  90 64 01 38 */	stw r3, 0x138(r4)
/* 8001EE3C 0001BC5C  90 64 01 3C */	stw r3, 0x13c(r4)
/* 8001EE40 0001BC60  38 84 01 40 */	addi r4, r4, 0x140
/* 8001EE44 0001BC64  42 00 FE BC */	bdnz lbl_8001ED00
/* 8001EE48 0001BC68  38 7F 00 00 */	addi r3, r31, 0x0
/* 8001EE4C 0001BC6C  38 80 05 00 */	li r4, 0x500
/* 8001EE50 0001BC70  48 01 DC D1 */	bl DCFlushRange
/* 8001EE54 0001BC74  38 00 00 02 */	li r0, 0x2
/* 8001EE58 0001BC78  7C 09 03 A6 */	mtctr r0
/* 8001EE5C 0001BC7C  38 7F 05 00 */	addi r3, r31, 0x500
/* 8001EE60 0001BC80  38 00 00 00 */	li r0, 0x0
lbl_8001EE64:
/* 8001EE64 0001BC84  90 03 00 00 */	stw r0, 0x0(r3)
/* 8001EE68 0001BC88  90 03 00 04 */	stw r0, 0x4(r3)
/* 8001EE6C 0001BC8C  90 03 00 08 */	stw r0, 0x8(r3)
/* 8001EE70 0001BC90  90 03 00 0C */	stw r0, 0xc(r3)
/* 8001EE74 0001BC94  90 03 00 10 */	stw r0, 0x10(r3)
/* 8001EE78 0001BC98  90 03 00 14 */	stw r0, 0x14(r3)
/* 8001EE7C 0001BC9C  90 03 00 18 */	stw r0, 0x18(r3)
/* 8001EE80 0001BCA0  90 03 00 1C */	stw r0, 0x1c(r3)
/* 8001EE84 0001BCA4  90 03 00 20 */	stw r0, 0x20(r3)
/* 8001EE88 0001BCA8  90 03 00 24 */	stw r0, 0x24(r3)
/* 8001EE8C 0001BCAC  90 03 00 28 */	stw r0, 0x28(r3)
/* 8001EE90 0001BCB0  90 03 00 2C */	stw r0, 0x2c(r3)
/* 8001EE94 0001BCB4  90 03 00 30 */	stw r0, 0x30(r3)
/* 8001EE98 0001BCB8  90 03 00 34 */	stw r0, 0x34(r3)
/* 8001EE9C 0001BCBC  90 03 00 38 */	stw r0, 0x38(r3)
/* 8001EEA0 0001BCC0  90 03 00 3C */	stw r0, 0x3c(r3)
/* 8001EEA4 0001BCC4  90 03 00 40 */	stw r0, 0x40(r3)
/* 8001EEA8 0001BCC8  90 03 00 44 */	stw r0, 0x44(r3)
/* 8001EEAC 0001BCCC  90 03 00 48 */	stw r0, 0x48(r3)
/* 8001EEB0 0001BCD0  90 03 00 4C */	stw r0, 0x4c(r3)
/* 8001EEB4 0001BCD4  90 03 00 50 */	stw r0, 0x50(r3)
/* 8001EEB8 0001BCD8  90 03 00 54 */	stw r0, 0x54(r3)
/* 8001EEBC 0001BCDC  90 03 00 58 */	stw r0, 0x58(r3)
/* 8001EEC0 0001BCE0  90 03 00 5C */	stw r0, 0x5c(r3)
/* 8001EEC4 0001BCE4  90 03 00 60 */	stw r0, 0x60(r3)
/* 8001EEC8 0001BCE8  90 03 00 64 */	stw r0, 0x64(r3)
/* 8001EECC 0001BCEC  90 03 00 68 */	stw r0, 0x68(r3)
/* 8001EED0 0001BCF0  90 03 00 6C */	stw r0, 0x6c(r3)
/* 8001EED4 0001BCF4  90 03 00 70 */	stw r0, 0x70(r3)
/* 8001EED8 0001BCF8  90 03 00 74 */	stw r0, 0x74(r3)
/* 8001EEDC 0001BCFC  90 03 00 78 */	stw r0, 0x78(r3)
/* 8001EEE0 0001BD00  90 03 00 7C */	stw r0, 0x7c(r3)
/* 8001EEE4 0001BD04  90 03 00 80 */	stw r0, 0x80(r3)
/* 8001EEE8 0001BD08  90 03 00 84 */	stw r0, 0x84(r3)
/* 8001EEEC 0001BD0C  90 03 00 88 */	stw r0, 0x88(r3)
/* 8001EEF0 0001BD10  90 03 00 8C */	stw r0, 0x8c(r3)
/* 8001EEF4 0001BD14  90 03 00 90 */	stw r0, 0x90(r3)
/* 8001EEF8 0001BD18  90 03 00 94 */	stw r0, 0x94(r3)
/* 8001EEFC 0001BD1C  90 03 00 98 */	stw r0, 0x98(r3)
/* 8001EF00 0001BD20  90 03 00 9C */	stw r0, 0x9c(r3)
/* 8001EF04 0001BD24  90 03 00 A0 */	stw r0, 0xa0(r3)
/* 8001EF08 0001BD28  90 03 00 A4 */	stw r0, 0xa4(r3)
/* 8001EF0C 0001BD2C  90 03 00 A8 */	stw r0, 0xa8(r3)
/* 8001EF10 0001BD30  90 03 00 AC */	stw r0, 0xac(r3)
/* 8001EF14 0001BD34  90 03 00 B0 */	stw r0, 0xb0(r3)
/* 8001EF18 0001BD38  90 03 00 B4 */	stw r0, 0xb4(r3)
/* 8001EF1C 0001BD3C  90 03 00 B8 */	stw r0, 0xb8(r3)
/* 8001EF20 0001BD40  90 03 00 BC */	stw r0, 0xbc(r3)
/* 8001EF24 0001BD44  90 03 00 C0 */	stw r0, 0xc0(r3)
/* 8001EF28 0001BD48  90 03 00 C4 */	stw r0, 0xc4(r3)
/* 8001EF2C 0001BD4C  90 03 00 C8 */	stw r0, 0xc8(r3)
/* 8001EF30 0001BD50  90 03 00 CC */	stw r0, 0xcc(r3)
/* 8001EF34 0001BD54  90 03 00 D0 */	stw r0, 0xd0(r3)
/* 8001EF38 0001BD58  90 03 00 D4 */	stw r0, 0xd4(r3)
/* 8001EF3C 0001BD5C  90 03 00 D8 */	stw r0, 0xd8(r3)
/* 8001EF40 0001BD60  90 03 00 DC */	stw r0, 0xdc(r3)
/* 8001EF44 0001BD64  90 03 00 E0 */	stw r0, 0xe0(r3)
/* 8001EF48 0001BD68  90 03 00 E4 */	stw r0, 0xe4(r3)
/* 8001EF4C 0001BD6C  90 03 00 E8 */	stw r0, 0xe8(r3)
/* 8001EF50 0001BD70  90 03 00 EC */	stw r0, 0xec(r3)
/* 8001EF54 0001BD74  90 03 00 F0 */	stw r0, 0xf0(r3)
/* 8001EF58 0001BD78  90 03 00 F4 */	stw r0, 0xf4(r3)
/* 8001EF5C 0001BD7C  90 03 00 F8 */	stw r0, 0xf8(r3)
/* 8001EF60 0001BD80  90 03 00 FC */	stw r0, 0xfc(r3)
/* 8001EF64 0001BD84  90 03 01 00 */	stw r0, 0x100(r3)
/* 8001EF68 0001BD88  90 03 01 04 */	stw r0, 0x104(r3)
/* 8001EF6C 0001BD8C  90 03 01 08 */	stw r0, 0x108(r3)
/* 8001EF70 0001BD90  90 03 01 0C */	stw r0, 0x10c(r3)
/* 8001EF74 0001BD94  90 03 01 10 */	stw r0, 0x110(r3)
/* 8001EF78 0001BD98  90 03 01 14 */	stw r0, 0x114(r3)
/* 8001EF7C 0001BD9C  90 03 01 18 */	stw r0, 0x118(r3)
/* 8001EF80 0001BDA0  90 03 01 1C */	stw r0, 0x11c(r3)
/* 8001EF84 0001BDA4  90 03 01 20 */	stw r0, 0x120(r3)
/* 8001EF88 0001BDA8  90 03 01 24 */	stw r0, 0x124(r3)
/* 8001EF8C 0001BDAC  90 03 01 28 */	stw r0, 0x128(r3)
/* 8001EF90 0001BDB0  90 03 01 2C */	stw r0, 0x12c(r3)
/* 8001EF94 0001BDB4  90 03 01 30 */	stw r0, 0x130(r3)
/* 8001EF98 0001BDB8  90 03 01 34 */	stw r0, 0x134(r3)
/* 8001EF9C 0001BDBC  90 03 01 38 */	stw r0, 0x138(r3)
/* 8001EFA0 0001BDC0  90 03 01 3C */	stw r0, 0x13c(r3)
/* 8001EFA4 0001BDC4  38 63 01 40 */	addi r3, r3, 0x140
/* 8001EFA8 0001BDC8  42 00 FE BC */	bdnz lbl_8001EE64
/* 8001EFAC 0001BDCC  38 7F 05 00 */	addi r3, r31, 0x500
/* 8001EFB0 0001BDD0  38 80 02 80 */	li r4, 0x280
/* 8001EFB4 0001BDD4  48 01 DB 6D */	bl DCFlushRange
/* 8001EFB8 0001BDD8  4B FF FC 4D */	bl __AXOutInitDSP
/* 8001EFBC 0001BDDC  3C 60 80 02 */	lis r3, __AXOutAiCallback@ha
/* 8001EFC0 0001BDE0  38 63 EB 0C */	addi r3, r3, __AXOutAiCallback@l
/* 8001EFC4 0001BDE4  4B FF C1 DD */	bl AIRegisterDMACallback
/* 8001EFC8 0001BDE8  38 7F 05 00 */	addi r3, r31, 0x500
/* 8001EFCC 0001BDEC  38 9F 02 80 */	addi r4, r31, 0x280
/* 8001EFD0 0001BDF0  4B FF F2 CD */	bl __AXNextFrame
/* 8001EFD4 0001BDF4  38 00 00 01 */	li r0, 0x1
/* 8001EFD8 0001BDF8  90 0D 83 7C */	stw r0, __AXOutDspReady@sda21(r13)
/* 8001EFDC 0001BDFC  38 60 00 00 */	li r3, 0x0
/* 8001EFE0 0001BE00  38 80 02 80 */	li r4, 0x280
/* 8001EFE4 0001BE04  80 0D 83 78 */	lwz r0, __AXOutFrame@sda21(r13)
/* 8001EFE8 0001BE08  90 6D 83 88 */	stw r3, __AXUserFrameCallback@sda21(r13)
/* 8001EFEC 0001BE0C  1C 00 02 80 */	mulli r0, r0, 0x280
/* 8001EFF0 0001BE10  7C 7F 02 14 */	add r3, r31, r0
/* 8001EFF4 0001BE14  4B FF C1 F1 */	bl AIInitDMA
/* 8001EFF8 0001BE18  4B FF C2 75 */	bl AIStartDMA
/* 8001EFFC 0001BE1C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 8001F000 0001BE20  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 8001F004 0001BE24  38 21 00 20 */	addi r1, r1, 0x20
/* 8001F008 0001BE28  7C 08 03 A6 */	mtlr r0
/* 8001F00C 0001BE2C  4E 80 00 20 */	blr

.global AXRegisterCallback
AXRegisterCallback:
/* 8001F010 0001BE30  90 6D 83 88 */	stw r3, __AXUserFrameCallback@sda21(r13)
/* 8001F014 0001BE34  4E 80 00 20 */	blr


.section .bss, "", @nobits  # 0x80085B20 - 0x800C3E60 ; 0x0003E340

.balign 8

.global __AXOutBuffer
__AXOutBuffer:
	.skip 0x500

.global __AXOutSBuffer
__AXOutSBuffer:
    .skip 0x280

.global __AXDSPTask
__AXDSPTask:
	.skip 0x50

.global __AXDramImage
__AXDramImage:
    .skip 0x4000

.global __AXLocalProfile
__AXLocalProfile:
    .skip 0x38


.section .sbss, "", @nobits  # 0x800C4080 - 0x800C4680 ; 0x00000600

.balign 8

.global __AXOutFrame
__AXOutFrame:
	.skip 0x4

.global __AXOutDspReady
__AXOutDspReady:
	.skip 0x4

.global __AXOsTime
__AXOsTime:
	.skip 0x8

.global __AXUserFrameCallback
__AXUserFrameCallback:
	.skip 0x4

.global __AXDSPInitFlag
__AXDSPInitFlag:
	.skip 0x4

.global __AXDSPDoneFlag
__AXDSPDoneFlag:
	.skip 0x4

.global __AXDebugSteppingMode
__AXDebugSteppingMode:
	.skip 0x4

.global __AXOutThreadQueue
__AXOutThreadQueue:
	.skip 0x8
