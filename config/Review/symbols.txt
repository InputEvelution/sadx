memset = .init:0x80003100; // type:function size:0x30 scope:global
__fill_mem = .init:0x80003130; // type:function size:0xB8 scope:global
memcpy = .init:0x800031E8; // type:function size:0x50 scope:global
TRK_memset = .init:0x80003238; // type:function size:0x30
TRK_memcpy = .init:0x80003268; // type:function size:0x24
gTRKInterruptVectorTable = .init:0x8000328C; // type:label scope:global
__TRK_reset = .init:0x800051C0; // type:function size:0x104
gTRKInterruptVectorTableEnd = .init:0x800051C0; // type:label scope:global
__check_pad3 = .init:0x800052C4; // type:function size:0x40 scope:local
__start = .init:0x80005304; // type:function size:0x138 scope:weak
__init_registers = .init:0x8000543C; // type:function size:0x1C scope:local
__init_data = .init:0x80005458; // type:function size:0xC0 scope:local
__init_hardware = .init:0x80005518; // type:function size:0x20 scope:global
__flush_cache = .init:0x80005538; // type:function size:0x34 scope:global
_rom_copy_info = .init:0x8000556C; // type:object size:0x84 scope:global data:4byte
_bss_init_info = .init:0x800055F0; // type:object size:0x18 scope:global data:4byte
@etb_80005620 = extab:0x80005620; // type:object size:0x28 scope:local hidden
@etb_80005648 = extab:0x80005648; // type:object size:0x8 scope:local hidden
@etb_80005650 = extab:0x80005650; // type:object size:0x8 scope:local hidden
@etb_80005658 = extab:0x80005658; // type:object size:0x18 scope:local hidden
@etb_80005670 = extab:0x80005670; // type:object size:0x8 scope:local hidden
@etb_80005678 = extab:0x80005678; // type:object size:0x8 scope:local hidden
@etb_80005680 = extab:0x80005680; // type:object size:0x8 scope:local hidden
@etb_80005688 = extab:0x80005688; // type:object size:0x8 scope:local hidden
@etb_80005690 = extab:0x80005690; // type:object size:0x8 scope:local hidden
@etb_80005698 = extab:0x80005698; // type:object size:0x14 scope:local hidden
@etb_800056AC = extab:0x800056AC; // type:object size:0x2C scope:local hidden
@etb_800056D8 = extab:0x800056D8; // type:object size:0x8 scope:local hidden
@etb_800056E0 = extab:0x800056E0; // type:object size:0x14 scope:local hidden
@etb_800056F4 = extab:0x800056F4; // type:object size:0x8 scope:local hidden
@etb_800056FC = extab:0x800056FC; // type:object size:0x8 scope:local hidden
@eti_80005720 = extabindex:0x80005720; // type:object size:0xC scope:local hidden
@eti_8000572C = extabindex:0x8000572C; // type:object size:0xC scope:local hidden
@eti_80005738 = extabindex:0x80005738; // type:object size:0xC scope:local hidden
@eti_80005744 = extabindex:0x80005744; // type:object size:0xC scope:local hidden
@eti_80005750 = extabindex:0x80005750; // type:object size:0xC scope:local hidden
@eti_8000575C = extabindex:0x8000575C; // type:object size:0xC scope:local hidden
@eti_80005768 = extabindex:0x80005768; // type:object size:0xC scope:local hidden
@eti_80005774 = extabindex:0x80005774; // type:object size:0xC scope:local hidden
@eti_80005780 = extabindex:0x80005780; // type:object size:0xC scope:local hidden
@eti_8000578C = extabindex:0x8000578C; // type:object size:0xC scope:local hidden
@eti_80005798 = extabindex:0x80005798; // type:object size:0xC scope:local hidden
@eti_800057A4 = extabindex:0x800057A4; // type:object size:0xC scope:local hidden
@eti_800057B0 = extabindex:0x800057B0; // type:object size:0xC scope:local hidden
@eti_800057BC = extabindex:0x800057BC; // type:object size:0xC scope:local hidden
@eti_800057C8 = extabindex:0x800057C8; // type:object size:0xC scope:local hidden
_eti_init_info = extabindex:0x800057D4; // type:object size:0x20 scope:global
main = .text:0x80005800; // type:function size:0x7B4 scope:global
fn_80005FB4 = .text:0x80005FB4; // type:function size:0x210
fn_800061C4 = .text:0x800061C4; // type:function size:0x1BC
fn_80006380 = .text:0x80006380; // type:function size:0x350
fn_800066D0 = .text:0x800066D0; // type:function size:0x194
fn_80006864 = .text:0x80006864; // type:function size:0xF4
__va_arg = .text:0x80006958; // type:function size:0xC8 scope:global
__destroy_global_chain = .text:0x80006A20; // type:function size:0x48 scope:global
__register_global_object = .text:0x80006A68; // type:function size:0x18 scope:global
__dl__FPv = .text:0x80006A80; // type:function size:0x4C
__dt__Q23std13exceptionFv = .text:0x80006ACC; // type:function size:0x48
what__Q23std13exceptionCFv = .text:0x80006B14; // type:function size:0xC
__dt__26__partial_array_destructorFv = .text:0x80006B20; // type:function size:0xB8
__construct_new_array = .text:0x80006BD8; // type:function size:0x100
__throw_catch_compare = .text:0x80006CD8; // type:function size:0x22C
unexpected__3stdFv = .text:0x80006F04; // type:function size:0x28
terminate__3stdFv = .text:0x80006F2C; // type:function size:0x28
duhandler__3stdFv = .text:0x80006F54; // type:function size:0x28
dthandler__3stdFv = .text:0x80006F7C; // type:function size:0x20
__cvt_fp2unsigned = .text:0x80006F9C; // type:function size:0x5C
__save_fpr = .text:0x80006FF8; // type:function size:0x4C scope:global
_savefpr_14 = .text:0x80006FF8; // type:label scope:global
_savefpr_15 = .text:0x80006FFC; // type:label scope:global
_savefpr_16 = .text:0x80007000; // type:label scope:global
_savefpr_17 = .text:0x80007004; // type:label scope:global
_savefpr_18 = .text:0x80007008; // type:label scope:global
_savefpr_19 = .text:0x8000700C; // type:label scope:global
_savefpr_20 = .text:0x80007010; // type:label scope:global
_savefpr_21 = .text:0x80007014; // type:label scope:global
_savefpr_22 = .text:0x80007018; // type:label scope:global
_savefpr_23 = .text:0x8000701C; // type:label scope:global
_savefpr_24 = .text:0x80007020; // type:label scope:global
_savefpr_25 = .text:0x80007024; // type:label scope:global
_savefpr_26 = .text:0x80007028; // type:label scope:global
_savefpr_27 = .text:0x8000702C; // type:label scope:global
_savefpr_28 = .text:0x80007030; // type:label scope:global
_savefpr_29 = .text:0x80007034; // type:label scope:global
_savefpr_30 = .text:0x80007038; // type:label scope:global
_savefpr_31 = .text:0x8000703C; // type:label scope:global
__restore_fpr = .text:0x80007044; // type:function size:0x4C scope:global
_restfpr_14 = .text:0x80007044; // type:label scope:global
_restfpr_15 = .text:0x80007048; // type:label scope:global
_restfpr_16 = .text:0x8000704C; // type:label scope:global
_restfpr_17 = .text:0x80007050; // type:label scope:global
_restfpr_18 = .text:0x80007054; // type:label scope:global
_restfpr_19 = .text:0x80007058; // type:label scope:global
_restfpr_20 = .text:0x8000705C; // type:label scope:global
_restfpr_21 = .text:0x80007060; // type:label scope:global
_restfpr_22 = .text:0x80007064; // type:label scope:global
_restfpr_23 = .text:0x80007068; // type:label scope:global
_restfpr_24 = .text:0x8000706C; // type:label scope:global
_restfpr_25 = .text:0x80007070; // type:label scope:global
_restfpr_26 = .text:0x80007074; // type:label scope:global
_restfpr_27 = .text:0x80007078; // type:label scope:global
_restfpr_28 = .text:0x8000707C; // type:label scope:global
_restfpr_29 = .text:0x80007080; // type:label scope:global
_restfpr_30 = .text:0x80007084; // type:label scope:global
_restfpr_31 = .text:0x80007088; // type:label scope:global
__save_gpr = .text:0x80007090; // type:function size:0x4C scope:global
_savegpr_14 = .text:0x80007090; // type:label scope:global
_savegpr_15 = .text:0x80007094; // type:label scope:global
_savegpr_16 = .text:0x80007098; // type:label scope:global
_savegpr_17 = .text:0x8000709C; // type:label scope:global
_savegpr_18 = .text:0x800070A0; // type:label scope:global
_savegpr_19 = .text:0x800070A4; // type:label scope:global
_savegpr_20 = .text:0x800070A8; // type:label scope:global
_savegpr_21 = .text:0x800070AC; // type:label scope:global
_savegpr_22 = .text:0x800070B0; // type:label scope:global
_savegpr_23 = .text:0x800070B4; // type:label scope:global
_savegpr_24 = .text:0x800070B8; // type:label scope:global
_savegpr_25 = .text:0x800070BC; // type:label scope:global
_savegpr_26 = .text:0x800070C0; // type:label scope:global
_savegpr_27 = .text:0x800070C4; // type:label scope:global
_savegpr_28 = .text:0x800070C8; // type:label scope:global
_savegpr_29 = .text:0x800070CC; // type:label scope:global
_savegpr_30 = .text:0x800070D0; // type:label scope:global
_savegpr_31 = .text:0x800070D4; // type:label scope:global
__restore_gpr = .text:0x800070DC; // type:function size:0x4C scope:global
_restgpr_14 = .text:0x800070DC; // type:label scope:global
_restgpr_15 = .text:0x800070E0; // type:label scope:global
_restgpr_16 = .text:0x800070E4; // type:label scope:global
_restgpr_17 = .text:0x800070E8; // type:label scope:global
_restgpr_18 = .text:0x800070EC; // type:label scope:global
_restgpr_19 = .text:0x800070F0; // type:label scope:global
_restgpr_20 = .text:0x800070F4; // type:label scope:global
_restgpr_21 = .text:0x800070F8; // type:label scope:global
_restgpr_22 = .text:0x800070FC; // type:label scope:global
_restgpr_23 = .text:0x80007100; // type:label scope:global
_restgpr_24 = .text:0x80007104; // type:label scope:global
_restgpr_25 = .text:0x80007108; // type:label scope:global
_restgpr_26 = .text:0x8000710C; // type:label scope:global
_restgpr_27 = .text:0x80007110; // type:label scope:global
_restgpr_28 = .text:0x80007114; // type:label scope:global
_restgpr_29 = .text:0x80007118; // type:label scope:global
_restgpr_30 = .text:0x8000711C; // type:label scope:global
_restgpr_31 = .text:0x80007120; // type:label scope:global
__div2u = .text:0x80007128; // type:function size:0xEC scope:global
__div2i = .text:0x80007214; // type:function size:0x138
__mod2u = .text:0x8000734C; // type:function size:0xE4 scope:global
__mod2i = .text:0x80007430; // type:function size:0x10C
__shl2i = .text:0x8000753C; // type:function size:0x24
__shr2u = .text:0x80007560; // type:function size:0x24
__shr2i = .text:0x80007584; // type:function size:0x28
__cvt_sll_dbl = .text:0x800075AC; // type:function size:0xB0
__cvt_dbl_usll = .text:0x8000765C; // type:function size:0xCC
GetR2__Fv = .text:0x80007728; // type:function size:0x8 scope:local
__fini_cpp_exceptions = .text:0x80007730; // type:function size:0x34 scope:global
__init_cpp_exceptions = .text:0x80007764; // type:function size:0x40 scope:global
ExPPC_LongJump__FP12ThrowContextPvPv = .text:0x800077A4; // type:function size:0x104
__throw = .text:0x800078A8; // type:function size:0x144
__end__catch = .text:0x800079EC; // type:function size:0x44
ExPPC_ThrowHandler__FP12ThrowContext = .text:0x80007A30; // type:function size:0x410
__unexpected = .text:0x80007E40; // type:function size:0x1B4
__dt__Q23std13bad_exceptionFv = .text:0x80007FF4; // type:function size:0x5C
ExPPC_UnwindStack__FP12ThrowContextP15MWExceptionInfoPv = .text:0x80008050; // type:function size:0x50C
ExPPC_PopStackFrame__FP12ThrowContextP15MWExceptionInfo = .text:0x8000855C; // type:function size:0x248
ExPPC_NextAction__FP14ActionIterator = .text:0x800087A4; // type:function size:0x1C0
ExPPC_FindExceptionRecord__FPcP15MWExceptionInfo = .text:0x80008964; // type:function size:0x204
__unregister_fragment = .text:0x80008B68; // type:function size:0x34 scope:global
__register_fragment = .text:0x80008B9C; // type:function size:0x34 scope:global
what__Q23std13bad_exceptionCFv = .text:0x80008BD0; // type:function size:0xC
__sys_free = .text:0x80008BDC; // type:function size:0xB8
__sys_alloc = .text:0x80008C94; // type:function size:0xB8
exit = .text:0x80008D4C; // type:function size:0xCC scope:global
abort = .text:0x80008E18; // type:function size:0x88
free = .text:0x80008EA0; // type:function size:0x134
malloc = .text:0x80008FD4; // type:function size:0x98
deallocate_from_fixed_pools = .text:0x8000906C; // type:function size:0x1FC
allocate_from_fixed_pools = .text:0x80009268; // type:function size:0x1C4
FixBlock_construct = .text:0x8000942C; // type:function size:0x128
soft_allocate_from_var_pools = .text:0x80009554; // type:function size:0xD8
allocate_from_var_pools = .text:0x8000962C; // type:function size:0x248
SubBlock_merge_next = .text:0x80009874; // type:function size:0xBC
Block_link = .text:0x80009930; // type:function size:0x17C
Block_subBlock = .text:0x80009AAC; // type:function size:0x1DC
__flush_all = .text:0x80009C88; // type:function size:0x70
__close_all = .text:0x80009CF8; // type:function size:0x98 scope:global
__init_file = .text:0x80009D90; // type:function size:0xDC
__find_unopened_file = .text:0x80009E6C; // type:function size:0x90
__dec2num = .text:0x80009EFC; // type:function size:0x954
__num2dec = .text:0x8000A850; // type:function size:0x1A4
__num2dec_internal = .text:0x8000A9F4; // type:function size:0x23C
__minus_dec = .text:0x8000AC30; // type:function size:0x4FC
__less_dec = .text:0x8000B12C; // type:function size:0xF8
__equals_dec = .text:0x8000B224; // type:function size:0x10C
__two_exp = .text:0x8000B330; // type:function size:0x340
__str2dec = .text:0x8000B670; // type:function size:0xEC
__timesdec = .text:0x8000B75C; // type:function size:0x28C
__ull2dec = .text:0x8000B9E8; // type:function size:0x110
__count_trailing_zerol = .text:0x8000BAF8; // type:function size:0x70
setvbuf = .text:0x8000BB68; // type:function size:0x144
__flush_buffer = .text:0x8000BCAC; // type:function size:0xC4 scope:global
__prep_buffer = .text:0x8000BD70; // type:function size:0x34 scope:global
toupper = .text:0x8000BDA4; // type:function size:0x24
tolower = .text:0x8000BDC8; // type:function size:0x24
__fwrite = .text:0x8000BDEC; // type:function size:0x30C scope:global
fwrite = .text:0x8000C0F8; // type:function size:0x20 scope:global
__get_file_modes = .text:0x8000C118; // type:function size:0x178
freopen = .text:0x8000C290; // type:function size:0x150
fopen = .text:0x8000C3E0; // type:function size:0x48
fflush = .text:0x8000C428; // type:function size:0x138
fclose = .text:0x8000C560; // type:function size:0xC0
fseek = .text:0x8000C620; // type:function size:0x20 scope:global
_fseek = .text:0x8000C640; // type:function size:0x23C
ftell = .text:0x8000C87C; // type:function size:0x70
wcstombs = .text:0x8000C8EC; // type:function size:0xA0 scope:global
unicode_to_UTF8 = .text:0x8000C98C; // type:function size:0xA4
mbtowc = .text:0x8000CA30; // type:function size:0x20
utf8_to_unicode = .text:0x8000CA50; // type:function size:0x120
is_utf8_complete = .text:0x8000CB70; // type:function size:0xEC
memcmp = .text:0x8000CC5C; // type:function size:0x4C
__memrchr = .text:0x8000CCA8; // type:function size:0x2C scope:global
memchr = .text:0x8000CCD4; // type:function size:0x2C scope:global
memmove = .text:0x8000CD00; // type:function size:0xCC scope:global
__copy_longs_rev_unaligned = .text:0x8000CDCC; // type:function size:0xB0
__copy_longs_unaligned = .text:0x8000CE7C; // type:function size:0xC4
__copy_longs_rev_aligned = .text:0x8000CF40; // type:function size:0xAC
__copy_longs_aligned = .text:0x8000CFEC; // type:function size:0xC0
__stdio_atexit = .text:0x8000D0AC; // type:function size:0x10 scope:global
clearerr = .text:0x8000D0BC; // type:function size:0x10
sprintf = .text:0x8000D0CC; // type:function size:0xE0
vsprintf = .text:0x8000D1AC; // type:function size:0x78
vprintf = .text:0x8000D224; // type:function size:0x7C scope:global
fprintf = .text:0x8000D2A0; // type:function size:0xC4
__StringWrite = .text:0x8000D364; // type:function size:0x6C scope:global
__FileWrite = .text:0x8000D3D0; // type:function size:0x58 scope:global
__pformatter = .text:0x8000D428; // type:function size:0x774 scope:local
float2str = .text:0x8000DB9C; // type:function size:0x6EC scope:local
round_decimal = .text:0x8000E288; // type:function size:0x12C
double2hex = .text:0x8000E3B4; // type:function size:0x338 scope:local
longlong2str = .text:0x8000E6EC; // type:function size:0x2DC scope:local
long2str = .text:0x8000E9C8; // type:function size:0x220 scope:local
parse_format = .text:0x8000EBE8; // type:function size:0x504 scope:local
srand = .text:0x8000F0EC; // type:function size:0x8
rand = .text:0x8000F0F4; // type:function size:0x20
sscanf = .text:0x8000F114; // type:function size:0xC4
__StringRead = .text:0x8000F1D8; // type:function size:0x90
__sformatter = .text:0x8000F268; // type:function size:0x9AC
parse_format = .text:0x8000FC14; // type:function size:0x548 scope:local
raise = .text:0x8001015C; // type:function size:0xB0
strstr = .text:0x8001020C; // type:function size:0x68
strchr = .text:0x80010274; // type:function size:0x30 scope:global
strncmp = .text:0x800102A4; // type:function size:0x40
strcmp = .text:0x800102E4; // type:function size:0x128
strncat = .text:0x8001040C; // type:function size:0x4C
strcat = .text:0x80010458; // type:function size:0x2C
strncpy = .text:0x80010484; // type:function size:0x44
strcpy = .text:0x800104C8; // type:function size:0xB8
strlen = .text:0x80010580; // type:function size:0x1C scope:global
__strtold = .text:0x8001059C; // type:function size:0x100C
atoi = .text:0x800115A8; // type:function size:0xC0
strtoul = .text:0x80011668; // type:function size:0xAC
__strtoull = .text:0x80011714; // type:function size:0x40C
__strtoul = .text:0x80011B20; // type:function size:0x378
__close_console = .text:0x80011E98; // type:function size:0x8
__write_console = .text:0x80011EA0; // type:function size:0xC4
fwide = .text:0x80011F64; // type:function size:0x88 scope:global
__ieee754_acos = .text:0x80011FEC; // type:function size:0x310
__ieee754_asin = .text:0x800122FC; // type:function size:0x264
__ieee754_atan2 = .text:0x80012560; // type:function size:0x290
__ieee754_log = .text:0x800127F0; // type:function size:0x27C
__ieee754_log10 = .text:0x80012A6C; // type:function size:0x110
__ieee754_pow = .text:0x80012B7C; // type:function size:0x88C
__ieee754_rem_pio2 = .text:0x80013408; // type:function size:0x3A0
__kernel_cos = .text:0x800137A8; // type:function size:0xF4
__kernel_rem_pio2 = .text:0x8001389C; // type:function size:0xE54
__kernel_sin = .text:0x800146F0; // type:function size:0xA0
__kernel_tan = .text:0x80014790; // type:function size:0x214
atan = .text:0x800149A4; // type:function size:0x200
ceil = .text:0x80014BA4; // type:function size:0x144
copysign = .text:0x80014CE8; // type:function size:0x28
cos = .text:0x80014D10; // type:function size:0xD4
floor = .text:0x80014DE4; // type:function size:0x148
frexp = .text:0x80014F2C; // type:function size:0x8C
ldexp = .text:0x80014FB8; // type:function size:0x1C4
modf = .text:0x8001517C; // type:function size:0xFC
nextafter = .text:0x80015278; // type:function size:0x184
sin = .text:0x800153FC; // type:function size:0xD8
tan = .text:0x800154D4; // type:function size:0x78
acos = .text:0x8001554C; // type:function size:0x20
asin = .text:0x8001556C; // type:function size:0x20
atan2 = .text:0x8001558C; // type:function size:0x20
log = .text:0x800155AC; // type:function size:0x20
log10 = .text:0x800155CC; // type:function size:0x20
pow = .text:0x800155EC; // type:function size:0x20
modff__FfPf = .text:0x8001560C; // type:function size:0x130
sqrtf__Ff = .text:0x8001573C; // type:function size:0x64
floorf = .text:0x800157A0; // type:function size:0x24
powf = .text:0x800157C4; // type:function size:0x24
fabsf = .text:0x800157E8; // type:function size:0xC
tanf = .text:0x800157F4; // type:function size:0x24
sinf = .text:0x80015818; // type:function size:0x24
cosf = .text:0x8001583C; // type:function size:0x24
atanf = .text:0x80015860; // type:function size:0x24
acosf = .text:0x80015884; // type:function size:0x24
TRKNubMainLoop = .text:0x800158A8; // type:function size:0xF8 scope:global
TRKDestructEvent = .text:0x800159A0; // type:function size:0x24 scope:global
TRKConstructEvent = .text:0x800159C4; // type:function size:0x18
TRKPostEvent = .text:0x800159DC; // type:function size:0xE0
TRKGetNextEvent = .text:0x80015ABC; // type:function size:0xB4 scope:global
TRKInitializeEventQueue = .text:0x80015B70; // type:function size:0x58 scope:global
TRKNubWelcome = .text:0x80015BC8; // type:function size:0x28 scope:global
TRKTerminateNub = .text:0x80015BF0; // type:function size:0x24 scope:global
TRKInitializeNub = .text:0x80015C14; // type:function size:0x134 scope:global
TRKMessageSend = .text:0x80015D48; // type:function size:0x1DC
TRKReadBuffer_ui32 = .text:0x80015F24; // type:function size:0xF0
TRKReadBuffer_ui8 = .text:0x80016014; // type:function size:0x98
TRKReadBuffer1_ui64 = .text:0x800160AC; // type:function size:0xE8
TRKReadBuffer1_ui32 = .text:0x80016194; // type:function size:0xC8
TRKReadBuffer1_ui16 = .text:0x8001625C; // type:function size:0xB8
TRKReadBuffer1_ui8 = .text:0x80016314; // type:function size:0x80
TRKAppendBuffer_ui32 = .text:0x80016394; // type:function size:0xA8
TRKAppendBuffer_ui8 = .text:0x8001643C; // type:function size:0x68
TRKAppendBuffer1_ui64 = .text:0x800164A4; // type:function size:0x88
TRKAppendBuffer1_ui32 = .text:0x8001652C; // type:function size:0x64
TRKAppendBuffer1_ui16 = .text:0x80016590; // type:function size:0x54
TRKReadBuffer = .text:0x800165E4; // type:function size:0x8C
TRKAppendBuffer = .text:0x80016670; // type:function size:0xA4
TRKSetBufferPosition = .text:0x80016714; // type:function size:0x30
TRKResetBuffer = .text:0x80016744; // type:function size:0x40
TRKReleaseBuffer = .text:0x80016784; // type:function size:0x64
TRKGetBuffer = .text:0x800167E8; // type:function size:0x2C scope:global
TRKGetFreeBuffer = .text:0x80016814; // type:function size:0xC8
TRKInitializeMessageBuffers = .text:0x800168DC; // type:function size:0x74 scope:global
TRKTerminateSerialHandler = .text:0x80016950; // type:function size:0x8
TRKInitializeSerialHandler = .text:0x80016958; // type:function size:0x24 scope:global
TRKProcessInput = .text:0x8001697C; // type:function size:0x50
TRKGetInput = .text:0x800169CC; // type:function size:0x98 scope:global
TRKTestForPacket = .text:0x80016A64; // type:function size:0x2B8
usr_put_initialize = .text:0x80016D1C; // type:function size:0x4 scope:global
usr_puts_serial = .text:0x80016D20; // type:function size:0x88
TRKDispatchMessage = .text:0x80016DA8; // type:function size:0x84 scope:global
TRKInitializeDispatcher = .text:0x80016E2C; // type:function size:0x18 scope:global
TRKDoSetOption = .text:0x80016E44; // type:function size:0x1A4
TRKDoStop = .text:0x80016FE8; // type:function size:0x100
TRKDoStep = .text:0x800170E8; // type:function size:0x530
TRKDoContinue = .text:0x80017618; // type:function size:0x154
TRKDoFlushCache = .text:0x8001776C; // type:function size:0x2F8
TRKDoWriteRegisters = .text:0x80017A64; // type:function size:0x3C8
TRKDoReadRegisters = .text:0x80017E2C; // type:function size:0x3CC
TRKDoWriteMemory = .text:0x800181F8; // type:function size:0x420
TRKDoReadMemory = .text:0x80018618; // type:function size:0x410
TRKDoCPUType = .text:0x80018A28; // type:function size:0x398
TRKDoSupportMask = .text:0x80018DC0; // type:function size:0x230
TRKDoVersions = .text:0x80018FF0; // type:function size:0x2D8
TRKDoReset = .text:0x800192C8; // type:function size:0xB8
TRKDoDisconnect = .text:0x80019380; // type:function size:0xE4
TRKDoConnect = .text:0x80019464; // type:function size:0xBC
TRKDoUnsupported = .text:0x80019520; // type:function size:0xB0
TRKStandardACK = .text:0x800195D0; // type:function size:0xB8
SetTRKConnected = .text:0x80019688; // type:function size:0xC
GetTRKConnected = .text:0x80019694; // type:function size:0x10
HandlePositionFileSupportRequest = .text:0x800196A4; // type:function size:0x190
HandleCloseFileSupportRequest = .text:0x80019834; // type:function size:0x120
HandleOpenFileSupportRequest = .text:0x80019954; // type:function size:0x1A8
TRKRequestSend = .text:0x80019AFC; // type:function size:0x1A4
TRKSuppAccessFile = .text:0x80019CA0; // type:function size:0x2C4
TRKReleaseMutex = .text:0x80019F64; // type:function size:0x8
TRKAcquireMutex = .text:0x80019F6C; // type:function size:0x8
TRKInitializeMutex = .text:0x80019F74; // type:function size:0x8
TRKDoNotifyStopped = .text:0x80019F7C; // type:function size:0xD8
TRK_flush_cache = .text:0x8001A054; // type:function size:0x38
TRK_fill_mem = .text:0x8001A08C; // type:function size:0xBC
__TRK_get_MSR = .text:0x8001A148; // type:function size:0x8
__TRK_set_MSR = .text:0x8001A150; // type:function size:0x8
TRK_ppc_memcpy = .text:0x8001A158; // type:function size:0x3C
TRKInterruptHandler = .text:0x8001A194; // type:function size:0x194 scope:global
TRKExceptionHandler = .text:0x8001A328; // type:function size:0x9C scope:global
TRKSwapAndGo = .text:0x8001A3C4; // type:function size:0xC4 scope:global
TRKInterruptHandlerEnableInterrupts = .text:0x8001A488; // type:function size:0x54 scope:global
TRKTargetSetInputPendingPtr = .text:0x8001A4DC; // type:function size:0x10 scope:global
TRKPPCAccessFPRegister = .text:0x8001A4EC; // type:function size:0x21C
TRKTargetStop = .text:0x8001A708; // type:function size:0x18
TRKTargetSetStopped = .text:0x8001A720; // type:function size:0x10 scope:global
TRKTargetStopped = .text:0x8001A730; // type:function size:0x10 scope:global
TRKTargetFlushCache = .text:0x8001A740; // type:function size:0x3C
TRKTargetSupportRequest = .text:0x8001A77C; // type:function size:0x208 scope:global
TRKTargetGetPC = .text:0x8001A984; // type:function size:0x10
TRKTargetStepOutOfRange = .text:0x8001A994; // type:function size:0x7C
TRKTargetSingleStep = .text:0x8001AA10; // type:function size:0x6C
TRKTargetAddExceptionInfo = .text:0x8001AA7C; // type:function size:0xAC
TRKTargetAddStopInfo = .text:0x8001AB28; // type:function size:0x124
TRKTargetInterrupt = .text:0x8001AC4C; // type:function size:0x15C scope:global
TRKPostInterruptEvent = .text:0x8001ADA8; // type:function size:0xC0 scope:global
TRKTargetCPUType = .text:0x8001AE68; // type:function size:0x60
TRKTargetSupportMask = .text:0x8001AEC8; // type:function size:0xA4
TRKTargetVersions = .text:0x8001AF6C; // type:function size:0x24
TRKTargetAccessExtended2 = .text:0x8001AF90; // type:function size:0x438
TRKTargetAccessExtended1 = .text:0x8001B3C8; // type:function size:0x170
TRKTargetAccessFP = .text:0x8001B538; // type:function size:0x13C
TRKTargetAccessDefault = .text:0x8001B674; // type:function size:0xF4
TRKTargetAccessMemory = .text:0x8001B768; // type:function size:0x14C
TRKValidMemory32 = .text:0x8001B8B4; // type:function size:0x124
TRKAccessFile = .text:0x8001B9E0; // type:function size:0x8
TRKOpenFile = .text:0x8001B9E8; // type:function size:0x8
TRKCloseFile = .text:0x8001B9F0; // type:function size:0x8
TRKPositionFile = .text:0x8001B9F8; // type:function size:0x8
InitMetroTRK = .text:0x8001BA00; // type:function size:0x94 scope:global
TRKInitializeTarget = .text:0x8001BA94; // type:function size:0x4C scope:global
TRKTargetTranslate = .text:0x8001BAE0; // type:function size:0x40
EnableMetroTRKInterrupts = .text:0x8001BB20; // type:function size:0x20 scope:global
TRKSaveExtended1Block = .text:0x8001BB40; // type:function size:0x1B8 scope:global
TRKRestoreExtended1Block = .text:0x8001BCF8; // type:function size:0x1B8 scope:global
TRKTargetCPUMinorType = .text:0x8001BEB0; // type:function size:0x8
TRK_main = .text:0x8001BEB8; // type:function size:0x44 scope:global
TRKLoadContext = .text:0x8001BEFC; // type:function size:0x88 scope:global
TRKUARTInterruptHandler = .text:0x8001BF84; // type:function size:0x4 scope:global
TRK_board_display = .text:0x8001BF88; // type:function size:0x24 scope:global
UnreserveEXI2Port = .text:0x8001BFAC; // type:function size:0x30 scope:global
ReserveEXI2Port = .text:0x8001BFDC; // type:function size:0x30 scope:global
TRKReadUARTPoll = .text:0x8001C00C; // type:function size:0xF0
WriteUART1 = .text:0x8001C0FC; // type:function size:0x28
WriteUARTFlush = .text:0x8001C124; // type:function size:0xE0
EnableEXI2Interrupts = .text:0x8001C204; // type:function size:0x30
TRKInitializeIntDrivenUART = .text:0x8001C234; // type:function size:0x3C scope:global
InitMetroTRKCommTable = .text:0x8001C270; // type:function size:0x100 scope:global
TRKEXICallBack = .text:0x8001C370; // type:function size:0x38 scope:global
TRKTargetContinue = .text:0x8001C3A8; // type:function size:0x34 scope:global
GetUseSerialIO = .text:0x8001C3DC; // type:function size:0x10
SetUseSerialIO = .text:0x8001C3EC; // type:function size:0xC
convertFileMode = .text:0x8001C3F8; // type:function size:0xC0
__position_file = .text:0x8001C4B8; // type:function size:0xDC
__close_file = .text:0x8001C594; // type:function size:0x84
__open_file = .text:0x8001C618; // type:function size:0xB0
__write_file = .text:0x8001C6C8; // type:function size:0xB4
__read_file = .text:0x8001C77C; // type:function size:0xB4
__TRK_write_console = .text:0x8001C830; // type:function size:0xBC
__read_console = .text:0x8001C8EC; // type:function size:0xBC
AIRegisterDMACallback = .text:0x8001C9A8; // type:function size:0x44
AIInitDMA = .text:0x8001C9EC; // type:function size:0x88
AIStartDMA = .text:0x8001CA74; // type:function size:0x18
AISetStreamPlayState = .text:0x8001CA8C; // type:function size:0xD8
AIGetStreamPlayState = .text:0x8001CB64; // type:function size:0x10
AISetDSPSampleRate = .text:0x8001CB74; // type:function size:0xE0
AIGetDSPSampleRate = .text:0x8001CC54; // type:function size:0x14
__AI_set_stream_sample_rate = .text:0x8001CC68; // type:function size:0xD4
AIGetStreamSampleRate = .text:0x8001CD3C; // type:function size:0x10
AISetStreamVolLeft = .text:0x8001CD4C; // type:function size:0x1C
AIGetStreamVolLeft = .text:0x8001CD68; // type:function size:0x10
AISetStreamVolRight = .text:0x8001CD78; // type:function size:0x1C
AIGetStreamVolRight = .text:0x8001CD94; // type:function size:0x10
AIInit = .text:0x8001CDA4; // type:function size:0x16C
__AISHandler = .text:0x8001CF10; // type:function size:0x7C
__AIDHandler = .text:0x8001CF8C; // type:function size:0xAC
__AICallbackStackSwitch = .text:0x8001D038; // type:function size:0x58
__AI_SRC_INIT = .text:0x8001D090; // type:function size:0x1E4
EXI2_Init = .text:0x8001D274; // type:function size:0x4 scope:global
EXI2_EnableInterrupts = .text:0x8001D278; // type:function size:0x4 scope:global
EXI2_Poll = .text:0x8001D27C; // type:function size:0x8 scope:global
EXI2_ReadN = .text:0x8001D284; // type:function size:0x8 scope:global
EXI2_WriteN = .text:0x8001D28C; // type:function size:0x8 scope:global
EXI2_Reserve = .text:0x8001D294; // type:function size:0x4 scope:global
EXI2_Unreserve = .text:0x8001D298; // type:function size:0x4 scope:global
AMC_IsStub = .text:0x8001D29C; // type:function size:0x8 scope:global
ARRegisterDMACallback = .text:0x8001D2A4; // type:function size:0x44
ARStartDMA = .text:0x8001D2E8; // type:function size:0xF0
ARAlloc = .text:0x8001D3D8; // type:function size:0x68
ARFree = .text:0x8001D440; // type:function size:0x74
ARInit = .text:0x8001D4B4; // type:function size:0xC4
__ARHandler = .text:0x8001D578; // type:function size:0x78
__ARChecksize = .text:0x8001D5F0; // type:function size:0x17F4
__ARQServiceQueueLo = .text:0x8001EDE4; // type:function size:0x100
__ARQCallbackHack = .text:0x8001EEE4; // type:function size:0x4
__ARQInterruptServiceRoutine = .text:0x8001EEE8; // type:function size:0xCC
ARQInit = .text:0x8001EFB4; // type:function size:0x70
ARQPostRequest = .text:0x8001F024; // type:function size:0x15C
AXInit = .text:0x8001F180; // type:function size:0x3C
__AXGetStackHead = .text:0x8001F1BC; // type:function size:0x18
__AXServiceCallbackStack = .text:0x8001F1D4; // type:function size:0x74
__AXAllocInit = .text:0x8001F248; // type:function size:0xB4
__AXPushFreeStack = .text:0x8001F2FC; // type:function size:0x20
__AXPushCallbackStack = .text:0x8001F31C; // type:function size:0x10
__AXPopCallbackStack = .text:0x8001F32C; // type:function size:0x1C
__AXRemoveFromStack = .text:0x8001F348; // type:function size:0x94
AXFreeVoice = .text:0x8001F3DC; // type:function size:0x80
AXAcquireVoice = .text:0x8001F45C; // type:function size:0x174
__AXAuxInit = .text:0x8001F5D0; // type:function size:0xE4
__AXGetAuxAInput = .text:0x8001F6B4; // type:function size:0x34
__AXGetAuxAInputDpl2 = .text:0x8001F6E8; // type:function size:0x20
__AXGetAuxAOutput = .text:0x8001F708; // type:function size:0x1C
__AXGetAuxAOutputDpl2R = .text:0x8001F724; // type:function size:0x20
__AXGetAuxAOutputDpl2Ls = .text:0x8001F744; // type:function size:0x20
__AXGetAuxAOutputDpl2Rs = .text:0x8001F764; // type:function size:0x20
__AXGetAuxBInput = .text:0x8001F784; // type:function size:0x34
__AXGetAuxBOutput = .text:0x8001F7B8; // type:function size:0x1C
__AXGetAuxBForDPL2 = .text:0x8001F7D4; // type:function size:0x1C
__AXGetAuxBOutputDPL2 = .text:0x8001F7F0; // type:function size:0x1C
__AXProcessAux = .text:0x8001F80C; // type:function size:0x23C
AXRegisterAuxACallback = .text:0x8001FA48; // type:function size:0xC
AXRegisterAuxBCallback = .text:0x8001FA54; // type:function size:0xC
__AXGetCommandListCycles = .text:0x8001FA60; // type:function size:0x8
__AXGetCommandListAddress = .text:0x8001FA68; // type:function size:0x3C
__AXNextFrame = .text:0x8001FAA4; // type:function size:0x6B0
__AXClInit = .text:0x80020154; // type:function size:0x24
AXSetMode = .text:0x80020178; // type:function size:0x14
__AXOutNewFrame = .text:0x8002018C; // type:function size:0x188
__AXOutAiCallback = .text:0x80020314; // type:function size:0x68
__AXDSPInitCallback = .text:0x8002037C; // type:function size:0xC
__AXDSPResumeCallback = .text:0x80020388; // type:function size:0x58
__AXDSPDoneCallback = .text:0x800203E0; // type:function size:0x2C
__AXOutInitDSP = .text:0x8002040C; // type:function size:0xCC
__AXOutInit = .text:0x800204D8; // type:function size:0x340
AXRegisterCallback = .text:0x80020818; // type:function size:0x8
__AXGetStudio = .text:0x80020820; // type:function size:0xC
__AXPrintStudio = .text:0x8002082C; // type:function size:0x3F8
__AXSPBInit = .text:0x80020C24; // type:function size:0x2C
__AXDepopVoice = .text:0x80020C50; // type:function size:0x94
__AXGetNumVoices = .text:0x80020CE4; // type:function size:0x8
__AXServiceVPB = .text:0x80020CEC; // type:function size:0x708
__AXSyncPBs = .text:0x800213F4; // type:function size:0x268
__AXGetPBs = .text:0x8002165C; // type:function size:0xC
__AXSetPBDefault = .text:0x80021668; // type:function size:0x3C
__AXVPBInit = .text:0x800216A4; // type:function size:0x1FC
AXSetVoiceSrcType = .text:0x800218A0; // type:function size:0xC4
AXSetVoiceState = .text:0x80021964; // type:function size:0x5C
AXSetVoiceMix = .text:0x800219C0; // type:function size:0x254
AXSetVoiceAddr = .text:0x80021C14; // type:function size:0x110
AXSetVoiceAdpcm = .text:0x80021D24; // type:function size:0xA4
AXSetVoiceSrc = .text:0x80021DC8; // type:function size:0x98
AXSetVoiceSrcRatio = .text:0x80021E60; // type:function size:0x98
AXSetVoiceAdpcmLoop = .text:0x80021EF8; // type:function size:0x6C
__AXGetCurrentProfile = .text:0x80021F64; // type:function size:0x48
ReverbHICreate = .text:0x80021FAC; // type:function size:0x4EC
DoCrossTalk = .text:0x80022498; // type:function size:0x190
HandleReverb = .text:0x80022628; // type:function size:0x50C scope:local
AXFXReverbHiInit = .text:0x80022B34; // type:function size:0x70
AXFXReverbHiCallback = .text:0x80022BA4; // type:function size:0x104
ReverbSTDCreate = .text:0x80022CA8; // type:function size:0x40C
HandleReverb = .text:0x800230B4; // type:function size:0x3B4 scope:local
AXFXReverbStdInit = .text:0x80023468; // type:function size:0x6C
AXFXReverbStdCallback = .text:0x800234D4; // type:function size:0x30
do_src1 = .text:0x80023504; // type:function size:0x198
do_src2 = .text:0x8002369C; // type:function size:0x1EC
AXFXChorusInit = .text:0x80023888; // type:function size:0x200
AXFXChorusSettings = .text:0x80023A88; // type:function size:0xC4
AXFXChorusCallback = .text:0x80023B4C; // type:function size:0x350
AXFXDelayCallback = .text:0x80023E9C; // type:function size:0x1D0
AXFXDelaySettings = .text:0x8002406C; // type:function size:0x204
AXFXDelayInit = .text:0x80024270; // type:function size:0x48
AXFXDelayShutdown = .text:0x800242B8; // type:function size:0x90
__AXFXAllocFunction = .text:0x80024348; // type:function size:0x28
__AXFXFreeFunction = .text:0x80024370; // type:function size:0x28
AXFXSetHooks = .text:0x80024398; // type:function size:0xC
PPCMfmsr = .text:0x800243A4; // type:function size:0x8 scope:global
PPCMtmsr = .text:0x800243AC; // type:function size:0x8 scope:global
PPCMfhid0 = .text:0x800243B4; // type:function size:0x8 scope:global
PPCMthid0 = .text:0x800243BC; // type:function size:0x8
PPCMfl2cr = .text:0x800243C4; // type:function size:0x8 scope:global
PPCMtl2cr = .text:0x800243CC; // type:function size:0x8 scope:global
PPCMtdec = .text:0x800243D4; // type:function size:0x8 scope:weak
PPCSync = .text:0x800243DC; // type:function size:0x8
PPCHalt = .text:0x800243E4; // type:function size:0x14 scope:weak
PPCMffpscr = .text:0x800243F8; // type:function size:0x20 scope:global
PPCMtfpscr = .text:0x80024418; // type:function size:0x28 scope:global
PPCMfhid2 = .text:0x80024440; // type:function size:0x8 scope:global
PPCMthid2 = .text:0x80024448; // type:function size:0x8 scope:global
PPCMtwpar = .text:0x80024450; // type:function size:0x8 scope:global
PPCDisableSpeculation = .text:0x80024458; // type:function size:0x28 scope:global
PPCSetFpNonIEEEMode = .text:0x80024480; // type:function size:0x8 scope:global
__CARDDefaultApiCallback = .text:0x80024488; // type:function size:0x4
__CARDSyncCallback = .text:0x8002448C; // type:function size:0x34
__CARDExtHandler = .text:0x800244C0; // type:function size:0xD8
__CARDExiHandler = .text:0x80024598; // type:function size:0x118
__CARDTxHandler = .text:0x800246B0; // type:function size:0xA8
__CARDUnlockedHandler = .text:0x80024758; // type:function size:0x84
__CARDEnableInterrupt = .text:0x800247DC; // type:function size:0xC0
__CARDReadStatus = .text:0x8002489C; // type:function size:0xF0
__CARDClearStatus = .text:0x8002498C; // type:function size:0xAC
TimeoutHandler = .text:0x80024A38; // type:function size:0xA4
Retry = .text:0x80024ADC; // type:function size:0x22C
UnlockedCallback = .text:0x80024D08; // type:function size:0x110
__CARDStart = .text:0x80024E18; // type:function size:0x1B4
__CARDReadSegment = .text:0x80024FCC; // type:function size:0x134
__CARDWritePage = .text:0x80025100; // type:function size:0x11C
__CARDEraseSector = .text:0x8002521C; // type:function size:0xE0
CARDInit = .text:0x800252FC; // type:function size:0xAC
__CARDGetFontEncode = .text:0x800253A8; // type:function size:0x8
__CARDSetDiskID = .text:0x800253B0; // type:function size:0x38
__CARDGetControlBlock = .text:0x800253E8; // type:function size:0xB8
__CARDPutControlBlock = .text:0x800254A0; // type:function size:0x64
CARDGetResultCode = .text:0x80025504; // type:function size:0x30
CARDFreeBlocks = .text:0x80025534; // type:function size:0x150
CARDGetEncoding = .text:0x80025684; // type:function size:0x88
__CARDSync = .text:0x8002570C; // type:function size:0x98
OnReset = .text:0x800257A4; // type:function size:0x50
bitrev = .text:0x800257F4; // type:function size:0x16C
ReadArrayUnlock = .text:0x80025960; // type:function size:0x144
DummyLen = .text:0x80025AA4; // type:function size:0xC4
__CARDUnlock = .text:0x80025B68; // type:function size:0xB58
InitCallback = .text:0x800266C0; // type:function size:0x70
DoneCallback = .text:0x80026730; // type:function size:0x324
BlockReadCallback = .text:0x80026A54; // type:function size:0xDC
__CARDRead = .text:0x80026B30; // type:function size:0x64
BlockWriteCallback = .text:0x80026B94; // type:function size:0xDC
__CARDWrite = .text:0x80026C70; // type:function size:0x64
__CARDGetFatBlock = .text:0x80026CD4; // type:function size:0x8
WriteCallback = .text:0x80026CDC; // type:function size:0xD4 scope:local
EraseCallback = .text:0x80026DB0; // type:function size:0xC8 scope:local
__CARDAllocBlock = .text:0x80026E78; // type:function size:0x118
__CARDFreeBlock = .text:0x80026F90; // type:function size:0x9C
__CARDUpdateFatBlock = .text:0x8002702C; // type:function size:0xAC
__CARDGetDirBlock = .text:0x800270D8; // type:function size:0x8
WriteCallback = .text:0x800270E0; // type:function size:0xD0 scope:local
EraseCallback = .text:0x800271B0; // type:function size:0xC8 scope:local
__CARDUpdateDir = .text:0x80027278; // type:function size:0xC4
__CARDCheckSum = .text:0x8002733C; // type:function size:0x1B0
VerifyID = .text:0x800274EC; // type:function size:0x284
VerifyDir = .text:0x80027770; // type:function size:0x240
VerifyFAT = .text:0x800279B0; // type:function size:0x284
__CARDVerify = .text:0x80027C34; // type:function size:0x8C
CARDCheckExAsync = .text:0x80027CC0; // type:function size:0x590
CARDCheckAsync = .text:0x80028250; // type:function size:0x28
CARDCheck = .text:0x80028278; // type:function size:0x54
IsCard = .text:0x800282CC; // type:function size:0xCC
CARDProbeEx = .text:0x80028398; // type:function size:0x17C
DoMount = .text:0x80028514; // type:function size:0x410
__CARDMountCallback = .text:0x80028924; // type:function size:0x138
CARDMountAsync = .text:0x80028A5C; // type:function size:0x1A0
CARDMount = .text:0x80028BFC; // type:function size:0x48
DoUnmount = .text:0x80028C44; // type:function size:0x9C
CARDUnmount = .text:0x80028CE0; // type:function size:0xAC
FormatCallback = .text:0x80028D8C; // type:function size:0x144
__CARDFormatRegionAsync = .text:0x80028ED0; // type:function size:0x658
CARDFormatAsync = .text:0x80029528; // type:function size:0x48
CARDFormat = .text:0x80029570; // type:function size:0x54
__CARDCompareFileName = .text:0x800295C4; // type:function size:0x68
__CARDAccess = .text:0x8002962C; // type:function size:0x98
__CARDIsPublic = .text:0x800296C4; // type:function size:0x30
__CARDGetFileNo = .text:0x800296F4; // type:function size:0x150
CARDFastOpen = .text:0x80029844; // type:function size:0x160
CARDOpen = .text:0x800299A4; // type:function size:0x178
CARDClose = .text:0x80029B1C; // type:function size:0x54
__CARDIsOpened = .text:0x80029B70; // type:function size:0x8
CreateCallbackFat = .text:0x80029B78; // type:function size:0x130
CARDCreateAsync = .text:0x80029CA8; // type:function size:0x220
CARDCreate = .text:0x80029EC8; // type:function size:0x48
__CARDSeek = .text:0x80029F10; // type:function size:0x1B8
ReadCallback = .text:0x8002A0C8; // type:function size:0x130
CARDReadAsync = .text:0x8002A1F8; // type:function size:0x148
CARDRead = .text:0x8002A340; // type:function size:0x48
WriteCallback = .text:0x8002A388; // type:function size:0x170 scope:local
EraseCallback = .text:0x8002A4F8; // type:function size:0xB0 scope:local
CARDWriteAsync = .text:0x8002A5A8; // type:function size:0x114
DeleteCallback = .text:0x8002A6BC; // type:function size:0xA4
CARDFastDeleteAsync = .text:0x8002A760; // type:function size:0x12C
CARDDeleteAsync = .text:0x8002A88C; // type:function size:0x110
CARDDelete = .text:0x8002A99C; // type:function size:0x48
UpdateIconOffsets = .text:0x8002A9E4; // type:function size:0x1F8
CARDGetStatus = .text:0x8002ABDC; // type:function size:0x12C
CARDSetStatusAsync = .text:0x8002AD08; // type:function size:0x174
CARDSetStatus = .text:0x8002AE7C; // type:function size:0x48
__CARDGetStatusEx = .text:0x8002AEC4; // type:function size:0xBC
__CARDSetStatusExAsync = .text:0x8002AF80; // type:function size:0x254
CARDGetSerialNo = .text:0x8002B1D4; // type:function size:0xC4
CARDSetAttributes = .text:0x8002B298; // type:function size:0x84
DBInit = .text:0x8002B31C; // type:function size:0x28 scope:global
__DBExceptionDestinationAux = .text:0x8002B344; // type:function size:0x48
__DBExceptionDestination = .text:0x8002B38C; // type:function size:0x10 scope:global
__DBIsExceptionMarked = .text:0x8002B39C; // type:function size:0x1C scope:global
DBPrintf = .text:0x8002B3B8; // type:function size:0x50 scope:global
DSPCheckMailToDSP = .text:0x8002B408; // type:function size:0x10
DSPCheckMailFromDSP = .text:0x8002B418; // type:function size:0x10
DSPReadMailFromDSP = .text:0x8002B428; // type:function size:0x18
DSPSendMailToDSP = .text:0x8002B440; // type:function size:0x14
DSPInit = .text:0x8002B454; // type:function size:0xC4
DSPCheckInit = .text:0x8002B518; // type:function size:0x8
DSPAddTask = .text:0x8002B520; // type:function size:0x70
DSPAssertTask = .text:0x8002B590; // type:function size:0xC8
__DSP_debug_printf = .text:0x8002B658; // type:function size:0x50
__DSPHandler = .text:0x8002B6A8; // type:function size:0x424
__DSP_exec_task = .text:0x8002BACC; // type:function size:0x1A0
__DSP_boot_task = .text:0x8002BC6C; // type:function size:0x18C
__DSP_insert_task = .text:0x8002BDF8; // type:function size:0xA0
__DSP_remove_task = .text:0x8002BE98; // type:function size:0x94
__DVDInitWA = .text:0x8002BF2C; // type:function size:0x40 scope:weak
__DVDInterruptHandler = .text:0x8002BF6C; // type:function size:0x2E0 scope:weak
AlarmHandler = .text:0x8002C24C; // type:function size:0x84
AlarmHandlerForTimeout = .text:0x8002C2D0; // type:function size:0x70 scope:local
Read = .text:0x8002C340; // type:function size:0x110
SeekTwiceBeforeRead = .text:0x8002C450; // type:function size:0x80
DVDLowRead = .text:0x8002C4D0; // type:function size:0x298
DVDLowSeek = .text:0x8002C768; // type:function size:0x94
DVDLowWaitCoverClose = .text:0x8002C7FC; // type:function size:0x2C scope:weak
DVDLowReadDiskID = .text:0x8002C828; // type:function size:0xA4
DVDLowStopMotor = .text:0x8002C8CC; // type:function size:0x8C scope:weak
DVDLowRequestError = .text:0x8002C958; // type:function size:0x8C
DVDLowInquiry = .text:0x8002C9E4; // type:function size:0x9C
DVDLowAudioStream = .text:0x8002CA80; // type:function size:0x98
DVDLowRequestAudioStatus = .text:0x8002CB18; // type:function size:0x8C
DVDLowAudioBufferConfig = .text:0x8002CBA4; // type:function size:0x9C
DVDLowReset = .text:0x8002CC40; // type:function size:0xBC scope:global
DVDLowBreak = .text:0x8002CCFC; // type:function size:0x14
DVDLowClearCallback = .text:0x8002CD10; // type:function size:0x18
__DVDLowSetWAType = .text:0x8002CD28; // type:function size:0x44 scope:global
__DVDFSInit = .text:0x8002CD6C; // type:function size:0x38 scope:global
DVDConvertPathToEntrynum = .text:0x8002CDA4; // type:function size:0x2F4
DVDOpen = .text:0x8002D098; // type:function size:0xC8
DVDClose = .text:0x8002D160; // type:function size:0x24
entryToPath = .text:0x8002D184; // type:function size:0x160
DVDGetCurrentDir = .text:0x8002D2E4; // type:function size:0xC4
DVDReadAsyncPrio = .text:0x8002D3A8; // type:function size:0xC0
cbForReadAsync = .text:0x8002D468; // type:function size:0x30
DVDReadPrio = .text:0x8002D498; // type:function size:0x118
cbForReadSync = .text:0x8002D5B0; // type:function size:0x24
DVDGetTransferredSize = .text:0x8002D5D4; // type:function size:0x6C
defaultOptionalCommandChecker = .text:0x8002D640; // type:function size:0x4
DVDInit = .text:0x8002D644; // type:function size:0xCC scope:global
stateReadingFST = .text:0x8002D710; // type:function size:0x94
cbForStateReadingFST = .text:0x8002D7A4; // type:function size:0x8C
cbForStateError = .text:0x8002D830; // type:function size:0xAC scope:local
stateTimeout = .text:0x8002D8DC; // type:function size:0x34
stateGettingError = .text:0x8002D910; // type:function size:0x28
CategorizeError = .text:0x8002D938; // type:function size:0xB4
cbForStateGettingError = .text:0x8002D9EC; // type:function size:0x294
cbForUnrecoveredError = .text:0x8002DC80; // type:function size:0x68
cbForUnrecoveredErrorRetry = .text:0x8002DCE8; // type:function size:0x98
stateGoToRetry = .text:0x8002DD80; // type:function size:0x28
cbForStateGoToRetry = .text:0x8002DDA8; // type:function size:0x158
stateCheckID = .text:0x8002DF00; // type:function size:0xE0
stateCheckID3 = .text:0x8002DFE0; // type:function size:0x34
stateCheckID2a = .text:0x8002E014; // type:function size:0x34
cbForStateCheckID2a = .text:0x8002E048; // type:function size:0x74
stateCheckID2 = .text:0x8002E0BC; // type:function size:0x38
cbForStateCheckID1 = .text:0x8002E0F4; // type:function size:0x114
cbForStateCheckID2 = .text:0x8002E208; // type:function size:0xE4
cbForStateCheckID3 = .text:0x8002E2EC; // type:function size:0xFC
AlarmHandler = .text:0x8002E3E8; // type:function size:0x44 scope:local
stateCoverClosed = .text:0x8002E42C; // type:function size:0xCC
stateCoverClosed_CMD = .text:0x8002E4F8; // type:function size:0x30
cbForStateCoverClosed = .text:0x8002E528; // type:function size:0x70
stateMotorStopped = .text:0x8002E598; // type:function size:0x28
cbForStateMotorStopped = .text:0x8002E5C0; // type:function size:0xE4 scope:local
stateReady = .text:0x8002E6A4; // type:function size:0x230 scope:local
stateBusy = .text:0x8002E8D4; // type:function size:0x320 scope:local
cbForStateBusy = .text:0x8002EBF4; // type:function size:0x638
DVDReadAbsAsyncPrio = .text:0x8002F22C; // type:function size:0xDC
DVDReadAbsAsyncForBS = .text:0x8002F308; // type:function size:0xD0
DVDReadDiskID = .text:0x8002F3D8; // type:function size:0xD4 scope:global
DVDCancelStreamAsync = .text:0x8002F4AC; // type:function size:0xBC
DVDInquiryAsync = .text:0x8002F568; // type:function size:0xD0 scope:global
DVDReset = .text:0x8002F638; // type:function size:0x44 scope:global
DVDGetCommandBlockStatus = .text:0x8002F67C; // type:function size:0x4C
DVDGetDriveStatus = .text:0x8002F6C8; // type:function size:0xAC scope:global
DVDSetAutoInvalidation = .text:0x8002F774; // type:function size:0x10
DVDPause = .text:0x8002F784; // type:function size:0x3C
DVDResume = .text:0x8002F7C0; // type:function size:0x50
DVDCancelAsync = .text:0x8002F810; // type:function size:0x27C
DVDCancel = .text:0x8002FA8C; // type:function size:0xAC
cbForCancelSync = .text:0x8002FB38; // type:function size:0x24
DVDGetCurrentDiskID = .text:0x8002FB5C; // type:function size:0x8
DVDCheckDisk = .text:0x8002FB64; // type:function size:0xF8
__DVDPrepareResetAsync = .text:0x8002FC5C; // type:function size:0x11C
__DVDClearWaitingQueue = .text:0x8002FD78; // type:function size:0x38 scope:global
__DVDPushWaitingQueue = .text:0x8002FDB0; // type:function size:0x68 scope:global
__DVDPopWaitingQueue = .text:0x8002FE18; // type:function size:0xA0 scope:global
__DVDCheckWaitingQueue = .text:0x8002FEB8; // type:function size:0x58 scope:global
__DVDDequeueWaitingQueue = .text:0x8002FF10; // type:function size:0x60
ErrorCode2Num = .text:0x8002FF70; // type:function size:0x11C scope:local
__DVDStoreErrorCode = .text:0x8003008C; // type:function size:0x7C scope:global
DVDCompareDiskID = .text:0x80030108; // type:function size:0xF8
__DVDPrintFatalMessage = .text:0x80030200; // type:function size:0x30
cb = .text:0x80030230; // type:function size:0xD8 scope:local
__fstLoad = .text:0x80030308; // type:function size:0x168 scope:global
SetExiInterruptMask = .text:0x80030470; // type:function size:0xF4 scope:local
EXIImm = .text:0x80030564; // type:function size:0x25C scope:global
fn_800307C0 = .text:0x800307C0; // type:function size:0xA0
EXIDma = .text:0x80030860; // type:function size:0xEC scope:global
EXISync = .text:0x8003094C; // type:function size:0x24C scope:global
EXIClearInterrupts = .text:0x80030B98; // type:function size:0x48 scope:global
fn_80030BE0 = .text:0x80030BE0; // type:function size:0x7C
__EXIProbe = .text:0x80030C5C; // type:function size:0x174 scope:local
fn_80030DD0 = .text:0x80030DD0; // type:function size:0x80
fn_80030E50 = .text:0x80030E50; // type:function size:0xB4
fn_80030F04 = .text:0x80030F04; // type:function size:0x10C
fn_80031010 = .text:0x80031010; // type:function size:0xBC
EXISelect = .text:0x800310CC; // type:function size:0x12C scope:global
EXIDeselect = .text:0x800311F8; // type:function size:0x110 scope:global
EXIIntrruptHandler = .text:0x80031308; // type:function size:0xC8 scope:local
TCIntrruptHandler = .text:0x800313D0; // type:function size:0x218 scope:local
EXTIntrruptHandler = .text:0x800315E8; // type:function size:0xD0 scope:local
EXIInit = .text:0x800316B8; // type:function size:0x164 scope:global
EXILock = .text:0x8003181C; // type:function size:0xF4 scope:global
EXIUnlock = .text:0x80031910; // type:function size:0xDC scope:global
fn_800319EC = .text:0x800319EC; // type:function size:0x18
UnlockedHandler = .text:0x80031A04; // type:function size:0x28 scope:local
EXIGetID = .text:0x80031A2C; // type:function size:0x3B0 scope:global
fn_80031DDC = .text:0x80031DDC; // type:function size:0x70
fn_80031E4C = .text:0x80031E4C; // type:function size:0x21C
fn_80032068 = .text:0x80032068; // type:function size:0x7C
fn_800320E4 = .text:0x800320E4; // type:function size:0x24
fn_80032108 = .text:0x80032108; // type:function size:0x190
GXInit = .text:0x80032298; // type:function size:0x890 scope:global
__GXInitGX = .text:0x80032B28; // type:function size:0x8C4 scope:global
fn_800333EC = .text:0x800333EC; // type:function size:0x134
GXInitFifoBase = .text:0x80033520; // type:function size:0x6C scope:global
fn_8003358C = .text:0x8003358C; // type:function size:0x70
fn_800335FC = .text:0x800335FC; // type:function size:0xC
GXSetCPUFifo = .text:0x80033608; // type:function size:0x110 scope:global
GXSetGPFifo = .text:0x80033718; // type:function size:0x178 scope:global
fn_80033890 = .text:0x80033890; // type:function size:0x44
__GXFifoInit = .text:0x800338D4; // type:function size:0x4C scope:global
fn_80033920 = .text:0x80033920; // type:function size:0x24
fn_80033944 = .text:0x80033944; // type:function size:0x20
fn_80033964 = .text:0x80033964; // type:function size:0x3C
fn_800339A0 = .text:0x800339A0; // type:function size:0x3C
fn_800339DC = .text:0x800339DC; // type:function size:0x3C
fn_80033A18 = .text:0x80033A18; // type:function size:0x8
fn_80033A20 = .text:0x80033A20; // type:function size:0x158
fn_80033B78 = .text:0x80033B78; // type:function size:0x350
fn_80033EC8 = .text:0x80033EC8; // type:function size:0x54
fn_80033F1C = .text:0x80033F1C; // type:function size:0x124
fn_80034040 = .text:0x80034040; // type:function size:0x38
fn_80034078 = .text:0x80034078; // type:function size:0x358
fn_800343D0 = .text:0x800343D0; // type:function size:0x378
fn_80034748 = .text:0x80034748; // type:function size:0x9C
fn_800347E4 = .text:0x800347E4; // type:function size:0x8C
fn_80034870 = .text:0x80034870; // type:function size:0x10
fn_80034880 = .text:0x80034880; // type:function size:0x2D0
fn_80034B50 = .text:0x80034B50; // type:function size:0x40
GXSetMisc = .text:0x80034B90; // type:function size:0x94 scope:global
fn_80034C24 = .text:0x80034C24; // type:function size:0x5C
fn_80034C80 = .text:0x80034C80; // type:function size:0x16C
fn_80034DEC = .text:0x80034DEC; // type:function size:0x80
fn_80034E6C = .text:0x80034E6C; // type:function size:0x14
fn_80034E80 = .text:0x80034E80; // type:function size:0x14
fn_80034E94 = .text:0x80034E94; // type:function size:0x1C
fn_80034EB0 = .text:0x80034EB0; // type:function size:0x88
fn_80034F38 = .text:0x80034F38; // type:function size:0x1C
fn_80034F54 = .text:0x80034F54; // type:function size:0x14
fn_80034F68 = .text:0x80034F68; // type:function size:0x1C
fn_80034F84 = .text:0x80034F84; // type:function size:0x28
fn_80034FAC = .text:0x80034FAC; // type:function size:0x44
fn_80034FF0 = .text:0x80034FF0; // type:function size:0x88
fn_80035078 = .text:0x80035078; // type:function size:0x44
fn_800350BC = .text:0x800350BC; // type:function size:0x84
__GXPEInit = .text:0x80035140; // type:function size:0x80 scope:global
fn_800351C0 = .text:0x800351C0; // type:function size:0xA0
fn_80035260 = .text:0x80035260; // type:function size:0xF0
fn_80035350 = .text:0x80035350; // type:function size:0x88
fn_800353D8 = .text:0x800353D8; // type:function size:0x48
fn_80035420 = .text:0x80035420; // type:function size:0x48
fn_80035468 = .text:0x80035468; // type:function size:0x5C
fn_800354C4 = .text:0x800354C4; // type:function size:0x4C
fn_80035510 = .text:0x80035510; // type:function size:0x44
fn_80035554 = .text:0x80035554; // type:function size:0x3C
fn_80035590 = .text:0x80035590; // type:function size:0x24
fn_800355B4 = .text:0x800355B4; // type:function size:0x120
fn_800356D4 = .text:0x800356D4; // type:function size:0x90
fn_80035764 = .text:0x80035764; // type:function size:0x90
fn_800357F4 = .text:0x800357F4; // type:function size:0x3C
fn_80035830 = .text:0x80035830; // type:function size:0x154
fn_80035984 = .text:0x80035984; // type:function size:0x28
fn_800359AC = .text:0x800359AC; // type:function size:0x68
fn_80035A14 = .text:0x80035A14; // type:function size:0xC8
fn_80035ADC = .text:0x80035ADC; // type:function size:0x68
fn_80035B44 = .text:0x80035B44; // type:function size:0x228
fn_80035D6C = .text:0x80035D6C; // type:function size:0x1C
fn_80035D88 = .text:0x80035D88; // type:function size:0x15C
fn_80035EE4 = .text:0x80035EE4; // type:function size:0x17C
fn_80036060 = .text:0x80036060; // type:function size:0x38
fn_80036098 = .text:0x80036098; // type:function size:0x10
fn_800360A8 = .text:0x800360A8; // type:function size:0x190
fn_80036238 = .text:0x80036238; // type:function size:0x10
fn_80036248 = .text:0x80036248; // type:function size:0xC
fn_80036254 = .text:0x80036254; // type:function size:0x7C
fn_800362D0 = .text:0x800362D0; // type:function size:0xF4
fn_800363C4 = .text:0x800363C4; // type:function size:0xF4
fn_800364B8 = .text:0x800364B8; // type:function size:0x44
fn_800364FC = .text:0x800364FC; // type:function size:0xCC
fn_800365C8 = .text:0x800365C8; // type:function size:0x15C
fn_80036724 = .text:0x80036724; // type:function size:0xC8
fn_800367EC = .text:0x800367EC; // type:function size:0x274
fn_80036A60 = .text:0x80036A60; // type:function size:0x48
fn_80036AA8 = .text:0x80036AA8; // type:function size:0x194
fn_80036C3C = .text:0x80036C3C; // type:function size:0x8
fn_80036C44 = .text:0x80036C44; // type:function size:0x198
fn_80036DDC = .text:0x80036DDC; // type:function size:0x54
fn_80036E30 = .text:0x80036E30; // type:function size:0x48
fn_80036E78 = .text:0x80036E78; // type:function size:0x9C
GXInitTexCacheRegion = .text:0x80036F14; // type:function size:0x120 scope:global
GXInitTlutRegion = .text:0x80037034; // type:function size:0x48 scope:global
fn_8003707C = .text:0x8003707C; // type:function size:0x48
fn_800370C4 = .text:0x800370C4; // type:function size:0x14
fn_800370D8 = .text:0x800370D8; // type:function size:0x14
fn_800370EC = .text:0x800370EC; // type:function size:0xB8
fn_800371A4 = .text:0x800371A4; // type:function size:0x17C
__GXSetTmemConfig = .text:0x80037320; // type:function size:0x240 scope:global
fn_80037560 = .text:0x80037560; // type:function size:0x9C
fn_800375FC = .text:0x800375FC; // type:function size:0x160
fn_8003775C = .text:0x8003775C; // type:function size:0x17C
fn_800378D8 = .text:0x800378D8; // type:function size:0x114
fn_800379EC = .text:0x800379EC; // type:function size:0x28
fn_80037A14 = .text:0x80037A14; // type:function size:0x48
fn_80037A5C = .text:0x80037A5C; // type:function size:0x64
fn_80037AC0 = .text:0x80037AC0; // type:function size:0xCC
__GXFlushTextureState = .text:0x80037B8C; // type:function size:0x24 scope:global
fn_80037BB0 = .text:0x80037BB0; // type:function size:0x8C
fn_80037C3C = .text:0x80037C3C; // type:function size:0x44
fn_80037C80 = .text:0x80037C80; // type:function size:0x44
fn_80037CC4 = .text:0x80037CC4; // type:function size:0x68
fn_80037D2C = .text:0x80037D2C; // type:function size:0x68
fn_80037D94 = .text:0x80037D94; // type:function size:0x6C
fn_80037E00 = .text:0x80037E00; // type:function size:0x6C
fn_80037E6C = .text:0x80037E6C; // type:function size:0x54
fn_80037EC0 = .text:0x80037EC0; // type:function size:0x98
fn_80037F58 = .text:0x80037F58; // type:function size:0x54
fn_80037FAC = .text:0x80037FAC; // type:function size:0x84
fn_80038030 = .text:0x80038030; // type:function size:0x1D8
fn_80038208 = .text:0x80038208; // type:function size:0x30
fn_80038238 = .text:0x80038238; // type:function size:0x21C
fn_80038454 = .text:0x80038454; // type:function size:0x1C8
fn_8003861C = .text:0x8003861C; // type:function size:0x100
fn_8003871C = .text:0x8003871C; // type:function size:0x54
fn_80038770 = .text:0x80038770; // type:function size:0x2C
fn_8003879C = .text:0x8003879C; // type:function size:0x2C
fn_800387C8 = .text:0x800387C8; // type:function size:0x34
fn_800387FC = .text:0x800387FC; // type:function size:0x38
fn_80038834 = .text:0x80038834; // type:function size:0xE8
fn_8003891C = .text:0x8003891C; // type:function size:0x2C
fn_80038948 = .text:0x80038948; // type:function size:0x3C
fn_80038984 = .text:0x80038984; // type:function size:0x38
fn_800389BC = .text:0x800389BC; // type:function size:0x7C
fn_80038A38 = .text:0x80038A38; // type:function size:0x4
fn_80038A3C = .text:0x80038A3C; // type:function size:0x174
fn_80038BB0 = .text:0x80038BB0; // type:function size:0xB4
fn_80038C64 = .text:0x80038C64; // type:function size:0xC0
fn_80038D24 = .text:0x80038D24; // type:function size:0x60
fn_80038D84 = .text:0x80038D84; // type:function size:0x50
fn_80038DD4 = .text:0x80038DD4; // type:function size:0x50
fn_80038E24 = .text:0x80038E24; // type:function size:0x38
fn_80038E5C = .text:0x80038E5C; // type:function size:0xB4
fn_80038F10 = .text:0x80038F10; // type:function size:0x104
fn_80039014 = .text:0x80039014; // type:function size:0x24
fn_80039038 = .text:0x80039038; // type:function size:0x38
fn_80039070 = .text:0x80039070; // type:function size:0x90
fn_80039100 = .text:0x80039100; // type:function size:0x40
fn_80039140 = .text:0x80039140; // type:function size:0x28
fn_80039168 = .text:0x80039168; // type:function size:0x84
fn_800391EC = .text:0x800391EC; // type:function size:0x848
fn_80039A34 = .text:0x80039A34; // type:function size:0x10
fn_80039A44 = .text:0x80039A44; // type:function size:0xBC
fn_80039B00 = .text:0x80039B00; // type:function size:0xC8
fn_80039BC8 = .text:0x80039BC8; // type:function size:0x8
fn_80039BD0 = .text:0x80039BD0; // type:function size:0xE7C
fn_8003AA4C = .text:0x8003AA4C; // type:function size:0x20
fn_8003AA6C = .text:0x8003AA6C; // type:function size:0x28
fn_8003AA94 = .text:0x8003AA94; // type:function size:0x6C
fn_8003AB00 = .text:0x8003AB00; // type:function size:0x28
fn_8003AB28 = .text:0x8003AB28; // type:function size:0x107C
fn_8003BBA4 = .text:0x8003BBA4; // type:function size:0x2C
fn_8003BBD0 = .text:0x8003BBD0; // type:function size:0x34
fn_8003BC04 = .text:0x8003BC04; // type:function size:0xCC
fn_8003BCD0 = .text:0x8003BCD0; // type:function size:0x50
fn_8003BD20 = .text:0x8003BD20; // type:function size:0xF8
fn_8003BE18 = .text:0x8003BE18; // type:function size:0x70
fn_8003BE88 = .text:0x8003BE88; // type:function size:0xB0
fn_8003BF38 = .text:0x8003BF38; // type:function size:0xB0
fn_8003BFE8 = .text:0x8003BFE8; // type:function size:0x70
fn_8003C058 = .text:0x8003C058; // type:function size:0x34
fn_8003C08C = .text:0x8003C08C; // type:function size:0x28
fn_8003C0B4 = .text:0x8003C0B4; // type:function size:0xA4
fn_8003C158 = .text:0x8003C158; // type:function size:0x18C
fn_8003C2E4 = .text:0x8003C2E4; // type:function size:0xCC
fn_8003C3B0 = .text:0x8003C3B0; // type:function size:0x54
fn_8003C404 = .text:0x8003C404; // type:function size:0x8C
fn_8003C490 = .text:0x8003C490; // type:function size:0x54
fn_8003C4E4 = .text:0x8003C4E4; // type:function size:0xD0
fn_8003C5B4 = .text:0x8003C5B4; // type:function size:0x98
fn_8003C64C = .text:0x8003C64C; // type:function size:0x44
fn_8003C690 = .text:0x8003C690; // type:function size:0x3C
fn_8003C6CC = .text:0x8003C6CC; // type:function size:0x54
Hu_IsStub = .text:0x8003C720; // type:function size:0x8 scope:weak
OSGetConsoleType = .text:0x8003C728; // type:function size:0x28 scope:global
ClearArena = .text:0x8003C750; // type:function size:0x128 scope:local
InquiryCallback = .text:0x8003C878; // type:function size:0x3C scope:local
OSInit = .text:0x8003C8B4; // type:function size:0x378 scope:global
OSExceptionInit = .text:0x8003CC2C; // type:function size:0x280 scope:local
__OSDBINTSTART = .text:0x8003CEAC; // type:label scope:global
__OSDBIntegrator = .text:0x8003CEAC; // type:function size:0x24 scope:local
__OSDBINTEND = .text:0x8003CED0; // type:label scope:global
fn_8003CED0 = .text:0x8003CED0; // type:function size:0x4
__OSDBJUMPEND = .text:0x8003CED4; // type:label scope:global
__OSSetExceptionHandler = .text:0x8003CED4; // type:function size:0x1C scope:global
__OSGetExceptionHandler = .text:0x8003CEF0; // type:function size:0x14 scope:global
__OSEVStart = .text:0x8003CF04; // type:label scope:global
OSExceptionVector = .text:0x8003CF04; // type:function size:0x9C scope:local
__DBVECTOR = .text:0x8003CF5C; // type:label scope:global data:4byte
__OSEVSetNumber = .text:0x8003CF6C; // type:label scope:global data:4byte
__OSEVEnd = .text:0x8003CF9C; // type:label scope:global
OSDefaultExceptionHandler = .text:0x8003CFA0; // type:function size:0x58 scope:global
__OSPSInit = .text:0x8003CFF8; // type:function size:0x38 scope:global
fn_8003D030 = .text:0x8003D030; // type:function size:0x14
OSRegisterVersion = .text:0x8003D044; // type:function size:0x2C scope:global
OSInitAlarm = .text:0x8003D070; // type:function size:0x4C scope:global
OSCreateAlarm = .text:0x8003D0BC; // type:function size:0x10 scope:global
InsertAlarm = .text:0x8003D0CC; // type:function size:0x250 scope:local
OSSetAlarm = .text:0x8003D31C; // type:function size:0x68 scope:global
fn_8003D384 = .text:0x8003D384; // type:function size:0x7C
fn_8003D400 = .text:0x8003D400; // type:function size:0x11C
DecrementerExceptionCallback = .text:0x8003D51C; // type:function size:0x230 scope:local
DecrementerExceptionHandler = .text:0x8003D74C; // type:function size:0x50 scope:local
fn_8003D79C = .text:0x8003D79C; // type:function size:0xAC
fn_8003D848 = .text:0x8003D848; // type:function size:0xFC
fn_8003D944 = .text:0x8003D944; // type:function size:0x7C
fn_8003D9C0 = .text:0x8003D9C0; // type:function size:0x10
fn_8003D9D0 = .text:0x8003D9D0; // type:function size:0x70
fn_8003DA40 = .text:0x8003DA40; // type:function size:0x6C
fn_8003DAAC = .text:0x8003DAAC; // type:function size:0x360
OSGetArenaHi = .text:0x8003DE0C; // type:function size:0x8 scope:global
OSGetArenaLo = .text:0x8003DE14; // type:function size:0x8 scope:global
OSSetArenaHi = .text:0x8003DE1C; // type:function size:0x8 scope:global
OSSetArenaLo = .text:0x8003DE24; // type:function size:0x8 scope:global
fn_8003DE2C = .text:0x8003DE2C; // type:function size:0x2C
fn_8003DE58 = .text:0x8003DE58; // type:function size:0x20
__OSInitAudioSystem = .text:0x8003DE78; // type:function size:0x1BC scope:global
__OSStopAudioSystem = .text:0x8003E034; // type:function size:0xD8 scope:global
DCEnable = .text:0x8003E10C; // type:function size:0x14 scope:global
DCInvalidateRange = .text:0x8003E120; // type:function size:0x2C scope:global
DCFlushRange = .text:0x8003E14C; // type:function size:0x30 scope:global
fn_8003E17C = .text:0x8003E17C; // type:function size:0x30
DCFlushRangeNoSync = .text:0x8003E1AC; // type:function size:0x2C scope:global
fn_8003E1D8 = .text:0x8003E1D8; // type:function size:0x2C
ICInvalidateRange = .text:0x8003E204; // type:function size:0x34 scope:global
ICFlashInvalidate = .text:0x8003E238; // type:function size:0x10 scope:global
ICEnable = .text:0x8003E248; // type:function size:0x14 scope:global
fn_8003E25C = .text:0x8003E25C; // type:function size:0xCC
fn_8003E328 = .text:0x8003E328; // type:function size:0x38
LCDisable = .text:0x8003E360; // type:function size:0x28 scope:global
L2GlobalInvalidate = .text:0x8003E388; // type:function size:0x98 scope:global
DMAErrorHandler = .text:0x8003E420; // type:function size:0x160 scope:global
__OSCacheInit = .text:0x8003E580; // type:function size:0xF4 scope:global
__OSLoadFPUContext = .text:0x8003E674; // type:function size:0x124 scope:local
__OSSaveFPUContext = .text:0x8003E798; // type:function size:0x128 scope:local
OSSaveFPUContext = .text:0x8003E8C0; // type:function size:0x8 scope:global
OSSetCurrentContext = .text:0x8003E8C8; // type:function size:0x5C scope:global
fn_8003E924 = .text:0x8003E924; // type:function size:0xC
fn_8003E930 = .text:0x8003E930; // type:function size:0x80
OSLoadContext = .text:0x8003E9B0; // type:function size:0xD8 scope:global
fn_8003EA88 = .text:0x8003EA88; // type:function size:0x8
OSClearContext = .text:0x8003EA90; // type:function size:0x24 scope:global
fn_8003EAB4 = .text:0x8003EAB4; // type:function size:0xBC
OSDumpContext = .text:0x8003EB70; // type:function size:0x2A8 scope:global
OSSwitchFPUContext = .text:0x8003EE18; // type:function size:0x84 scope:local
__OSContextInit = .text:0x8003EE9C; // type:function size:0x48 scope:global
OSReport = .text:0x8003EEE4; // type:function size:0x80 scope:global
fn_8003EF64 = .text:0x8003EF64; // type:function size:0x12C
OSSetErrorHandler = .text:0x8003F090; // type:function size:0x218 scope:global
__OSUnhandledException = .text:0x8003F2A8; // type:function size:0x2E8 scope:global
fn_8003F590 = .text:0x8003F590; // type:function size:0x19C
fn_8003F72C = .text:0x8003F72C; // type:function size:0x174
fn_8003F8A0 = .text:0x8003F8A0; // type:function size:0x58
fn_8003F8F8 = .text:0x8003F8F8; // type:function size:0x8C
fn_8003F984 = .text:0x8003F984; // type:function size:0x334
fn_8003FCB8 = .text:0x8003FCB8; // type:function size:0x3B0
fn_80040068 = .text:0x80040068; // type:function size:0xE0
fn_80040148 = .text:0x80040148; // type:function size:0x1A8
OSDisableInterrupts = .text:0x800402F0; // type:function size:0x14 scope:global
OSEnableInterrupts = .text:0x80040304; // type:function size:0x14 scope:global
OSRestoreInterrupts = .text:0x80040318; // type:function size:0x24 scope:global
__OSSetInterruptHandler = .text:0x8004033C; // type:function size:0x1C scope:global
fn_80040358 = .text:0x80040358; // type:function size:0x14
__OSInterruptInit = .text:0x8004036C; // type:function size:0x74 scope:global
fn_800403E0 = .text:0x800403E0; // type:function size:0x2D8
__OSMaskInterrupts = .text:0x800406B8; // type:function size:0x88 scope:global
__OSUnmaskInterrupts = .text:0x80040740; // type:function size:0x88 scope:global
fn_800407C8 = .text:0x800407C8; // type:function size:0x344
ExternalInterruptHandler = .text:0x80040B0C; // type:function size:0x50 scope:local
fn_80040B5C = .text:0x80040B5C; // type:function size:0x4
fn_80040B60 = .text:0x80040B60; // type:function size:0x4
fn_80040B64 = .text:0x80040B64; // type:function size:0xC
fn_80040B70 = .text:0x80040B70; // type:function size:0x2BC
fn_80040E2C = .text:0x80040E2C; // type:function size:0x2E0
fn_8004110C = .text:0x8004110C; // type:function size:0x24
fn_80041130 = .text:0x80041130; // type:function size:0x3C
fn_8004116C = .text:0x8004116C; // type:function size:0x238
fn_800413A4 = .text:0x800413A4; // type:function size:0x1D4
__OSModuleInit = .text:0x80041578; // type:function size:0x18 scope:global
fn_80041590 = .text:0x80041590; // type:function size:0x3C
MEMIntrruptHandler = .text:0x800415CC; // type:function size:0x6C scope:local
Config24MB = .text:0x80041638; // type:function size:0x80 scope:local
Config48MB = .text:0x800416B8; // type:function size:0x80 scope:local
RealMode = .text:0x80041738; // type:function size:0x18 scope:local
__OSInitMemoryProtection = .text:0x80041750; // type:function size:0x120 scope:global
fn_80041870 = .text:0x80041870; // type:function size:0x70
fn_800418E0 = .text:0x800418E0; // type:function size:0x10
fn_800418F0 = .text:0x800418F0; // type:function size:0xC
__OSReboot = .text:0x800418FC; // type:function size:0x340 scope:global
OSRegisterResetFunction = .text:0x80041C3C; // type:function size:0x84 scope:global
Reset = .text:0x80041CC0; // type:function size:0x70 scope:local
fn_80041D30 = .text:0x80041D30; // type:function size:0x48
OSResetSystem = .text:0x80041D78; // type:function size:0x278 scope:global
OSGetResetCode = .text:0x80041FF0; // type:function size:0x30 scope:global
__OSResetSWInterruptHandler = .text:0x80042020; // type:function size:0xF4 scope:global
fn_80042114 = .text:0x80042114; // type:function size:0x298
fn_800423AC = .text:0x800423AC; // type:function size:0x60
fn_8004240C = .text:0x8004240C; // type:function size:0x118
__OSInitSram = .text:0x80042524; // type:function size:0x134 scope:global
__OSLockSram = .text:0x80042658; // type:function size:0x5C scope:global
__OSLockSramEx = .text:0x800426B4; // type:function size:0x5C scope:global
fn_80042710 = .text:0x80042710; // type:function size:0x308
__OSUnlockSram = .text:0x80042A18; // type:function size:0x24 scope:global
__OSUnlockSramEx = .text:0x80042A3C; // type:function size:0x24 scope:global
__OSSyncSram = .text:0x80042A60; // type:function size:0x10 scope:global
fn_80042A70 = .text:0x80042A70; // type:function size:0x124
fn_80042B94 = .text:0x80042B94; // type:function size:0x80
fn_80042C14 = .text:0x80042C14; // type:function size:0xA4
fn_80042CB8 = .text:0x80042CB8; // type:function size:0x70
fn_80042D28 = .text:0x80042D28; // type:function size:0xA4
fn_80042DCC = .text:0x80042DCC; // type:function size:0x70
fn_80042E3C = .text:0x80042E3C; // type:function size:0x84
fn_80042EC0 = .text:0x80042EC0; // type:function size:0xAC
__OSSystemCallVectorStart = .text:0x80042F6C; // type:label scope:global
fn_80042F6C = .text:0x80042F6C; // type:function size:0x20
__OSSystemCallVectorEnd = .text:0x80042F88; // type:label scope:global
__OSInitSystemCall = .text:0x80042F8C; // type:function size:0x64 scope:global
fn_80042FF0 = .text:0x80042FF0; // type:function size:0x4
__OSThreadInit = .text:0x80042FF4; // type:function size:0x158 scope:global
OSInitThreadQueue = .text:0x8004314C; // type:function size:0x10 scope:global
fn_8004315C = .text:0x8004315C; // type:function size:0xC
OSDisableScheduler = .text:0x80043168; // type:function size:0x40 scope:global
OSEnableScheduler = .text:0x800431A8; // type:function size:0x40 scope:global
fn_800431E8 = .text:0x800431E8; // type:function size:0x68
fn_80043250 = .text:0x80043250; // type:function size:0x3C
fn_8004328C = .text:0x8004328C; // type:function size:0x1C0
SelectThread = .text:0x8004344C; // type:function size:0x228 scope:local
__OSReschedule = .text:0x80043674; // type:function size:0x30 scope:global
fn_800436A4 = .text:0x800436A4; // type:function size:0x1E8
fn_8004388C = .text:0x8004388C; // type:function size:0xE4
OSCancelThread = .text:0x80043970; // type:function size:0x1BC scope:global
fn_80043B2C = .text:0x80043B2C; // type:function size:0x288
fn_80043DB4 = .text:0x80043DB4; // type:function size:0x170
fn_80043F24 = .text:0x80043F24; // type:function size:0xEC
fn_80044010 = .text:0x80044010; // type:function size:0x104
fn_80044114 = .text:0x80044114; // type:function size:0xC0
fn_800441D4 = .text:0x800441D4; // type:function size:0x8
OSClearStack = .text:0x800441DC; // type:function size:0xAC scope:global
OSGetTime = .text:0x80044288; // type:function size:0x18 scope:global
OSGetTick = .text:0x800442A0; // type:function size:0x8 scope:global
__OSGetSystemTime = .text:0x800442A8; // type:function size:0x64 scope:global
fn_8004430C = .text:0x8004430C; // type:function size:0x58
fn_80044364 = .text:0x80044364; // type:function size:0x19C
fn_80044500 = .text:0x80044500; // type:function size:0x204
__init_user = .text:0x80044704; // type:function size:0x20 scope:global
__init_cpp = .text:0x80044724; // type:function size:0x54 scope:local
_ExitProcess = .text:0x80044778; // type:function size:0x20 scope:global
fn_80044798 = .text:0x80044798; // type:function size:0x1A4
fn_8004493C = .text:0x8004493C; // type:function size:0xC4
fn_80044A00 = .text:0x80044A00; // type:function size:0xC0
fn_80044AC0 = .text:0x80044AC0; // type:function size:0xD8
fn_80044B98 = .text:0x80044B98; // type:function size:0x32C
fn_80044EC4 = .text:0x80044EC4; // type:function size:0x134
fn_80044FF8 = .text:0x80044FF8; // type:function size:0x100
fn_800450F8 = .text:0x800450F8; // type:function size:0x104
fn_800451FC = .text:0x800451FC; // type:function size:0x218
fn_80045414 = .text:0x80045414; // type:function size:0x3AC
fn_800457C0 = .text:0x800457C0; // type:function size:0xA4
fn_80045864 = .text:0x80045864; // type:function size:0x60
fn_800458C4 = .text:0x800458C4; // type:function size:0x174
fn_80045A38 = .text:0x80045A38; // type:function size:0x174
fn_80045BAC = .text:0x80045BAC; // type:function size:0x3F8
fn_80045FA4 = .text:0x80045FA4; // type:function size:0x194
fn_80046138 = .text:0x80046138; // type:function size:0x60
fn_80046198 = .text:0x80046198; // type:function size:0x54
__PADDisableRecalibration = .text:0x800461EC; // type:function size:0x7C scope:global
fn_80046268 = .text:0x80046268; // type:function size:0x20
fn_80046288 = .text:0x80046288; // type:function size:0x3C
fn_800462C4 = .text:0x800462C4; // type:function size:0x2FC
SIInterruptHandler = .text:0x800465C0; // type:function size:0x344 scope:local
fn_80046904 = .text:0x80046904; // type:function size:0x98
fn_8004699C = .text:0x8004699C; // type:function size:0xCC
fn_80046A68 = .text:0x80046A68; // type:function size:0xF4
SIInit = .text:0x80046B5C; // type:function size:0xB4 scope:global
fn_80046C10 = .text:0x80046C10; // type:function size:0x20C
fn_80046E1C = .text:0x80046E1C; // type:function size:0x7C
fn_80046E98 = .text:0x80046E98; // type:function size:0x14
fn_80046EAC = .text:0x80046EAC; // type:function size:0x10
SISetXY = .text:0x80046EBC; // type:function size:0x6C scope:global
fn_80046F28 = .text:0x80046F28; // type:function size:0x9C
fn_80046FC4 = .text:0x80046FC4; // type:function size:0x6C
fn_80047030 = .text:0x80047030; // type:function size:0xD4
fn_80047104 = .text:0x80047104; // type:function size:0xC4
fn_800471C8 = .text:0x800471C8; // type:function size:0x8C
SITransfer = .text:0x80047254; // type:function size:0x16C scope:global
GetTypeCallback = .text:0x800473C0; // type:function size:0x298 scope:local
SIGetType = .text:0x80047658; // type:function size:0x1C4 scope:global
fn_8004781C = .text:0x8004781C; // type:function size:0x13C
fn_80047958 = .text:0x80047958; // type:function size:0x14C
fn_80047AA4 = .text:0x80047AA4; // type:function size:0x24
SISetSamplingRate = .text:0x80047AC8; // type:function size:0xE4 scope:global
fn_80047BAC = .text:0x80047BAC; // type:function size:0x24
fn_80047BD0 = .text:0x80047BD0; // type:function size:0x230
fn_80047E00 = .text:0x80047E00; // type:function size:0x44
fn_80047E44 = .text:0x80047E44; // type:function size:0xA0
fn_80047EE4 = .text:0x80047EE4; // type:function size:0x200
fn_800480E4 = .text:0x800480E4; // type:function size:0x4B0
fn_80048594 = .text:0x80048594; // type:function size:0x54
fn_800485E8 = .text:0x800485E8; // type:function size:0x2D4
fn_800488BC = .text:0x800488BC; // type:function size:0x1A0
fn_80048A5C = .text:0x80048A5C; // type:function size:0x828
fn_80049284 = .text:0x80049284; // type:function size:0x130
fn_800493B4 = .text:0x800493B4; // type:function size:0x6C
fn_80049420 = .text:0x80049420; // type:function size:0x7C
fn_8004949C = .text:0x8004949C; // type:function size:0x8
fn_800494A4 = .text:0x800494A4; // type:function size:0x68
fn_8004950C = .text:0x8004950C; // type:function size:0x98
VIGetTvFormat = .text:0x800495A4; // type:function size:0x68 scope:global
fn_8004960C = .text:0x8004960C; // type:function size:0x3C
fn_80049648 = .text:0x80049648; // type:function size:0x54
fn_8004969C = .text:0x8004969C; // type:function size:0x24
fn_800496C0 = .text:0x800496C0; // type:function size:0x3C
fn_800496FC = .text:0x800496FC; // type:function size:0x1C
fn_80049718 = .text:0x80049718; // type:function size:0x1C
fn_80049734 = .text:0x80049734; // type:function size:0x28
fn_8004975C = .text:0x8004975C; // type:function size:0x40
fn_8004979C = .text:0x8004979C; // type:function size:0x78
fn_80049814 = .text:0x80049814; // type:function size:0x24
fn_80049838 = .text:0x80049838; // type:function size:0x20
fn_80049858 = .text:0x80049858; // type:function size:0x68
fn_800498C0 = .text:0x800498C0; // type:function size:0x68
fn_80049928 = .text:0x80049928; // type:function size:0x68
fn_80049990 = .text:0x80049990; // type:function size:0x2C
fn_800499BC = .text:0x800499BC; // type:function size:0x30
fn_800499EC = .text:0x800499EC; // type:function size:0x30
fn_80049A1C = .text:0x80049A1C; // type:function size:0x78
fn_80049A94 = .text:0x80049A94; // type:function size:0x70
fn_80049B04 = .text:0x80049B04; // type:function size:0xAC
fn_80049BB0 = .text:0x80049BB0; // type:function size:0xAC
fn_80049C5C = .text:0x80049C5C; // type:function size:0x5C
fn_80049CB8 = .text:0x80049CB8; // type:function size:0x244
fn_80049EFC = .text:0x80049EFC; // type:function size:0x4C
fn_80049F48 = .text:0x80049F48; // type:function size:0x2C
fn_80049F74 = .text:0x80049F74; // type:function size:0x78
fn_80049FEC = .text:0x80049FEC; // type:function size:0x78
fn_8004A064 = .text:0x8004A064; // type:function size:0x78
fn_8004A0DC = .text:0x8004A0DC; // type:function size:0x70
fn_8004A14C = .text:0x8004A14C; // type:function size:0x60
fn_8004A1AC = .text:0x8004A1AC; // type:function size:0xB0
fn_8004A25C = .text:0x8004A25C; // type:function size:0x94
fn_8004A2F0 = .text:0x8004A2F0; // type:function size:0xA8
fn_8004A398 = .text:0x8004A398; // type:function size:0x160
fn_8004A4F8 = .text:0x8004A4F8; // type:function size:0x214
fn_8004A70C = .text:0x8004A70C; // type:function size:0x68
fn_8004A774 = .text:0x8004A774; // type:function size:0x1B0
fn_8004A924 = .text:0x8004A924; // type:function size:0x8C
fn_8004A9B0 = .text:0x8004A9B0; // type:function size:0x30
fn_8004A9E0 = .text:0x8004A9E0; // type:function size:0x5C
fn_8004AA3C = .text:0x8004AA3C; // type:function size:0xE4
fn_8004AB20 = .text:0x8004AB20; // type:function size:0x44
fn_8004AB64 = .text:0x8004AB64; // type:function size:0x3C
fn_8004ABA0 = .text:0x8004ABA0; // type:function size:0xC4
fn_8004AC64 = .text:0x8004AC64; // type:function size:0x18
fn_8004AC7C = .text:0x8004AC7C; // type:function size:0x40
fn_8004ACBC = .text:0x8004ACBC; // type:function size:0x114
fn_8004ADD0 = .text:0x8004ADD0; // type:function size:0x8
fn_8004ADD8 = .text:0x8004ADD8; // type:function size:0x48
fn_8004AE20 = .text:0x8004AE20; // type:function size:0xF4
fn_8004AF14 = .text:0x8004AF14; // type:function size:0x8C
fn_8004AFA0 = .text:0x8004AFA0; // type:function size:0x2A0
fn_8004B240 = .text:0x8004B240; // type:function size:0x8
fn_8004B248 = .text:0x8004B248; // type:function size:0x8
fn_8004B250 = .text:0x8004B250; // type:function size:0x34
fn_8004B284 = .text:0x8004B284; // type:function size:0x4
fn_8004B288 = .text:0x8004B288; // type:function size:0x2C
fn_8004B2B4 = .text:0x8004B2B4; // type:function size:0x1C
fn_8004B2D0 = .text:0x8004B2D0; // type:function size:0x138
fn_8004B408 = .text:0x8004B408; // type:function size:0x2F4
fn_8004B6FC = .text:0x8004B6FC; // type:function size:0x1C4
fn_8004B8C0 = .text:0x8004B8C0; // type:function size:0x1BC
fn_8004BA7C = .text:0x8004BA7C; // type:function size:0x394
fn_8004BE10 = .text:0x8004BE10; // type:function size:0x9C
fn_8004BEAC = .text:0x8004BEAC; // type:function size:0x360
fn_8004C20C = .text:0x8004C20C; // type:function size:0x4
fn_8004C210 = .text:0x8004C210; // type:function size:0x28
fn_8004C238 = .text:0x8004C238; // type:function size:0x18
fn_8004C250 = .text:0x8004C250; // type:function size:0xC
fn_8004C25C = .text:0x8004C25C; // type:function size:0x20
fn_8004C27C = .text:0x8004C27C; // type:function size:0x24
fn_8004C2A0 = .text:0x8004C2A0; // type:function size:0x2C
fn_8004C2CC = .text:0x8004C2CC; // type:function size:0x2C
fn_8004C2F8 = .text:0x8004C2F8; // type:function size:0x34
fn_8004C32C = .text:0x8004C32C; // type:function size:0x28
fn_8004C354 = .text:0x8004C354; // type:function size:0x64
fn_8004C3B8 = .text:0x8004C3B8; // type:function size:0x28
fn_8004C3E0 = .text:0x8004C3E0; // type:function size:0x30
fn_8004C410 = .text:0x8004C410; // type:function size:0x54
fn_8004C464 = .text:0x8004C464; // type:function size:0x78
fn_8004C4DC = .text:0x8004C4DC; // type:function size:0x78
fn_8004C554 = .text:0x8004C554; // type:function size:0x50
fn_8004C5A4 = .text:0x8004C5A4; // type:function size:0x2C
fn_8004C5D0 = .text:0x8004C5D0; // type:function size:0x24
fn_8004C5F4 = .text:0x8004C5F4; // type:function size:0x78
fn_8004C66C = .text:0x8004C66C; // type:function size:0xDC
fn_8004C748 = .text:0x8004C748; // type:function size:0x2C
fn_8004C774 = .text:0x8004C774; // type:function size:0x2C
fn_8004C7A0 = .text:0x8004C7A0; // type:function size:0x2C
fn_8004C7CC = .text:0x8004C7CC; // type:function size:0x20
fn_8004C7EC = .text:0x8004C7EC; // type:function size:0x1C
fn_8004C808 = .text:0x8004C808; // type:function size:0x98
fn_8004C8A0 = .text:0x8004C8A0; // type:function size:0x2C
fn_8004C8CC = .text:0x8004C8CC; // type:function size:0x164
fn_8004CA30 = .text:0x8004CA30; // type:function size:0x1D8
fn_8004CC08 = .text:0x8004CC08; // type:function size:0x80
fn_8004CC88 = .text:0x8004CC88; // type:function size:0x80
fn_8004CD08 = .text:0x8004CD08; // type:function size:0x4C
fn_8004CD54 = .text:0x8004CD54; // type:function size:0x24
fn_8004CD78 = .text:0x8004CD78; // type:function size:0x148
fn_8004CEC0 = .text:0x8004CEC0; // type:function size:0x148
fn_8004D008 = .text:0x8004D008; // type:function size:0x2C
fn_8004D034 = .text:0x8004D034; // type:function size:0x58
fn_8004D08C = .text:0x8004D08C; // type:function size:0x80
fn_8004D10C = .text:0x8004D10C; // type:function size:0x3C
fn_8004D148 = .text:0x8004D148; // type:function size:0x68
fn_8004D1B0 = .text:0x8004D1B0; // type:function size:0x2C
fn_8004D1DC = .text:0x8004D1DC; // type:function size:0x60
fn_8004D23C = .text:0x8004D23C; // type:function size:0x58
fn_8004D294 = .text:0x8004D294; // type:function size:0x54
fn_8004D2E8 = .text:0x8004D2E8; // type:function size:0x68
fn_8004D350 = .text:0x8004D350; // type:function size:0x134
fn_8004D484 = .text:0x8004D484; // type:function size:0x4C
fn_8004D4D0 = .text:0x8004D4D0; // type:function size:0x28
fn_8004D4F8 = .text:0x8004D4F8; // type:function size:0x60
fn_8004D558 = .text:0x8004D558; // type:function size:0x60
fn_8004D5B8 = .text:0x8004D5B8; // type:function size:0x38
fn_8004D5F0 = .text:0x8004D5F0; // type:function size:0x110
fn_8004D700 = .text:0x8004D700; // type:function size:0x5C
fn_8004D75C = .text:0x8004D75C; // type:function size:0x34
fn_8004D790 = .text:0x8004D790; // type:function size:0x1B8
fn_8004D948 = .text:0x8004D948; // type:function size:0x50
fn_8004D998 = .text:0x8004D998; // type:function size:0xCC
fn_8004DA64 = .text:0x8004DA64; // type:function size:0x28
fn_8004DA8C = .text:0x8004DA8C; // type:function size:0x40
fn_8004DACC = .text:0x8004DACC; // type:function size:0xC4
fn_8004DB90 = .text:0x8004DB90; // type:function size:0x9C
fn_8004DC2C = .text:0x8004DC2C; // type:function size:0x14
fn_8004DC40 = .text:0x8004DC40; // type:function size:0x2C
fn_8004DC6C = .text:0x8004DC6C; // type:function size:0x144
fn_8004DDB0 = .text:0x8004DDB0; // type:function size:0x1D4
fn_8004DF84 = .text:0x8004DF84; // type:function size:0x4C
fn_8004DFD0 = .text:0x8004DFD0; // type:function size:0xE0
fn_8004E0B0 = .text:0x8004E0B0; // type:function size:0x58
fn_8004E108 = .text:0x8004E108; // type:function size:0x74
fn_8004E17C = .text:0x8004E17C; // type:function size:0x44
fn_8004E1C0 = .text:0x8004E1C0; // type:function size:0x20
fn_8004E1E0 = .text:0x8004E1E0; // type:function size:0x10
fn_8004E1F0 = .text:0x8004E1F0; // type:function size:0xC
fn_8004E1FC = .text:0x8004E1FC; // type:function size:0x38
fn_8004E234 = .text:0x8004E234; // type:function size:0x28
fn_8004E25C = .text:0x8004E25C; // type:function size:0x44
fn_8004E2A0 = .text:0x8004E2A0; // type:function size:0x68
fn_8004E308 = .text:0x8004E308; // type:function size:0x30
fn_8004E338 = .text:0x8004E338; // type:function size:0x18C
fn_8004E4C4 = .text:0x8004E4C4; // type:function size:0x10C
fn_8004E5D0 = .text:0x8004E5D0; // type:function size:0x34
fn_8004E604 = .text:0x8004E604; // type:function size:0x80
fn_8004E684 = .text:0x8004E684; // type:function size:0x2C
fn_8004E6B0 = .text:0x8004E6B0; // type:function size:0xDC
fn_8004E78C = .text:0x8004E78C; // type:function size:0x4
fn_8004E790 = .text:0x8004E790; // type:function size:0x70
fn_8004E800 = .text:0x8004E800; // type:function size:0x98
fn_8004E898 = .text:0x8004E898; // type:function size:0x98
fn_8004E930 = .text:0x8004E930; // type:function size:0x104
fn_8004EA34 = .text:0x8004EA34; // type:function size:0x38
fn_8004EA6C = .text:0x8004EA6C; // type:function size:0x8
fn_8004EA74 = .text:0x8004EA74; // type:function size:0x38
fn_8004EAAC = .text:0x8004EAAC; // type:function size:0x8
fn_8004EAB4 = .text:0x8004EAB4; // type:function size:0xB4
fn_8004EB68 = .text:0x8004EB68; // type:function size:0xB0
fn_8004EC18 = .text:0x8004EC18; // type:function size:0x58
fn_8004EC70 = .text:0x8004EC70; // type:function size:0x58
fn_8004ECC8 = .text:0x8004ECC8; // type:function size:0x30
fn_8004ECF8 = .text:0x8004ECF8; // type:function size:0x8
fn_8004ED00 = .text:0x8004ED00; // type:function size:0x8
fn_8004ED08 = .text:0x8004ED08; // type:function size:0x18
fn_8004ED20 = .text:0x8004ED20; // type:function size:0x4C
fn_8004ED6C = .text:0x8004ED6C; // type:function size:0x104
fn_8004EE70 = .text:0x8004EE70; // type:function size:0x70
fn_8004EEE0 = .text:0x8004EEE0; // type:function size:0x18
fn_8004EEF8 = .text:0x8004EEF8; // type:function size:0x18
fn_8004EF10 = .text:0x8004EF10; // type:function size:0x18
fn_8004EF28 = .text:0x8004EF28; // type:function size:0x18
fn_8004EF40 = .text:0x8004EF40; // type:function size:0x68
fn_8004EFA8 = .text:0x8004EFA8; // type:function size:0x68
fn_8004F010 = .text:0x8004F010; // type:function size:0x18
fn_8004F028 = .text:0x8004F028; // type:function size:0x18
fn_8004F040 = .text:0x8004F040; // type:function size:0x34
fn_8004F074 = .text:0x8004F074; // type:function size:0x28
fn_8004F09C = .text:0x8004F09C; // type:function size:0x7C
fn_8004F118 = .text:0x8004F118; // type:function size:0x24
fn_8004F13C = .text:0x8004F13C; // type:function size:0x4
fn_8004F140 = .text:0x8004F140; // type:function size:0xBC
fn_8004F1FC = .text:0x8004F1FC; // type:function size:0xC8
fn_8004F2C4 = .text:0x8004F2C4; // type:function size:0x14
fn_8004F2D8 = .text:0x8004F2D8; // type:function size:0xF4
fn_8004F3CC = .text:0x8004F3CC; // type:function size:0x208
fn_8004F5D4 = .text:0x8004F5D4; // type:function size:0x4
fn_8004F5D8 = .text:0x8004F5D8; // type:function size:0xC
fn_8004F5E4 = .text:0x8004F5E4; // type:function size:0x18
fn_8004F5FC = .text:0x8004F5FC; // type:function size:0xF4
fn_8004F6F0 = .text:0x8004F6F0; // type:function size:0xA8
fn_8004F798 = .text:0x8004F798; // type:function size:0x198
fn_8004F930 = .text:0x8004F930; // type:function size:0x14C
fn_8004FA7C = .text:0x8004FA7C; // type:function size:0xCC
fn_8004FB48 = .text:0x8004FB48; // type:function size:0x11C
fn_8004FC64 = .text:0x8004FC64; // type:function size:0x98
fn_8004FCFC = .text:0x8004FCFC; // type:function size:0x38
fn_8004FD34 = .text:0x8004FD34; // type:function size:0xC
fn_8004FD40 = .text:0x8004FD40; // type:function size:0x14
fn_8004FD54 = .text:0x8004FD54; // type:function size:0x38
fn_8004FD8C = .text:0x8004FD8C; // type:function size:0x1C
fn_8004FDA8 = .text:0x8004FDA8; // type:function size:0x34
fn_8004FDDC = .text:0x8004FDDC; // type:function size:0x134
fn_8004FF10 = .text:0x8004FF10; // type:function size:0x50
fn_8004FF60 = .text:0x8004FF60; // type:function size:0x138
fn_80050098 = .text:0x80050098; // type:function size:0x23C
fn_800502D4 = .text:0x800502D4; // type:function size:0x24
fn_800502F8 = .text:0x800502F8; // type:function size:0x24
fn_8005031C = .text:0x8005031C; // type:function size:0x24
fn_80050340 = .text:0x80050340; // type:function size:0x24
fn_80050364 = .text:0x80050364; // type:function size:0x14
fn_80050378 = .text:0x80050378; // type:function size:0xC
fn_80050384 = .text:0x80050384; // type:function size:0x2C
fn_800503B0 = .text:0x800503B0; // type:function size:0x2C
fn_800503DC = .text:0x800503DC; // type:function size:0x2C
fn_80050408 = .text:0x80050408; // type:function size:0x28
fn_80050430 = .text:0x80050430; // type:function size:0x28
fn_80050458 = .text:0x80050458; // type:function size:0x54
fn_800504AC = .text:0x800504AC; // type:function size:0x64
fn_80050510 = .text:0x80050510; // type:function size:0x54
fn_80050564 = .text:0x80050564; // type:function size:0x38
fn_8005059C = .text:0x8005059C; // type:function size:0x8
fn_800505A4 = .text:0x800505A4; // type:function size:0xC
fn_800505B0 = .text:0x800505B0; // type:function size:0x2C
fn_800505DC = .text:0x800505DC; // type:function size:0xA4
fn_80050680 = .text:0x80050680; // type:function size:0x54
fn_800506D4 = .text:0x800506D4; // type:function size:0x7C
fn_80050750 = .text:0x80050750; // type:function size:0x100
fn_80050850 = .text:0x80050850; // type:function size:0x38
fn_80050888 = .text:0x80050888; // type:function size:0x20
fn_800508A8 = .text:0x800508A8; // type:function size:0xD0
fn_80050978 = .text:0x80050978; // type:function size:0xE0
fn_80050A58 = .text:0x80050A58; // type:function size:0xA8
fn_80050B00 = .text:0x80050B00; // type:function size:0x40
fn_80050B40 = .text:0x80050B40; // type:function size:0x20
fn_80050B60 = .text:0x80050B60; // type:function size:0x6C
fn_80050BCC = .text:0x80050BCC; // type:function size:0x14C
fn_80050D18 = .text:0x80050D18; // type:function size:0x58
fn_80050D70 = .text:0x80050D70; // type:function size:0x10
fn_80050D80 = .text:0x80050D80; // type:function size:0xC
fn_80050D8C = .text:0x80050D8C; // type:function size:0x14
fn_80050DA0 = .text:0x80050DA0; // type:function size:0x4
fn_80050DA4 = .text:0x80050DA4; // type:function size:0x4C
fn_80050DF0 = .text:0x80050DF0; // type:function size:0x20
fn_80050E10 = .text:0x80050E10; // type:function size:0x88
fn_80050E98 = .text:0x80050E98; // type:function size:0x40
fn_80050ED8 = .text:0x80050ED8; // type:function size:0x4
fn_80050EDC = .text:0x80050EDC; // type:function size:0xC
fn_80050EE8 = .text:0x80050EE8; // type:function size:0x14
fn_80050EFC = .text:0x80050EFC; // type:function size:0x5C
fn_80050F58 = .text:0x80050F58; // type:function size:0x134
fn_8005108C = .text:0x8005108C; // type:function size:0x140
fn_800511CC = .text:0x800511CC; // type:function size:0x58
fn_80051224 = .text:0x80051224; // type:function size:0x100
fn_80051324 = .text:0x80051324; // type:function size:0x2FC
fn_80051620 = .text:0x80051620; // type:function size:0xD8
fn_800516F8 = .text:0x800516F8; // type:function size:0xD8
fn_800517D0 = .text:0x800517D0; // type:function size:0x3C
fn_8005180C = .text:0x8005180C; // type:function size:0xE4
fn_800518F0 = .text:0x800518F0; // type:function size:0x5C
fn_8005194C = .text:0x8005194C; // type:function size:0x18
fn_80051964 = .text:0x80051964; // type:function size:0x78
fn_800519DC = .text:0x800519DC; // type:function size:0xEC
fn_80051AC8 = .text:0x80051AC8; // type:function size:0x28
fn_80051AF0 = .text:0x80051AF0; // type:function size:0x28
fn_80051B18 = .text:0x80051B18; // type:function size:0x28
fn_80051B40 = .text:0x80051B40; // type:function size:0x28
fn_80051B68 = .text:0x80051B68; // type:function size:0x28
fn_80051B90 = .text:0x80051B90; // type:function size:0x28
fn_80051BB8 = .text:0x80051BB8; // type:function size:0x28
fn_80051BE0 = .text:0x80051BE0; // type:function size:0x4
fn_80051BE4 = .text:0x80051BE4; // type:function size:0x104
fn_80051CE8 = .text:0x80051CE8; // type:function size:0x168
fn_80051E50 = .text:0x80051E50; // type:function size:0x194
fn_80051FE4 = .text:0x80051FE4; // type:function size:0x78
fn_8005205C = .text:0x8005205C; // type:function size:0xA0
fn_800520FC = .text:0x800520FC; // type:function size:0xC4
fn_800521C0 = .text:0x800521C0; // type:function size:0x78
fn_80052238 = .text:0x80052238; // type:function size:0x34
fn_8005226C = .text:0x8005226C; // type:function size:0x94
fn_80052300 = .text:0x80052300; // type:function size:0x44
fn_80052344 = .text:0x80052344; // type:function size:0x108
fn_8005244C = .text:0x8005244C; // type:function size:0x24
fn_80052470 = .text:0x80052470; // type:function size:0x38
fn_800524A8 = .text:0x800524A8; // type:function size:0x28
fn_800524D0 = .text:0x800524D0; // type:function size:0xD0
fn_800525A0 = .text:0x800525A0; // type:function size:0x4
fn_800525A4 = .text:0x800525A4; // type:function size:0xC
fn_800525B0 = .text:0x800525B0; // type:function size:0x14
fn_800525C4 = .text:0x800525C4; // type:function size:0x4C
fn_80052610 = .text:0x80052610; // type:function size:0x20
fn_80052630 = .text:0x80052630; // type:function size:0x94
fn_800526C4 = .text:0x800526C4; // type:function size:0x44
fn_80052708 = .text:0x80052708; // type:function size:0x4
fn_8005270C = .text:0x8005270C; // type:function size:0x10
fn_8005271C = .text:0x8005271C; // type:function size:0xC
fn_80052728 = .text:0x80052728; // type:function size:0x14
fn_8005273C = .text:0x8005273C; // type:function size:0x20
fn_8005275C = .text:0x8005275C; // type:function size:0xB4
fn_80052810 = .text:0x80052810; // type:function size:0x44
fn_80052854 = .text:0x80052854; // type:function size:0x4
fn_80052858 = .text:0x80052858; // type:function size:0x10
fn_80052868 = .text:0x80052868; // type:function size:0xC
fn_80052874 = .text:0x80052874; // type:function size:0x14
fn_80052888 = .text:0x80052888; // type:function size:0x54
fn_800528DC = .text:0x800528DC; // type:function size:0xB4
fn_80052990 = .text:0x80052990; // type:function size:0x40
fn_800529D0 = .text:0x800529D0; // type:function size:0x4C
fn_80052A1C = .text:0x80052A1C; // type:function size:0x58
fn_80052A74 = .text:0x80052A74; // type:function size:0xB8
fn_80052B2C = .text:0x80052B2C; // type:function size:0x40
fn_80052B6C = .text:0x80052B6C; // type:function size:0x4C
fn_80052BB8 = .text:0x80052BB8; // type:function size:0x128
fn_80052CE0 = .text:0x80052CE0; // type:function size:0x274
fn_80052F54 = .text:0x80052F54; // type:function size:0x11C
fn_80053070 = .text:0x80053070; // type:function size:0x248
fn_800532B8 = .text:0x800532B8; // type:function size:0x4EC
fn_800537A4 = .text:0x800537A4; // type:function size:0xF0
fn_80053894 = .text:0x80053894; // type:function size:0xF0
fn_80053984 = .text:0x80053984; // type:function size:0x138
fn_80053ABC = .text:0x80053ABC; // type:function size:0xC
fn_80053AC8 = .text:0x80053AC8; // type:function size:0x14
fn_80053ADC = .text:0x80053ADC; // type:function size:0x10
fn_80053AEC = .text:0x80053AEC; // type:function size:0x4
fn_80053AF0 = .text:0x80053AF0; // type:function size:0x534
fn_80054024 = .text:0x80054024; // type:function size:0x5C0
fn_800545E4 = .text:0x800545E4; // type:function size:0x4
fn_800545E8 = .text:0x800545E8; // type:function size:0x10
fn_800545F8 = .text:0x800545F8; // type:function size:0xC
fn_80054604 = .text:0x80054604; // type:function size:0x14
fn_80054618 = .text:0x80054618; // type:function size:0x28
fn_80054640 = .text:0x80054640; // type:function size:0x28
fn_80054668 = .text:0x80054668; // type:function size:0x60
fn_800546C8 = .text:0x800546C8; // type:function size:0xDC
fn_800547A4 = .text:0x800547A4; // type:function size:0x60
fn_80054804 = .text:0x80054804; // type:function size:0x4B4
fn_80054CB8 = .text:0x80054CB8; // type:function size:0x3AC
fn_80055064 = .text:0x80055064; // type:function size:0x8C
fn_800550F0 = .text:0x800550F0; // type:function size:0x38
fn_80055128 = .text:0x80055128; // type:function size:0x98
fn_800551C0 = .text:0x800551C0; // type:function size:0x4
fn_800551C4 = .text:0x800551C4; // type:function size:0x8C
fn_80055250 = .text:0x80055250; // type:function size:0xB4
fn_80055304 = .text:0x80055304; // type:function size:0x8C
fn_80055390 = .text:0x80055390; // type:function size:0xC8
fn_80055458 = .text:0x80055458; // type:function size:0x4
fn_8005545C = .text:0x8005545C; // type:function size:0xA4
fn_80055500 = .text:0x80055500; // type:function size:0xB0
fn_800555B0 = .text:0x800555B0; // type:function size:0x4C
fn_800555FC = .text:0x800555FC; // type:function size:0xC4
fn_800556C0 = .text:0x800556C0; // type:function size:0x4
fn_800556C4 = .text:0x800556C4; // type:function size:0xA0
fn_80055764 = .text:0x80055764; // type:function size:0xD8
fn_8005583C = .text:0x8005583C; // type:function size:0xA0
fn_800558DC = .text:0x800558DC; // type:function size:0xE8
fn_800559C4 = .text:0x800559C4; // type:function size:0x4
fn_800559C8 = .text:0x800559C8; // type:function size:0xA0
fn_80055A68 = .text:0x80055A68; // type:function size:0x1FC
fn_80055C64 = .text:0x80055C64; // type:function size:0x4
fn_80055C68 = .text:0x80055C68; // type:function size:0x54
fn_80055CBC = .text:0x80055CBC; // type:function size:0xA8
fn_80055D64 = .text:0x80055D64; // type:function size:0x70
fn_80055DD4 = .text:0x80055DD4; // type:function size:0xC8
fn_80055E9C = .text:0x80055E9C; // type:function size:0x8
fn_80055EA4 = .text:0x80055EA4; // type:function size:0x84
fn_80055F28 = .text:0x80055F28; // type:function size:0x88
fn_80055FB0 = .text:0x80055FB0; // type:function size:0x1CC
fn_8005617C = .text:0x8005617C; // type:function size:0x4
fn_80056180 = .text:0x80056180; // type:function size:0x54
fn_800561D4 = .text:0x800561D4; // type:function size:0x4B4
fn_80056688 = .text:0x80056688; // type:function size:0x458
fn_80056AE0 = .text:0x80056AE0; // type:function size:0x4C
fn_80056B2C = .text:0x80056B2C; // type:function size:0x74
fn_80056BA0 = .text:0x80056BA0; // type:function size:0x5C
fn_80056BFC = .text:0x80056BFC; // type:function size:0x5C
fn_80056C58 = .text:0x80056C58; // type:function size:0x38
fn_80056C90 = .text:0x80056C90; // type:function size:0x34
fn_80056CC4 = .text:0x80056CC4; // type:function size:0xA0
fn_80056D64 = .text:0x80056D64; // type:function size:0x48
fn_80056DAC = .text:0x80056DAC; // type:function size:0x9C
fn_80056E48 = .text:0x80056E48; // type:function size:0x64
fn_80056EAC = .text:0x80056EAC; // type:function size:0x6C
fn_80056F18 = .text:0x80056F18; // type:function size:0x144
fn_8005705C = .text:0x8005705C; // type:function size:0x4
fn_80057060 = .text:0x80057060; // type:function size:0x28
fn_80057088 = .text:0x80057088; // type:function size:0x10
fn_80057098 = .text:0x80057098; // type:function size:0x10
fn_800570A8 = .text:0x800570A8; // type:function size:0x10
fn_800570B8 = .text:0x800570B8; // type:function size:0x10
fn_800570C8 = .text:0x800570C8; // type:function size:0x30
fn_800570F8 = .text:0x800570F8; // type:function size:0x8
fn_80057100 = .text:0x80057100; // type:function size:0x34
fn_80057134 = .text:0x80057134; // type:function size:0x10
fn_80057144 = .text:0x80057144; // type:function size:0xA4
fn_800571E8 = .text:0x800571E8; // type:function size:0x2C
fn_80057214 = .text:0x80057214; // type:function size:0x84
fn_80057298 = .text:0x80057298; // type:function size:0x40
fn_800572D8 = .text:0x800572D8; // type:function size:0x8
fn_800572E0 = .text:0x800572E0; // type:function size:0x98
fn_80057378 = .text:0x80057378; // type:function size:0x28
fn_800573A0 = .text:0x800573A0; // type:function size:0x28
fn_800573C8 = .text:0x800573C8; // type:function size:0xC
fn_800573D4 = .text:0x800573D4; // type:function size:0x114
fn_800574E8 = .text:0x800574E8; // type:function size:0x50
fn_80057538 = .text:0x80057538; // type:function size:0x198
fn_800576D0 = .text:0x800576D0; // type:function size:0x128
fn_800577F8 = .text:0x800577F8; // type:function size:0x18
fn_80057810 = .text:0x80057810; // type:function size:0xE4
fn_800578F4 = .text:0x800578F4; // type:function size:0x100
fn_800579F4 = .text:0x800579F4; // type:function size:0x4C
fn_80057A40 = .text:0x80057A40; // type:function size:0x4C
fn_80057A8C = .text:0x80057A8C; // type:function size:0xB4
fn_80057B40 = .text:0x80057B40; // type:function size:0x158
fn_80057C98 = .text:0x80057C98; // type:function size:0x184
fn_80057E1C = .text:0x80057E1C; // type:function size:0x49C
fn_800582B8 = .text:0x800582B8; // type:function size:0x114
fn_800583CC = .text:0x800583CC; // type:function size:0x118
fn_800584E4 = .text:0x800584E4; // type:function size:0x4
fn_800584E8 = .text:0x800584E8; // type:function size:0x68
fn_80058550 = .text:0x80058550; // type:function size:0x64
fn_800585B4 = .text:0x800585B4; // type:function size:0x40
fn_800585F4 = .text:0x800585F4; // type:function size:0x28
fn_8005861C = .text:0x8005861C; // type:function size:0xD4
fn_800586F0 = .text:0x800586F0; // type:function size:0x4
fn_800586F4 = .text:0x800586F4; // type:function size:0x14
fn_80058708 = .text:0x80058708; // type:function size:0x14
fn_8005871C = .text:0x8005871C; // type:function size:0xD4
fn_800587F0 = .text:0x800587F0; // type:function size:0x4
fn_800587F4 = .text:0x800587F4; // type:function size:0x14
fn_80058808 = .text:0x80058808; // type:function size:0x14
fn_8005881C = .text:0x8005881C; // type:function size:0xCC
fn_800588E8 = .text:0x800588E8; // type:function size:0x4
fn_800588EC = .text:0x800588EC; // type:function size:0xC
fn_800588F8 = .text:0x800588F8; // type:function size:0x14
fn_8005890C = .text:0x8005890C; // type:function size:0x118
fn_80058A24 = .text:0x80058A24; // type:function size:0x4
fn_80058A28 = .text:0x80058A28; // type:function size:0x18
fn_80058A40 = .text:0x80058A40; // type:function size:0x14
fn_80058A54 = .text:0x80058A54; // type:function size:0x14
fn_80058A68 = .text:0x80058A68; // type:function size:0xD4
fn_80058B3C = .text:0x80058B3C; // type:function size:0x4
fn_80058B40 = .text:0x80058B40; // type:function size:0x14
fn_80058B54 = .text:0x80058B54; // type:function size:0x14
fn_80058B68 = .text:0x80058B68; // type:function size:0x11C
fn_80058C84 = .text:0x80058C84; // type:function size:0x260
fn_80058EE4 = .text:0x80058EE4; // type:function size:0x4
fn_80058EE8 = .text:0x80058EE8; // type:function size:0x18
fn_80058F00 = .text:0x80058F00; // type:function size:0xC
fn_80058F0C = .text:0x80058F0C; // type:function size:0x14
fn_80058F20 = .text:0x80058F20; // type:function size:0xC0
fn_80058FE0 = .text:0x80058FE0; // type:function size:0x120
fn_80059100 = .text:0x80059100; // type:function size:0x7C
fn_8005917C = .text:0x8005917C; // type:function size:0x280
fn_800593FC = .text:0x800593FC; // type:function size:0x80
fn_8005947C = .text:0x8005947C; // type:function size:0x4C
fn_800594C8 = .text:0x800594C8; // type:function size:0x98
DBClose = .text:0x80059560; // type:function size:0x4 scope:global
DBOpen = .text:0x80059564; // type:function size:0x4 scope:global
DBWrite = .text:0x80059568; // type:function size:0x260 scope:global
DBRead = .text:0x800597C8; // type:function size:0x8C scope:global
DBQueryData = .text:0x80059854; // type:function size:0x9C scope:global
DBInitInterrupts = .text:0x800598F0; // type:function size:0x54 scope:global
DBInitComm = .text:0x80059944; // type:function size:0x78 scope:global
fn_800599BC = .text:0x800599BC; // type:function size:0x40
fn_800599FC = .text:0x800599FC; // type:function size:0x3C
fn_80059A38 = .text:0x80059A38; // type:function size:0xAC
fn_80059AE4 = .text:0x80059AE4; // type:function size:0xDC
fn_80059BC0 = .text:0x80059BC0; // type:function size:0xDC
fn_80059C9C = .text:0x80059C9C; // type:function size:0xAC
fn_80059D48 = .text:0x80059D48; // type:function size:0x298
fn_80059FE0 = .text:0x80059FE0; // type:function size:0x90
fn_8005A070 = .text:0x8005A070; // type:function size:0x13C
fn_8005A1AC = .text:0x8005A1AC; // type:function size:0x24
fn_8005A1D0 = .text:0x8005A1D0; // type:function size:0x24
fn_8005A1F4 = .text:0x8005A1F4; // type:function size:0x2C
fn_8005A220 = .text:0x8005A220; // type:function size:0x24
fn_8005A244 = .text:0x8005A244; // type:function size:0x24
fn_8005A268 = .text:0x8005A268; // type:function size:0x24
fn_8005A28C = .text:0x8005A28C; // type:function size:0x24
fn_8005A2B0 = .text:0x8005A2B0; // type:function size:0x24
fn_8005A2D4 = .text:0x8005A2D4; // type:function size:0x8
fn_8005A2DC = .text:0x8005A2DC; // type:function size:0x24
fn_8005A300 = .text:0x8005A300; // type:function size:0x24
fn_8005A324 = .text:0x8005A324; // type:function size:0x24
fn_8005A348 = .text:0x8005A348; // type:function size:0x24
fn_8005A36C = .text:0x8005A36C; // type:function size:0x24
fn_8005A390 = .text:0x8005A390; // type:function size:0x24
fn_8005A3B4 = .text:0x8005A3B4; // type:function size:0x24
fn_8005A3D8 = .text:0x8005A3D8; // type:function size:0x24
fn_8005A3FC = .text:0x8005A3FC; // type:function size:0x24
fn_8005A420 = .text:0x8005A420; // type:function size:0x24
fn_8005A444 = .text:0x8005A444; // type:function size:0x24
fn_8005A468 = .text:0x8005A468; // type:function size:0x8
fn_8005A470 = .text:0x8005A470; // type:function size:0x8
fn_8005A478 = .text:0x8005A478; // type:function size:0x8
fn_8005A480 = .text:0x8005A480; // type:function size:0xC
fn_8005A48C = .text:0x8005A48C; // type:function size:0x8
fn_8005A494 = .text:0x8005A494; // type:function size:0x8
fn_8005A49C = .text:0x8005A49C; // type:function size:0x280
fn_8005A71C = .text:0x8005A71C; // type:function size:0x258
fn_8005A974 = .text:0x8005A974; // type:function size:0x234
fn_8005ABA8 = .text:0x8005ABA8; // type:function size:0xF8
fn_8005ACA0 = .text:0x8005ACA0; // type:function size:0x1F4
fn_8005AE94 = .text:0x8005AE94; // type:function size:0x38
fn_8005AECC = .text:0x8005AECC; // type:function size:0x40
fn_8005AF0C = .text:0x8005AF0C; // type:function size:0x24
fn_8005AF30 = .text:0x8005AF30; // type:function size:0x4C
fn_8005AF7C = .text:0x8005AF7C; // type:function size:0x4C
fn_8005AFC8 = .text:0x8005AFC8; // type:function size:0xC
fn_8005AFD4 = .text:0x8005AFD4; // type:function size:0x54
fn_8005B028 = .text:0x8005B028; // type:function size:0x290
fn_8005B2B8 = .text:0x8005B2B8; // type:function size:0x30
fn_8005B2E8 = .text:0x8005B2E8; // type:function size:0x34
fn_8005B31C = .text:0x8005B31C; // type:function size:0x4C
fn_8005B368 = .text:0x8005B368; // type:function size:0x68
fn_8005B3D0 = .text:0x8005B3D0; // type:function size:0x3B0
fn_8005B780 = .text:0x8005B780; // type:function size:0x3A4
fn_8005BB24 = .text:0x8005BB24; // type:function size:0x32C
fn_8005BE50 = .text:0x8005BE50; // type:function size:0xEC
fn_8005BF3C = .text:0x8005BF3C; // type:function size:0x268
fn_8005C1A4 = .text:0x8005C1A4; // type:function size:0x2C
fn_8005C1D0 = .text:0x8005C1D0; // type:function size:0x24
fn_8005C1F4 = .text:0x8005C1F4; // type:function size:0x38
fn_8005C22C = .text:0x8005C22C; // type:function size:0x34
fn_8005C260 = .text:0x8005C260; // type:function size:0x338
fn_8005C598 = .text:0x8005C598; // type:function size:0x3B0
fn_8005C948 = .text:0x8005C948; // type:function size:0x184
fn_8005CACC = .text:0x8005CACC; // type:function size:0x68
fn_8005CB34 = .text:0x8005CB34; // type:function size:0x270
fn_8005CDA4 = .text:0x8005CDA4; // type:function size:0x44
fn_8005CDE8 = .text:0x8005CDE8; // type:function size:0x3C4
fn_8005D1AC = .text:0x8005D1AC; // type:function size:0x338
fn_8005D4E4 = .text:0x8005D4E4; // type:function size:0x3B0
fn_8005D894 = .text:0x8005D894; // type:function size:0x178
fn_8005DA0C = .text:0x8005DA0C; // type:function size:0x68
fn_8005DA74 = .text:0x8005DA74; // type:function size:0x208
fn_8005DC7C = .text:0x8005DC7C; // type:function size:0x8C
fn_8005DD08 = .text:0x8005DD08; // type:function size:0x404
fn_8005E10C = .text:0x8005E10C; // type:function size:0x8
fn_8005E114 = .text:0x8005E114; // type:function size:0x8
fn_8005E11C = .text:0x8005E11C; // type:function size:0x48
fn_8005E164 = .text:0x8005E164; // type:function size:0x38
fn_8005E19C = .text:0x8005E19C; // type:function size:0x18
fn_8005E1B4 = .text:0x8005E1B4; // type:function size:0x70
fn_8005E224 = .text:0x8005E224; // type:function size:0x8
fn_8005E22C = .text:0x8005E22C; // type:function size:0x4C
fn_8005E278 = .text:0x8005E278; // type:function size:0x4C
fn_8005E2C4 = .text:0x8005E2C4; // type:function size:0x8
fn_8005E2CC = .text:0x8005E2CC; // type:function size:0x8
fn_8005E2D4 = .text:0x8005E2D4; // type:function size:0x8
fn_8005E2DC = .text:0x8005E2DC; // type:function size:0x8
fn_8005E2E4 = .text:0x8005E2E4; // type:function size:0x8
fn_8005E2EC = .text:0x8005E2EC; // type:function size:0x8
fn_8005E2F4 = .text:0x8005E2F4; // type:function size:0x8
fn_8005E2FC = .text:0x8005E2FC; // type:function size:0x6C
fn_8005E368 = .text:0x8005E368; // type:function size:0xC
fn_8005E374 = .text:0x8005E374; // type:function size:0x8
fn_8005E37C = .text:0x8005E37C; // type:function size:0x8
fn_8005E384 = .text:0x8005E384; // type:function size:0x8
fn_8005E38C = .text:0x8005E38C; // type:function size:0xC
fn_8005E398 = .text:0x8005E398; // type:function size:0x10C
fn_8005E4A4 = .text:0x8005E4A4; // type:function size:0x680
fn_8005EB24 = .text:0x8005EB24; // type:function size:0x4C
fn_8005EB70 = .text:0x8005EB70; // type:function size:0x198
fn_8005ED08 = .text:0x8005ED08; // type:function size:0x1C
fn_8005ED24 = .text:0x8005ED24; // type:function size:0x30
fn_8005ED54 = .text:0x8005ED54; // type:function size:0x48
fn_8005ED9C = .text:0x8005ED9C; // type:function size:0x34
fn_8005EDD0 = .text:0x8005EDD0; // type:function size:0x2D8
fn_8005F0A8 = .text:0x8005F0A8; // type:function size:0xEC
fn_8005F194 = .text:0x8005F194; // type:function size:0x124
fn_8005F2B8 = .text:0x8005F2B8; // type:function size:0x8
fn_8005F2C0 = .text:0x8005F2C0; // type:function size:0xC
fn_8005F2CC = .text:0x8005F2CC; // type:function size:0x1B8
fn_8005F484 = .text:0x8005F484; // type:function size:0x44
fn_8005F4C8 = .text:0x8005F4C8; // type:function size:0x38
fn_8005F500 = .text:0x8005F500; // type:function size:0x44
fn_8005F544 = .text:0x8005F544; // type:function size:0x10
fn_8005F554 = .text:0x8005F554; // type:function size:0x9C
fn_8005F5F0 = .text:0x8005F5F0; // type:function size:0x38
fn_8005F628 = .text:0x8005F628; // type:function size:0x11C
fn_8005F744 = .text:0x8005F744; // type:function size:0xD0
fn_8005F814 = .text:0x8005F814; // type:function size:0x50
fn_8005F864 = .text:0x8005F864; // type:function size:0x48
fn_8005F8AC = .text:0x8005F8AC; // type:function size:0xF0
fn_8005F99C = .text:0x8005F99C; // type:function size:0x7C
fn_8005FA18 = .text:0x8005FA18; // type:function size:0x1E8
fn_8005FC00 = .text:0x8005FC00; // type:function size:0x4DC
fn_800600DC = .text:0x800600DC; // type:function size:0x80
fn_8006015C = .text:0x8006015C; // type:function size:0x64
fn_800601C0 = .text:0x800601C0; // type:function size:0x30
fn_800601F0 = .text:0x800601F0; // type:function size:0x48
fn_80060238 = .text:0x80060238; // type:function size:0x48
fn_80060280 = .text:0x80060280; // type:function size:0x8C
fn_8006030C = .text:0x8006030C; // type:function size:0x1A8
fn_800604B4 = .text:0x800604B4; // type:function size:0x18
fn_800604CC = .text:0x800604CC; // type:function size:0x18
fn_800604E4 = .text:0x800604E4; // type:function size:0x5C
fn_80060540 = .text:0x80060540; // type:function size:0x190
fn_800606D0 = .text:0x800606D0; // type:function size:0x8C
fn_8006075C = .text:0x8006075C; // type:function size:0x1C
fn_80060778 = .text:0x80060778; // type:function size:0xC
fn_80060784 = .text:0x80060784; // type:function size:0x100
fn_80060884 = .text:0x80060884; // type:function size:0x8C
fn_80060910 = .text:0x80060910; // type:function size:0x600
fn_80060F10 = .text:0x80060F10; // type:function size:0x44
fn_80060F54 = .text:0x80060F54; // type:function size:0x44
fn_80060F98 = .text:0x80060F98; // type:function size:0xF0C
fn_80061EA4 = .text:0x80061EA4; // type:function size:0x230
fn_800620D4 = .text:0x800620D4; // type:function size:0x29C
fn_80062370 = .text:0x80062370; // type:function size:0x240
fn_800625B0 = .text:0x800625B0; // type:function size:0x234
fn_800627E4 = .text:0x800627E4; // type:function size:0x4C8
fn_80062CAC = .text:0x80062CAC; // type:function size:0xC
fn_80062CB8 = .text:0x80062CB8; // type:function size:0x90
fn_80062D48 = .text:0x80062D48; // type:function size:0x8
fn_80062D50 = .text:0x80062D50; // type:function size:0x8
fn_80062D58 = .text:0x80062D58; // type:function size:0xC
fn_80062D64 = .text:0x80062D64; // type:function size:0x10
fn_80062D74 = .text:0x80062D74; // type:function size:0x18
fn_80062D8C = .text:0x80062D8C; // type:function size:0x7C
fn_80062E08 = .text:0x80062E08; // type:function size:0x218
fn_80063020 = .text:0x80063020; // type:function size:0x3CC
fn_800633EC = .text:0x800633EC; // type:function size:0x48
fn_80063434 = .text:0x80063434; // type:function size:0xC
fn_80063440 = .text:0x80063440; // type:function size:0xF4
fn_80063534 = .text:0x80063534; // type:function size:0x70
fn_800635A4 = .text:0x800635A4; // type:function size:0x50
fn_800635F4 = .text:0x800635F4; // type:function size:0x58
fn_8006364C = .text:0x8006364C; // type:function size:0x1C
fn_80063668 = .text:0x80063668; // type:function size:0x50
fn_800636B8 = .text:0x800636B8; // type:function size:0xC
fn_800636C4 = .text:0x800636C4; // type:function size:0x1C4
fn_80063888 = .text:0x80063888; // type:function size:0x94
fn_8006391C = .text:0x8006391C; // type:function size:0xBC
fn_800639D8 = .text:0x800639D8; // type:function size:0x5C
fn_80063A34 = .text:0x80063A34; // type:function size:0x294
fn_80063CC8 = .text:0x80063CC8; // type:function size:0x2BC
fn_80063F84 = .text:0x80063F84; // type:function size:0x4
fn_80063F88 = .text:0x80063F88; // type:function size:0x34
fn_80063FBC = .text:0x80063FBC; // type:function size:0x180
fn_8006413C = .text:0x8006413C; // type:function size:0x30
fn_8006416C = .text:0x8006416C; // type:function size:0x94
fn_80064200 = .text:0x80064200; // type:function size:0x8
fn_80064208 = .text:0x80064208; // type:function size:0x164
fn_8006436C = .text:0x8006436C; // type:function size:0x20
fn_8006438C = .text:0x8006438C; // type:function size:0x4
fn_80064390 = .text:0x80064390; // type:function size:0x4
fn_80064394 = .text:0x80064394; // type:function size:0x150
fn_800644E4 = .text:0x800644E4; // type:function size:0x48
fn_8006452C = .text:0x8006452C; // type:function size:0x3C
fn_80064568 = .text:0x80064568; // type:function size:0xBC
fn_80064624 = .text:0x80064624; // type:function size:0x8
fn_8006462C = .text:0x8006462C; // type:function size:0x38
fn_80064664 = .text:0x80064664; // type:function size:0x38
fn_8006469C = .text:0x8006469C; // type:function size:0x3C
fn_800646D8 = .text:0x800646D8; // type:function size:0x40
fn_80064718 = .text:0x80064718; // type:function size:0x44
fn_8006475C = .text:0x8006475C; // type:function size:0x68
fn_800647C4 = .text:0x800647C4; // type:function size:0x58
fn_8006481C = .text:0x8006481C; // type:function size:0x58
fn_80064874 = .text:0x80064874; // type:function size:0x58
fn_800648CC = .text:0x800648CC; // type:function size:0x4F4
fn_80064DC0 = .text:0x80064DC0; // type:function size:0x40
fn_80064E00 = .text:0x80064E00; // type:function size:0x120
fn_80064F20 = .text:0x80064F20; // type:function size:0x210
fn_80065130 = .text:0x80065130; // type:function size:0x148
fn_80065278 = .text:0x80065278; // type:function size:0x284
fn_800654FC = .text:0x800654FC; // type:function size:0x418
fn_80065914 = .text:0x80065914; // type:function size:0x94
fn_800659A8 = .text:0x800659A8; // type:function size:0xF8
fn_80065AA0 = .text:0x80065AA0; // type:function size:0x308
fn_80065DA8 = .text:0x80065DA8; // type:function size:0x434
fn_800661DC = .text:0x800661DC; // type:function size:0x2E0
fn_800664BC = .text:0x800664BC; // type:function size:0x78
fn_80066534 = .text:0x80066534; // type:function size:0x180
fn_800666B4 = .text:0x800666B4; // type:function size:0xA8
fn_8006675C = .text:0x8006675C; // type:function size:0xF8
fn_80066854 = .text:0x80066854; // type:function size:0x8
fn_8006685C = .text:0x8006685C; // type:function size:0x18
fn_80066874 = .text:0x80066874; // type:function size:0x34
fn_800668A8 = .text:0x800668A8; // type:function size:0x20
fn_800668C8 = .text:0x800668C8; // type:function size:0x34
fn_800668FC = .text:0x800668FC; // type:function size:0x38
fn_80066934 = .text:0x80066934; // type:function size:0x8
fn_8006693C = .text:0x8006693C; // type:function size:0x38
fn_80066974 = .text:0x80066974; // type:function size:0x1C
fn_80066990 = .text:0x80066990; // type:function size:0x10
fn_800669A0 = .text:0x800669A0; // type:function size:0x24
fn_800669C4 = .text:0x800669C4; // type:function size:0x24
fn_800669E8 = .text:0x800669E8; // type:function size:0x30
fn_80066A18 = .text:0x80066A18; // type:function size:0x158
fn_80066B70 = .text:0x80066B70; // type:function size:0x30
fn_80066BA0 = .text:0x80066BA0; // type:function size:0x1C
fn_80066BBC = .text:0x80066BBC; // type:function size:0x218
fn_80066DD4 = .text:0x80066DD4; // type:function size:0x20
fn_80066DF4 = .text:0x80066DF4; // type:function size:0xCC
fn_80066EC0 = .text:0x80066EC0; // type:function size:0x58
fn_80066F18 = .text:0x80066F18; // type:function size:0xB0
fn_80066FC8 = .text:0x80066FC8; // type:function size:0x30
fn_80066FF8 = .text:0x80066FF8; // type:function size:0xBC
fn_800670B4 = .text:0x800670B4; // type:function size:0x64
fn_80067118 = .text:0x80067118; // type:function size:0xB4
fn_800671CC = .text:0x800671CC; // type:function size:0x20
fn_800671EC = .text:0x800671EC; // type:function size:0x20
fn_8006720C = .text:0x8006720C; // type:function size:0x20
fn_8006722C = .text:0x8006722C; // type:function size:0x20
fn_8006724C = .text:0x8006724C; // type:function size:0xC0
fn_8006730C = .text:0x8006730C; // type:function size:0x24
fn_80067330 = .text:0x80067330; // type:function size:0x24
fn_80067354 = .text:0x80067354; // type:function size:0x20
fn_80067374 = .text:0x80067374; // type:function size:0x24
fn_80067398 = .text:0x80067398; // type:function size:0x4
fn_8006739C = .text:0x8006739C; // type:function size:0x20
fn_800673BC = .text:0x800673BC; // type:function size:0x20
fn_800673DC = .text:0x800673DC; // type:function size:0x20
fn_800673FC = .text:0x800673FC; // type:function size:0x20
fn_8006741C = .text:0x8006741C; // type:function size:0x20
fn_8006743C = .text:0x8006743C; // type:function size:0x20
fn_8006745C = .text:0x8006745C; // type:function size:0x20
fn_8006747C = .text:0x8006747C; // type:function size:0x20
fn_8006749C = .text:0x8006749C; // type:function size:0x20
fn_800674BC = .text:0x800674BC; // type:function size:0x20
fn_800674DC = .text:0x800674DC; // type:function size:0x20
fn_800674FC = .text:0x800674FC; // type:function size:0x44
fn_80067540 = .text:0x80067540; // type:function size:0x20
fn_80067560 = .text:0x80067560; // type:function size:0x20
fn_80067580 = .text:0x80067580; // type:function size:0x20
fn_800675A0 = .text:0x800675A0; // type:function size:0x20
fn_800675C0 = .text:0x800675C0; // type:function size:0x64
fn_80067624 = .text:0x80067624; // type:function size:0x260
fn_80067884 = .text:0x80067884; // type:function size:0x2F0
fn_80067B74 = .text:0x80067B74; // type:function size:0x154
fn_80067CC8 = .text:0x80067CC8; // type:function size:0x38
fn_80067D00 = .text:0x80067D00; // type:function size:0xFC
fn_80067DFC = .text:0x80067DFC; // type:function size:0x38
fn_80067E34 = .text:0x80067E34; // type:function size:0x38
fn_80067E6C = .text:0x80067E6C; // type:function size:0x24
fn_80067E90 = .text:0x80067E90; // type:function size:0x38
fn_80067EC8 = .text:0x80067EC8; // type:function size:0x9C
fn_80067F64 = .text:0x80067F64; // type:function size:0xAC
fn_80068010 = .text:0x80068010; // type:function size:0x20
fn_80068030 = .text:0x80068030; // type:function size:0x290
fn_800682C0 = .text:0x800682C0; // type:function size:0x190
fn_80068450 = .text:0x80068450; // type:function size:0x2C4
fn_80068714 = .text:0x80068714; // type:function size:0x5C
fn_80068770 = .text:0x80068770; // type:function size:0x2C0
fn_80068A30 = .text:0x80068A30; // type:function size:0x29C
fn_80068CCC = .text:0x80068CCC; // type:function size:0x278
fn_80068F44 = .text:0x80068F44; // type:function size:0x3D0
fn_80069314 = .text:0x80069314; // type:function size:0x20
fn_80069334 = .text:0x80069334; // type:function size:0x230
fn_80069564 = .text:0x80069564; // type:function size:0x54
fn_800695B8 = .text:0x800695B8; // type:function size:0x250
fn_80069808 = .text:0x80069808; // type:function size:0x50
fn_80069858 = .text:0x80069858; // type:function size:0xD4
fn_8006992C = .text:0x8006992C; // type:function size:0x34
fn_80069960 = .text:0x80069960; // type:function size:0xC0
fn_80069A20 = .text:0x80069A20; // type:function size:0x68
fn_80069A88 = .text:0x80069A88; // type:function size:0xC0
fn_80069B48 = .text:0x80069B48; // type:function size:0xC0
fn_80069C08 = .text:0x80069C08; // type:function size:0xC0
fn_80069CC8 = .text:0x80069CC8; // type:function size:0xBC
fn_80069D84 = .text:0x80069D84; // type:function size:0x664
fn_8006A3E8 = .text:0x8006A3E8; // type:function size:0x134
fn_8006A51C = .text:0x8006A51C; // type:function size:0x27C
fn_8006A798 = .text:0x8006A798; // type:function size:0x40
fn_8006A7D8 = .text:0x8006A7D8; // type:function size:0x4
fn_8006A7DC = .text:0x8006A7DC; // type:function size:0x60
fn_8006A83C = .text:0x8006A83C; // type:function size:0xE4
fn_8006A920 = .text:0x8006A920; // type:function size:0x60
fn_8006A980 = .text:0x8006A980; // type:function size:0x64
fn_8006A9E4 = .text:0x8006A9E4; // type:function size:0x1A0
fn_8006AB84 = .text:0x8006AB84; // type:function size:0x428
fn_8006AFAC = .text:0x8006AFAC; // type:function size:0x60
fn_8006B00C = .text:0x8006B00C; // type:function size:0xCC
fn_8006B0D8 = .text:0x8006B0D8; // type:function size:0x1C4
fn_8006B29C = .text:0x8006B29C; // type:function size:0x210
fn_8006B4AC = .text:0x8006B4AC; // type:function size:0x164
fn_8006B610 = .text:0x8006B610; // type:function size:0x14
fn_8006B624 = .text:0x8006B624; // type:function size:0x178
fn_8006B79C = .text:0x8006B79C; // type:function size:0x6C
fn_8006B808 = .text:0x8006B808; // type:function size:0xC
fn_8006B814 = .text:0x8006B814; // type:function size:0xC0
fn_8006B8D4 = .text:0x8006B8D4; // type:function size:0x34
fn_8006B908 = .text:0x8006B908; // type:function size:0x20
fn_8006B928 = .text:0x8006B928; // type:function size:0x20
fn_8006B948 = .text:0x8006B948; // type:function size:0x3C
fn_8006B984 = .text:0x8006B984; // type:function size:0x40
fn_8006B9C4 = .text:0x8006B9C4; // type:function size:0x40
fn_8006BA04 = .text:0x8006BA04; // type:function size:0x64
fn_8006BA68 = .text:0x8006BA68; // type:function size:0x100
fn_8006BB68 = .text:0x8006BB68; // type:function size:0x100
fn_8006BC68 = .text:0x8006BC68; // type:function size:0x100
fn_8006BD68 = .text:0x8006BD68; // type:function size:0x90
fn_8006BDF8 = .text:0x8006BDF8; // type:function size:0x40
fn_8006BE38 = .text:0x8006BE38; // type:function size:0x44
fn_8006BE7C = .text:0x8006BE7C; // type:function size:0x6C
fn_8006BEE8 = .text:0x8006BEE8; // type:function size:0xBC
fn_8006BFA4 = .text:0x8006BFA4; // type:function size:0x110
fn_8006C0B4 = .text:0x8006C0B4; // type:function size:0x240
fn_8006C2F4 = .text:0x8006C2F4; // type:function size:0x30
fn_8006C324 = .text:0x8006C324; // type:function size:0x8
fn_8006C32C = .text:0x8006C32C; // type:function size:0xD8
fn_8006C404 = .text:0x8006C404; // type:function size:0x18C
fn_8006C590 = .text:0x8006C590; // type:function size:0xA4
fn_8006C634 = .text:0x8006C634; // type:function size:0x78
fn_8006C6AC = .text:0x8006C6AC; // type:function size:0x248
fn_8006C8F4 = .text:0x8006C8F4; // type:function size:0x4C
fn_8006C940 = .text:0x8006C940; // type:function size:0x4C
fn_8006C98C = .text:0x8006C98C; // type:function size:0xB8
fn_8006CA44 = .text:0x8006CA44; // type:function size:0x130
fn_8006CB74 = .text:0x8006CB74; // type:function size:0x94
fn_8006CC08 = .text:0x8006CC08; // type:function size:0xE8
fn_8006CCF0 = .text:0x8006CCF0; // type:function size:0x5C
fn_8006CD4C = .text:0x8006CD4C; // type:function size:0x14
fn_8006CD60 = .text:0x8006CD60; // type:function size:0xC
fn_8006CD6C = .text:0x8006CD6C; // type:function size:0x8
fn_8006CD74 = .text:0x8006CD74; // type:function size:0x40
fn_8006CDB4 = .text:0x8006CDB4; // type:function size:0x128
fn_8006CEDC = .text:0x8006CEDC; // type:function size:0x48
fn_8006CF24 = .text:0x8006CF24; // type:function size:0x54
fn_8006CF78 = .text:0x8006CF78; // type:function size:0x4
fn_8006CF7C = .text:0x8006CF7C; // type:function size:0x18
fn_8006CF94 = .text:0x8006CF94; // type:function size:0x8
fn_8006CF9C = .text:0x8006CF9C; // type:function size:0x8
fn_8006CFA4 = .text:0x8006CFA4; // type:function size:0x8
fn_8006CFAC = .text:0x8006CFAC; // type:function size:0x10C
fn_8006D0B8 = .text:0x8006D0B8; // type:function size:0x1AC
fn_8006D264 = .text:0x8006D264; // type:function size:0x15C
fn_8006D3C0 = .text:0x8006D3C0; // type:function size:0x1B4
fn_8006D574 = .text:0x8006D574; // type:function size:0x5C
fn_8006D5D0 = .text:0x8006D5D0; // type:function size:0x2C
fn_8006D5FC = .text:0x8006D5FC; // type:function size:0xC
fn_8006D608 = .text:0x8006D608; // type:function size:0x8
fn_8006D610 = .text:0x8006D610; // type:function size:0x50
fn_8006D660 = .text:0x8006D660; // type:function size:0x190
fn_8006D7F0 = .text:0x8006D7F0; // type:function size:0x48
fn_8006D838 = .text:0x8006D838; // type:function size:0x60
fn_8006D898 = .text:0x8006D898; // type:function size:0x4
fn_8006D89C = .text:0x8006D89C; // type:function size:0x48
fn_8006D8E4 = .text:0x8006D8E4; // type:function size:0x54
fn_8006D938 = .text:0x8006D938; // type:function size:0x214
fn_8006DB4C = .text:0x8006DB4C; // type:function size:0x64
fn_8006DBB0 = .text:0x8006DBB0; // type:function size:0x114
fn_8006DCC4 = .text:0x8006DCC4; // type:function size:0xA8
fn_8006DD6C = .text:0x8006DD6C; // type:function size:0x98
fn_8006DE04 = .text:0x8006DE04; // type:function size:0x90
fn_8006DE94 = .text:0x8006DE94; // type:function size:0x90
fn_8006DF24 = .text:0x8006DF24; // type:function size:0x90
fn_8006DFB4 = .text:0x8006DFB4; // type:function size:0x90
fn_8006E044 = .text:0x8006E044; // type:function size:0x10
fn_8006E054 = .text:0x8006E054; // type:function size:0x10
fn_8006E064 = .text:0x8006E064; // type:function size:0xF0
fn_8006E154 = .text:0x8006E154; // type:function size:0x44
fn_8006E198 = .text:0x8006E198; // type:function size:0x104
fn_8006E29C = .text:0x8006E29C; // type:function size:0x1B4
fn_8006E450 = .text:0x8006E450; // type:function size:0x148
fn_8006E598 = .text:0x8006E598; // type:function size:0x17C
fn_8006E714 = .text:0x8006E714; // type:function size:0x58
fn_8006E76C = .text:0x8006E76C; // type:function size:0xD8
fn_8006E844 = .text:0x8006E844; // type:function size:0x90
fn_8006E8D4 = .text:0x8006E8D4; // type:function size:0x90
fn_8006E964 = .text:0x8006E964; // type:function size:0x90
fn_8006E9F4 = .text:0x8006E9F4; // type:function size:0x90
fn_8006EA84 = .text:0x8006EA84; // type:function size:0x68
fn_8006EAEC = .text:0x8006EAEC; // type:function size:0x68
fn_8006EB54 = .text:0x8006EB54; // type:function size:0x68
fn_8006EBBC = .text:0x8006EBBC; // type:function size:0x68
fn_8006EC24 = .text:0x8006EC24; // type:function size:0x90
fn_8006ECB4 = .text:0x8006ECB4; // type:function size:0x68
fn_8006ED1C = .text:0x8006ED1C; // type:function size:0x60
fn_8006ED7C = .text:0x8006ED7C; // type:function size:0x98
fn_8006EE14 = .text:0x8006EE14; // type:function size:0x60
fn_8006EE74 = .text:0x8006EE74; // type:function size:0x64
fn_8006EED8 = .text:0x8006EED8; // type:function size:0x70
fn_8006EF48 = .text:0x8006EF48; // type:function size:0x288
fn_8006F1D0 = .text:0x8006F1D0; // type:function size:0x60
fn_8006F230 = .text:0x8006F230; // type:function size:0xF4
fn_8006F324 = .text:0x8006F324; // type:function size:0x98
fn_8006F3BC = .text:0x8006F3BC; // type:function size:0x230
fn_8006F5EC = .text:0x8006F5EC; // type:function size:0x10C
fn_8006F6F8 = .text:0x8006F6F8; // type:function size:0x14
fn_8006F70C = .text:0x8006F70C; // type:function size:0xC
fn_8006F718 = .text:0x8006F718; // type:function size:0x14
fn_8006F72C = .text:0x8006F72C; // type:function size:0x58
fn_8006F784 = .text:0x8006F784; // type:function size:0x14
fn_8006F798 = .text:0x8006F798; // type:function size:0x20
fn_8006F7B8 = .text:0x8006F7B8; // type:function size:0x20
fn_8006F7D8 = .text:0x8006F7D8; // type:function size:0x10
fn_8006F7E8 = .text:0x8006F7E8; // type:function size:0x8
fn_8006F7F0 = .text:0x8006F7F0; // type:function size:0x8
fn_8006F7F8 = .text:0x8006F7F8; // type:function size:0x10
fn_8006F808 = .text:0x8006F808; // type:function size:0xB4
fn_8006F8BC = .text:0x8006F8BC; // type:function size:0xAC
fn_8006F968 = .text:0x8006F968; // type:function size:0x154
fn_8006FABC = .text:0x8006FABC; // type:function size:0x10
fn_8006FACC = .text:0x8006FACC; // type:function size:0x5C
fn_8006FB28 = .text:0x8006FB28; // type:function size:0x338
fn_8006FE60 = .text:0x8006FE60; // type:function size:0xCC
fn_8006FF2C = .text:0x8006FF2C; // type:function size:0xDC
fn_80070008 = .text:0x80070008; // type:function size:0x178
fn_80070180 = .text:0x80070180; // type:function size:0x58
fn_800701D8 = .text:0x800701D8; // type:function size:0x5C
fn_80070234 = .text:0x80070234; // type:function size:0x1A0
fn_800703D4 = .text:0x800703D4; // type:function size:0x200
fn_800705D4 = .text:0x800705D4; // type:function size:0xD0
fn_800706A4 = .text:0x800706A4; // type:function size:0x6EC
fn_80070D90 = .text:0x80070D90; // type:function size:0x94
fn_80070E24 = .text:0x80070E24; // type:function size:0x120
fn_80070F44 = .text:0x80070F44; // type:function size:0x74
fn_80070FB8 = .text:0x80070FB8; // type:function size:0x20
fn_80070FD8 = .text:0x80070FD8; // type:function size:0x18
fn_80070FF0 = .text:0x80070FF0; // type:function size:0x18
fn_80071008 = .text:0x80071008; // type:function size:0x14
fn_8007101C = .text:0x8007101C; // type:function size:0x108
fn_80071124 = .text:0x80071124; // type:function size:0x16C
fn_80071290 = .text:0x80071290; // type:function size:0x178
fn_80071408 = .text:0x80071408; // type:function size:0x16C
fn_80071574 = .text:0x80071574; // type:function size:0x154
fn_800716C8 = .text:0x800716C8; // type:function size:0x108
fn_800717D0 = .text:0x800717D0; // type:function size:0xAC
fn_8007187C = .text:0x8007187C; // type:function size:0x138
fn_800719B4 = .text:0x800719B4; // type:function size:0xB0
fn_80071A64 = .text:0x80071A64; // type:function size:0xF8
fn_80071B5C = .text:0x80071B5C; // type:function size:0x168
fn_80071CC4 = .text:0x80071CC4; // type:function size:0xB0
fn_80071D74 = .text:0x80071D74; // type:function size:0x2B8
fn_8007202C = .text:0x8007202C; // type:function size:0x108
fn_80072134 = .text:0x80072134; // type:function size:0x134
fn_80072268 = .text:0x80072268; // type:function size:0x12C
fn_80072394 = .text:0x80072394; // type:function size:0x108
fn_8007249C = .text:0x8007249C; // type:function size:0x1C8
fn_80072664 = .text:0x80072664; // type:function size:0x12C
fn_80072790 = .text:0x80072790; // type:function size:0x12C
fn_800728BC = .text:0x800728BC; // type:function size:0x12C
fn_800729E8 = .text:0x800729E8; // type:function size:0x12C
fn_80072B14 = .text:0x80072B14; // type:function size:0x12C
fn_80072C40 = .text:0x80072C40; // type:function size:0x12C
fn_80072D6C = .text:0x80072D6C; // type:function size:0x260
fn_80072FCC = .text:0x80072FCC; // type:function size:0x1DC
fn_800731A8 = .text:0x800731A8; // type:function size:0x1D8
fn_80073380 = .text:0x80073380; // type:function size:0x48
fn_800733C8 = .text:0x800733C8; // type:function size:0x18
fn_800733E0 = .text:0x800733E0; // type:function size:0x60
fn_80073440 = .text:0x80073440; // type:function size:0x7C
fn_800734BC = .text:0x800734BC; // type:function size:0xC0
fn_8007357C = .text:0x8007357C; // type:function size:0x9C
fn_80073618 = .text:0x80073618; // type:function size:0x134
fn_8007374C = .text:0x8007374C; // type:function size:0x30
fn_8007377C = .text:0x8007377C; // type:function size:0x28
fn_800737A4 = .text:0x800737A4; // type:function size:0x34
fn_800737D8 = .text:0x800737D8; // type:function size:0x54
fn_8007382C = .text:0x8007382C; // type:function size:0x20
fn_8007384C = .text:0x8007384C; // type:function size:0x44
fn_80073890 = .text:0x80073890; // type:function size:0x5BC
fn_80073E4C = .text:0x80073E4C; // type:function size:0xA4
fn_80073EF0 = .text:0x80073EF0; // type:function size:0x1F0
fn_800740E0 = .text:0x800740E0; // type:function size:0x28
fn_80074108 = .text:0x80074108; // type:function size:0x68
fn_80074170 = .text:0x80074170; // type:function size:0x20
fn_80074190 = .text:0x80074190; // type:function size:0x44
fn_800741D4 = .text:0x800741D4; // type:function size:0x2A8
fn_8007447C = .text:0x8007447C; // type:function size:0x590
fn_80074A0C = .text:0x80074A0C; // type:function size:0x124
fn_80074B30 = .text:0x80074B30; // type:function size:0xA0
fn_80074BD0 = .text:0x80074BD0; // type:function size:0x790
fn_80075360 = .text:0x80075360; // type:function size:0x2B4
fn_80075614 = .text:0x80075614; // type:function size:0x240
fn_80075854 = .text:0x80075854; // type:function size:0xA4
fn_800758F8 = .text:0x800758F8; // type:function size:0xC8
fn_800759C0 = .text:0x800759C0; // type:function size:0x1C0
fn_80075B80 = .text:0x80075B80; // type:function size:0x70
fn_80075BF0 = .text:0x80075BF0; // type:function size:0xBC
fn_80075CAC = .text:0x80075CAC; // type:function size:0x70
fn_80075D1C = .text:0x80075D1C; // type:function size:0xBC
fn_80075DD8 = .text:0x80075DD8; // type:function size:0xD0
fn_80075EA8 = .text:0x80075EA8; // type:function size:0x434
fn_800762DC = .text:0x800762DC; // type:function size:0x8C
fn_80076368 = .text:0x80076368; // type:function size:0x198
fn_80076500 = .text:0x80076500; // type:function size:0xE0
fn_800765E0 = .text:0x800765E0; // type:function size:0x9C
fn_8007667C = .text:0x8007667C; // type:function size:0x50
fn_800766CC = .text:0x800766CC; // type:function size:0x1C
fn_800766E8 = .text:0x800766E8; // type:function size:0x198
fn_80076880 = .text:0x80076880; // type:function size:0x2C0
fn_80076B40 = .text:0x80076B40; // type:function size:0x224
fn_80076D64 = .text:0x80076D64; // type:function size:0xF0
fn_80076E54 = .text:0x80076E54; // type:function size:0x98
fn_80076EEC = .text:0x80076EEC; // type:function size:0xDC
fn_80076FC8 = .text:0x80076FC8; // type:function size:0x50
fn_80077018 = .text:0x80077018; // type:function size:0x6C
fn_80077084 = .text:0x80077084; // type:function size:0xB8
fn_8007713C = .text:0x8007713C; // type:function size:0x190
fn_800772CC = .text:0x800772CC; // type:function size:0x60
fn_8007732C = .text:0x8007732C; // type:function size:0x1B0
fn_800774DC = .text:0x800774DC; // type:function size:0x1B8
fn_80077694 = .text:0x80077694; // type:function size:0xB8
fn_8007774C = .text:0x8007774C; // type:function size:0x28
fn_80077774 = .text:0x80077774; // type:function size:0x98
fn_8007780C = .text:0x8007780C; // type:function size:0xF4
fn_80077900 = .text:0x80077900; // type:function size:0x74
fn_80077974 = .text:0x80077974; // type:function size:0x1C
fn_80077990 = .text:0x80077990; // type:function size:0x90
fn_80077A20 = .text:0x80077A20; // type:function size:0x164
fn_80077B84 = .text:0x80077B84; // type:function size:0x598
fn_8007811C = .text:0x8007811C; // type:function size:0x54
fn_80078170 = .text:0x80078170; // type:function size:0xA4
fn_80078214 = .text:0x80078214; // type:function size:0x64
fn_80078278 = .text:0x80078278; // type:function size:0x64
fn_800782DC = .text:0x800782DC; // type:function size:0x10
fn_800782EC = .text:0x800782EC; // type:function size:0x168
fn_80078454 = .text:0x80078454; // type:function size:0x13C
fn_80078590 = .text:0x80078590; // type:function size:0xA8
fn_80078638 = .text:0x80078638; // type:function size:0xD0
fn_80078708 = .text:0x80078708; // type:function size:0xD0
fn_800787D8 = .text:0x800787D8; // type:function size:0x80
fn_80078858 = .text:0x80078858; // type:function size:0x1DC
fn_80078A34 = .text:0x80078A34; // type:function size:0x498
fn_80078ECC = .text:0x80078ECC; // type:function size:0x174
fn_80079040 = .text:0x80079040; // type:function size:0x15C
fn_8007919C = .text:0x8007919C; // type:function size:0xFC
fn_80079298 = .text:0x80079298; // type:function size:0x80
fn_80079318 = .text:0x80079318; // type:function size:0x60
fn_80079378 = .text:0x80079378; // type:function size:0x6C
fn_800793E4 = .text:0x800793E4; // type:function size:0x94
fn_80079478 = .text:0x80079478; // type:function size:0x30
fn_800794A8 = .text:0x800794A8; // type:function size:0x94
fn_8007953C = .text:0x8007953C; // type:function size:0xC4
fn_80079600 = .text:0x80079600; // type:function size:0xDC
fn_800796DC = .text:0x800796DC; // type:function size:0x34
fn_80079710 = .text:0x80079710; // type:function size:0x6C
fn_8007977C = .text:0x8007977C; // type:function size:0x118
fn_80079894 = .text:0x80079894; // type:function size:0x74
fn_80079908 = .text:0x80079908; // type:function size:0x24
fn_8007992C = .text:0x8007992C; // type:function size:0xDC
fn_80079A08 = .text:0x80079A08; // type:function size:0xA8
fn_80079AB0 = .text:0x80079AB0; // type:function size:0xE4
_ctors = .ctors:0x80079BA0; // type:label scope:global data:4byte
__init_cpp_exceptions_reference = .ctors:0x80079BA0; // type:object size:0x4 scope:global
_dtors = .dtors:0x80079BC0; // type:label scope:global data:4byte
__destroy_global_chain_reference = .dtors:0x80079BC0; // type:object size:0x4 scope:global
__fini_cpp_exceptions_reference = .dtors:0x80079BC4; // type:object size:0x4 scope:global
lbl_80079BE0 = .rodata:0x80079BE0; // type:object size:0xF data:string
lbl_80079BF0 = .rodata:0x80079BF0; // type:object size:0xA data:string
__constants = .rodata:0x80079C00; // type:object size:0x18 data:double
lbl_80079C18 = .rodata:0x80079C18; // type:object size:0x52 data:string_table
lbl_80079C6C = .rodata:0x80079C6C; // type:object size:0x13 data:string
lbl_80079C80 = .rodata:0x80079C80; // type:object size:0xF data:string
lbl_80079C90 = .rodata:0x80079C90; // type:object size:0x1A data:string_table
lbl_80079CB0 = .rodata:0x80079CB0; // type:object size:0x36 data:string
lbl_80079CE8 = .rodata:0x80079CE8; // type:object size:0x39 data:string
fix_pool_sizes = .rodata:0x80079D28; // type:object size:0x18 data:4byte
@stringBase0 = .rodata:0x80079D40; // type:object size:0xDD scope:local data:string_table
@stringBase0 = .rodata:0x80079E20; // type:object size:0x5 scope:local data:string_table
@stringBase0 = .rodata:0x80079E28; // type:object size:0x25 scope:local data:string_table
lbl_80079E50 = .rodata:0x80079E50; // type:object size:0x28 data:4byte
lbl_80079E78 = .rodata:0x80079E78; // type:object size:0x2A
lbl_80079EA4 = .rodata:0x80079EA4; // type:object size:0x9 data:string
bp = .rodata:0x80079EB0; // type:object size:0x10 data:double
dp_h = .rodata:0x80079EC0; // type:object size:0x10 data:double
dp_l = .rodata:0x80079ED0; // type:object size:0x10 data:double
two_over_pi = .rodata:0x80079EE0; // type:object size:0x108
npio2_hw = .rodata:0x80079FE8; // type:object size:0x80 data:float
init_jk = .rodata:0x8007A068; // type:object size:0x10
PIo2 = .rodata:0x8007A078; // type:object size:0x40 data:double
T = .rodata:0x8007A0B8; // type:object size:0x68 data:double
atanhi = .rodata:0x8007A120; // type:object size:0x20 data:double
atanlo = .rodata:0x8007A140; // type:object size:0x20 data:double
aT = .rodata:0x8007A160; // type:object size:0x58 data:double
@62 = .rodata:0x8007A1B8; // type:object size:0x1C scope:local data:string
lbl_8007A1D8 = .rodata:0x8007A1D8; // type:object size:0x1D data:string
gTRKMemMap = .rodata:0x8007A1F8; // type:object size:0x10 data:4byte
lbl_8007A208 = .rodata:0x8007A208; // type:object size:0x28 data:4byte
lbl_8007A230 = .rodata:0x8007A230; // type:object size:0x28 data:4byte
lbl_8007A258 = .rodata:0x8007A258; // type:object size:0x28 data:4byte
@154 = .rodata:0x8007A280; // type:object size:0x21 scope:local data:string
@155 = .rodata:0x8007A2A4; // type:object size:0x24 scope:local data:string
lbl_8007A2C8 = .rodata:0x8007A2C8; // type:object size:0x10
lbl_8007A2D8 = .rodata:0x8007A2D8; // type:object size:0x10 data:4byte
lbl_8007A2E8 = .rodata:0x8007A2E8; // type:object size:0x30 data:4byte
lbl_8007A318 = .rodata:0x8007A318; // type:object size:0x20
lbl_8007A338 = .rodata:0x8007A338; // type:object size:0x10
lbl_8007A348 = .rodata:0x8007A348; // type:object size:0x10
lbl_8007A358 = .rodata:0x8007A358; // type:object size:0x20
lbl_8007A378 = .rodata:0x8007A378; // type:object size:0x30
lbl_8007A3A8 = .rodata:0x8007A3A8; // type:object size:0x8 data:4byte
lbl_8007A3B0 = .rodata:0x8007A3B0; // type:object size:0x20
lbl_8007A3D0 = .rodata:0x8007A3D0; // type:object size:0x28
lbl_8007A3F8 = .rodata:0x8007A3F8; // type:object size:0x8
lbl_8007A400 = .rodata:0x8007A400; // type:object size:0x8
lbl_8007A408 = .rodata:0x8007A408; // type:object size:0x8
lbl_8007A410 = .rodata:0x8007A410; // type:object size:0x8
lbl_8007A418 = .rodata:0x8007A418; // type:object size:0x8
lbl_8007A420 = .rodata:0x8007A420; // type:object size:0x8
lbl_8007A428 = .rodata:0x8007A428; // type:object size:0x8
lbl_8007A430 = .rodata:0x8007A430; // type:object size:0x8
lbl_8007A438 = .rodata:0x8007A438; // type:object size:0x888
lbl_8007ACC0 = .rodata:0x8007ACC0; // type:object size:0x8
lbl_8007ACC8 = .rodata:0x8007ACC8; // type:object size:0x8
lbl_8007ACD0 = .rodata:0x8007ACD0; // type:object size:0x4 data:float
lbl_8007ACD8 = .rodata:0x8007ACD8; // type:object size:0x8 data:double
lbl_8007ACE0 = .rodata:0x8007ACE0; // type:object size:0x8 data:double
lbl_8007ACE8 = .rodata:0x8007ACE8; // type:object size:0x8 data:double
lbl_8007ACF0 = .rodata:0x8007ACF0; // type:object size:0x4 data:float
lbl_8007ACF4 = .rodata:0x8007ACF4; // type:object size:0x4 data:float
lbl_8007ACF8 = .rodata:0x8007ACF8; // type:object size:0x4 data:float
lbl_8007ACFC = .rodata:0x8007ACFC; // type:object size:0x4 data:float
lbl_8007AD00 = .rodata:0x8007AD00; // type:object size:0x8 data:double
lbl_8007AD08 = .rodata:0x8007AD08; // type:object size:0x8
lbl_8007AD10 = .rodata:0x8007AD10; // type:object size:0x8
lbl_8007AD18 = .rodata:0x8007AD18; // type:object size:0x8 data:double
lbl_8007AD20 = .rodata:0x8007AD20; // type:object size:0x8 data:double
lbl_8007AD28 = .rodata:0x8007AD28; // type:object size:0x30
lbl_8007AD58 = .rodata:0x8007AD58; // type:object size:0x60
lbl_8007ADB8 = .rodata:0x8007ADB8; // type:object size:0x38 data:double
lbl_8007ADF0 = .rodata:0x8007ADF0; // type:object size:0x114
lbl_8007AF04 = .rodata:0x8007AF04; // type:object size:0x30
lbl_8007AF34 = .rodata:0x8007AF34; // type:object size:0xC4
lbl_8007AFF8 = .rodata:0x8007AFF8; // type:object size:0x28 data:string
lbl_8007B020 = .rodata:0x8007B020; // type:object size:0x2C
lbl_8007B04C = .rodata:0x8007B04C; // type:object size:0x8C
lbl_8007B0D8 = .rodata:0x8007B0D8; // type:object size:0x60
lbl_8007B138 = .rodata:0x8007B138; // type:object size:0x2C
lbl_8007B164 = .rodata:0x8007B164; // type:object size:0x2C
lbl_8007B190 = .rodata:0x8007B190; // type:object size:0x2C
lbl_8007B1BC = .rodata:0x8007B1BC; // type:object size:0x2C
lbl_8007B1E8 = .rodata:0x8007B1E8; // type:object size:0x2C
lbl_8007B214 = .rodata:0x8007B214; // type:object size:0x84
lbl_8007B298 = .rodata:0x8007B298; // type:object size:0x64
lbl_8007B2FC = .rodata:0x8007B2FC; // type:object size:0x28
lbl_8007B324 = .rodata:0x8007B324; // type:object size:0x28 data:string
lbl_8007B34C = .rodata:0x8007B34C; // type:object size:0x28 data:string
lbl_8007B374 = .rodata:0x8007B374; // type:object size:0x28
lbl_8007B39C = .rodata:0x8007B39C; // type:object size:0x4 data:float
lbl_8007B3A0 = .rodata:0x8007B3A0; // type:object size:0x2C
lbl_8007B3CC = .rodata:0x8007B3CC; // type:object size:0x2C
lbl_8007B3F8 = .rodata:0x8007B3F8; // type:object size:0x28
lbl_8007B420 = .rodata:0x8007B420; // type:object size:0x2C
lbl_8007B44C = .rodata:0x8007B44C; // type:object size:0x40
lbl_8007B48C = .rodata:0x8007B48C; // type:object size:0x2C
lbl_8007B4B8 = .rodata:0x8007B4B8; // type:object size:0x2C data:string
lbl_8007B4E4 = .rodata:0x8007B4E4; // type:object size:0x4 data:4byte
lbl_8007B4E8 = .rodata:0x8007B4E8; // type:object size:0x38
lbl_8007B520 = .rodata:0x8007B520; // type:object size:0x48
lbl_8007B568 = .rodata:0x8007B568; // type:object size:0x40
lbl_8007B5A8 = .rodata:0x8007B5A8; // type:object size:0x10
lbl_8007B5B8 = .rodata:0x8007B5B8; // type:object size:0x30
lbl_8007B5E8 = .rodata:0x8007B5E8; // type:object size:0x8 data:4byte
lbl_8007B5F0 = .rodata:0x8007B5F0; // type:object size:0x2C data:string
lbl_8007B61C = .rodata:0x8007B61C; // type:object size:0x24
lbl_8007B640 = .rodata:0x8007B640; // type:object size:0x11C
lbl_8007B75C = .rodata:0x8007B75C; // type:object size:0x24 data:string
lbl_8007B780 = .rodata:0x8007B780; // type:object size:0x1FC
lbl_8007B97C = .rodata:0x8007B97C; // type:object size:0x38
lbl_8007B9B4 = .rodata:0x8007B9B4; // type:object size:0x1EC
lbl_8007BBA0 = .rodata:0x8007BBA0; // type:object size:0x8B8
lbl_8007C458 = .rodata:0x8007C458; // type:object size:0x1C data:string
lbl_8007C474 = .rodata:0x8007C474; // type:object size:0x88
lbl_8007C4FC = .rodata:0x8007C4FC; // type:object size:0x1C
lbl_8007C518 = .rodata:0x8007C518; // type:object size:0x18 data:string
lbl_8007C530 = .rodata:0x8007C530; // type:object size:0x1C
lbl_8007C54C = .rodata:0x8007C54C; // type:object size:0x18
lbl_8007C564 = .rodata:0x8007C564; // type:object size:0x1C
lbl_8007C580 = .rodata:0x8007C580; // type:object size:0x18
lbl_8007C598 = .rodata:0x8007C598; // type:object size:0x1C
lbl_8007C5B4 = .rodata:0x8007C5B4; // type:object size:0xCC
lbl_8007C680 = .rodata:0x8007C680; // type:object size:0x28
lbl_8007C6A8 = .rodata:0x8007C6A8; // type:object size:0xB8
lbl_8007C760 = .rodata:0x8007C760; // type:object size:0x2C
lbl_8007C78C = .rodata:0x8007C78C; // type:object size:0x18 data:string
lbl_8007C7A4 = .rodata:0x8007C7A4; // type:object size:0x18 data:string
lbl_8007C7BC = .rodata:0x8007C7BC; // type:object size:0x1C
lbl_8007C7D8 = .rodata:0x8007C7D8; // type:object size:0x1C0
lbl_8007C998 = .rodata:0x8007C998; // type:object size:0x24
lbl_8007C9BC = .rodata:0x8007C9BC; // type:object size:0x24
lbl_8007C9E0 = .rodata:0x8007C9E0; // type:object size:0x24
lbl_8007CA04 = .rodata:0x8007CA04; // type:object size:0x20 data:string
lbl_8007CA24 = .rodata:0x8007CA24; // type:object size:0x24
lbl_8007CA48 = .rodata:0x8007CA48; // type:object size:0x2C
lbl_8007CA74 = .rodata:0x8007CA74; // type:object size:0x2C
lbl_8007CAA0 = .rodata:0x8007CAA0; // type:object size:0x30
lbl_8007CAD0 = .rodata:0x8007CAD0; // type:object size:0x8 data:4byte
lbl_8007CAD8 = .rodata:0x8007CAD8; // type:object size:0x18
lbl_8007CAF0 = .rodata:0x8007CAF0; // type:object size:0x10
lbl_8007CB00 = .rodata:0x8007CB00; // type:object size:0x2C data:string
lbl_8007CB2C = .rodata:0x8007CB2C; // type:object size:0x4 data:4byte
lbl_8007CB30 = .rodata:0x8007CB30; // type:object size:0x10
lbl_8007CB40 = .rodata:0x8007CB40; // type:object size:0x34
lbl_8007CB74 = .rodata:0x8007CB74; // type:object size:0x120
lbl_8007CC94 = .rodata:0x8007CC94; // type:object size:0x20 data:string
lbl_8007CCB4 = .rodata:0x8007CCB4; // type:object size:0x34
lbl_8007CCE8 = .rodata:0x8007CCE8; // type:object size:0x30
lbl_8007CD18 = .rodata:0x8007CD18; // type:object size:0x90 data:4byte
lbl_8007CDA8 = .rodata:0x8007CDA8; // type:object size:0x40
lbl_8007CDE8 = .rodata:0x8007CDE8; // type:object size:0x3C
lbl_8007CE24 = .rodata:0x8007CE24; // type:object size:0x18 data:string
lbl_8007CE3C = .rodata:0x8007CE3C; // type:object size:0x18 data:string
lbl_8007CE54 = .rodata:0x8007CE54; // type:object size:0x78
lbl_8007CECC = .rodata:0x8007CECC; // type:object size:0x1C
lbl_8007CEE8 = .rodata:0x8007CEE8; // type:object size:0x98
lbl_8007CF80 = .rodata:0x8007CF80; // type:object size:0x2C data:string
lbl_8007CFAC = .rodata:0x8007CFAC; // type:object size:0x4 data:4byte
lbl_8007CFB0 = .rodata:0x8007CFB0; // type:object size:0x4 data:string
lbl_8007CFB4 = .rodata:0x8007CFB4; // type:object size:0xC
lbl_8007CFC0 = .rodata:0x8007CFC0; // type:object size:0x1B8
lbl_8007D178 = .rodata:0x8007D178; // type:object size:0x24 data:string
lbl_8007D19C = .rodata:0x8007D19C; // type:object size:0x2C
lbl_8007D1C8 = .rodata:0x8007D1C8; // type:object size:0x24
lbl_8007D1EC = .rodata:0x8007D1EC; // type:object size:0x10 data:string
lbl_8007D1FC = .rodata:0x8007D1FC; // type:object size:0x2C
lbl_8007D228 = .rodata:0x8007D228; // type:object size:0x40 data:string
lbl_8007D268 = .rodata:0x8007D268; // type:object size:0x40
lbl_8007D2A8 = .rodata:0x8007D2A8; // type:object size:0xC
lbl_8007D2B4 = .rodata:0x8007D2B4; // type:object size:0xC
lbl_8007D2C0 = .rodata:0x8007D2C0; // type:object size:0xC data:string
lbl_8007D2CC = .rodata:0x8007D2CC; // type:object size:0x10 data:string
lbl_8007D2DC = .rodata:0x8007D2DC; // type:object size:0x10
lbl_8007D2EC = .rodata:0x8007D2EC; // type:object size:0x14
lbl_8007D300 = .rodata:0x8007D300; // type:object size:0x14
lbl_8007D314 = .rodata:0x8007D314; // type:object size:0xC
lbl_8007D320 = .rodata:0x8007D320; // type:object size:0x10
lbl_8007D330 = .rodata:0x8007D330; // type:object size:0x10 data:string
lbl_8007D340 = .rodata:0x8007D340; // type:object size:0x10
lbl_8007D350 = .rodata:0x8007D350; // type:object size:0x10
lbl_8007D360 = .rodata:0x8007D360; // type:object size:0xC data:string
lbl_8007D36C = .rodata:0x8007D36C; // type:object size:0x41C
lbl_8007D788 = .rodata:0x8007D788; // type:object size:0x18
lbl_8007D7A0 = .rodata:0x8007D7A0; // type:object size:0x30
lbl_8007D7D0 = .rodata:0x8007D7D0; // type:object size:0x1A data:string
lbl_8007D800 = .data:0x8007D800; // type:object size:0x18C
jumptable_8007D98C = .data:0x8007D98C; // type:object size:0x34 scope:local
jumptable_8007D9C0 = .data:0x8007D9C0; // type:object size:0x34 scope:local
jumptable_8007DA14 = .data:0x8007DA14; // type:object size:0x34 scope:local
jumptable_8007DA48 = .data:0x8007DA48; // type:object size:0x34 scope:local
__vt__Q23std9exception = .data:0x8007DA80; // type:object size:0x10
jumptable_8007DA90 = .data:0x8007DA90; // type:object size:0x44 scope:local
jumptable_8007DAD4 = .data:0x8007DAD4; // type:object size:0x44 scope:local
jumptable_8007DB18 = .data:0x8007DB18; // type:object size:0x44 scope:local
lbl_8007DB5C = .data:0x8007DB5C; // type:object size:0xC
__vt__Q23std13bad_exception = .data:0x8007DB68; // type:object size:0x10
__files = .data:0x8007DB78; // type:object size:0x140 scope:global
pow_10$415 = .data:0x8007DCB8; // type:object size:0x40 data:double
jumptable_8007DCF8 = .data:0x8007DCF8; // type:object size:0x124 scope:local
__ctype_map = .data:0x8007DE20; // type:object size:0x100
__lower_map = .data:0x8007DF20; // type:object size:0x100
__upper_map = .data:0x8007E020; // type:object size:0x100
__lconv = .data:0x8007E120; // type:object size:0x38 data:4byte
@1249 = .data:0x8007E158; // type:object size:0x84 scope:local
jumptable_8007E1DC = .data:0x8007E1DC; // type:object size:0x84 scope:local
jumptable_8007E260 = .data:0x8007E260; // type:object size:0xE0 scope:local
jumptable_8007E340 = .data:0x8007E340; // type:object size:0x44 scope:local
jumptable_8007E388 = .data:0x8007E388; // type:object size:0xD0 scope:local
jumptable_8007E458 = .data:0x8007E458; // type:object size:0x44 scope:local
jumptable_8007E49C = .data:0x8007E49C; // type:object size:0x44 scope:local
gTRKDispatchTable = .data:0x8007E4E0; // type:object size:0x84
jumptable_8007E568 = .data:0x8007E568; // type:object size:0x1C scope:local
jumptable_8007E584 = .data:0x8007E584; // type:object size:0x1C scope:local
gTRKRestoreFlags = .data:0x8007E5A0; // type:object size:0x9 scope:global data:byte
gTRKExceptionStatus = .data:0x8007E5AC; // type:object size:0x10 scope:local data:4byte
gTRKStepStatus = .data:0x8007E5BC; // type:object size:0x14 data:4byte
TRK_ISR_OFFSETS = .data:0x8007E5D0; // type:object size:0x3C data:4byte
gDBCommTable = .data:0x8007E610; // type:object size:0x1C scope:global data:4byte
lbl_8007E630 = .data:0x8007E630; // type:object size:0x44 data:string
lbl_8007E678 = .data:0x8007E678; // type:object size:0x44 data:string
lbl_8007E6C0 = .data:0x8007E6C0; // type:object size:0x45 data:string
lbl_8007E708 = .data:0x8007E708; // type:object size:0x44 data:string
__AXSrcCycles = .data:0x8007E750; // type:object size:0x14
__AXMainMixCycles = .data:0x8007E764; // type:object size:0x40
__AXAuxMixCycles = .data:0x8007E7A4; // type:object size:0x80
__AXCompressorTable = .data:0x8007E840; // type:object size:0x1A40
axDspSlave = .data:0x80080280; // type:object size:0x1F20
lens$108 = .data:0x800821A0; // type:object size:0x20 scope:local data:4byte
lens$108 = .data:0x800821C0; // type:object size:0x10 scope:local data:4byte
rsmpTab12khz = .data:0x800821D0; // type:object size:0x800
lbl_800829D0 = .data:0x800829D0; // type:object size:0x46 data:string
ResetFunctionInfo = .data:0x80082A18; // type:object size:0x10
CardData = .data:0x80082A40; // type:object size:0x160
SectorSizeTable = .data:0x80082BA0; // type:object size:0x20
LatencyTable = .data:0x80082BC0; // type:object size:0x20
lbl_80082BE0 = .data:0x80082BE0; // type:object size:0x18 data:string
lbl_80082BF8 = .data:0x80082BF8; // type:object size:0x45 data:string
lbl_80082C40 = .data:0x80082C40; // type:object size:0x1E data:string
lbl_80082C60 = .data:0x80082C60; // type:object size:0xC data:string
lbl_80082C6C = .data:0x80082C6C; // type:object size:0x9 data:string
lbl_80082C78 = .data:0x80082C78; // type:object size:0x1D data:string
lbl_80082C98 = .data:0x80082C98; // type:object size:0x2D data:string
lbl_80082CC8 = .data:0x80082CC8; // type:object size:0x2D data:string
lbl_80082CF8 = .data:0x80082CF8; // type:object size:0x2D data:string
lbl_80082D28 = .data:0x80082D28; // type:object size:0x2D data:string
lbl_80082D58 = .data:0x80082D58; // type:object size:0x2D data:string
lbl_80082D88 = .data:0x80082D88; // type:object size:0x2B data:string
lbl_80082DB8 = .data:0x80082DB8; // type:object size:0xC8 data:string
lbl_80082E80 = .data:0x80082E80; // type:object size:0x37 data:string
lbl_80082EB8 = .data:0x80082EB8; // type:object size:0x34 data:string
lbl_80082EEC = .data:0x80082EEC; // type:object size:0x2F data:string
lbl_80082F20 = .data:0x80082F20; // type:object size:0x45 data:string
@18 = .data:0x80082F68; // type:object size:0xA scope:local data:string
lbl_80082F74 = .data:0x80082F74; // type:object size:0x34 data:string
jumptable_80082FA8 = .data:0x80082FA8; // type:object size:0x40 scope:local
ImmCommand = .data:0x80082FE8; // type:object size:0xC data:4byte
lbl_80082FF4 = .data:0x80082FF4; // type:object size:0x41 data:string
jumptable_80083038 = .data:0x80083038; // type:object size:0x34 scope:local
jumptable_8008306C = .data:0x8008306C; // type:object size:0x34 scope:local
ErrorTable = .data:0x800830A0; // type:object size:0x48 data:4byte
@36 = .data:0x800830E8; // type:object size:0x1A scope:local data:string
lbl_80083104 = .data:0x80083104; // type:object size:0x16 scope:local data:string
lbl_8008311C = .data:0x8008311C; // type:object size:0x14 scope:local data:string
lbl_80083130 = .data:0x80083130; // type:object size:0x14 scope:local data:string
lbl_80083144 = .data:0x80083144; // type:object size:0x14 scope:local data:string
lbl_80083158 = .data:0x80083158; // type:object size:0x110
lbl_80083268 = .data:0x80083268; // type:object size:0x44 data:string
lbl_800832AC = .data:0x800832AC; // type:object size:0xD0
lbl_8008337C = .data:0x8008337C; // type:object size:0x1C
GXResetFuncInfo = .data:0x80083398; // type:object size:0x10 scope:local
jumptable_800833A8 = .data:0x800833A8; // type:object size:0x68 scope:local
jumptable_80083410 = .data:0x80083410; // type:object size:0x44 scope:local
jumptable_80083454 = .data:0x80083454; // type:object size:0x44 scope:local
jumptable_80083498 = .data:0x80083498; // type:object size:0x1C scope:local
jumptable_800834B4 = .data:0x800834B4; // type:object size:0x54 scope:local
lbl_80083508 = .data:0x80083508; // type:object size:0x3C
lbl_80083544 = .data:0x80083544; // type:object size:0x3C
lbl_80083580 = .data:0x80083580; // type:object size:0x3C
lbl_800835BC = .data:0x800835BC; // type:object size:0x3C
lbl_800835F8 = .data:0x800835F8; // type:object size:0x40
jumptable_80083638 = .data:0x80083638; // type:object size:0x1C scope:local
jumptable_80083658 = .data:0x80083658; // type:object size:0xF4 scope:local
jumptable_8008374C = .data:0x8008374C; // type:object size:0xF4 scope:local
jumptable_80083840 = .data:0x80083840; // type:object size:0x3C scope:local
lbl_80083880 = .data:0x80083880; // type:object size:0x50
lbl_800838D0 = .data:0x800838D0; // type:object size:0x28
lbl_800838F8 = .data:0x800838F8; // type:object size:0x20
jumptable_80083918 = .data:0x80083918; // type:object size:0x5C scope:local
jumptable_80083974 = .data:0x80083974; // type:object size:0x90 scope:local
lbl_80083A08 = .data:0x80083A08; // type:object size:0xBC0
@1 = .data:0x800845C8; // type:object size:0x44 scope:local data:string
lbl_800847D0 = .data:0x800847D0; // type:object size:0x398
DSPInitCode = .data:0x80084B68; // type:object size:0x80 scope:local
@69 = .data:0x80084BE8; // type:object size:0x29 scope:local data:string
lbl_80084E18 = .data:0x80084E18; // type:object size:0x1B4
@74 = .data:0x80084FCC; // type:object size:0x23 scope:local data:string
@13 = .data:0x80084FF0; // type:object size:0x16 scope:local data:string
@87 = .data:0x800852CC; // type:object size:0x40 scope:local
lbl_80085310 = .data:0x80085310; // type:object size:0x180
lbl_80085490 = .data:0x80085490; // type:object size:0x990
lbl_80085E20 = .data:0x80085E20; // type:object size:0x30 data:4byte
lbl_80085E50 = .data:0x80085E50; // type:object size:0x28
lbl_80085E78 = .data:0x80085E78; // type:object size:0x28
ResetFunctionInfo = .data:0x80085EA0; // type:object size:0x10 scope:local
lbl_80085EB0 = .data:0x80085EB0; // type:object size:0x30
lbl_80085EE0 = .data:0x80085EE0; // type:object size:0x30
lbl_80085F10 = .data:0x80085F10; // type:object size:0x48
lbl_80085F58 = .data:0x80085F58; // type:object size:0x10
lbl_80085F68 = .data:0x80085F68; // type:object size:0x44 data:string
Si = .data:0x80085FAC; // type:object size:0x14 scope:local data:4byte
Type = .data:0x80085FC0; // type:object size:0x10 scope:local
XYNTSC = .data:0x80086080; // type:object size:0x30 scope:local
lbl_80086118 = .data:0x80086118; // type:object size:0x1F4
jumptable_8008630C = .data:0x8008630C; // type:object size:0x6C scope:local
@724 = .data:0x800864CC; // type:object size:0x1C scope:local
lbl_800864E8 = .data:0x800864E8; // type:object size:0xC
lbl_800864F4 = .data:0x800864F4; // type:object size:0xC
lbl_80086500 = .data:0x80086500; // type:object size:0x20 data:4byte
lbl_80086520 = .data:0x80086520; // type:object size:0x2000
lbl_80088520 = .data:0x80088520; // type:object size:0x10 data:string
jumptable_80088530 = .data:0x80088530; // type:object size:0x28 scope:local
lbl_80088558 = .data:0x80088558; // type:object size:0x20
lbl_80088578 = .data:0x80088578; // type:object size:0x10
jumptable_80088588 = .data:0x80088588; // type:object size:0x4C scope:local
lbl_800885D8 = .data:0x800885D8; // type:object size:0x14 data:string
lbl_800885EC = .data:0x800885EC; // type:object size:0x14 data:string
lbl_80088600 = .data:0x80088600; // type:object size:0x20
lbl_80088620 = .data:0x80088620; // type:object size:0x28
lbl_80088648 = .data:0x80088648; // type:object size:0x28
lbl_80088670 = .data:0x80088670; // type:object size:0x18
lbl_80088688 = .data:0x80088688; // type:object size:0xC
lbl_80088694 = .data:0x80088694; // type:object size:0x2C
lbl_800886C0 = .data:0x800886C0; // type:object size:0x2C data:string
lbl_800886EC = .data:0x800886EC; // type:object size:0x38
lbl_80088724 = .data:0x80088724; // type:object size:0x2C data:string
lbl_80088750 = .data:0x80088750; // type:object size:0x38
lbl_80088788 = .data:0x80088788; // type:object size:0x30 data:string
lbl_800887B8 = .data:0x800887B8; // type:object size:0x10
lbl_800887C8 = .data:0x800887C8; // type:object size:0x20
lbl_800887E8 = .data:0x800887E8; // type:object size:0x20
lbl_80088808 = .data:0x80088808; // type:object size:0x8 data:4byte
lbl_80088810 = .data:0x80088810; // type:object size:0x4 data:4byte
lbl_80088814 = .data:0x80088814; // type:object size:0x4 data:4byte
lbl_80088818 = .data:0x80088818; // type:object size:0x200
lbl_80088A18 = .data:0x80088A18; // type:object size:0x4 data:4byte
lbl_80088A1C = .data:0x80088A1C; // type:object size:0x4 data:4byte
lbl_80088A20 = .data:0x80088A20; // type:object size:0x10 data:4byte
lbl_80088A30 = .data:0x80088A30; // type:object size:0x8 data:4byte
lbl_80088A38 = .data:0x80088A38; // type:object size:0x18 data:4byte
lbl_80088A50 = .data:0x80088A50; // type:object size:0x8 data:4byte
lbl_80088A58 = .data:0x80088A58; // type:object size:0x68
lbl_80088AC0 = .data:0x80088AC0; // type:object size:0x8 data:4byte
lbl_80088AC8 = .data:0x80088AC8; // type:object size:0x30
lbl_80088AF8 = .data:0x80088AF8; // type:object size:0x30
lbl_80088B28 = .data:0x80088B28; // type:object size:0x1C0
lbl_80088CE8 = .data:0x80088CE8; // type:object size:0x68
lbl_80088D50 = .data:0x80088D50; // type:object size:0x4 data:4byte
lbl_80088D54 = .data:0x80088D54; // type:object size:0x7C data:4byte
lbl_80088DD0 = .data:0x80088DD0; // type:object size:0x2008
lbl_8008ADD8 = .data:0x8008ADD8; // type:object size:0x5C
lbl_8008AE34 = .data:0x8008AE34; // type:object size:0x64 data:4byte
lbl_8008AE98 = .data:0x8008AE98; // type:object size:0x460
lbl_8008B2F8 = .data:0x8008B2F8; // type:object size:0x10
lbl_8008B308 = .data:0x8008B308; // type:object size:0x30 data:byte
lbl_8008B338 = .data:0x8008B338; // type:object size:0x380
lbl_8008B6B8 = .data:0x8008B6B8; // type:object size:0xC
lbl_8008B6C4 = .data:0x8008B6C4; // type:object size:0x1A data:string
lbl_8008B6E0 = .bss:0x8008B6E0; // type:object size:0xC
lbl_8008B6EC = .bss:0x8008B6EC; // type:object size:0xB84
fragmentinfo = .bss:0x8008C270; // type:object size:0xC scope:local data:4byte
__atexit_funcs = .bss:0x8008C280; // type:object size:0x100 scope:local
protopool$192 = .bss:0x8008C380; // type:object size:0x38 data:4byte
stderr_buff = .bss:0x8008C3B8; // type:object size:0x100
stdout_buff = .bss:0x8008C4B8; // type:object size:0x100
stdin_buff = .bss:0x8008C5B8; // type:object size:0x100
signal_funcs = .bss:0x8008C6B8; // type:object size:0x18
gTRKEventQueue = .bss:0x8008C6D0; // type:object size:0x28
gTRKBigEndian = .bss:0x8008C6F8; // type:object size:0x4 scope:global data:4byte
gTRKMsgBufs = .bss:0x8008C700; // type:object size:0x19B0
gTRKInputPendingPtr = .bss:0x8008E0B0; // type:object size:0x4 scope:global data:4byte
gTRKFramingState = .bss:0x8008E0B4; // type:object size:0x14 data:4byte
gTRKDispatchTableSize = .bss:0x8008E0C8; // type:object size:0x4 data:4byte
IsTRKConnected = .bss:0x8008E0D0; // type:object size:0x4 data:4byte
TRK_saved_exceptionID = .bss:0x8008E0D8; // type:object size:0x2 scope:local data:2byte
gTRKState = .bss:0x8008E0DC; // type:object size:0xA4 scope:global data:4byte
gTRKCPUState = .bss:0x8008E180; // type:object size:0x430 scope:global
gTRKSaveState = .bss:0x8008E5B0; // type:object size:0x94 scope:global data:4byte
TRKvalue128_temp = .bss:0x8008E644; // type:object size:0x10
lc_base = .bss:0x8008E658; // type:object size:0x4 data:4byte
TRK_mainError = .bss:0x8008E660; // type:object size:0x4 scope:local data:4byte
gWritePos = .bss:0x8008E668; // type:object size:0x4 data:4byte
gReadPos = .bss:0x8008E66C; // type:object size:0x4 data:4byte
gReadCount = .bss:0x8008E670; // type:object size:0x4 data:4byte
_MetroTRK_Has_Framing = .bss:0x8008E674; // type:object size:0x4 data:4byte
gReadBuf = .bss:0x8008E678; // type:object size:0x110A
gWriteBuf = .bss:0x8008F784; // type:object size:0x110A
bUseSerialIO = .bss:0x80090890; // type:object size:0x1 data:byte
__AXStackHead = .bss:0x80090898; // type:object size:0x80 data:4byte
__AXStackTail = .bss:0x80090918; // type:object size:0x80 data:4byte
__AXBufferAuxA = .bss:0x800909A0; // type:object size:0x1680 data:4byte
__AXBufferAuxB = .bss:0x80092020; // type:object size:0x1680 data:4byte
__AXCommandList = .bss:0x800936A0; // type:object size:0x600
__AXOutBuffer = .bss:0x80093CA0; // type:object size:0x500 data:4byte
__AXOutSBuffer = .bss:0x800941A0; // type:object size:0x280
__AXDSPTask = .bss:0x80094420; // type:object size:0x50
__AXDramImage = .bss:0x80094470; // type:object size:0x4000
__AXLocalProfile = .bss:0x80098470; // type:object size:0x38
__AXStudio = .bss:0x800984C0; // type:object size:0x36
__AXPB = .bss:0x80098500; // type:object size:0x3B00 data:2byte
__AXITD = .bss:0x8009C000; // type:object size:0x1000
__AXUpdates = .bss:0x8009D000; // type:object size:0x4000
__AXVPB = .bss:0x800A1000; // type:object size:0x8900
__CARDBlock = .bss:0x800A9900; // type:object size:0x220 data:4byte
__CARDDiskNone = .bss:0x800A9B20; // type:object size:0x20
CommandList = .bss:0x800A9B40; // type:object size:0x3C scope:local data:4byte
AlarmForTimeout = .bss:0x800A9BA8; // type:object size:0x28 scope:local
BB2 = .bss:0x800A9C20; // type:object size:0x20 scope:local
CurrDiskID = .bss:0x800A9C40; // type:object size:0x20
DummyCommandBlock = .bss:0x800A9C60; // type:object size:0x30 scope:local
ResetAlarm = .bss:0x800A9C90; // type:object size:0x28
WaitingQueue = .bss:0x800A9CB8; // type:object size:0x20 scope:local data:4byte
bb2Buf = .bss:0x800A9CD8; // type:object size:0x3F scope:local
block$16 = .bss:0x800A9D18; // type:object size:0x30 scope:local
Ecb = .bss:0x800A9D48; // type:object size:0xC0 scope:local data:4byte
gxData = .bss:0x800A9E08; // type:object size:0x4F8 scope:local
lbl_800AA380 = .bss:0x800AA380; // type:object size:0x1800 data:4byte
DriveInfo = .bss:0x800ABB80; // type:object size:0x20 scope:local
__OSErrorTable = .bss:0x800ABBD0; // type:object size:0x44 scope:global data:4byte
lbl_800ABC20 = .bss:0x800ABC20; // type:object size:0x20
Scb = .bss:0x800ABC40; // type:object size:0x54 scope:local data:4byte
RunQueue = .bss:0x800ABC98; // type:object size:0x100 scope:local data:4byte
lbl_800AC690 = .bss:0x800AC690; // type:object size:0x10
lbl_800AC6A0 = .bss:0x800AC6A0; // type:object size:0x40
Packet = .bss:0x800AC6E0; // type:object size:0x80 scope:local data:4byte
lbl_800AC760 = .bss:0x800AC760; // type:object size:0xA0
TypeTime = .bss:0x800AC800; // type:object size:0x20 scope:local
lbl_800AC820 = .bss:0x800AC820; // type:object size:0x20
lbl_800AC840 = .bss:0x800AC840; // type:object size:0x40
lbl_800AC880 = .bss:0x800AC880; // type:object size:0x60 data:4byte
lbl_800AC8E0 = .bss:0x800AC8E0; // type:object size:0x148 data:2byte
lbl_800ACA28 = .bss:0x800ACA28; // type:object size:0x80
lbl_800ACAA8 = .bss:0x800ACAA8; // type:object size:0x10
lbl_800ACAB8 = .bss:0x800ACAB8; // type:object size:0x20
lbl_800ACAD8 = .bss:0x800ACAD8; // type:object size:0x500
lbl_800ACFD8 = .bss:0x800ACFD8; // type:object size:0xF0
lbl_800AD0C8 = .bss:0x800AD0C8; // type:object size:0xC data:4byte
lbl_800AD0D4 = .bss:0x800AD0D4; // type:object size:0x20 data:4byte
lbl_800AD0F4 = .bss:0x800AD0F4; // type:object size:0x30
lbl_800AD124 = .bss:0x800AD124; // type:object size:0x10 data:float
lbl_800AD134 = .bss:0x800AD134; // type:object size:0x28 data:float
lbl_800AD15C = .bss:0x800AD15C; // type:object size:0x30 data:float
lbl_800AD18C = .bss:0x800AD18C; // type:object size:0x1F4
lbl_800AD380 = .bss:0x800AD380; // type:object size:0x20
lbl_800AD3A0 = .bss:0x800AD3A0; // type:object size:0xD0
lbl_800AD470 = .bss:0x800AD470; // type:object size:0x20
lbl_800AD490 = .bss:0x800AD490; // type:object size:0x20
lbl_800AD4B0 = .bss:0x800AD4B0; // type:object size:0x100
lbl_800AD5B0 = .bss:0x800AD5B0; // type:object size:0x30
lbl_800AD5E0 = .bss:0x800AD5E0; // type:object size:0x100
lbl_800AD6E0 = .bss:0x800AD6E0; // type:object size:0x1E0
lbl_800AD8C0 = .bss:0x800AD8C0; // type:object size:0x28 data:4byte
lbl_800AD8E8 = .bss:0x800AD8E8; // type:object size:0x30
lbl_800AD918 = .bss:0x800AD918; // type:object size:0x100
lbl_800ADA18 = .bss:0x800ADA18; // type:object size:0x10 data:4byte
lbl_800ADA28 = .bss:0x800ADA28; // type:object size:0x4 data:4byte
lbl_800ADA2C = .bss:0x800ADA2C; // type:object size:0xC04 data:byte
lbl_800AE630 = .bss:0x800AE630; // type:object size:0x9C0 data:byte
lbl_800AEFF0 = .bss:0x800AEFF0; // type:object size:0x4 data:4byte
lbl_800AEFF4 = .bss:0x800AEFF4; // type:object size:0x4 data:4byte
lbl_800AEFF8 = .bss:0x800AEFF8; // type:object size:0x14 data:4byte
lbl_800AF00C = .bss:0x800AF00C; // type:object size:0xC84 data:2byte
lbl_800AFC90 = .bss:0x800AFC90; // type:object size:0x8 data:4byte
lbl_800AFC98 = .bss:0x800AFC98; // type:object size:0x8 data:4byte
lbl_800AFCA0 = .bss:0x800AFCA0; // type:object size:0x4 data:4byte
lbl_800AFCA4 = .bss:0x800AFCA4; // type:object size:0x4 data:4byte
lbl_800AFCA8 = .bss:0x800AFCA8; // type:object size:0x120
lbl_800AFDC8 = .bss:0x800AFDC8; // type:object size:0x8 data:4byte
lbl_800AFDD0 = .bss:0x800AFDD0; // type:object size:0x40
lbl_800AFE10 = .bss:0x800AFE10; // type:object size:0x400
lbl_800B0210 = .bss:0x800B0210; // type:object size:0x8 data:4byte
lbl_800B0218 = .bss:0x800B0218; // type:object size:0x9D0 data:4byte
lbl_800B0BE8 = .bss:0x800B0BE8; // type:object size:0x16C0 data:byte
lbl_800B22A8 = .bss:0x800B22A8; // type:object size:0x4 data:4byte
lbl_800B22AC = .bss:0x800B22AC; // type:object size:0x4 data:4byte
lbl_800B22B0 = .bss:0x800B22B0; // type:object size:0x4 data:4byte
lbl_800B22B4 = .bss:0x800B22B4; // type:object size:0x4 data:4byte
lbl_800B22B8 = .bss:0x800B22B8; // type:object size:0xE60 data:byte
lbl_800B3118 = .bss:0x800B3118; // type:object size:0x4 data:4byte
lbl_800B311C = .bss:0x800B311C; // type:object size:0x20 data:4byte
lbl_800B313C = .bss:0x800B313C; // type:object size:0x10 data:4byte
lbl_800B314C = .bss:0x800B314C; // type:object size:0x14 data:4byte
lbl_800B3160 = .bss:0x800B3160; // type:object size:0x10 data:4byte
lbl_800B3170 = .bss:0x800B3170; // type:object size:0x4 data:4byte
lbl_800B3174 = .bss:0x800B3174; // type:object size:0x3C4 data:4byte
lbl_800B3538 = .bss:0x800B3538; // type:object size:0x4
lbl_800B353C = .bss:0x800B353C; // type:object size:0x7CAC data:4byte
lbl_800BB1E8 = .bss:0x800BB1E8; // type:object size:0x4 data:4byte
lbl_800BB1EC = .bss:0x800BB1EC; // type:object size:0x4 data:4byte
lbl_800BB1F0 = .bss:0x800BB1F0; // type:object size:0x8 data:4byte
lbl_800BB1F8 = .bss:0x800BB1F8; // type:object size:0x4 data:4byte
lbl_800BB1FC = .bss:0x800BB1FC; // type:object size:0x4 data:4byte
lbl_800BB200 = .bss:0x800BB200; // type:object size:0x4 data:4byte
lbl_800BB204 = .bss:0x800BB204; // type:object size:0x4 data:4byte
lbl_800BB208 = .bss:0x800BB208; // type:object size:0x4 data:4byte
lbl_800BB20C = .bss:0x800BB20C; // type:object size:0x20
lbl_800BB22C = .bss:0x800BB22C; // type:object size:0x100
lbl_800BB32C = .bss:0x800BB32C; // type:object size:0x4 data:4byte
lbl_800BB330 = .bss:0x800BB330; // type:object size:0x400
lbl_800BB730 = .bss:0x800BB730; // type:object size:0x440 data:byte
lbl_800BBB70 = .bss:0x800BBB70; // type:object size:0x4 data:4byte
lbl_800BBB74 = .bss:0x800BBB74; // type:object size:0x4 data:4byte
lbl_800BBB78 = .bss:0x800BBB78; // type:object size:0x2080
lbl_800BDBF8 = .bss:0x800BDBF8; // type:object size:0x4 data:4byte
lbl_800BDBFC = .bss:0x800BDBFC; // type:object size:0x140 data:4byte
lbl_800BDD3C = .bss:0x800BDD3C; // type:object size:0x344 data:4byte
lbl_800BE080 = .bss:0x800BE080; // type:object size:0xC data:4byte
lbl_800BE08C = .bss:0x800BE08C; // type:object size:0x4 data:4byte
lbl_800BE090 = .bss:0x800BE090; // type:object size:0x4 data:4byte
lbl_800BE094 = .bss:0x800BE094; // type:object size:0xFA4 data:byte
lbl_800BF038 = .bss:0x800BF038; // type:object size:0x100
lbl_800BF138 = .bss:0x800BF138; // type:object size:0x4 data:4byte
lbl_800BF13C = .bss:0x800BF13C; // type:object size:0x104 data:4byte
lbl_800BF240 = .bss:0x800BF240; // type:object size:0x10 data:4byte
lbl_800BF250 = .bss:0x800BF250; // type:object size:0x4 data:4byte
lbl_800BF254 = .bss:0x800BF254; // type:object size:0x2384 data:byte
lbl_800C15D8 = .bss:0x800C15D8; // type:object size:0x4 data:4byte
lbl_800C15DC = .bss:0x800C15DC; // type:object size:0x4 data:4byte
lbl_800C15E0 = .bss:0x800C15E0; // type:object size:0x4 data:4byte
lbl_800C15E4 = .bss:0x800C15E4; // type:object size:0x484
lbl_800C1A68 = .bss:0x800C1A68; // type:object size:0x4 data:4byte
lbl_800C1A6C = .bss:0x800C1A6C; // type:object size:0x4004 data:4byte
lbl_800C5A70 = .bss:0x800C5A70; // type:object size:0x4 data:4byte
lbl_800C5A74 = .bss:0x800C5A74; // type:object size:0xC04
lbl_800C6678 = .bss:0x800C6678; // type:object size:0x30 data:4byte
lbl_800C66A8 = .bss:0x800C66A8; // type:object size:0x80
lbl_800C6728 = .bss:0x800C6728; // type:object size:0x8 data:4byte
lbl_800C6730 = .bss:0x800C6730; // type:object size:0x8 data:4byte
lbl_800C6738 = .bss:0x800C6738; // type:object size:0x8 data:4byte
lbl_800C6740 = .bss:0x800C6740; // type:object size:0x200
lbl_800C6940 = .bss:0x800C6940; // type:object size:0x4 data:4byte
lbl_800C6944 = .bss:0x800C6944; // type:object size:0x9F4 data:4byte
lbl_800C7338 = .bss:0x800C7338; // type:object size:0x4 data:4byte
lbl_800C733C = .bss:0x800C733C; // type:object size:0x104 data:4byte
lbl_800C7440 = .bss:0x800C7440; // type:object size:0x4 data:4byte
lbl_800C7444 = .bss:0x800C7444; // type:object size:0x4 data:4byte
lbl_800C7448 = .bss:0x800C7448; // type:object size:0x8 data:4byte
lbl_800C7450 = .bss:0x800C7450; // type:object size:0x4 data:4byte
lbl_800C7454 = .bss:0x800C7454; // type:object size:0x10C0
lbl_800C8514 = .bss:0x800C8514; // type:object size:0xE84 data:byte
lbl_800C9398 = .bss:0x800C9398; // type:object size:0x14 data:4byte
lbl_800C93AC = .bss:0x800C93AC; // type:object size:0x184 data:4byte
lbl_800C9530 = .bss:0x800C9530; // type:object size:0x104
lbl_800C9634 = .bss:0x800C9634; // type:object size:0x100 data:byte
lbl_800C9734 = .bss:0x800C9734; // type:object size:0x104 data:byte
lbl_800C9838 = .bss:0x800C9838; // type:object size:0x28 data:byte
lbl_800C9860 = .bss:0x800C9860; // type:object size:0x100
lbl_800C9960 = .bss:0x800C9960; // type:object size:0x400
__RTTI__Q23std9exception = .sdata:0x800C9D60; // type:object size:0x8 scope:local
thandler__3std = .sdata:0x800C9D68; // type:object size:0x4 data:4byte
uhandler__3std = .sdata:0x800C9D6C; // type:object size:0x4 data:4byte
fragmentID = .sdata:0x800C9D70; // type:object size:0x4 scope:local data:4byte
__RTTI__Q23std9exception = .sdata:0x800C9D78; // type:object size:0x8 scope:local
__RTTI__Q23std13bad_exception = .sdata:0x800C9D80; // type:object size:0x8
@wstringBase0 = .sdata:0x800C9D88; // type:object size:0x2 scope:local
next = .sdata:0x800C9D90; // type:object size:0x4 scope:local data:4byte
__float_nan = .sdata:0x800C9D98; // type:object size:0x4 data:float
__float_huge = .sdata:0x800C9D9C; // type:object size:0x4 data:float
__double_max = .sdata:0x800C9DA0; // type:object size:0x8 data:double
__double_huge = .sdata:0x800C9DA8; // type:object size:0x8 data:double
__extended_min = .sdata:0x800C9DB0; // type:object size:0x8 data:double
__extended_max = .sdata:0x800C9DB8; // type:object size:0x8 data:double
__AIVersion = .sdata:0x800C9DC0; // type:object size:0x4 data:4byte
__ARVersion = .sdata:0x800C9DC8; // type:object size:0x4 data:4byte
__ARQVersion = .sdata:0x800C9DD0; // type:object size:0x4 data:4byte
__AXVersion = .sdata:0x800C9DD8; // type:object size:0x4 data:4byte
axDspSlaveLength = .sdata:0x800C9DE0; // type:object size:0x2 data:2byte
__AXFXAlloc = .sdata:0x800C9DE8; // type:object size:0x4 data:4byte
__AXFXFree = .sdata:0x800C9DEC; // type:object size:0x4 data:4byte
__CARDVersion = .sdata:0x800C9DF0; // type:object size:0x4 data:4byte
next = .sdata:0x800C9DF8; // type:object size:0x4 scope:local data:4byte
__CARDVendorID = .sdata:0x800C9E00; // type:object size:0x2 data:2byte
__DSPVersion = .sdata:0x800C9E08; // type:object size:0x4 data:4byte
FirstRead = .sdata:0x800C9E10; // type:object size:0x4 data:4byte
lbl_800C9E18 = .sdata:0x800C9E18; // type:object size:0x8 data:string
__DVDVersion = .sdata:0x800C9E20; // type:object size:0x4 scope:global data:4byte
autoInvalidation = .sdata:0x800C9E24; // type:object size:0x4 scope:local data:4byte
checkOptionalCommand = .sdata:0x800C9E28; // type:object size:0x4 data:4byte
lbl_800C9E2C = .sdata:0x800C9E2C; // type:object size:0x6 data:string
DmaCommand = .sdata:0x800C9E34; // type:object size:0x4 data:4byte
@35 = .sdata:0x800C9E38; // type:object size:0x2 scope:local data:string
@40 = .sdata:0x800C9E3C; // type:object size:0x4 scope:local data:string
@41 = .sdata:0x800C9E40; // type:object size:0x3 scope:local data:string
__EXIVersion = .sdata:0x800C9E48; // type:object size:0x4 scope:global data:4byte
__GXVersion = .sdata:0x800C9E50; // type:object size:0x4 scope:global data:4byte
lbl_800C9E58 = .sdata:0x800C9E58; // type:object size:0x4
lbl_800C9E5C = .sdata:0x800C9E5C; // type:object size:0x4
lbl_800C9E60 = .sdata:0x800C9E60; // type:object size:0x8
lbl_800C9E68 = .sdata:0x800C9E68; // type:object size:0x8
lbl_800C9E70 = .sdata:0x800C9E70; // type:object size:0x8
lbl_800C9E78 = .sdata:0x800C9E78; // type:object size:0x8
lbl_800C9E80 = .sdata:0x800C9E80; // type:object size:0x8
lbl_800C9E88 = .sdata:0x800C9E88; // type:object size:0x8
lbl_800C9E90 = .sdata:0x800C9E90; // type:object size:0x8
lbl_800C9E98 = .sdata:0x800C9E98; // type:object size:0x8
lbl_800C9EA0 = .sdata:0x800C9EA0; // type:object size:0x8
lbl_800C9EA8 = .sdata:0x800C9EA8; // type:object size:0x8
__OSVersion = .sdata:0x800C9EB0; // type:object size:0x4 scope:global data:4byte
lbl_800C9EB4 = .sdata:0x800C9EB4; // type:object size:0x4 data:string
lbl_800C9EB8 = .sdata:0x800C9EB8; // type:object size:0x8 data:4byte
__OSArenaLo = .sdata:0x800C9EC0; // type:object size:0x4 scope:local data:4byte
lbl_800C9EC8 = .sdata:0x800C9EC8; // type:object size:0x4 data:4byte
@76 = .sdata:0x800C9ECC; // type:object size:0x2 scope:local data:string
lbl_800C9ED0 = .sdata:0x800C9ED0; // type:object size:0x8 data:2byte
SwitchThreadCallback = .sdata:0x800C9ED8; // type:object size:0x4 scope:local data:4byte
lbl_800C9EE0 = .sdata:0x800C9EE0; // type:object size:0x4 data:4byte
lbl_800C9EE4 = .sdata:0x800C9EE4; // type:object size:0x4 data:4byte
lbl_800C9EE8 = .sdata:0x800C9EE8; // type:object size:0x4 data:4byte
lbl_800C9EEC = .sdata:0x800C9EEC; // type:object size:0x4 data:4byte
lbl_800C9EF0 = .sdata:0x800C9EF0; // type:object size:0x4 data:4byte
lbl_800C9EF4 = .sdata:0x800C9EF4; // type:object size:0x4 data:4byte
lbl_800C9EF8 = .sdata:0x800C9EF8; // type:object size:0x4
lbl_800C9EFC = .sdata:0x800C9EFC; // type:object size:0x4
__SIVersion = .sdata:0x800C9F00; // type:object size:0x4 scope:global data:4byte
lbl_800C9F08 = .sdata:0x800C9F08; // type:object size:0x4 data:4byte
lbl_800C9F0C = .sdata:0x800C9F0C; // type:object size:0xC
lbl_800C9F18 = .sdata:0x800C9F18; // type:object size:0x8 data:4byte
lbl_800C9F20 = .sdata:0x800C9F20; // type:object size:0xC
lbl_800C9F2C = .sdata:0x800C9F2C; // type:object size:0x8 data:float
lbl_800C9F34 = .sdata:0x800C9F34; // type:object size:0x4 data:float
lbl_800C9F38 = .sdata:0x800C9F38; // type:object size:0x8 data:float
lbl_800C9F40 = .sdata:0x800C9F40; // type:object size:0x8 data:4byte
lbl_800C9F48 = .sdata:0x800C9F48; // type:object size:0x8
lbl_800C9F50 = .sdata:0x800C9F50; // type:object size:0x8
lbl_800C9F58 = .sdata:0x800C9F58; // type:object size:0x8
lbl_800C9F60 = .sdata:0x800C9F60; // type:object size:0x8
lbl_800C9F68 = .sdata:0x800C9F68; // type:object size:0x8 data:4byte
lbl_800C9F70 = .sdata:0x800C9F70; // type:object size:0x4 data:4byte
lbl_800C9F74 = .sdata:0x800C9F74; // type:object size:0x4 data:4byte
lbl_800C9F78 = .sdata:0x800C9F78; // type:object size:0x8 data:byte
lbl_800C9F80 = .sdata:0x800C9F80; // type:object size:0x4 data:4byte
lbl_800C9F84 = .sdata:0x800C9F84; // type:object size:0x4 data:4byte
lbl_800C9FA0 = .sbss:0x800C9FA0; // type:object size:0x4 data:4byte
lbl_800C9FA4 = .sbss:0x800C9FA4; // type:object size:0x4 data:4byte
lbl_800C9FA8 = .sbss:0x800C9FA8; // type:object size:0x4 data:4byte
lbl_800C9FAC = .sbss:0x800C9FAC; // type:object size:0x4 data:4byte
lbl_800C9FB0 = .sbss:0x800C9FB0; // type:object size:0x4 data:4byte
lbl_800C9FB4 = .sbss:0x800C9FB4; // type:object size:0x4 data:4byte
lbl_800C9FB8 = .sbss:0x800C9FB8; // type:object size:0x4 data:4byte
lbl_800C9FBC = .sbss:0x800C9FBC; // type:object size:0x4 data:4byte
lbl_800C9FC0 = .sbss:0x800C9FC0; // type:object size:0x4 data:4byte
lbl_800C9FC4 = .sbss:0x800C9FC4; // type:object size:0x4 data:4byte
lbl_800C9FC8 = .sbss:0x800C9FC8; // type:object size:0x4 data:4byte
lbl_800C9FCC = .sbss:0x800C9FCC; // type:object size:0x4 data:4byte
lbl_800C9FD0 = .sbss:0x800C9FD0; // type:object size:0x8 data:4byte
__global_destructor_chain = .sbss:0x800C9FD8; // type:object size:0x4 scope:global data:4byte
__aborting = .sbss:0x800C9FE0; // type:object size:0x4 scope:global data:4byte
__atexit_curr_func = .sbss:0x800C9FE4; // type:object size:0x4 scope:local data:4byte
__stdio_exit = .sbss:0x800C9FE8; // type:object size:0x4 scope:global data:4byte
__console_exit = .sbss:0x800C9FEC; // type:object size:0x4 scope:global data:4byte
init$193 = .sbss:0x800C9FF0; // type:object size:0x1 data:byte
errno = .sbss:0x800C9FF8; // type:object size:0x4 data:4byte
initialized$16 = .sbss:0x800CA000; // type:object size:0x4 data:4byte
zero = .sbss:0x800CA008; // type:object size:0x8 scope:local data:double
zero = .sbss:0x800CA010; // type:object size:0x8 scope:local data:double
__AIS_Callback = .sbss:0x800CA018; // type:object size:0x4 data:4byte
__AID_Callback = .sbss:0x800CA01C; // type:object size:0x4 data:4byte
__CallbackStack = .sbss:0x800CA020; // type:object size:0x4 data:4byte
__OldStack = .sbss:0x800CA024; // type:object size:0x4 data:4byte
__AI_init_flag = .sbss:0x800CA028; // type:object size:0x4 data:4byte
__AID_Active = .sbss:0x800CA02C; // type:object size:0x4 data:4byte
bound_32KHz = .sbss:0x800CA030; // type:object size:0x8 data:4byte
bound_48KHz = .sbss:0x800CA038; // type:object size:0x8 data:4byte
min_wait = .sbss:0x800CA040; // type:object size:0x8 data:4byte
max_wait = .sbss:0x800CA048; // type:object size:0x8 data:4byte
buffer = .sbss:0x800CA050; // type:object size:0x8 data:4byte
__AR_Callback = .sbss:0x800CA058; // type:object size:0x4 data:4byte
__AR_Size = .sbss:0x800CA05C; // type:object size:0x4 data:4byte
__AR_InternalSize = .sbss:0x800CA060; // type:object size:0x4 data:4byte
__AR_ExpansionSize = .sbss:0x800CA064; // type:object size:0x4 data:4byte
__AR_StackPointer = .sbss:0x800CA068; // type:object size:0x4 data:4byte
__AR_FreeBlocks = .sbss:0x800CA06C; // type:object size:0x4 data:4byte
__AR_BlockLength = .sbss:0x800CA070; // type:object size:0x4 data:4byte
__AR_init_flag = .sbss:0x800CA074; // type:object size:0x4 data:4byte
__ARQRequestQueueHi = .sbss:0x800CA078; // type:object size:0x4 data:4byte
__ARQRequestTailHi = .sbss:0x800CA07C; // type:object size:0x4 data:4byte
__ARQRequestQueueLo = .sbss:0x800CA080; // type:object size:0x4 data:4byte
__ARQRequestTailLo = .sbss:0x800CA084; // type:object size:0x4 data:4byte
__ARQRequestPendingHi = .sbss:0x800CA088; // type:object size:0x4 data:4byte
__ARQRequestPendingLo = .sbss:0x800CA08C; // type:object size:0x4 data:4byte
__ARQCallbackHi = .sbss:0x800CA090; // type:object size:0x4 data:4byte
__ARQCallbackLo = .sbss:0x800CA094; // type:object size:0x4 data:4byte
__ARQChunkSize = .sbss:0x800CA098; // type:object size:0x4 data:4byte
__ARQ_init_flag = .sbss:0x800CA09C; // type:object size:0x4 data:4byte
__AXCallbackStack = .sbss:0x800CA0A0; // type:object size:0x4 data:4byte
__AXCallbackAuxA = .sbss:0x800CA0A8; // type:object size:0x4 data:4byte
__AXCallbackAuxB = .sbss:0x800CA0AC; // type:object size:0x4 data:4byte
__AXContextAuxA = .sbss:0x800CA0B0; // type:object size:0x4 data:4byte
__AXContextAuxB = .sbss:0x800CA0B4; // type:object size:0x4 data:4byte
__AXAuxADspWrite = .sbss:0x800CA0B8; // type:object size:0x4 data:4byte
__AXAuxADspRead = .sbss:0x800CA0BC; // type:object size:0x4 data:4byte
__AXAuxBDspWrite = .sbss:0x800CA0C0; // type:object size:0x4 data:4byte
__AXAuxBDspRead = .sbss:0x800CA0C4; // type:object size:0x4 data:4byte
__AXAuxDspWritePosition = .sbss:0x800CA0C8; // type:object size:0x4 data:4byte
__AXAuxDspReadPosition = .sbss:0x800CA0CC; // type:object size:0x4 data:4byte
__AXAuxDspWritePositionDpl2 = .sbss:0x800CA0D0; // type:object size:0x4 data:4byte
__AXAuxDspReadPositionDpl2 = .sbss:0x800CA0D4; // type:object size:0x4 data:4byte
__AXAuxCpuReadWritePosition = .sbss:0x800CA0D8; // type:object size:0x4 data:4byte
__AXCommandListPosition = .sbss:0x800CA0E0; // type:object size:0x4 data:4byte
__AXClWrite = .sbss:0x800CA0E4; // type:object size:0x4 data:4byte
__AXCommandListCycles = .sbss:0x800CA0E8; // type:object size:0x4 data:4byte
__AXCompressor = .sbss:0x800CA0EC; // type:object size:0x4 data:4byte
__AXClMode = .sbss:0x800CA0F0; // type:object size:0x4 data:4byte
__AXOutFrame = .sbss:0x800CA0F8; // type:object size:0x4 data:4byte
__AXOutDspReady = .sbss:0x800CA0FC; // type:object size:0x4 data:4byte
__AXOsTime = .sbss:0x800CA100; // type:object size:0x8 data:4byte
__AXUserFrameCallback = .sbss:0x800CA108; // type:object size:0x4 data:4byte
__AXDSPInitFlag = .sbss:0x800CA10C; // type:object size:0x4 data:4byte
__AXDSPDoneFlag = .sbss:0x800CA110; // type:object size:0x4 data:4byte
__AXDebugSteppingMode = .sbss:0x800CA114; // type:object size:0x4 data:4byte
__AXOutThreadQueue = .sbss:0x800CA118; // type:object size:0x8
__AXSpbAL = .sbss:0x800CA120; // type:object size:0x4 data:4byte
__AXSpbAR = .sbss:0x800CA124; // type:object size:0x4 data:4byte
__AXSpbAS = .sbss:0x800CA128; // type:object size:0x4 data:4byte
__AXSpbAAL = .sbss:0x800CA12C; // type:object size:0x4 data:4byte
__AXSpbAAR = .sbss:0x800CA130; // type:object size:0x4 data:4byte
__AXSpbAAS = .sbss:0x800CA134; // type:object size:0x4 data:4byte
__AXSpbABL = .sbss:0x800CA138; // type:object size:0x4 data:4byte
__AXSpbABR = .sbss:0x800CA13C; // type:object size:0x4 data:4byte
__AXSpbABS = .sbss:0x800CA140; // type:object size:0x4 data:4byte
__AXMaxDspCycles = .sbss:0x800CA148; // type:object size:0x4 data:4byte
__AXRecDspCycles = .sbss:0x800CA14C; // type:object size:0x4 data:4byte
__AXNumVoices = .sbss:0x800CA150; // type:object size:0x4 data:4byte
__AXProfile = .sbss:0x800CA158; // type:object size:0x4 data:4byte
__AXMaxProfiles = .sbss:0x800CA15C; // type:object size:0x4 data:4byte
__AXCurrentProfile = .sbss:0x800CA160; // type:object size:0x4 data:4byte
__AXProfileInitialized = .sbss:0x800CA164; // type:object size:0x4 data:4byte
__CARDEncode = .sbss:0x800CA168; // type:object size:0x2 data:2byte
__DBInterface = .sbss:0x800CA170; // type:object size:0x4 scope:global data:4byte
DBVerbose = .sbss:0x800CA174; // type:object size:0x4 scope:global data:4byte
__DSP_init_flag = .sbss:0x800CA178; // type:object size:0x4 data:4byte
__DSP_rude_task_pending = .sbss:0x800CA180; // type:object size:0x4 data:4byte
__DSP_rude_task = .sbss:0x800CA184; // type:object size:0x4 data:4byte
__DSP_tmp_task = .sbss:0x800CA188; // type:object size:0x4 data:4byte
__DSP_last_task = .sbss:0x800CA18C; // type:object size:0x4 data:4byte
__DSP_first_task = .sbss:0x800CA190; // type:object size:0x4 data:4byte
__DSP_curr_task = .sbss:0x800CA194; // type:object size:0x4 data:4byte
StopAtNextInt = .sbss:0x800CA198; // type:object size:0x4 scope:local data:4byte
LastLength = .sbss:0x800CA19C; // type:object size:0x4 data:4byte
Callback = .sbss:0x800CA1A0; // type:object size:0x4 scope:local data:4byte
ResetCoverCallback = .sbss:0x800CA1A4; // type:object size:0x4 data:4byte
LastResetEnd = .sbss:0x800CA1A8; // type:object size:0x8 scope:local data:4byte
ResetOccurred = .sbss:0x800CA1B0; // type:object size:0x4 scope:local data:4byte
WaitingCoverClose = .sbss:0x800CA1B4; // type:object size:0x4 scope:local data:4byte
Breaking = .sbss:0x800CA1B8; // type:object size:0x4 data:4byte
WorkAroundType = .sbss:0x800CA1BC; // type:object size:0x4 scope:local data:4byte
WorkAroundSeekLocation = .sbss:0x800CA1C0; // type:object size:0x4 scope:local data:4byte
LastReadFinished = .sbss:0x800CA1C8; // type:object size:0x8 data:4byte
LastReadIssued = .sbss:0x800CA1D0; // type:object size:0x8 data:4byte
LastCommandWasRead = .sbss:0x800CA1D8; // type:object size:0x4 data:4byte
NextCommandNumber = .sbss:0x800CA1DC; // type:object size:0x4 scope:local data:4byte
BootInfo = .sbss:0x800CA1E0; // type:object size:0x4 scope:local data:4byte
FstStart = .sbss:0x800CA1E4; // type:object size:0x4 scope:local data:4byte
FstStringStart = .sbss:0x800CA1E8; // type:object size:0x4 scope:local data:4byte
MaxEntryNum = .sbss:0x800CA1EC; // type:object size:0x4 scope:local data:4byte
currentDirectory = .sbss:0x800CA1F0; // type:object size:0x4 data:4byte
__DVDLongFileNameFlag = .sbss:0x800CA1F4; // type:object size:0x4 scope:global data:4byte
__DVDThreadQueue = .sbss:0x800CA1F8; // type:object size:0x8 scope:global
executing = .sbss:0x800CA200; // type:object size:0x4 scope:local data:4byte
IDShouldBe = .sbss:0x800CA204; // type:object size:0x4 scope:local data:4byte
bootInfo = .sbss:0x800CA208; // type:object size:0x4 scope:local data:4byte
PauseFlag = .sbss:0x800CA20C; // type:object size:0x4 scope:local data:4byte
PausingFlag = .sbss:0x800CA210; // type:object size:0x4 scope:local data:4byte
AutoFinishing = .sbss:0x800CA214; // type:object size:0x4 data:4byte
FatalErrorFlag = .sbss:0x800CA218; // type:object size:0x4 scope:local data:4byte
CurrCommand = .sbss:0x800CA21C; // type:object size:0x4 scope:local data:4byte
Canceling = .sbss:0x800CA220; // type:object size:0x4 data:4byte
CancelCallback = .sbss:0x800CA224; // type:object size:0x4 data:4byte
ResumeFromHere = .sbss:0x800CA228; // type:object size:0x4 scope:local data:4byte
CancelLastError = .sbss:0x800CA22C; // type:object size:0x4 scope:local data:4byte
LastError = .sbss:0x800CA230; // type:object size:0x4 data:4byte
NumInternalRetry = .sbss:0x800CA234; // type:object size:0x4 data:4byte
ResetRequired = .sbss:0x800CA238; // type:object size:0x4 scope:local data:4byte
FirstTimeInBootrom = .sbss:0x800CA23C; // type:object size:0x4 scope:local data:4byte
DVDInitialized = .sbss:0x800CA240; // type:object size:0x4 scope:local data:4byte
LastState = .sbss:0x800CA244; // type:object size:0x4 data:4byte
FatalFunc = .sbss:0x800CA248; // type:object size:0x4 data:4byte
status = .sbss:0x800CA250; // type:object size:0x4 data:4byte
bb2 = .sbss:0x800CA254; // type:object size:0x4 scope:local data:4byte
idTmp = .sbss:0x800CA258; // type:object size:0x4 scope:local data:4byte
IDSerialPort1 = .sbss:0x800CA260; // type:object size:0x4 scope:local data:4byte
lbl_800CA268 = .sbss:0x800CA268; // type:object size:0x4 data:4byte
lbl_800CA26C = .sbss:0x800CA26C; // type:object size:0x4 data:4byte
lbl_800CA270 = .sbss:0x800CA270; // type:object size:0x4 data:4byte
lbl_800CA274 = .sbss:0x800CA274; // type:object size:0x4 data:4byte
__piReg = .sbss:0x800CA278; // type:object size:0x4 scope:global data:4byte
__cpReg = .sbss:0x800CA27C; // type:object size:0x4 scope:global data:4byte
__peReg = .sbss:0x800CA280; // type:object size:0x4 scope:global data:4byte
__memReg = .sbss:0x800CA284; // type:object size:0x4 scope:global data:4byte
lbl_800CA288 = .sbss:0x800CA288; // type:object size:0x8 data:4byte
lbl_800CA290 = .sbss:0x800CA290; // type:object size:0x4 data:4byte
lbl_800CA294 = .sbss:0x800CA294; // type:object size:0x4 data:4byte
lbl_800CA298 = .sbss:0x800CA298; // type:object size:0x4 data:4byte
resetFuncRegistered$63 = .sbss:0x800CA29C; // type:object size:0x4 scope:local data:4byte
lbl_800CA2A0 = .sbss:0x800CA2A0; // type:object size:0x4 data:4byte
lbl_800CA2A4 = .sbss:0x800CA2A4; // type:object size:0x4 data:4byte
lbl_800CA2A8 = .sbss:0x800CA2A8; // type:object size:0x4 data:4byte
lbl_800CA2AC = .sbss:0x800CA2AC; // type:object size:0x1 data:byte
lbl_800CA2B0 = .sbss:0x800CA2B0; // type:object size:0x4 data:4byte
lbl_800CA2B4 = .sbss:0x800CA2B4; // type:object size:0x4 data:4byte
lbl_800CA2B8 = .sbss:0x800CA2B8; // type:object size:0x8 data:4byte
lbl_800CA2C0 = .sbss:0x800CA2C0; // type:object size:0x4 data:4byte
lbl_800CA2C4 = .sbss:0x800CA2C4; // type:object size:0x4 data:4byte
lbl_800CA2C8 = .sbss:0x800CA2C8; // type:object size:0x1 data:byte
lbl_800CA2CC = .sbss:0x800CA2CC; // type:object size:0xC
lbl_800CA2D8 = .sbss:0x800CA2D8; // type:object size:0x4 data:4byte
lbl_800CA2DC = .sbss:0x800CA2DC; // type:object size:0x4 data:4byte
lbl_800CA2E0 = .sbss:0x800CA2E0; // type:object size:0x8 data:4byte
BootInfo = .sbss:0x800CA2E8; // type:object size:0x4 scope:local data:4byte
BI2DebugFlag = .sbss:0x800CA2EC; // type:object size:0x4 scope:local data:4byte
BI2DebugFlagHolder = .sbss:0x800CA2F0; // type:object size:0x4 scope:local data:4byte
__OSIsGcam = .sbss:0x800CA2F4; // type:object size:0x4 scope:weak data:4byte
AreWeInitialized = .sbss:0x800CA2F8; // type:object size:0x4 scope:local data:4byte
OSExceptionTable = .sbss:0x800CA2FC; // type:object size:0x4 scope:local data:4byte
__OSSavedRegionEnd = .sbss:0x800CA300; // type:object size:0x4 scope:global data:4byte
__OSSavedRegionStart = .sbss:0x800CA304; // type:object size:0x4 scope:global data:4byte
__OSInIPL = .sbss:0x800CA308; // type:object size:0x4 scope:global data:4byte
__OSStartTime = .sbss:0x800CA310; // type:object size:0x8 scope:global data:4byte
AlarmQueue = .sbss:0x800CA318; // type:object size:0x8 scope:local data:4byte
lbl_800CA320 = .sbss:0x800CA320; // type:object size:0x4 data:4byte
lbl_800CA324 = .sbss:0x800CA324; // type:object size:0x4 data:4byte
lbl_800CA328 = .sbss:0x800CA328; // type:object size:0x4 data:4byte
lbl_800CA32C = .sbss:0x800CA32C; // type:object size:0x4 data:4byte
__OSArenaHi = .sbss:0x800CA330; // type:object size:0x4 scope:local data:4byte
lbl_800CA338 = .sbss:0x800CA338; // type:object size:0x4 data:4byte
lbl_800CA33C = .sbss:0x800CA33C; // type:object size:0x4 data:4byte
lbl_800CA340 = .sbss:0x800CA340; // type:object size:0x4 data:4byte
lbl_800CA344 = .sbss:0x800CA344; // type:object size:0x4 data:4byte
InterruptHandlerTable = .sbss:0x800CA348; // type:object size:0x4 scope:local data:4byte
__OSLastInterruptSrr0 = .sbss:0x800CA34C; // type:object size:0x4 scope:global data:4byte
__OSLastInterrupt = .sbss:0x800CA350; // type:object size:0x2 scope:global data:2byte
__OSLastInterruptTime = .sbss:0x800CA358; // type:object size:0x8 scope:global data:4byte
lbl_800CA360 = .sbss:0x800CA360; // type:object size:0x4 data:4byte
lbl_800CA364 = .sbss:0x800CA364; // type:object size:0x4 data:4byte
lbl_800CA368 = .sbss:0x800CA368; // type:object size:0x8 data:4byte
ResetFunctionQueue = .sbss:0x800CA370; // type:object size:0x8 scope:local data:4byte
lbl_800CA378 = .sbss:0x800CA378; // type:object size:0x4 data:4byte
lbl_800CA37C = .sbss:0x800CA37C; // type:object size:0x4 data:4byte
lbl_800CA380 = .sbss:0x800CA380; // type:object size:0x8 data:4byte
lbl_800CA388 = .sbss:0x800CA388; // type:object size:0x4 data:4byte
lbl_800CA38C = .sbss:0x800CA38C; // type:object size:0x4 data:4byte
lbl_800CA390 = .sbss:0x800CA390; // type:object size:0x4 data:4byte
lbl_800CA394 = .sbss:0x800CA394; // type:object size:0x4 data:4byte
RunQueueBits = .sbss:0x800CA398; // type:object size:0x4 scope:local data:4byte
RunQueueHint = .sbss:0x800CA39C; // type:object size:0x4 scope:local data:4byte
Reschedule = .sbss:0x800CA3A0; // type:object size:0x4 scope:local data:4byte
lbl_800CA3A8 = .sbss:0x800CA3A8; // type:object size:0x4 data:4byte
lbl_800CA3AC = .sbss:0x800CA3AC; // type:object size:0x4 data:4byte
lbl_800CA3B0 = .sbss:0x800CA3B0; // type:object size:0x4 data:4byte
lbl_800CA3B4 = .sbss:0x800CA3B4; // type:object size:0x4 data:4byte
lbl_800CA3B8 = .sbss:0x800CA3B8; // type:object size:0x4 data:4byte
lbl_800CA3BC = .sbss:0x800CA3BC; // type:object size:0x4 data:4byte
lbl_800CA3C0 = .sbss:0x800CA3C0; // type:object size:0x4 data:4byte
lbl_800CA3C4 = .sbss:0x800CA3C4; // type:object size:0x4 data:4byte
lbl_800CA3C8 = .sbss:0x800CA3C8; // type:object size:0x4 data:4byte
__PADSpec = .sbss:0x800CA3CC; // type:object size:0x4 scope:global data:4byte
lbl_800CA3D0 = .sbss:0x800CA3D0; // type:object size:0x4
cmdTypeAndStatus$371 = .sbss:0x800CA3D4; // type:object size:0x4 scope:local
lbl_800CA3D8 = .sbss:0x800CA3D8; // type:object size:0x8 data:4byte
SamplingRate = .sbss:0x800CA3E0; // type:object size:0x4 scope:local data:4byte
lbl_800CA3E8 = .sbss:0x800CA3E8; // type:object size:0x4 data:4byte
lbl_800CA3EC = .sbss:0x800CA3EC; // type:object size:0x4 data:4byte
lbl_800CA3F0 = .sbss:0x800CA3F0; // type:object size:0x4 data:4byte
lbl_800CA3F4 = .sbss:0x800CA3F4; // type:object size:0x8
lbl_800CA3FC = .sbss:0x800CA3FC; // type:object size:0x4 data:4byte
lbl_800CA400 = .sbss:0x800CA400; // type:object size:0x4 data:4byte
lbl_800CA404 = .sbss:0x800CA404; // type:object size:0x4 data:4byte
lbl_800CA408 = .sbss:0x800CA408; // type:object size:0x2 data:2byte
lbl_800CA40A = .sbss:0x800CA40A; // type:object size:0x2 data:2byte
lbl_800CA40C = .sbss:0x800CA40C; // type:object size:0x4 data:4byte
lbl_800CA410 = .sbss:0x800CA410; // type:object size:0x4 data:4byte
lbl_800CA414 = .sbss:0x800CA414; // type:object size:0x4 data:4byte
lbl_800CA418 = .sbss:0x800CA418; // type:object size:0x8 data:4byte
lbl_800CA420 = .sbss:0x800CA420; // type:object size:0x4 data:4byte
lbl_800CA424 = .sbss:0x800CA424; // type:object size:0x4 data:4byte
lbl_800CA428 = .sbss:0x800CA428; // type:object size:0x4 data:4byte
CurrTvMode = .sbss:0x800CA42C; // type:object size:0x4 scope:local data:4byte
lbl_800CA430 = .sbss:0x800CA430; // type:object size:0x4 data:4byte
lbl_800CA434 = .sbss:0x800CA434; // type:object size:0x4 data:4byte
lbl_800CA438 = .sbss:0x800CA438; // type:object size:0x4 data:4byte
lbl_800CA43C = .sbss:0x800CA43C; // type:object size:0x4 data:4byte
lbl_800CA440 = .sbss:0x800CA440; // type:object size:0x8
lbl_800CA448 = .sbss:0x800CA448; // type:object size:0x8 data:float
lbl_800CA450 = .sbss:0x800CA450; // type:object size:0x4 data:4byte
lbl_800CA454 = .sbss:0x800CA454; // type:object size:0x4 data:4byte
lbl_800CA458 = .sbss:0x800CA458; // type:object size:0x4 data:4byte
lbl_800CA45C = .sbss:0x800CA45C; // type:object size:0x4 data:4byte
lbl_800CA460 = .sbss:0x800CA460; // type:object size:0x4 data:4byte
lbl_800CA464 = .sbss:0x800CA464; // type:object size:0x4 data:4byte
lbl_800CA468 = .sbss:0x800CA468; // type:object size:0x4 data:4byte
lbl_800CA46C = .sbss:0x800CA46C; // type:object size:0x4 data:4byte
lbl_800CA470 = .sbss:0x800CA470; // type:object size:0x4 data:float
lbl_800CA474 = .sbss:0x800CA474; // type:object size:0x4 data:4byte
lbl_800CA478 = .sbss:0x800CA478; // type:object size:0x8 data:4byte
lbl_800CA480 = .sbss:0x800CA480; // type:object size:0x4 data:4byte
lbl_800CA484 = .sbss:0x800CA484; // type:object size:0x4 data:4byte
lbl_800CA488 = .sbss:0x800CA488; // type:object size:0x4 data:4byte
lbl_800CA48C = .sbss:0x800CA48C; // type:object size:0x4 data:4byte
lbl_800CA490 = .sbss:0x800CA490; // type:object size:0x4 data:4byte
lbl_800CA494 = .sbss:0x800CA494; // type:object size:0x4 data:4byte
lbl_800CA498 = .sbss:0x800CA498; // type:object size:0x4 data:4byte
lbl_800CA49C = .sbss:0x800CA49C; // type:object size:0x4 data:4byte
lbl_800CA4A0 = .sbss:0x800CA4A0; // type:object size:0x4 data:4byte
lbl_800CA4A4 = .sbss:0x800CA4A4; // type:object size:0x4 data:4byte
lbl_800CA4A8 = .sbss:0x800CA4A8; // type:object size:0x4 data:4byte
lbl_800CA4AC = .sbss:0x800CA4AC; // type:object size:0x4 data:4byte
lbl_800CA4B0 = .sbss:0x800CA4B0; // type:object size:0x4 data:4byte
lbl_800CA4B4 = .sbss:0x800CA4B4; // type:object size:0x4 data:4byte
lbl_800CA4B8 = .sbss:0x800CA4B8; // type:object size:0x4 data:4byte
lbl_800CA4BC = .sbss:0x800CA4BC; // type:object size:0x4 data:4byte
lbl_800CA4C0 = .sbss:0x800CA4C0; // type:object size:0x4 data:4byte
lbl_800CA4C4 = .sbss:0x800CA4C4; // type:object size:0x4 data:4byte
lbl_800CA4C8 = .sbss:0x800CA4C8; // type:object size:0x4 data:4byte
lbl_800CA4CC = .sbss:0x800CA4CC; // type:object size:0x4 data:4byte
lbl_800CA4D0 = .sbss:0x800CA4D0; // type:object size:0x4 data:4byte
lbl_800CA4D4 = .sbss:0x800CA4D4; // type:object size:0x4 data:4byte
lbl_800CA4D8 = .sbss:0x800CA4D8; // type:object size:0x8 data:4byte
lbl_800CA4E0 = .sbss:0x800CA4E0; // type:object size:0x4 data:4byte
lbl_800CA4E4 = .sbss:0x800CA4E4; // type:object size:0x4 data:4byte
lbl_800CA4E8 = .sbss:0x800CA4E8; // type:object size:0x4 data:4byte
lbl_800CA4EC = .sbss:0x800CA4EC; // type:object size:0x4 data:4byte
lbl_800CA4F0 = .sbss:0x800CA4F0; // type:object size:0x8 data:4byte
lbl_800CA4F8 = .sbss:0x800CA4F8; // type:object size:0x4 data:4byte
lbl_800CA4FC = .sbss:0x800CA4FC; // type:object size:0x4 data:4byte
lbl_800CA500 = .sbss:0x800CA500; // type:object size:0x4 data:float
lbl_800CA504 = .sbss:0x800CA504; // type:object size:0x4 data:float
lbl_800CA508 = .sbss:0x800CA508; // type:object size:0x4 data:4byte
lbl_800CA50C = .sbss:0x800CA50C; // type:object size:0x4 data:4byte
lbl_800CA510 = .sbss:0x800CA510; // type:object size:0x8 data:byte
lbl_800CA518 = .sbss:0x800CA518; // type:object size:0x4 data:4byte
lbl_800CA51C = .sbss:0x800CA51C; // type:object size:0x4 data:4byte
lbl_800CA520 = .sbss:0x800CA520; // type:object size:0x4 data:4byte
lbl_800CA524 = .sbss:0x800CA524; // type:object size:0x4 data:4byte
lbl_800CA528 = .sbss:0x800CA528; // type:object size:0x4 data:4byte
lbl_800CA52C = .sbss:0x800CA52C; // type:object size:0x2 data:2byte
lbl_800CA530 = .sbss:0x800CA530; // type:object size:0x4 data:4byte
lbl_800CA534 = .sbss:0x800CA534; // type:object size:0x4 data:4byte
lbl_800CA538 = .sbss:0x800CA538; // type:object size:0x4 data:4byte
lbl_800CA53C = .sbss:0x800CA53C; // type:object size:0x4 data:4byte
lbl_800CA540 = .sbss:0x800CA540; // type:object size:0x4 data:4byte
lbl_800CA544 = .sbss:0x800CA544; // type:object size:0x4 data:4byte
lbl_800CA548 = .sbss:0x800CA548; // type:object size:0x4 data:4byte
lbl_800CA54C = .sbss:0x800CA54C; // type:object size:0x1 data:byte
lbl_800CA550 = .sbss:0x800CA550; // type:object size:0x4 data:4byte
lbl_800CA554 = .sbss:0x800CA554; // type:object size:0x4 data:4byte
lbl_800CA558 = .sbss:0x800CA558; // type:object size:0x4 data:4byte
lbl_800CA55C = .sbss:0x800CA55C; // type:object size:0x4 data:4byte
lbl_800CA560 = .sbss:0x800CA560; // type:object size:0x4 data:4byte
lbl_800CA564 = .sbss:0x800CA564; // type:object size:0x4 data:4byte
lbl_800CA568 = .sbss:0x800CA568; // type:object size:0x4 data:4byte
lbl_800CA56C = .sbss:0x800CA56C; // type:object size:0x1 data:byte
lbl_800CA570 = .sbss:0x800CA570; // type:object size:0x4 data:4byte
lbl_800CA574 = .sbss:0x800CA574; // type:object size:0x4 data:4byte
lbl_800CA578 = .sbss:0x800CA578; // type:object size:0x8 data:4byte
lbl_800CA580 = .sbss:0x800CA580; // type:object size:0x4 data:4byte
lbl_800CA584 = .sbss:0x800CA584; // type:object size:0x4 data:4byte
lbl_800CA588 = .sbss:0x800CA588; // type:object size:0x4 data:4byte
lbl_800CA5A0 = .sdata2:0x800CA5A0; // type:object size:0x4 data:4byte
lbl_800CA5A4 = .sdata2:0x800CA5A4; // type:object size:0x4 data:4byte
lbl_800CA5A8 = .sdata2:0x800CA5A8; // type:object size:0x4 data:4byte
lbl_800CA5AC = .sdata2:0x800CA5AC; // type:object size:0x4 data:float
lbl_800CA5B0 = .sdata2:0x800CA5B0; // type:object size:0x4 data:float
lbl_800CA5B4 = .sdata2:0x800CA5B4; // type:object size:0x4 data:float
lbl_800CA5B8 = .sdata2:0x800CA5B8; // type:object size:0x8 data:double
lbl_800CA5C0 = .sdata2:0x800CA5C0; // type:object size:0x8 data:double
lbl_800CA5C8 = .sdata2:0x800CA5C8; // type:object size:0x8 data:double
lbl_800CA5D0 = .sdata2:0x800CA5D0; // type:object size:0x8 data:double
lbl_800CA5D8 = .sdata2:0x800CA5D8; // type:object size:0x8 data:double
lbl_800CA5E0 = .sdata2:0x800CA5E0; // type:object size:0x8 data:double
lbl_800CA5E8 = .sdata2:0x800CA5E8; // type:object size:0x8 data:double
lbl_800CA5F0 = .sdata2:0x800CA5F0; // type:object size:0x4 data:4byte
lbl_800CA5F8 = .sdata2:0x800CA5F8; // type:object size:0x8 data:double
lbl_800CA600 = .sdata2:0x800CA600; // type:object size:0x4 data:string
lbl_800CA604 = .sdata2:0x800CA604; // type:object size:0x1 data:string
lbl_800CA608 = .sdata2:0x800CA608; // type:object size:0x8 data:double
lbl_800CA610 = .sdata2:0x800CA610; // type:object size:0x8 data:double
lbl_800CA618 = .sdata2:0x800CA618; // type:object size:0x8 data:double
lbl_800CA620 = .sdata2:0x800CA620; // type:object size:0x8 data:double
lbl_800CA628 = .sdata2:0x800CA628; // type:object size:0x8 data:double
lbl_800CA630 = .sdata2:0x800CA630; // type:object size:0x8 data:double
lbl_800CA638 = .sdata2:0x800CA638; // type:object size:0x8 data:double
lbl_800CA640 = .sdata2:0x800CA640; // type:object size:0x8 data:double
lbl_800CA648 = .sdata2:0x800CA648; // type:object size:0x8 data:double
lbl_800CA650 = .sdata2:0x800CA650; // type:object size:0x8 data:double
lbl_800CA658 = .sdata2:0x800CA658; // type:object size:0x8 data:double
lbl_800CA660 = .sdata2:0x800CA660; // type:object size:0x8 data:double
lbl_800CA668 = .sdata2:0x800CA668; // type:object size:0x8 data:double
lbl_800CA670 = .sdata2:0x800CA670; // type:object size:0x8 data:double
lbl_800CA678 = .sdata2:0x800CA678; // type:object size:0x8 data:double
lbl_800CA680 = .sdata2:0x800CA680; // type:object size:0x8 data:double
lbl_800CA688 = .sdata2:0x800CA688; // type:object size:0x8 data:double
lbl_800CA690 = .sdata2:0x800CA690; // type:object size:0x8 data:double
lbl_800CA698 = .sdata2:0x800CA698; // type:object size:0x8 data:double
lbl_800CA6A0 = .sdata2:0x800CA6A0; // type:object size:0x8 data:double
lbl_800CA6A8 = .sdata2:0x800CA6A8; // type:object size:0x8 data:double
lbl_800CA6B0 = .sdata2:0x800CA6B0; // type:object size:0x8 data:double
lbl_800CA6B8 = .sdata2:0x800CA6B8; // type:object size:0x8 data:double
lbl_800CA6C0 = .sdata2:0x800CA6C0; // type:object size:0x8 data:double
lbl_800CA6C8 = .sdata2:0x800CA6C8; // type:object size:0x8 data:double
lbl_800CA6D0 = .sdata2:0x800CA6D0; // type:object size:0x8 data:double
lbl_800CA6D8 = .sdata2:0x800CA6D8; // type:object size:0x8 data:double
lbl_800CA6E0 = .sdata2:0x800CA6E0; // type:object size:0x8 data:double
lbl_800CA6E8 = .sdata2:0x800CA6E8; // type:object size:0x8 data:double
lbl_800CA6F0 = .sdata2:0x800CA6F0; // type:object size:0x8 data:double
lbl_800CA6F8 = .sdata2:0x800CA6F8; // type:object size:0x8 data:double
lbl_800CA700 = .sdata2:0x800CA700; // type:object size:0x8 data:double
lbl_800CA708 = .sdata2:0x800CA708; // type:object size:0x8 data:double
lbl_800CA710 = .sdata2:0x800CA710; // type:object size:0x8 data:double
lbl_800CA718 = .sdata2:0x800CA718; // type:object size:0x8 data:double
lbl_800CA720 = .sdata2:0x800CA720; // type:object size:0x8 data:double
lbl_800CA728 = .sdata2:0x800CA728; // type:object size:0x8 data:double
lbl_800CA730 = .sdata2:0x800CA730; // type:object size:0x8 data:double
lbl_800CA738 = .sdata2:0x800CA738; // type:object size:0x8 data:double
lbl_800CA740 = .sdata2:0x800CA740; // type:object size:0x8 data:double
lbl_800CA748 = .sdata2:0x800CA748; // type:object size:0x8 data:double
lbl_800CA750 = .sdata2:0x800CA750; // type:object size:0x8 data:double
lbl_800CA758 = .sdata2:0x800CA758; // type:object size:0x8 data:double
lbl_800CA760 = .sdata2:0x800CA760; // type:object size:0x8 data:double
lbl_800CA768 = .sdata2:0x800CA768; // type:object size:0x8 data:double
lbl_800CA770 = .sdata2:0x800CA770; // type:object size:0x8 data:double
lbl_800CA778 = .sdata2:0x800CA778; // type:object size:0x8 data:double
lbl_800CA780 = .sdata2:0x800CA780; // type:object size:0x8 data:double
lbl_800CA788 = .sdata2:0x800CA788; // type:object size:0x8 data:double
lbl_800CA790 = .sdata2:0x800CA790; // type:object size:0x8 data:double
lbl_800CA798 = .sdata2:0x800CA798; // type:object size:0x8 data:double
lbl_800CA7A0 = .sdata2:0x800CA7A0; // type:object size:0x8 data:double
lbl_800CA7A8 = .sdata2:0x800CA7A8; // type:object size:0x8 data:double
lbl_800CA7B0 = .sdata2:0x800CA7B0; // type:object size:0x8 data:double
lbl_800CA7B8 = .sdata2:0x800CA7B8; // type:object size:0x8 data:double
lbl_800CA7C0 = .sdata2:0x800CA7C0; // type:object size:0x8 data:double
lbl_800CA7C8 = .sdata2:0x800CA7C8; // type:object size:0x8 data:double
lbl_800CA7D0 = .sdata2:0x800CA7D0; // type:object size:0x8 data:double
lbl_800CA7D8 = .sdata2:0x800CA7D8; // type:object size:0x8 data:double
lbl_800CA7E0 = .sdata2:0x800CA7E0; // type:object size:0x8 data:double
lbl_800CA7E8 = .sdata2:0x800CA7E8; // type:object size:0x8 data:double
lbl_800CA7F0 = .sdata2:0x800CA7F0; // type:object size:0x8 data:double
lbl_800CA7F8 = .sdata2:0x800CA7F8; // type:object size:0x8 data:double
lbl_800CA800 = .sdata2:0x800CA800; // type:object size:0x8 data:double
lbl_800CA808 = .sdata2:0x800CA808; // type:object size:0x8 data:double
lbl_800CA810 = .sdata2:0x800CA810; // type:object size:0x8 data:double
lbl_800CA818 = .sdata2:0x800CA818; // type:object size:0x8 data:double
lbl_800CA820 = .sdata2:0x800CA820; // type:object size:0x8 data:double
lbl_800CA828 = .sdata2:0x800CA828; // type:object size:0x8 data:double
lbl_800CA830 = .sdata2:0x800CA830; // type:object size:0x8 data:double
lbl_800CA838 = .sdata2:0x800CA838; // type:object size:0x8 data:double
lbl_800CA840 = .sdata2:0x800CA840; // type:object size:0x8 data:double
lbl_800CA848 = .sdata2:0x800CA848; // type:object size:0x8 data:double
lbl_800CA850 = .sdata2:0x800CA850; // type:object size:0x8 data:double
lbl_800CA858 = .sdata2:0x800CA858; // type:object size:0x8 data:double
lbl_800CA860 = .sdata2:0x800CA860; // type:object size:0x8 data:double
lbl_800CA868 = .sdata2:0x800CA868; // type:object size:0x8 data:double
lbl_800CA870 = .sdata2:0x800CA870; // type:object size:0x8 data:double
lbl_800CA878 = .sdata2:0x800CA878; // type:object size:0x8 data:double
lbl_800CA880 = .sdata2:0x800CA880; // type:object size:0x8 data:double
lbl_800CA888 = .sdata2:0x800CA888; // type:object size:0x8 data:double
lbl_800CA890 = .sdata2:0x800CA890; // type:object size:0x8 data:double
lbl_800CA898 = .sdata2:0x800CA898; // type:object size:0x8 data:double
lbl_800CA8A0 = .sdata2:0x800CA8A0; // type:object size:0x8 data:double
lbl_800CA8A8 = .sdata2:0x800CA8A8; // type:object size:0x8 data:double
lbl_800CA8B0 = .sdata2:0x800CA8B0; // type:object size:0x8 data:double
lbl_800CA8B8 = .sdata2:0x800CA8B8; // type:object size:0x8 data:double
lbl_800CA8C0 = .sdata2:0x800CA8C0; // type:object size:0x8 data:double
lbl_800CA8C8 = .sdata2:0x800CA8C8; // type:object size:0x8 data:double
lbl_800CA8D0 = .sdata2:0x800CA8D0; // type:object size:0x8 data:double
lbl_800CA8D8 = .sdata2:0x800CA8D8; // type:object size:0x8 data:double
lbl_800CA8E0 = .sdata2:0x800CA8E0; // type:object size:0x8 data:double
lbl_800CA8E8 = .sdata2:0x800CA8E8; // type:object size:0x8 data:double
lbl_800CA8F0 = .sdata2:0x800CA8F0; // type:object size:0x8 data:double
lbl_800CA8F8 = .sdata2:0x800CA8F8; // type:object size:0x8 data:double
lbl_800CA900 = .sdata2:0x800CA900; // type:object size:0x8 data:double
lbl_800CA908 = .sdata2:0x800CA908; // type:object size:0x8 data:double
lbl_800CA910 = .sdata2:0x800CA910; // type:object size:0x8 data:double
lbl_800CA918 = .sdata2:0x800CA918; // type:object size:0x8 data:double
lbl_800CA920 = .sdata2:0x800CA920; // type:object size:0x8 data:double
lbl_800CA928 = .sdata2:0x800CA928; // type:object size:0x8 data:double
lbl_800CA930 = .sdata2:0x800CA930; // type:object size:0x8 data:double
lbl_800CA938 = .sdata2:0x800CA938; // type:object size:0x8 data:double
lbl_800CA940 = .sdata2:0x800CA940; // type:object size:0x8 data:double
lbl_800CA948 = .sdata2:0x800CA948; // type:object size:0x8 data:double
lbl_800CA950 = .sdata2:0x800CA950; // type:object size:0x8 data:double
lbl_800CA958 = .sdata2:0x800CA958; // type:object size:0x8 data:double
lbl_800CA960 = .sdata2:0x800CA960; // type:object size:0x8 data:double
lbl_800CA968 = .sdata2:0x800CA968; // type:object size:0x8 data:double
lbl_800CA970 = .sdata2:0x800CA970; // type:object size:0x8 data:double
lbl_800CA978 = .sdata2:0x800CA978; // type:object size:0x8 data:double
lbl_800CA980 = .sdata2:0x800CA980; // type:object size:0x8 data:double
lbl_800CA988 = .sdata2:0x800CA988; // type:object size:0x8 data:double
lbl_800CA990 = .sdata2:0x800CA990; // type:object size:0x8 data:double
lbl_800CA998 = .sdata2:0x800CA998; // type:object size:0x8 data:double
lbl_800CA9A0 = .sdata2:0x800CA9A0; // type:object size:0x8 data:double
lbl_800CA9A8 = .sdata2:0x800CA9A8; // type:object size:0x8 data:double
lbl_800CA9B0 = .sdata2:0x800CA9B0; // type:object size:0x8 data:double
lbl_800CA9B8 = .sdata2:0x800CA9B8; // type:object size:0x8 data:double
lbl_800CA9C0 = .sdata2:0x800CA9C0; // type:object size:0x8 data:double
lbl_800CA9C8 = .sdata2:0x800CA9C8; // type:object size:0x8 data:double
lbl_800CA9D0 = .sdata2:0x800CA9D0; // type:object size:0x8 data:double
lbl_800CA9D8 = .sdata2:0x800CA9D8; // type:object size:0x8 data:double
lbl_800CA9E0 = .sdata2:0x800CA9E0; // type:object size:0x8 data:double
lbl_800CA9E8 = .sdata2:0x800CA9E8; // type:object size:0x8 data:double
lbl_800CA9F0 = .sdata2:0x800CA9F0; // type:object size:0x8 data:double
lbl_800CA9F8 = .sdata2:0x800CA9F8; // type:object size:0x8 data:double
lbl_800CAA00 = .sdata2:0x800CAA00; // type:object size:0x8 data:double
lbl_800CAA08 = .sdata2:0x800CAA08; // type:object size:0x8 data:double
lbl_800CAA10 = .sdata2:0x800CAA10; // type:object size:0x8 data:double
lbl_800CAA18 = .sdata2:0x800CAA18; // type:object size:0x8 data:double
lbl_800CAA20 = .sdata2:0x800CAA20; // type:object size:0x8 data:double
lbl_800CAA28 = .sdata2:0x800CAA28; // type:object size:0x8 data:double
lbl_800CAA30 = .sdata2:0x800CAA30; // type:object size:0x8 data:double
lbl_800CAA38 = .sdata2:0x800CAA38; // type:object size:0x8 data:double
lbl_800CAA40 = .sdata2:0x800CAA40; // type:object size:0x8 data:double
lbl_800CAA48 = .sdata2:0x800CAA48; // type:object size:0x8 data:double
lbl_800CAA50 = .sdata2:0x800CAA50; // type:object size:0x8 data:double
lbl_800CAA58 = .sdata2:0x800CAA58; // type:object size:0x8 data:double
lbl_800CAA60 = .sdata2:0x800CAA60; // type:object size:0x8 data:double
lbl_800CAA68 = .sdata2:0x800CAA68; // type:object size:0x8 data:double
lbl_800CAA70 = .sdata2:0x800CAA70; // type:object size:0x8 data:double
lbl_800CAA78 = .sdata2:0x800CAA78; // type:object size:0x8 data:double
lbl_800CAA80 = .sdata2:0x800CAA80; // type:object size:0x8 data:double
lbl_800CAA88 = .sdata2:0x800CAA88; // type:object size:0x8 data:double
lbl_800CAA90 = .sdata2:0x800CAA90; // type:object size:0x8 data:double
lbl_800CAA98 = .sdata2:0x800CAA98; // type:object size:0x8 data:double
lbl_800CAAA0 = .sdata2:0x800CAAA0; // type:object size:0x8 data:double
lbl_800CAAA8 = .sdata2:0x800CAAA8; // type:object size:0x8 data:double
lbl_800CAAB0 = .sdata2:0x800CAAB0; // type:object size:0x8 data:double
lbl_800CAAB8 = .sdata2:0x800CAAB8; // type:object size:0x8 data:double
lbl_800CAAC0 = .sdata2:0x800CAAC0; // type:object size:0x8 data:double
lbl_800CAAC8 = .sdata2:0x800CAAC8; // type:object size:0x8 data:double
lbl_800CAAD0 = .sdata2:0x800CAAD0; // type:object size:0x8 data:double
lbl_800CAAD8 = .sdata2:0x800CAAD8; // type:object size:0x8 data:double
lbl_800CAAE0 = .sdata2:0x800CAAE0; // type:object size:0x8 data:double
lbl_800CAAE8 = .sdata2:0x800CAAE8; // type:object size:0x8 data:double
lbl_800CAAF0 = .sdata2:0x800CAAF0; // type:object size:0x8 data:double
lbl_800CAAF8 = .sdata2:0x800CAAF8; // type:object size:0x8 data:double
lbl_800CAB00 = .sdata2:0x800CAB00; // type:object size:0x8 data:double
lbl_800CAB08 = .sdata2:0x800CAB08; // type:object size:0x8 data:double
lbl_800CAB10 = .sdata2:0x800CAB10; // type:object size:0x8 data:double
lbl_800CAB18 = .sdata2:0x800CAB18; // type:object size:0x8 data:double
lbl_800CAB20 = .sdata2:0x800CAB20; // type:object size:0x8 data:double
lbl_800CAB28 = .sdata2:0x800CAB28; // type:object size:0x8 data:double
lbl_800CAB30 = .sdata2:0x800CAB30; // type:object size:0x8 data:double
lbl_800CAB38 = .sdata2:0x800CAB38; // type:object size:0x4 data:float
lbl_800CAB40 = .sdata2:0x800CAB40; // type:object size:0x8 data:double
lbl_800CAB48 = .sdata2:0x800CAB48; // type:object size:0x8 data:double
lbl_800CAB50 = .sdata2:0x800CAB50; // type:object size:0x8 data:double
lbl_800CAB58 = .sdata2:0x800CAB58; // type:object size:0x4 data:float
lbl_800CAB60 = .sdata2:0x800CAB60; // type:object size:0x4 data:float
lbl_800CAB64 = .sdata2:0x800CAB64; // type:object size:0x4 data:float
lbl_800CAB68 = .sdata2:0x800CAB68; // type:object size:0x4 data:float
lbl_800CAB6C = .sdata2:0x800CAB6C; // type:object size:0x4 data:float
lbl_800CAB70 = .sdata2:0x800CAB70; // type:object size:0x4 data:float
lbl_800CAB74 = .sdata2:0x800CAB74; // type:object size:0x4 data:float
lbl_800CAB78 = .sdata2:0x800CAB78; // type:object size:0x4 data:float
lbl_800CAB7C = .sdata2:0x800CAB7C; // type:object size:0x4 data:float
lbl_800CAB80 = .sdata2:0x800CAB80; // type:object size:0x8 data:double
i2fMagic = .sdata2:0x800CAB88; // type:object size:0x8 scope:local data:double
value0_6 = .sdata2:0x800CAB90; // type:object size:0x4 scope:local data:float
value0_3 = .sdata2:0x800CAB94; // type:object size:0x4 scope:local data:float
lbl_800CAB98 = .sdata2:0x800CAB98; // type:object size:0x4 data:float
lbl_800CABA0 = .sdata2:0x800CABA0; // type:object size:0x4 data:float
lbl_800CABA4 = .sdata2:0x800CABA4; // type:object size:0x4 data:float
lbl_800CABA8 = .sdata2:0x800CABA8; // type:object size:0x4 data:float
lbl_800CABAC = .sdata2:0x800CABAC; // type:object size:0x4 data:float
lbl_800CABB0 = .sdata2:0x800CABB0; // type:object size:0x4 data:float
lbl_800CABB4 = .sdata2:0x800CABB4; // type:object size:0x4 data:float
lbl_800CABB8 = .sdata2:0x800CABB8; // type:object size:0x4 data:float
lbl_800CABBC = .sdata2:0x800CABBC; // type:object size:0x4 data:float
lbl_800CABC0 = .sdata2:0x800CABC0; // type:object size:0x8 data:double
value0_3 = .sdata2:0x800CABC8; // type:object size:0x4 scope:local data:float
value0_6 = .sdata2:0x800CABCC; // type:object size:0x4 scope:local data:float
i2fMagic = .sdata2:0x800CABD0; // type:object size:0x8 scope:local data:double
i2fMagic = .sdata2:0x800CABD8; // type:object size:0x8 scope:local data:double
gx = .sdata2:0x800CABE0; // type:object size:0x4 scope:global data:4byte
lbl_800CABE4 = .sdata2:0x800CABE4; // type:object size:0x4 data:4byte
lbl_800CABE8 = .sdata2:0x800CABE8; // type:object size:0x4 data:4byte
lbl_800CABEC = .sdata2:0x800CABEC; // type:object size:0x4 data:4byte
lbl_800CABF0 = .sdata2:0x800CABF0; // type:object size:0x4 data:float
lbl_800CABF4 = .sdata2:0x800CABF4; // type:object size:0x4 data:float
lbl_800CABF8 = .sdata2:0x800CABF8; // type:object size:0x4 data:float
lbl_800CAC00 = .sdata2:0x800CAC00; // type:object size:0x8 data:double
lbl_800CAC08 = .sdata2:0x800CAC08; // type:object size:0x8 data:float
lbl_800CAC10 = .sdata2:0x800CAC10; // type:object size:0x4 data:float
lbl_800CAC14 = .sdata2:0x800CAC14; // type:object size:0x4 data:float
lbl_800CAC18 = .sdata2:0x800CAC18; // type:object size:0x4 data:float
lbl_800CAC1C = .sdata2:0x800CAC1C; // type:object size:0x4 data:float
lbl_800CAC20 = .sdata2:0x800CAC20; // type:object size:0x4 data:float
lbl_800CAC24 = .sdata2:0x800CAC24; // type:object size:0x4 data:float
lbl_800CAC28 = .sdata2:0x800CAC28; // type:object size:0x4 data:float
lbl_800CAC2C = .sdata2:0x800CAC2C; // type:object size:0x4 data:float
lbl_800CAC30 = .sdata2:0x800CAC30; // type:object size:0x4 data:float
lbl_800CAC34 = .sdata2:0x800CAC34; // type:object size:0x4 data:float
lbl_800CAC38 = .sdata2:0x800CAC38; // type:object size:0x8 data:float
lbl_800CAC40 = .sdata2:0x800CAC40; // type:object size:0x4 data:float
lbl_800CAC48 = .sdata2:0x800CAC48; // type:object size:0x8 data:double
lbl_800CAC50 = .sdata2:0x800CAC50; // type:object size:0x4 data:float
lbl_800CAC54 = .sdata2:0x800CAC54; // type:object size:0x4 data:float
lbl_800CAC58 = .sdata2:0x800CAC58; // type:object size:0x4 data:float
lbl_800CAC5C = .sdata2:0x800CAC5C; // type:object size:0x4 data:float
lbl_800CAC60 = .sdata2:0x800CAC60; // type:object size:0x4 data:float
lbl_800CAC64 = .sdata2:0x800CAC64; // type:object size:0x4 data:float
lbl_800CAC68 = .sdata2:0x800CAC68; // type:object size:0x8 data:float
lbl_800CAC70 = .sdata2:0x800CAC70; // type:object size:0x4 data:float
lbl_800CAC74 = .sdata2:0x800CAC74; // type:object size:0x4 data:float
lbl_800CAC78 = .sdata2:0x800CAC78; // type:object size:0x4 data:float
lbl_800CAC80 = .sdata2:0x800CAC80; // type:object size:0x8 data:double
lbl_800CAC88 = .sdata2:0x800CAC88; // type:object size:0x4 data:float
lbl_800CAC90 = .sdata2:0x800CAC90; // type:object size:0x8 data:double
lbl_800CAC98 = .sdata2:0x800CAC98; // type:object size:0x4 data:float
lbl_800CACA0 = .sdata2:0x800CACA0; // type:object size:0x8 data:double
lbl_800CACA8 = .sdata2:0x800CACA8; // type:object size:0x8 data:double
lbl_800CACB0 = .sdata2:0x800CACB0; // type:object size:0x8 data:double
lbl_800CACB8 = .sdata2:0x800CACB8; // type:object size:0x4 data:float
lbl_800CACC0 = .sdata2:0x800CACC0; // type:object size:0x8 data:double
lbl_800CACC8 = .sdata2:0x800CACC8; // type:object size:0x4 data:float
lbl_800CACCC = .sdata2:0x800CACCC; // type:object size:0x4 data:float
lbl_800CACD0 = .sdata2:0x800CACD0; // type:object size:0x4 data:float
lbl_800CACD8 = .sdata2:0x800CACD8; // type:object size:0x8 data:double
lbl_800CACE0 = .sdata2:0x800CACE0; // type:object size:0x4 data:float
lbl_800CACE4 = .sdata2:0x800CACE4; // type:object size:0x4 data:float
lbl_800CACE8 = .sdata2:0x800CACE8; // type:object size:0x4 data:float
lbl_800CACEC = .sdata2:0x800CACEC; // type:object size:0x4 data:float
lbl_800CACF0 = .sdata2:0x800CACF0; // type:object size:0x4 data:float
lbl_800CACF4 = .sdata2:0x800CACF4; // type:object size:0x4 data:float
lbl_800CACF8 = .sdata2:0x800CACF8; // type:object size:0x4 data:float
lbl_800CACFC = .sdata2:0x800CACFC; // type:object size:0x4 data:float
lbl_800CAD00 = .sdata2:0x800CAD00; // type:object size:0x4 data:float
lbl_800CAD04 = .sdata2:0x800CAD04; // type:object size:0x4 data:float
lbl_800CAD08 = .sdata2:0x800CAD08; // type:object size:0x4 data:float
lbl_800CAD0C = .sdata2:0x800CAD0C; // type:object size:0x4 data:float
lbl_800CAD10 = .sdata2:0x800CAD10; // type:object size:0x4 data:float
lbl_800CAD14 = .sdata2:0x800CAD14; // type:object size:0x4 data:float
lbl_800CAD18 = .sdata2:0x800CAD18; // type:object size:0x4 data:float
lbl_800CAD1C = .sdata2:0x800CAD1C; // type:object size:0x4 data:float
lbl_800CAD20 = .sdata2:0x800CAD20; // type:object size:0x4 data:4byte
lbl_800CAD24 = .sdata2:0x800CAD24; // type:object size:0x4 data:4byte
lbl_800CAD28 = .sdata2:0x800CAD28; // type:object size:0x8 data:float
lbl_800CAD30 = .sdata2:0x800CAD30; // type:object size:0x8 data:float
lbl_800CAD38 = .sdata2:0x800CAD38; // type:object size:0x4 data:float
lbl_800CAD3C = .sdata2:0x800CAD3C; // type:object size:0x4 data:float
lbl_800CAD40 = .sdata2:0x800CAD40; // type:object size:0x4 data:float
lbl_800CAD48 = .sdata2:0x800CAD48; // type:object size:0x8 data:double
lbl_800CAD50 = .sdata2:0x800CAD50; // type:object size:0x8 data:double
lbl_800CAD58 = .sdata2:0x800CAD58; // type:object size:0x4 data:float
lbl_800CAD5C = .sdata2:0x800CAD5C; // type:object size:0x4 data:float
lbl_800CAD60 = .sdata2:0x800CAD60; // type:object size:0x8 data:float
lbl_800CAD68 = .sdata2:0x800CAD68; // type:object size:0x4 data:float
lbl_800CAD6C = .sdata2:0x800CAD6C; // type:object size:0x4 data:float
lbl_800CAD70 = .sdata2:0x800CAD70; // type:object size:0x8 data:float
lbl_800CAD78 = .sdata2:0x800CAD78; // type:object size:0x4 data:float
lbl_800CAD80 = .sdata2:0x800CAD80; // type:object size:0x8 data:double
lbl_800CAD88 = .sdata2:0x800CAD88; // type:object size:0x4 data:4byte
lbl_800CAD8C = .sdata2:0x800CAD8C; // type:object size:0x4 data:4byte
lbl_800CAD90 = .sdata2:0x800CAD90; // type:object size:0x4 data:float
lbl_800CAD94 = .sdata2:0x800CAD94; // type:object size:0x4 data:float
lbl_800CAD98 = .sdata2:0x800CAD98; // type:object size:0x4 data:float
lbl_800CAD9C = .sdata2:0x800CAD9C; // type:object size:0x4 data:float
lbl_800CADA0 = .sdata2:0x800CADA0; // type:object size:0x4 data:float
lbl_800CADA4 = .sdata2:0x800CADA4; // type:object size:0x4 data:float
lbl_800CADA8 = .sdata2:0x800CADA8; // type:object size:0x8 data:double
lbl_800CADB0 = .sdata2:0x800CADB0; // type:object size:0x4 data:float
lbl_800CADB8 = .sdata2:0x800CADB8; // type:object size:0x8 data:double
lbl_800CADC0 = .sdata2:0x800CADC0; // type:object size:0x8 data:double
lbl_800CADC8 = .sdata2:0x800CADC8; // type:object size:0x4 data:float
lbl_800CADD0 = .sdata2:0x800CADD0; // type:object size:0x8 data:double
lbl_800CADD8 = .sdata2:0x800CADD8; // type:object size:0x8 data:double
lbl_800CADE0 = .sdata2:0x800CADE0; // type:object size:0x4 data:float
lbl_800CADE4 = .sdata2:0x800CADE4; // type:object size:0x4 data:float
lbl_800CADE8 = .sdata2:0x800CADE8; // type:object size:0x4 data:float
lbl_800CADEC = .sdata2:0x800CADEC; // type:object size:0x4 data:float
lbl_800CADF0 = .sdata2:0x800CADF0; // type:object size:0x4 data:float
lbl_800CADF4 = .sdata2:0x800CADF4; // type:object size:0x4 data:float
lbl_800CADF8 = .sdata2:0x800CADF8; // type:object size:0x4 data:float
lbl_800CAE00 = .sdata2:0x800CAE00; // type:object size:0x8 data:double
lbl_800CAE08 = .sdata2:0x800CAE08; // type:object size:0x8 data:double
lbl_800CAE10 = .sdata2:0x800CAE10; // type:object size:0x8 data:float
lbl_800CAE18 = .sdata2:0x800CAE18; // type:object size:0x4 data:float
lbl_800CAE1C = .sdata2:0x800CAE1C; // type:object size:0x4 data:float
lbl_800CAE20 = .sdata2:0x800CAE20; // type:object size:0x8 data:double
lbl_800CAE28 = .sdata2:0x800CAE28; // type:object size:0x4 data:float
lbl_800CAE2C = .sdata2:0x800CAE2C; // type:object size:0x4 data:float
lbl_800CAE30 = .sdata2:0x800CAE30; // type:object size:0x4 data:float
lbl_800CAE38 = .sdata2:0x800CAE38; // type:object size:0x8 data:double
lbl_800CAE40 = .sdata2:0x800CAE40; // type:object size:0x8 data:double
lbl_800CAE48 = .sdata2:0x800CAE48; // type:object size:0x8 data:double
lbl_800CAE50 = .sdata2:0x800CAE50; // type:object size:0x8 data:double
lbl_800CAE58 = .sdata2:0x800CAE58; // type:object size:0x8 data:double
lbl_800CAE60 = .sdata2:0x800CAE60; // type:object size:0x8 data:double
lbl_800CAE68 = .sdata2:0x800CAE68; // type:object size:0x8 data:double
lbl_800CAE70 = .sdata2:0x800CAE70; // type:object size:0x4 data:float
lbl_800CAE74 = .sdata2:0x800CAE74; // type:object size:0x4 data:float
lbl_800CAE78 = .sdata2:0x800CAE78; // type:object size:0x4 data:float
lbl_800CAE7C = .sdata2:0x800CAE7C; // type:object size:0x4 data:float
lbl_800CAE80 = .sdata2:0x800CAE80; // type:object size:0x4 data:float
lbl_800CAE88 = .sdata2:0x800CAE88; // type:object size:0x8 data:double
lbl_800CAE90 = .sdata2:0x800CAE90; // type:object size:0x4 data:float
lbl_800CAE94 = .sdata2:0x800CAE94; // type:object size:0x4 data:float
lbl_800CAE98 = .sdata2:0x800CAE98; // type:object size:0x4 data:float
lbl_800CAE9C = .sdata2:0x800CAE9C; // type:object size:0x4 data:float
lbl_800CAEA0 = .sdata2:0x800CAEA0; // type:object size:0x4 data:float
lbl_800CAEA4 = .sdata2:0x800CAEA4; // type:object size:0x4 data:float
lbl_800CAEA8 = .sdata2:0x800CAEA8; // type:object size:0x8 data:float
lbl_800CAEB0 = .sdata2:0x800CAEB0; // type:object size:0x8 data:float
lbl_800CAEB8 = .sdata2:0x800CAEB8; // type:object size:0x4 data:float
lbl_800CAEBC = .sdata2:0x800CAEBC; // type:object size:0x4 data:float
lbl_800CAEC0 = .sdata2:0x800CAEC0; // type:object size:0x8 data:float
lbl_800CAEC8 = .sdata2:0x800CAEC8; // type:object size:0x4 data:float
lbl_800CAECC = .sdata2:0x800CAECC; // type:object size:0x4 data:float
lbl_800CAED0 = .sdata2:0x800CAED0; // type:object size:0x8 data:float
lbl_800CAED8 = .sdata2:0x800CAED8; // type:object size:0x8 data:float
lbl_800CAEE0 = .sdata2:0x800CAEE0; // type:object size:0x4 data:float
lbl_800CAEE4 = .sdata2:0x800CAEE4; // type:object size:0x4 data:float
lbl_800CAEE8 = .sdata2:0x800CAEE8; // type:object size:0x8 data:double
lbl_800CAEF0 = .sdata2:0x800CAEF0; // type:object size:0x8 data:double
lbl_800CAEF8 = .sdata2:0x800CAEF8; // type:object size:0x8 data:float
lbl_800CAF00 = .sdata2:0x800CAF00; // type:object size:0x8 data:float
lbl_800CAF08 = .sdata2:0x800CAF08; // type:object size:0x8 data:float
lbl_800CAF10 = .sdata2:0x800CAF10; // type:object size:0x4 data:float
lbl_800CAF18 = .sdata2:0x800CAF18; // type:object size:0x8 data:double
lbl_800CAF20 = .sdata2:0x800CAF20; // type:object size:0x4 data:float
lbl_800CAF24 = .sdata2:0x800CAF24; // type:object size:0x4 data:float
lbl_800CAF28 = .sdata2:0x800CAF28; // type:object size:0x4 data:float
lbl_800CAF2C = .sdata2:0x800CAF2C; // type:object size:0x4 data:float
lbl_800CAF30 = .sdata2:0x800CAF30; // type:object size:0x8 data:double
lbl_800CAF38 = .sdata2:0x800CAF38; // type:object size:0x8 data:double
lbl_800CAF40 = .sdata2:0x800CAF40; // type:object size:0x4 data:float
lbl_800CAF44 = .sdata2:0x800CAF44; // type:object size:0x4 data:float
lbl_800CAF48 = .sdata2:0x800CAF48; // type:object size:0x8 data:double
lbl_800CAF50 = .sdata2:0x800CAF50; // type:object size:0x4 data:float
lbl_800CAF58 = .sdata2:0x800CAF58; // type:object size:0x8 data:double
lbl_800CAF60 = .sdata2:0x800CAF60; // type:object size:0x4 data:float
lbl_800CAF64 = .sdata2:0x800CAF64; // type:object size:0x4 data:float
lbl_800CAF68 = .sdata2:0x800CAF68; // type:object size:0x4 data:float
lbl_800CAF70 = .sdata2:0x800CAF70; // type:object size:0x8 data:double
lbl_800CAF78 = .sdata2:0x800CAF78; // type:object size:0x4 data:float
lbl_800CAF7C = .sdata2:0x800CAF7C; // type:object size:0x4 data:float
lbl_800CAF80 = .sdata2:0x800CAF80; // type:object size:0x4 data:float
lbl_800CAF84 = .sdata2:0x800CAF84; // type:object size:0x4 data:float
lbl_800CAF88 = .sdata2:0x800CAF88; // type:object size:0x8 data:float
lbl_800CAF90 = .sdata2:0x800CAF90; // type:object size:0x4 data:float
lbl_800CAF94 = .sdata2:0x800CAF94; // type:object size:0x4 data:float
lbl_800CAF98 = .sdata2:0x800CAF98; // type:object size:0x4 data:float
lbl_800CAF9C = .sdata2:0x800CAF9C; // type:object size:0x4 data:float
lbl_800CAFA0 = .sdata2:0x800CAFA0; // type:object size:0x8 data:string
lbl_800CAFA8 = .sdata2:0x800CAFA8; // type:object size:0x4
lbl_800CAFAC = .sdata2:0x800CAFAC; // type:object size:0x8 data:string
lbl_800CAFB4 = .sdata2:0x800CAFB4; // type:object size:0x4 data:float
lbl_800CAFB8 = .sdata2:0x800CAFB8; // type:object size:0x8 data:double
lbl_800CAFC0 = .sdata2:0x800CAFC0; // type:object size:0x4 data:float
lbl_800CAFC4 = .sdata2:0x800CAFC4; // type:object size:0x4 data:float
lbl_800CAFC8 = .sdata2:0x800CAFC8; // type:object size:0x8 data:float
lbl_800CAFD0 = .sdata2:0x800CAFD0; // type:object size:0x8 data:float
lbl_800CAFD8 = .sdata2:0x800CAFD8; // type:object size:0x4 data:float
lbl_800CAFDC = .sdata2:0x800CAFDC; // type:object size:0x4 data:float
lbl_800CAFE0 = .sdata2:0x800CAFE0; // type:object size:0x4 data:float
lbl_800CAFE4 = .sdata2:0x800CAFE4; // type:object size:0x4 data:float
lbl_800CAFE8 = .sdata2:0x800CAFE8; // type:object size:0x8 data:double
lbl_800CAFF0 = .sdata2:0x800CAFF0; // type:object size:0x8 data:double
lbl_800CAFF8 = .sdata2:0x800CAFF8; // type:object size:0x8 data:double
lbl_800CB000 = .sdata2:0x800CB000; // type:object size:0x8 data:double
lbl_800CB008 = .sdata2:0x800CB008; // type:object size:0x4 data:float
lbl_800CB00C = .sdata2:0x800CB00C; // type:object size:0x4 data:float
lbl_800CB010 = .sdata2:0x800CB010; // type:object size:0x4 data:float
lbl_800CB014 = .sdata2:0x800CB014; // type:object size:0x4 data:float
lbl_800CB018 = .sdata2:0x800CB018; // type:object size:0x4 data:float
lbl_800CB01C = .sdata2:0x800CB01C; // type:object size:0x4 data:float
lbl_800CB020 = .sdata2:0x800CB020; // type:object size:0x4 data:float
lbl_800CB024 = .sdata2:0x800CB024; // type:object size:0x4 data:float
lbl_800CB028 = .sdata2:0x800CB028; // type:object size:0x4 data:float
lbl_800CB02C = .sdata2:0x800CB02C; // type:object size:0x4 data:float
lbl_800CB030 = .sdata2:0x800CB030; // type:object size:0x4 data:float
lbl_800CB034 = .sdata2:0x800CB034; // type:object size:0x4 data:float
lbl_800CB038 = .sdata2:0x800CB038; // type:object size:0x4 data:float
lbl_800CB03C = .sdata2:0x800CB03C; // type:object size:0x4 data:float
lbl_800CB040 = .sdata2:0x800CB040; // type:object size:0x4 data:float
lbl_800CB048 = .sdata2:0x800CB048; // type:object size:0x8 data:double
lbl_800CB050 = .sdata2:0x800CB050; // type:object size:0x4 data:float
lbl_800CB054 = .sdata2:0x800CB054; // type:object size:0x4 data:float
lbl_800CB058 = .sdata2:0x800CB058; // type:object size:0x8 data:double
lbl_800CB060 = .sdata2:0x800CB060; // type:object size:0x8 data:double
lbl_800CB068 = .sdata2:0x800CB068; // type:object size:0x4 data:float
lbl_800CB070 = .sdata2:0x800CB070; // type:object size:0x8 data:double
lbl_800CB078 = .sdata2:0x800CB078; // type:object size:0x8 data:double
lbl_800CB080 = .sdata2:0x800CB080; // type:object size:0x8 data:double
lbl_800CB088 = .sdata2:0x800CB088; // type:object size:0x4 data:float
lbl_800CB08C = .sdata2:0x800CB08C; // type:object size:0x4 data:float
lbl_800CB090 = .sdata2:0x800CB090; // type:object size:0x4 data:float
lbl_800CB094 = .sdata2:0x800CB094; // type:object size:0x4 data:float
lbl_800CB098 = .sdata2:0x800CB098; // type:object size:0x8 data:float
lbl_800CB0A0 = .sdata2:0x800CB0A0; // type:object size:0x4 data:float
lbl_800CB0A4 = .sdata2:0x800CB0A4; // type:object size:0x4 data:float
lbl_800CB0A8 = .sdata2:0x800CB0A8; // type:object size:0x4 data:float
lbl_800CB0AC = .sdata2:0x800CB0AC; // type:object size:0x4 data:float
lbl_800CB0B0 = .sdata2:0x800CB0B0; // type:object size:0x4 data:float
lbl_800CB0B4 = .sdata2:0x800CB0B4; // type:object size:0x4 data:float
lbl_800CB0B8 = .sdata2:0x800CB0B8; // type:object size:0x4 data:float
lbl_800CB0C0 = .sdata2:0x800CB0C0; // type:object size:0x8 data:double
lbl_800CB0C8 = .sdata2:0x800CB0C8; // type:object size:0x4 data:float
lbl_800CB0CC = .sdata2:0x800CB0CC; // type:object size:0x4 data:float
lbl_800CB0D0 = .sdata2:0x800CB0D0; // type:object size:0x4 data:float
lbl_800CB0D8 = .sdata2:0x800CB0D8; // type:object size:0x8 data:double
lbl_800CB0E0 = .sdata2:0x800CB0E0; // type:object size:0x8 data:double
