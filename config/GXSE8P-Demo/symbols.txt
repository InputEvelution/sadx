memset = .init:0x80003100; // type:function size:0x30 scope:global
__fill_mem = .init:0x80003130; // type:function size:0xB8 scope:global
memcpy = .init:0x800031E8; // type:function size:0x50 scope:global
TRK_memset = .init:0x80003238; // type:function size:0x30
TRK_memcpy = .init:0x80003268; // type:function size:0x24
gTRKInterruptVectorTable = .init:0x8000328C; // type:label scope:global
__TRK_reset = .init:0x800051C0; // type:function size:0x104
gTRKInterruptVectorTableEnd = .init:0x800051C0; // type:label scope:global
__check_pad3 = .init:0x800052C4; // type:function size:0x40 scope:local
__start = .init:0x80005304; // type:function size:0x138 scope:weak
__init_registers = .init:0x8000543C; // type:function size:0x1C scope:local
__init_data = .init:0x80005458; // type:function size:0xC0 scope:local
__init_hardware = .init:0x80005518; // type:function size:0x20 scope:global
__flush_cache = .init:0x80005538; // type:function size:0x34 scope:global
_rom_copy_info = .init:0x8000556C; // type:object size:0x6C scope:global data:4byte
_bss_init_info = .init:0x800055D8; // type:object size:0x18 scope:global data:4byte
main = .text:0x80005600; // type:function size:0x4B8 scope:global
fn_80005AB8 = .text:0x80005AB8; // type:function size:0x220
fn_80005CD8 = .text:0x80005CD8; // type:function size:0x350
fn_80006028 = .text:0x80006028; // type:function size:0x194
fn_800061BC = .text:0x800061BC; // type:function size:0xF4
__va_arg = .text:0x800062B0; // type:function size:0xC8 scope:global
__destroy_global_chain = .text:0x80006378; // type:function size:0x48 scope:global
__cvt_fp2unsigned = .text:0x800063C0; // type:function size:0x5C
__save_fpr = .text:0x8000641C; // type:function size:0x4C scope:global
_savefpr_14 = .text:0x8000641C; // type:label scope:global
_savefpr_15 = .text:0x80006420; // type:label scope:global
_savefpr_16 = .text:0x80006424; // type:label scope:global
_savefpr_17 = .text:0x80006428; // type:label scope:global
_savefpr_18 = .text:0x8000642C; // type:label scope:global
_savefpr_19 = .text:0x80006430; // type:label scope:global
_savefpr_20 = .text:0x80006434; // type:label scope:global
_savefpr_21 = .text:0x80006438; // type:label scope:global
_savefpr_22 = .text:0x8000643C; // type:label scope:global
_savefpr_23 = .text:0x80006440; // type:label scope:global
_savefpr_24 = .text:0x80006444; // type:label scope:global
_savefpr_25 = .text:0x80006448; // type:label scope:global
_savefpr_26 = .text:0x8000644C; // type:label scope:global
_savefpr_27 = .text:0x80006450; // type:label scope:global
_savefpr_28 = .text:0x80006454; // type:label scope:global
_savefpr_29 = .text:0x80006458; // type:label scope:global
_savefpr_30 = .text:0x8000645C; // type:label scope:global
_savefpr_31 = .text:0x80006460; // type:label scope:global
__restore_fpr = .text:0x80006468; // type:function size:0x4C scope:global
_restfpr_14 = .text:0x80006468; // type:label scope:global
_restfpr_15 = .text:0x8000646C; // type:label scope:global
_restfpr_16 = .text:0x80006470; // type:label scope:global
_restfpr_17 = .text:0x80006474; // type:label scope:global
_restfpr_18 = .text:0x80006478; // type:label scope:global
_restfpr_19 = .text:0x8000647C; // type:label scope:global
_restfpr_20 = .text:0x80006480; // type:label scope:global
_restfpr_21 = .text:0x80006484; // type:label scope:global
_restfpr_22 = .text:0x80006488; // type:label scope:global
_restfpr_23 = .text:0x8000648C; // type:label scope:global
_restfpr_24 = .text:0x80006490; // type:label scope:global
_restfpr_25 = .text:0x80006494; // type:label scope:global
_restfpr_26 = .text:0x80006498; // type:label scope:global
_restfpr_27 = .text:0x8000649C; // type:label scope:global
_restfpr_28 = .text:0x800064A0; // type:label scope:global
_restfpr_29 = .text:0x800064A4; // type:label scope:global
_restfpr_30 = .text:0x800064A8; // type:label scope:global
_restfpr_31 = .text:0x800064AC; // type:label scope:global
__save_gpr = .text:0x800064B4; // type:function size:0x4C scope:global
_savegpr_14 = .text:0x800064B4; // type:label scope:global
_savegpr_15 = .text:0x800064B8; // type:label scope:global
_savegpr_16 = .text:0x800064BC; // type:label scope:global
_savegpr_17 = .text:0x800064C0; // type:label scope:global
_savegpr_18 = .text:0x800064C4; // type:label scope:global
_savegpr_19 = .text:0x800064C8; // type:label scope:global
_savegpr_20 = .text:0x800064CC; // type:label scope:global
_savegpr_21 = .text:0x800064D0; // type:label scope:global
_savegpr_22 = .text:0x800064D4; // type:label scope:global
_savegpr_23 = .text:0x800064D8; // type:label scope:global
_savegpr_24 = .text:0x800064DC; // type:label scope:global
_savegpr_25 = .text:0x800064E0; // type:label scope:global
_savegpr_26 = .text:0x800064E4; // type:label scope:global
_savegpr_27 = .text:0x800064E8; // type:label scope:global
_savegpr_28 = .text:0x800064EC; // type:label scope:global
_savegpr_29 = .text:0x800064F0; // type:label scope:global
_savegpr_30 = .text:0x800064F4; // type:label scope:global
_savegpr_31 = .text:0x800064F8; // type:label scope:global
__restore_gpr = .text:0x80006500; // type:function size:0x4C scope:global
_restgpr_14 = .text:0x80006500; // type:label scope:global
_restgpr_15 = .text:0x80006504; // type:label scope:global
_restgpr_16 = .text:0x80006508; // type:label scope:global
_restgpr_17 = .text:0x8000650C; // type:label scope:global
_restgpr_18 = .text:0x80006510; // type:label scope:global
_restgpr_19 = .text:0x80006514; // type:label scope:global
_restgpr_20 = .text:0x80006518; // type:label scope:global
_restgpr_21 = .text:0x8000651C; // type:label scope:global
_restgpr_22 = .text:0x80006520; // type:label scope:global
_restgpr_23 = .text:0x80006524; // type:label scope:global
_restgpr_24 = .text:0x80006528; // type:label scope:global
_restgpr_25 = .text:0x8000652C; // type:label scope:global
_restgpr_26 = .text:0x80006530; // type:label scope:global
_restgpr_27 = .text:0x80006534; // type:label scope:global
_restgpr_28 = .text:0x80006538; // type:label scope:global
_restgpr_29 = .text:0x8000653C; // type:label scope:global
_restgpr_30 = .text:0x80006540; // type:label scope:global
_restgpr_31 = .text:0x80006544; // type:label scope:global
__div2u = .text:0x8000654C; // type:function size:0xEC scope:global
__div2i = .text:0x80006638; // type:function size:0x138
__mod2u = .text:0x80006770; // type:function size:0xE4 scope:global
__shl2i = .text:0x80006854; // type:function size:0x24
__shr2u = .text:0x80006878; // type:function size:0x24
__shr2i = .text:0x8000689C; // type:function size:0x28
__cvt_sll_dbl = .text:0x800068C4; // type:function size:0xB0
__cvt_dbl_usll = .text:0x80006974; // type:function size:0xCC
__sys_free = .text:0x80006A40; // type:function size:0xB8
exit = .text:0x80006AF8; // type:function size:0xCC scope:global
free = .text:0x80006BC4; // type:function size:0x134
deallocate_from_fixed_pools = .text:0x80006CF8; // type:function size:0x1FC
SubBlock_merge_next = .text:0x80006EF4; // type:function size:0xBC
Block_link = .text:0x80006FB0; // type:function size:0x17C
__flush_all = .text:0x8000712C; // type:function size:0x70
__close_all = .text:0x8000719C; // type:function size:0x98 scope:global
__dec2num = .text:0x80007234; // type:function size:0x954
__num2dec = .text:0x80007B88; // type:function size:0x1A4
__num2dec_internal = .text:0x80007D2C; // type:function size:0x23C
__minus_dec = .text:0x80007F68; // type:function size:0x4FC
__less_dec = .text:0x80008464; // type:function size:0xF8
__equals_dec = .text:0x8000855C; // type:function size:0x10C
__two_exp = .text:0x80008668; // type:function size:0x340
__str2dec = .text:0x800089A8; // type:function size:0xEC
__timesdec = .text:0x80008A94; // type:function size:0x28C
__ull2dec = .text:0x80008D20; // type:function size:0x110
__count_trailing_zerol = .text:0x80008E30; // type:function size:0x70
__flush_buffer = .text:0x80008EA0; // type:function size:0xC4 scope:global
__prep_buffer = .text:0x80008F64; // type:function size:0x34 scope:global
toupper = .text:0x80008F98; // type:function size:0x24
tolower = .text:0x80008FBC; // type:function size:0x24
__fwrite = .text:0x80008FE0; // type:function size:0x30C scope:global
fwrite = .text:0x800092EC; // type:function size:0x20 scope:global
fflush = .text:0x8000930C; // type:function size:0x138
fclose = .text:0x80009444; // type:function size:0xC0
fseek = .text:0x80009504; // type:function size:0x20 scope:global
_fseek = .text:0x80009524; // type:function size:0x23C
ftell = .text:0x80009760; // type:function size:0x70
wcstombs = .text:0x800097D0; // type:function size:0xA0 scope:global
unicode_to_UTF8 = .text:0x80009870; // type:function size:0xA4
mbtowc = .text:0x80009914; // type:function size:0x20
utf8_to_unicode = .text:0x80009934; // type:function size:0x120
is_utf8_complete = .text:0x80009A54; // type:function size:0xEC
memcmp = .text:0x80009B40; // type:function size:0x4C
__memrchr = .text:0x80009B8C; // type:function size:0x2C scope:global
memchr = .text:0x80009BB8; // type:function size:0x2C scope:global
memmove = .text:0x80009BE4; // type:function size:0xCC scope:global
__copy_longs_rev_unaligned = .text:0x80009CB0; // type:function size:0xB0
__copy_longs_unaligned = .text:0x80009D60; // type:function size:0xC4
__copy_longs_rev_aligned = .text:0x80009E24; // type:function size:0xAC
__copy_longs_aligned = .text:0x80009ED0; // type:function size:0xC0
__stdio_atexit = .text:0x80009F90; // type:function size:0x10 scope:global
sprintf = .text:0x80009FA0; // type:function size:0xE0
vsprintf = .text:0x8000A080; // type:function size:0x78
vprintf = .text:0x8000A0F8; // type:function size:0x7C scope:global
__StringWrite = .text:0x8000A174; // type:function size:0x6C scope:global
__FileWrite = .text:0x8000A1E0; // type:function size:0x58 scope:global
__pformatter = .text:0x8000A238; // type:function size:0x774 scope:local
float2str = .text:0x8000A9AC; // type:function size:0x6EC scope:local
round_decimal = .text:0x8000B098; // type:function size:0x12C
double2hex = .text:0x8000B1C4; // type:function size:0x338 scope:local
longlong2str = .text:0x8000B4FC; // type:function size:0x2DC scope:local
long2str = .text:0x8000B7D8; // type:function size:0x220 scope:local
parse_format = .text:0x8000B9F8; // type:function size:0x504 scope:local
srand = .text:0x8000BEFC; // type:function size:0x8
rand = .text:0x8000BF04; // type:function size:0x20
sscanf = .text:0x8000BF24; // type:function size:0xC4
__StringRead = .text:0x8000BFE8; // type:function size:0x90
__sformatter = .text:0x8000C078; // type:function size:0x9AC
parse_format = .text:0x8000CA24; // type:function size:0x548 scope:local
strstr = .text:0x8000CF6C; // type:function size:0x68
strchr = .text:0x8000CFD4; // type:function size:0x30 scope:global
strncmp = .text:0x8000D004; // type:function size:0x40
strcmp = .text:0x8000D044; // type:function size:0x128
strncat = .text:0x8000D16C; // type:function size:0x4C
strcat = .text:0x8000D1B8; // type:function size:0x2C
strncpy = .text:0x8000D1E4; // type:function size:0x44
strcpy = .text:0x8000D228; // type:function size:0xB8
strlen = .text:0x8000D2E0; // type:function size:0x1C scope:global
__strtold = .text:0x8000D2FC; // type:function size:0x100C
atoi = .text:0x8000E308; // type:function size:0xC0
strtoul = .text:0x8000E3C8; // type:function size:0xAC
__strtoull = .text:0x8000E474; // type:function size:0x40C
__strtoul = .text:0x8000E880; // type:function size:0x378
__close_console = .text:0x8000EBF8; // type:function size:0x8
__write_console = .text:0x8000EC00; // type:function size:0xC4
fwide = .text:0x8000ECC4; // type:function size:0x88 scope:global
__ieee754_acos = .text:0x8000ED4C; // type:function size:0x310
__ieee754_asin = .text:0x8000F05C; // type:function size:0x264
__ieee754_atan2 = .text:0x8000F2C0; // type:function size:0x290
__ieee754_log = .text:0x8000F550; // type:function size:0x27C
__ieee754_log10 = .text:0x8000F7CC; // type:function size:0x110
__ieee754_pow = .text:0x8000F8DC; // type:function size:0x88C
__ieee754_rem_pio2 = .text:0x80010168; // type:function size:0x3A0
__kernel_cos = .text:0x80010508; // type:function size:0xF4
__kernel_rem_pio2 = .text:0x800105FC; // type:function size:0xE54
__kernel_sin = .text:0x80011450; // type:function size:0xA0
__kernel_tan = .text:0x800114F0; // type:function size:0x214
atan = .text:0x80011704; // type:function size:0x200
ceil = .text:0x80011904; // type:function size:0x144
copysign = .text:0x80011A48; // type:function size:0x28
cos = .text:0x80011A70; // type:function size:0xD4
floor = .text:0x80011B44; // type:function size:0x148
frexp = .text:0x80011C8C; // type:function size:0x8C
ldexp = .text:0x80011D18; // type:function size:0x1C4
modf = .text:0x80011EDC; // type:function size:0xFC
nextafter = .text:0x80011FD8; // type:function size:0x184
sin = .text:0x8001215C; // type:function size:0xD8
tan = .text:0x80012234; // type:function size:0x78
acos = .text:0x800122AC; // type:function size:0x20
asin = .text:0x800122CC; // type:function size:0x20
atan2 = .text:0x800122EC; // type:function size:0x20
log = .text:0x8001230C; // type:function size:0x20
log10 = .text:0x8001232C; // type:function size:0x20
pow = .text:0x8001234C; // type:function size:0x20
modff__FfPf = .text:0x8001236C; // type:function size:0x130
sqrtf__Ff = .text:0x8001249C; // type:function size:0x64
floorf = .text:0x80012500; // type:function size:0x24
powf = .text:0x80012524; // type:function size:0x24
fabsf = .text:0x80012548; // type:function size:0xC
tanf = .text:0x80012554; // type:function size:0x24
sinf = .text:0x80012578; // type:function size:0x24
cosf = .text:0x8001259C; // type:function size:0x24
atanf = .text:0x800125C0; // type:function size:0x24
acosf = .text:0x800125E4; // type:function size:0x24
TRKNubMainLoop = .text:0x80012608; // type:function size:0xF8 scope:global
TRKDestructEvent = .text:0x80012700; // type:function size:0x24 scope:global
TRKConstructEvent = .text:0x80012724; // type:function size:0x18
TRKPostEvent = .text:0x8001273C; // type:function size:0xE0
TRKGetNextEvent = .text:0x8001281C; // type:function size:0xB4 scope:global
TRKInitializeEventQueue = .text:0x800128D0; // type:function size:0x58 scope:global
TRKNubWelcome = .text:0x80012928; // type:function size:0x28 scope:global
TRKTerminateNub = .text:0x80012950; // type:function size:0x24 scope:global
TRKInitializeNub = .text:0x80012974; // type:function size:0x134 scope:global
TRKMessageSend = .text:0x80012AA8; // type:function size:0x1DC
TRKReadBuffer_ui32 = .text:0x80012C84; // type:function size:0xF0
TRKReadBuffer_ui8 = .text:0x80012D74; // type:function size:0x98
TRKReadBuffer1_ui64 = .text:0x80012E0C; // type:function size:0xE8
TRKReadBuffer1_ui32 = .text:0x80012EF4; // type:function size:0xC8
TRKReadBuffer1_ui16 = .text:0x80012FBC; // type:function size:0xB8
TRKReadBuffer1_ui8 = .text:0x80013074; // type:function size:0x80
TRKAppendBuffer_ui32 = .text:0x800130F4; // type:function size:0xA8
TRKAppendBuffer_ui8 = .text:0x8001319C; // type:function size:0x68
TRKAppendBuffer1_ui64 = .text:0x80013204; // type:function size:0x88
TRKAppendBuffer1_ui32 = .text:0x8001328C; // type:function size:0x64
TRKAppendBuffer1_ui16 = .text:0x800132F0; // type:function size:0x54
TRKReadBuffer = .text:0x80013344; // type:function size:0x8C
TRKAppendBuffer = .text:0x800133D0; // type:function size:0xA4
TRKSetBufferPosition = .text:0x80013474; // type:function size:0x30
TRKResetBuffer = .text:0x800134A4; // type:function size:0x40
TRKReleaseBuffer = .text:0x800134E4; // type:function size:0x64
TRKGetBuffer = .text:0x80013548; // type:function size:0x2C scope:global
TRKGetFreeBuffer = .text:0x80013574; // type:function size:0xC8
TRKInitializeMessageBuffers = .text:0x8001363C; // type:function size:0x74 scope:global
TRKTerminateSerialHandler = .text:0x800136B0; // type:function size:0x8
TRKInitializeSerialHandler = .text:0x800136B8; // type:function size:0x24 scope:global
TRKProcessInput = .text:0x800136DC; // type:function size:0x50
TRKGetInput = .text:0x8001372C; // type:function size:0x98 scope:global
TRKTestForPacket = .text:0x800137C4; // type:function size:0x2B8
usr_put_initialize = .text:0x80013A7C; // type:function size:0x4 scope:global
usr_puts_serial = .text:0x80013A80; // type:function size:0x88
TRKDispatchMessage = .text:0x80013B08; // type:function size:0x84 scope:global
TRKInitializeDispatcher = .text:0x80013B8C; // type:function size:0x18 scope:global
TRKDoSetOption = .text:0x80013BA4; // type:function size:0x1A4
TRKDoStop = .text:0x80013D48; // type:function size:0x100
TRKDoStep = .text:0x80013E48; // type:function size:0x530
TRKDoContinue = .text:0x80014378; // type:function size:0x154
TRKDoFlushCache = .text:0x800144CC; // type:function size:0x2F8
TRKDoWriteRegisters = .text:0x800147C4; // type:function size:0x3C8
TRKDoReadRegisters = .text:0x80014B8C; // type:function size:0x3CC
TRKDoWriteMemory = .text:0x80014F58; // type:function size:0x420
TRKDoReadMemory = .text:0x80015378; // type:function size:0x410
TRKDoCPUType = .text:0x80015788; // type:function size:0x398
TRKDoSupportMask = .text:0x80015B20; // type:function size:0x230
TRKDoVersions = .text:0x80015D50; // type:function size:0x2D8
TRKDoReset = .text:0x80016028; // type:function size:0xB8
TRKDoDisconnect = .text:0x800160E0; // type:function size:0xE4
TRKDoConnect = .text:0x800161C4; // type:function size:0xBC
TRKDoUnsupported = .text:0x80016280; // type:function size:0xB0
TRKStandardACK = .text:0x80016330; // type:function size:0xB8
SetTRKConnected = .text:0x800163E8; // type:function size:0xC
GetTRKConnected = .text:0x800163F4; // type:function size:0x10
HandlePositionFileSupportRequest = .text:0x80016404; // type:function size:0x190
HandleCloseFileSupportRequest = .text:0x80016594; // type:function size:0x120
HandleOpenFileSupportRequest = .text:0x800166B4; // type:function size:0x1A8
TRKRequestSend = .text:0x8001685C; // type:function size:0x1A4
TRKSuppAccessFile = .text:0x80016A00; // type:function size:0x2C4
TRKReleaseMutex = .text:0x80016CC4; // type:function size:0x8
TRKAcquireMutex = .text:0x80016CCC; // type:function size:0x8
TRKInitializeMutex = .text:0x80016CD4; // type:function size:0x8
TRKDoNotifyStopped = .text:0x80016CDC; // type:function size:0xD8
TRK_flush_cache = .text:0x80016DB4; // type:function size:0x38
TRK_fill_mem = .text:0x80016DEC; // type:function size:0xBC
__TRK_get_MSR = .text:0x80016EA8; // type:function size:0x8
__TRK_set_MSR = .text:0x80016EB0; // type:function size:0x8
TRK_ppc_memcpy = .text:0x80016EB8; // type:function size:0x3C
TRKInterruptHandler = .text:0x80016EF4; // type:function size:0x194 scope:global
TRKExceptionHandler = .text:0x80017088; // type:function size:0x9C scope:global
TRKSwapAndGo = .text:0x80017124; // type:function size:0xC4 scope:global
TRKInterruptHandlerEnableInterrupts = .text:0x800171E8; // type:function size:0x54 scope:global
TRKTargetSetInputPendingPtr = .text:0x8001723C; // type:function size:0x10 scope:global
TRKPPCAccessFPRegister = .text:0x8001724C; // type:function size:0x21C
TRKTargetStop = .text:0x80017468; // type:function size:0x18
TRKTargetSetStopped = .text:0x80017480; // type:function size:0x10 scope:global
TRKTargetStopped = .text:0x80017490; // type:function size:0x10 scope:global
TRKTargetFlushCache = .text:0x800174A0; // type:function size:0x3C
TRKTargetSupportRequest = .text:0x800174DC; // type:function size:0x208 scope:global
TRKTargetGetPC = .text:0x800176E4; // type:function size:0x10
TRKTargetStepOutOfRange = .text:0x800176F4; // type:function size:0x7C
TRKTargetSingleStep = .text:0x80017770; // type:function size:0x6C
TRKTargetAddExceptionInfo = .text:0x800177DC; // type:function size:0xAC
TRKTargetAddStopInfo = .text:0x80017888; // type:function size:0x124
TRKTargetInterrupt = .text:0x800179AC; // type:function size:0x15C scope:global
TRKPostInterruptEvent = .text:0x80017B08; // type:function size:0xC0 scope:global
TRKTargetCPUType = .text:0x80017BC8; // type:function size:0x60
TRKTargetSupportMask = .text:0x80017C28; // type:function size:0xA4
TRKTargetVersions = .text:0x80017CCC; // type:function size:0x24
TRKTargetAccessExtended2 = .text:0x80017CF0; // type:function size:0x438
TRKTargetAccessExtended1 = .text:0x80018128; // type:function size:0x170
TRKTargetAccessFP = .text:0x80018298; // type:function size:0x13C
TRKTargetAccessDefault = .text:0x800183D4; // type:function size:0xF4
TRKTargetAccessMemory = .text:0x800184C8; // type:function size:0x14C
TRKValidMemory32 = .text:0x80018614; // type:function size:0x124
TRKAccessFile = .text:0x80018740; // type:function size:0x8
TRKOpenFile = .text:0x80018748; // type:function size:0x8
TRKCloseFile = .text:0x80018750; // type:function size:0x8
TRKPositionFile = .text:0x80018758; // type:function size:0x8
InitMetroTRK = .text:0x80018760; // type:function size:0x94 scope:global
TRKInitializeTarget = .text:0x800187F4; // type:function size:0x4C scope:global
TRKTargetTranslate = .text:0x80018840; // type:function size:0x40
EnableMetroTRKInterrupts = .text:0x80018880; // type:function size:0x20 scope:global
TRKSaveExtended1Block = .text:0x800188A0; // type:function size:0x1B8 scope:global
TRKRestoreExtended1Block = .text:0x80018A58; // type:function size:0x1B8 scope:global
TRKTargetCPUMinorType = .text:0x80018C10; // type:function size:0x8
TRK_main = .text:0x80018C18; // type:function size:0x44 scope:global
TRKLoadContext = .text:0x80018C5C; // type:function size:0x88 scope:global
TRKUARTInterruptHandler = .text:0x80018CE4; // type:function size:0x4 scope:global
TRK_board_display = .text:0x80018CE8; // type:function size:0x24 scope:global
UnreserveEXI2Port = .text:0x80018D0C; // type:function size:0x30 scope:global
ReserveEXI2Port = .text:0x80018D3C; // type:function size:0x30 scope:global
TRKReadUARTPoll = .text:0x80018D6C; // type:function size:0xF0
WriteUART1 = .text:0x80018E5C; // type:function size:0x28
WriteUARTFlush = .text:0x80018E84; // type:function size:0xE0
EnableEXI2Interrupts = .text:0x80018F64; // type:function size:0x30
TRKInitializeIntDrivenUART = .text:0x80018F94; // type:function size:0x3C scope:global
InitMetroTRKCommTable = .text:0x80018FD0; // type:function size:0x100 scope:global
TRKEXICallBack = .text:0x800190D0; // type:function size:0x38 scope:global
TRKTargetContinue = .text:0x80019108; // type:function size:0x34 scope:global
GetUseSerialIO = .text:0x8001913C; // type:function size:0x10
SetUseSerialIO = .text:0x8001914C; // type:function size:0xC
__TRK_write_console = .text:0x80019158; // type:function size:0xBC
__read_console = .text:0x80019214; // type:function size:0xBC
AIRegisterDMACallback = .text:0x800192D0; // type:function size:0x44
AIInitDMA = .text:0x80019314; // type:function size:0x88
AIStartDMA = .text:0x8001939C; // type:function size:0x18
AISetStreamPlayState = .text:0x800193B4; // type:function size:0xD8
AIGetStreamPlayState = .text:0x8001948C; // type:function size:0x10
AISetDSPSampleRate = .text:0x8001949C; // type:function size:0xE0
AIGetDSPSampleRate = .text:0x8001957C; // type:function size:0x14
__AI_set_stream_sample_rate = .text:0x80019590; // type:function size:0xD4
AIGetStreamSampleRate = .text:0x80019664; // type:function size:0x10
AISetStreamVolLeft = .text:0x80019674; // type:function size:0x1C
AIGetStreamVolLeft = .text:0x80019690; // type:function size:0x10
AISetStreamVolRight = .text:0x800196A0; // type:function size:0x1C
AIGetStreamVolRight = .text:0x800196BC; // type:function size:0x10
AIInit = .text:0x800196CC; // type:function size:0x16C
__AISHandler = .text:0x80019838; // type:function size:0x7C
__AIDHandler = .text:0x800198B4; // type:function size:0xAC
__AICallbackStackSwitch = .text:0x80019960; // type:function size:0x58
__AI_SRC_INIT = .text:0x800199B8; // type:function size:0x1E4
EXI2_Init = .text:0x80019B9C; // type:function size:0x4 scope:global
EXI2_EnableInterrupts = .text:0x80019BA0; // type:function size:0x4 scope:global
EXI2_Poll = .text:0x80019BA4; // type:function size:0x8 scope:global
EXI2_ReadN = .text:0x80019BAC; // type:function size:0x8 scope:global
EXI2_WriteN = .text:0x80019BB4; // type:function size:0x8 scope:global
EXI2_Reserve = .text:0x80019BBC; // type:function size:0x4 scope:global
EXI2_Unreserve = .text:0x80019BC0; // type:function size:0x4 scope:global
AMC_IsStub = .text:0x80019BC4; // type:function size:0x8 scope:global
ARRegisterDMACallback = .text:0x80019BCC; // type:function size:0x44
ARStartDMA = .text:0x80019C10; // type:function size:0xF0
ARAlloc = .text:0x80019D00; // type:function size:0x68
ARFree = .text:0x80019D68; // type:function size:0x74
ARInit = .text:0x80019DDC; // type:function size:0xC4
__ARHandler = .text:0x80019EA0; // type:function size:0x78
__ARChecksize = .text:0x80019F18; // type:function size:0x17F4
__ARQServiceQueueLo = .text:0x8001B70C; // type:function size:0x100
__ARQCallbackHack = .text:0x8001B80C; // type:function size:0x4
__ARQInterruptServiceRoutine = .text:0x8001B810; // type:function size:0xCC
ARQInit = .text:0x8001B8DC; // type:function size:0x70
ARQPostRequest = .text:0x8001B94C; // type:function size:0x15C
AXInit = .text:0x8001BAA8; // type:function size:0x3C
__AXGetStackHead = .text:0x8001BAE4; // type:function size:0x18
__AXServiceCallbackStack = .text:0x8001BAFC; // type:function size:0x74
__AXAllocInit = .text:0x8001BB70; // type:function size:0xB4
__AXPushFreeStack = .text:0x8001BC24; // type:function size:0x20
__AXPushCallbackStack = .text:0x8001BC44; // type:function size:0x10
__AXPopCallbackStack = .text:0x8001BC54; // type:function size:0x1C
__AXRemoveFromStack = .text:0x8001BC70; // type:function size:0x94
AXFreeVoice = .text:0x8001BD04; // type:function size:0x80
AXAcquireVoice = .text:0x8001BD84; // type:function size:0x174
__AXAuxInit = .text:0x8001BEF8; // type:function size:0xE4
__AXGetAuxAInput = .text:0x8001BFDC; // type:function size:0x34
__AXGetAuxAInputDpl2 = .text:0x8001C010; // type:function size:0x20
__AXGetAuxAOutput = .text:0x8001C030; // type:function size:0x1C
__AXGetAuxAOutputDpl2R = .text:0x8001C04C; // type:function size:0x20
__AXGetAuxAOutputDpl2Ls = .text:0x8001C06C; // type:function size:0x20
__AXGetAuxAOutputDpl2Rs = .text:0x8001C08C; // type:function size:0x20
__AXGetAuxBInput = .text:0x8001C0AC; // type:function size:0x34
__AXGetAuxBOutput = .text:0x8001C0E0; // type:function size:0x1C
__AXGetAuxBForDPL2 = .text:0x8001C0FC; // type:function size:0x1C
__AXGetAuxBOutputDPL2 = .text:0x8001C118; // type:function size:0x1C
__AXProcessAux = .text:0x8001C134; // type:function size:0x23C
AXRegisterAuxACallback = .text:0x8001C370; // type:function size:0xC
AXRegisterAuxBCallback = .text:0x8001C37C; // type:function size:0xC
__AXGetCommandListCycles = .text:0x8001C388; // type:function size:0x8
__AXGetCommandListAddress = .text:0x8001C390; // type:function size:0x3C
__AXNextFrame = .text:0x8001C3CC; // type:function size:0x6B0
__AXClInit = .text:0x8001CA7C; // type:function size:0x24
AXSetMode = .text:0x8001CAA0; // type:function size:0x14
__AXOutNewFrame = .text:0x8001CAB4; // type:function size:0x188
__AXOutAiCallback = .text:0x8001CC3C; // type:function size:0x68
__AXDSPInitCallback = .text:0x8001CCA4; // type:function size:0xC
__AXDSPResumeCallback = .text:0x8001CCB0; // type:function size:0x58
__AXDSPDoneCallback = .text:0x8001CD08; // type:function size:0x2C
__AXOutInitDSP = .text:0x8001CD34; // type:function size:0xCC
__AXOutInit = .text:0x8001CE00; // type:function size:0x340
AXRegisterCallback = .text:0x8001D140; // type:function size:0x8
__AXGetStudio = .text:0x8001D148; // type:function size:0xC
__AXPrintStudio = .text:0x8001D154; // type:function size:0x3F8
__AXSPBInit = .text:0x8001D54C; // type:function size:0x2C
__AXDepopVoice = .text:0x8001D578; // type:function size:0x94
__AXGetNumVoices = .text:0x8001D60C; // type:function size:0x8
__AXServiceVPB = .text:0x8001D614; // type:function size:0x708
__AXSyncPBs = .text:0x8001DD1C; // type:function size:0x268
__AXGetPBs = .text:0x8001DF84; // type:function size:0xC
__AXSetPBDefault = .text:0x8001DF90; // type:function size:0x3C
__AXVPBInit = .text:0x8001DFCC; // type:function size:0x1FC
AXSetVoiceSrcType = .text:0x8001E1C8; // type:function size:0xC4
AXSetVoiceState = .text:0x8001E28C; // type:function size:0x5C
AXSetVoiceMix = .text:0x8001E2E8; // type:function size:0x254
AXSetVoiceAddr = .text:0x8001E53C; // type:function size:0x110
AXSetVoiceAdpcm = .text:0x8001E64C; // type:function size:0xA4
AXSetVoiceSrc = .text:0x8001E6F0; // type:function size:0x98
AXSetVoiceSrcRatio = .text:0x8001E788; // type:function size:0x98
AXSetVoiceAdpcmLoop = .text:0x8001E820; // type:function size:0x6C
__AXGetCurrentProfile = .text:0x8001E88C; // type:function size:0x48
ReverbHICreate = .text:0x8001E8D4; // type:function size:0x4EC
DoCrossTalk = .text:0x8001EDC0; // type:function size:0x190
HandleReverb = .text:0x8001EF50; // type:function size:0x50C scope:local
AXFXReverbHiInit = .text:0x8001F45C; // type:function size:0x70
AXFXReverbHiCallback = .text:0x8001F4CC; // type:function size:0x104
ReverbSTDCreate = .text:0x8001F5D0; // type:function size:0x40C
HandleReverb = .text:0x8001F9DC; // type:function size:0x3B4 scope:local
AXFXReverbStdInit = .text:0x8001FD90; // type:function size:0x6C
AXFXReverbStdCallback = .text:0x8001FDFC; // type:function size:0x30
do_src1 = .text:0x8001FE2C; // type:function size:0x198
do_src2 = .text:0x8001FFC4; // type:function size:0x1EC
AXFXChorusInit = .text:0x800201B0; // type:function size:0x200
AXFXChorusSettings = .text:0x800203B0; // type:function size:0xC4
AXFXChorusCallback = .text:0x80020474; // type:function size:0x350
AXFXDelayCallback = .text:0x800207C4; // type:function size:0x1D0
AXFXDelaySettings = .text:0x80020994; // type:function size:0x204
AXFXDelayInit = .text:0x80020B98; // type:function size:0x48
AXFXDelayShutdown = .text:0x80020BE0; // type:function size:0x90
__AXFXAllocFunction = .text:0x80020C70; // type:function size:0x28
__AXFXFreeFunction = .text:0x80020C98; // type:function size:0x28
AXFXSetHooks = .text:0x80020CC0; // type:function size:0xC
PPCMfmsr = .text:0x80020CCC; // type:function size:0x8 scope:global
PPCMtmsr = .text:0x80020CD4; // type:function size:0x8 scope:global
PPCMfhid0 = .text:0x80020CDC; // type:function size:0x8 scope:global
PPCMthid0 = .text:0x80020CE4; // type:function size:0x8
PPCMfl2cr = .text:0x80020CEC; // type:function size:0x8 scope:global
PPCMtl2cr = .text:0x80020CF4; // type:function size:0x8 scope:global
PPCMtdec = .text:0x80020CFC; // type:function size:0x8 scope:weak
PPCSync = .text:0x80020D04; // type:function size:0x8
PPCHalt = .text:0x80020D0C; // type:function size:0x14 scope:weak
PPCMffpscr = .text:0x80020D20; // type:function size:0x20 scope:global
PPCMtfpscr = .text:0x80020D40; // type:function size:0x28 scope:global
PPCMfhid2 = .text:0x80020D68; // type:function size:0x8 scope:global
PPCMthid2 = .text:0x80020D70; // type:function size:0x8 scope:global
PPCMtwpar = .text:0x80020D78; // type:function size:0x8 scope:global
PPCDisableSpeculation = .text:0x80020D80; // type:function size:0x28 scope:global
PPCSetFpNonIEEEMode = .text:0x80020DA8; // type:function size:0x8 scope:global
__CARDDefaultApiCallback = .text:0x80020DB0; // type:function size:0x4
__CARDSyncCallback = .text:0x80020DB4; // type:function size:0x34
__CARDExtHandler = .text:0x80020DE8; // type:function size:0xD8
__CARDExiHandler = .text:0x80020EC0; // type:function size:0x118
__CARDTxHandler = .text:0x80020FD8; // type:function size:0xA8
__CARDUnlockedHandler = .text:0x80021080; // type:function size:0x84
__CARDEnableInterrupt = .text:0x80021104; // type:function size:0xC0
__CARDReadStatus = .text:0x800211C4; // type:function size:0xF0
__CARDClearStatus = .text:0x800212B4; // type:function size:0xAC
TimeoutHandler = .text:0x80021360; // type:function size:0xA4
Retry = .text:0x80021404; // type:function size:0x22C
UnlockedCallback = .text:0x80021630; // type:function size:0x110
__CARDStart = .text:0x80021740; // type:function size:0x1B4
__CARDReadSegment = .text:0x800218F4; // type:function size:0x134
__CARDWritePage = .text:0x80021A28; // type:function size:0x11C
__CARDEraseSector = .text:0x80021B44; // type:function size:0xE0
CARDInit = .text:0x80021C24; // type:function size:0xAC
__CARDGetFontEncode = .text:0x80021CD0; // type:function size:0x8
__CARDSetDiskID = .text:0x80021CD8; // type:function size:0x38
__CARDGetControlBlock = .text:0x80021D10; // type:function size:0xB8
__CARDPutControlBlock = .text:0x80021DC8; // type:function size:0x64
CARDFreeBlocks = .text:0x80021E2C; // type:function size:0x150
CARDGetEncoding = .text:0x80021F7C; // type:function size:0x88
__CARDSync = .text:0x80022004; // type:function size:0x98
OnReset = .text:0x8002209C; // type:function size:0x50
bitrev = .text:0x800220EC; // type:function size:0x16C
ReadArrayUnlock = .text:0x80022258; // type:function size:0x144
DummyLen = .text:0x8002239C; // type:function size:0xC4
__CARDUnlock = .text:0x80022460; // type:function size:0xB58
InitCallback = .text:0x80022FB8; // type:function size:0x70
DoneCallback = .text:0x80023028; // type:function size:0x324
BlockReadCallback = .text:0x8002334C; // type:function size:0xDC
__CARDRead = .text:0x80023428; // type:function size:0x64
BlockWriteCallback = .text:0x8002348C; // type:function size:0xDC
__CARDWrite = .text:0x80023568; // type:function size:0x64
__CARDGetFatBlock = .text:0x800235CC; // type:function size:0x8
WriteCallback = .text:0x800235D4; // type:function size:0xD4 scope:local
EraseCallback = .text:0x800236A8; // type:function size:0xC8 scope:local
__CARDAllocBlock = .text:0x80023770; // type:function size:0x118
__CARDFreeBlock = .text:0x80023888; // type:function size:0x9C
__CARDUpdateFatBlock = .text:0x80023924; // type:function size:0xAC
__CARDGetDirBlock = .text:0x800239D0; // type:function size:0x8
WriteCallback = .text:0x800239D8; // type:function size:0xD0 scope:local
EraseCallback = .text:0x80023AA8; // type:function size:0xC8 scope:local
__CARDUpdateDir = .text:0x80023B70; // type:function size:0xC4
__CARDCheckSum = .text:0x80023C34; // type:function size:0x1B0
VerifyID = .text:0x80023DE4; // type:function size:0x284
VerifyDir = .text:0x80024068; // type:function size:0x240
VerifyFAT = .text:0x800242A8; // type:function size:0x284
__CARDVerify = .text:0x8002452C; // type:function size:0x8C
CARDCheckExAsync = .text:0x800245B8; // type:function size:0x590
CARDCheckAsync = .text:0x80024B48; // type:function size:0x28
CARDCheck = .text:0x80024B70; // type:function size:0x54
IsCard = .text:0x80024BC4; // type:function size:0xCC
CARDProbeEx = .text:0x80024C90; // type:function size:0x17C
DoMount = .text:0x80024E0C; // type:function size:0x410
__CARDMountCallback = .text:0x8002521C; // type:function size:0x138
CARDMountAsync = .text:0x80025354; // type:function size:0x1A0
CARDMount = .text:0x800254F4; // type:function size:0x48
DoUnmount = .text:0x8002553C; // type:function size:0x9C
CARDUnmount = .text:0x800255D8; // type:function size:0xAC
FormatCallback = .text:0x80025684; // type:function size:0x144
__CARDFormatRegionAsync = .text:0x800257C8; // type:function size:0x658
CARDFormatAsync = .text:0x80025E20; // type:function size:0x48
CARDFormat = .text:0x80025E68; // type:function size:0x54
__CARDCompareFileName = .text:0x80025EBC; // type:function size:0x68
__CARDAccess = .text:0x80025F24; // type:function size:0x98
__CARDIsPublic = .text:0x80025FBC; // type:function size:0x30
__CARDGetFileNo = .text:0x80025FEC; // type:function size:0x150
CARDFastOpen = .text:0x8002613C; // type:function size:0x160
CARDOpen = .text:0x8002629C; // type:function size:0x178
CARDClose = .text:0x80026414; // type:function size:0x54
__CARDIsOpened = .text:0x80026468; // type:function size:0x8
CreateCallbackFat = .text:0x80026470; // type:function size:0x130
CARDCreateAsync = .text:0x800265A0; // type:function size:0x220
CARDCreate = .text:0x800267C0; // type:function size:0x48
__CARDSeek = .text:0x80026808; // type:function size:0x1B8
ReadCallback = .text:0x800269C0; // type:function size:0x130
CARDReadAsync = .text:0x80026AF0; // type:function size:0x148
CARDRead = .text:0x80026C38; // type:function size:0x48
WriteCallback = .text:0x80026C80; // type:function size:0x170 scope:local
EraseCallback = .text:0x80026DF0; // type:function size:0xB0 scope:local
CARDWriteAsync = .text:0x80026EA0; // type:function size:0x114
DeleteCallback = .text:0x80026FB4; // type:function size:0xA4
CARDFastDeleteAsync = .text:0x80027058; // type:function size:0x12C
CARDDeleteAsync = .text:0x80027184; // type:function size:0x110
CARDDelete = .text:0x80027294; // type:function size:0x48
UpdateIconOffsets = .text:0x800272DC; // type:function size:0x1F8
CARDGetStatus = .text:0x800274D4; // type:function size:0x12C
CARDSetStatusAsync = .text:0x80027600; // type:function size:0x174
CARDSetStatus = .text:0x80027774; // type:function size:0x48
CARDGetSerialNo = .text:0x800277BC; // type:function size:0xC4
DBInit = .text:0x80027880; // type:function size:0x28 scope:global
__DBExceptionDestinationAux = .text:0x800278A8; // type:function size:0x48
__DBExceptionDestination = .text:0x800278F0; // type:function size:0x10 scope:global
__DBIsExceptionMarked = .text:0x80027900; // type:function size:0x1C scope:global
DBPrintf = .text:0x8002791C; // type:function size:0x50 scope:global
DSPCheckMailToDSP = .text:0x8002796C; // type:function size:0x10
DSPCheckMailFromDSP = .text:0x8002797C; // type:function size:0x10
DSPReadMailFromDSP = .text:0x8002798C; // type:function size:0x18
DSPSendMailToDSP = .text:0x800279A4; // type:function size:0x14
DSPInit = .text:0x800279B8; // type:function size:0xC4
DSPCheckInit = .text:0x80027A7C; // type:function size:0x8
DSPAddTask = .text:0x80027A84; // type:function size:0x70
DSPAssertTask = .text:0x80027AF4; // type:function size:0xC8
__DSP_debug_printf = .text:0x80027BBC; // type:function size:0x50
__DSPHandler = .text:0x80027C0C; // type:function size:0x424
__DSP_exec_task = .text:0x80028030; // type:function size:0x1A0
__DSP_boot_task = .text:0x800281D0; // type:function size:0x18C
__DSP_insert_task = .text:0x8002835C; // type:function size:0xA0
__DSP_remove_task = .text:0x800283FC; // type:function size:0x94
__DVDInitWA = .text:0x80028490; // type:function size:0x40 scope:weak
__DVDInterruptHandler = .text:0x800284D0; // type:function size:0x2E0 scope:weak
AlarmHandler = .text:0x800287B0; // type:function size:0x84
AlarmHandlerForTimeout = .text:0x80028834; // type:function size:0x70 scope:local
Read = .text:0x800288A4; // type:function size:0x110
SeekTwiceBeforeRead = .text:0x800289B4; // type:function size:0x80
DVDLowRead = .text:0x80028A34; // type:function size:0x298
DVDLowSeek = .text:0x80028CCC; // type:function size:0x94
DVDLowWaitCoverClose = .text:0x80028D60; // type:function size:0x2C scope:weak
DVDLowReadDiskID = .text:0x80028D8C; // type:function size:0xA4
DVDLowStopMotor = .text:0x80028E30; // type:function size:0x8C scope:weak
DVDLowRequestError = .text:0x80028EBC; // type:function size:0x8C
DVDLowInquiry = .text:0x80028F48; // type:function size:0x9C
DVDLowAudioStream = .text:0x80028FE4; // type:function size:0x98
DVDLowRequestAudioStatus = .text:0x8002907C; // type:function size:0x8C
DVDLowAudioBufferConfig = .text:0x80029108; // type:function size:0x9C
DVDLowReset = .text:0x800291A4; // type:function size:0xBC scope:global
DVDLowBreak = .text:0x80029260; // type:function size:0x14
DVDLowClearCallback = .text:0x80029274; // type:function size:0x18
__DVDLowSetWAType = .text:0x8002928C; // type:function size:0x44 scope:global
__DVDFSInit = .text:0x800292D0; // type:function size:0x38 scope:global
DVDConvertPathToEntrynum = .text:0x80029308; // type:function size:0x2F4
DVDOpen = .text:0x800295FC; // type:function size:0xC8
DVDClose = .text:0x800296C4; // type:function size:0x24
entryToPath = .text:0x800296E8; // type:function size:0x160
DVDGetCurrentDir = .text:0x80029848; // type:function size:0xC4
DVDReadAsyncPrio = .text:0x8002990C; // type:function size:0xC0
cbForReadAsync = .text:0x800299CC; // type:function size:0x30
DVDReadPrio = .text:0x800299FC; // type:function size:0x118
cbForReadSync = .text:0x80029B14; // type:function size:0x24
DVDGetTransferredSize = .text:0x80029B38; // type:function size:0x6C
defaultOptionalCommandChecker = .text:0x80029BA4; // type:function size:0x4
DVDInit = .text:0x80029BA8; // type:function size:0xCC scope:global
stateReadingFST = .text:0x80029C74; // type:function size:0x94
cbForStateReadingFST = .text:0x80029D08; // type:function size:0x8C
cbForStateError = .text:0x80029D94; // type:function size:0xAC scope:local
stateTimeout = .text:0x80029E40; // type:function size:0x34
stateGettingError = .text:0x80029E74; // type:function size:0x28
CategorizeError = .text:0x80029E9C; // type:function size:0xB4
cbForStateGettingError = .text:0x80029F50; // type:function size:0x294
cbForUnrecoveredError = .text:0x8002A1E4; // type:function size:0x68
cbForUnrecoveredErrorRetry = .text:0x8002A24C; // type:function size:0x98
stateGoToRetry = .text:0x8002A2E4; // type:function size:0x28
cbForStateGoToRetry = .text:0x8002A30C; // type:function size:0x158
stateCheckID = .text:0x8002A464; // type:function size:0xE0
stateCheckID3 = .text:0x8002A544; // type:function size:0x34
stateCheckID2a = .text:0x8002A578; // type:function size:0x34
cbForStateCheckID2a = .text:0x8002A5AC; // type:function size:0x74
stateCheckID2 = .text:0x8002A620; // type:function size:0x38
cbForStateCheckID1 = .text:0x8002A658; // type:function size:0x114
cbForStateCheckID2 = .text:0x8002A76C; // type:function size:0xE4
cbForStateCheckID3 = .text:0x8002A850; // type:function size:0xFC
AlarmHandler = .text:0x8002A94C; // type:function size:0x44 scope:local
stateCoverClosed = .text:0x8002A990; // type:function size:0xCC
stateCoverClosed_CMD = .text:0x8002AA5C; // type:function size:0x30
cbForStateCoverClosed = .text:0x8002AA8C; // type:function size:0x70
stateMotorStopped = .text:0x8002AAFC; // type:function size:0x28
cbForStateMotorStopped = .text:0x8002AB24; // type:function size:0xE4 scope:local
stateReady = .text:0x8002AC08; // type:function size:0x230 scope:local
stateBusy = .text:0x8002AE38; // type:function size:0x320 scope:local
cbForStateBusy = .text:0x8002B158; // type:function size:0x638
DVDReadAbsAsyncPrio = .text:0x8002B790; // type:function size:0xDC
DVDReadAbsAsyncForBS = .text:0x8002B86C; // type:function size:0xD0
DVDReadDiskID = .text:0x8002B93C; // type:function size:0xD4 scope:global
DVDCancelStreamAsync = .text:0x8002BA10; // type:function size:0xBC
DVDInquiryAsync = .text:0x8002BACC; // type:function size:0xD0 scope:global
DVDReset = .text:0x8002BB9C; // type:function size:0x44 scope:global
DVDGetCommandBlockStatus = .text:0x8002BBE0; // type:function size:0x4C
DVDGetDriveStatus = .text:0x8002BC2C; // type:function size:0xAC scope:global
DVDSetAutoInvalidation = .text:0x8002BCD8; // type:function size:0x10
DVDResume = .text:0x8002BCE8; // type:function size:0x50
DVDCancelAsync = .text:0x8002BD38; // type:function size:0x27C
DVDCancel = .text:0x8002BFB4; // type:function size:0xAC
cbForCancelSync = .text:0x8002C060; // type:function size:0x24
DVDGetCurrentDiskID = .text:0x8002C084; // type:function size:0x8
DVDCheckDisk = .text:0x8002C08C; // type:function size:0xF8
__DVDPrepareResetAsync = .text:0x8002C184; // type:function size:0x11C
__DVDClearWaitingQueue = .text:0x8002C2A0; // type:function size:0x38 scope:global
__DVDPushWaitingQueue = .text:0x8002C2D8; // type:function size:0x68 scope:global
__DVDPopWaitingQueue = .text:0x8002C340; // type:function size:0xA0 scope:global
__DVDCheckWaitingQueue = .text:0x8002C3E0; // type:function size:0x58 scope:global
__DVDDequeueWaitingQueue = .text:0x8002C438; // type:function size:0x60
ErrorCode2Num = .text:0x8002C498; // type:function size:0x11C scope:local
__DVDStoreErrorCode = .text:0x8002C5B4; // type:function size:0x7C scope:global
DVDCompareDiskID = .text:0x8002C630; // type:function size:0xF8
__DVDPrintFatalMessage = .text:0x8002C728; // type:function size:0x30
cb = .text:0x8002C758; // type:function size:0xD8 scope:local
__fstLoad = .text:0x8002C830; // type:function size:0x168 scope:global
SetExiInterruptMask = .text:0x8002C998; // type:function size:0xF4 scope:local
EXIImm = .text:0x8002CA8C; // type:function size:0x25C scope:global
fn_8002CCE8 = .text:0x8002CCE8; // type:function size:0xA0
EXIDma = .text:0x8002CD88; // type:function size:0xEC scope:global
EXISync = .text:0x8002CE74; // type:function size:0x24C scope:global
EXIClearInterrupts = .text:0x8002D0C0; // type:function size:0x48 scope:global
fn_8002D108 = .text:0x8002D108; // type:function size:0x7C
__EXIProbe = .text:0x8002D184; // type:function size:0x174 scope:local
fn_8002D2F8 = .text:0x8002D2F8; // type:function size:0x80
fn_8002D378 = .text:0x8002D378; // type:function size:0xB4
fn_8002D42C = .text:0x8002D42C; // type:function size:0x10C
fn_8002D538 = .text:0x8002D538; // type:function size:0xBC
EXISelect = .text:0x8002D5F4; // type:function size:0x12C scope:global
EXIDeselect = .text:0x8002D720; // type:function size:0x110 scope:global
EXIIntrruptHandler = .text:0x8002D830; // type:function size:0xC8 scope:local
TCIntrruptHandler = .text:0x8002D8F8; // type:function size:0x218 scope:local
EXTIntrruptHandler = .text:0x8002DB10; // type:function size:0xD0 scope:local
EXIInit = .text:0x8002DBE0; // type:function size:0x164 scope:global
EXILock = .text:0x8002DD44; // type:function size:0xF4 scope:global
EXIUnlock = .text:0x8002DE38; // type:function size:0xDC scope:global
fn_8002DF14 = .text:0x8002DF14; // type:function size:0x18
UnlockedHandler = .text:0x8002DF2C; // type:function size:0x28 scope:local
EXIGetID = .text:0x8002DF54; // type:function size:0x3B0 scope:global
fn_8002E304 = .text:0x8002E304; // type:function size:0x70
fn_8002E374 = .text:0x8002E374; // type:function size:0x21C
fn_8002E590 = .text:0x8002E590; // type:function size:0x7C
fn_8002E60C = .text:0x8002E60C; // type:function size:0x24
fn_8002E630 = .text:0x8002E630; // type:function size:0x190
GXInit = .text:0x8002E7C0; // type:function size:0x890 scope:global
__GXInitGX = .text:0x8002F050; // type:function size:0x8C4 scope:global
fn_8002F914 = .text:0x8002F914; // type:function size:0x134
GXInitFifoBase = .text:0x8002FA48; // type:function size:0x6C scope:global
fn_8002FAB4 = .text:0x8002FAB4; // type:function size:0x70
fn_8002FB24 = .text:0x8002FB24; // type:function size:0xC
GXSetCPUFifo = .text:0x8002FB30; // type:function size:0x110 scope:global
GXSetGPFifo = .text:0x8002FC40; // type:function size:0x178 scope:global
fn_8002FDB8 = .text:0x8002FDB8; // type:function size:0x44
__GXFifoInit = .text:0x8002FDFC; // type:function size:0x4C scope:global
fn_8002FE48 = .text:0x8002FE48; // type:function size:0x24
fn_8002FE6C = .text:0x8002FE6C; // type:function size:0x20
fn_8002FE8C = .text:0x8002FE8C; // type:function size:0x3C
fn_8002FEC8 = .text:0x8002FEC8; // type:function size:0x3C
fn_8002FF04 = .text:0x8002FF04; // type:function size:0x3C
fn_8002FF40 = .text:0x8002FF40; // type:function size:0x8
fn_8002FF48 = .text:0x8002FF48; // type:function size:0x158
fn_800300A0 = .text:0x800300A0; // type:function size:0x350
fn_800303F0 = .text:0x800303F0; // type:function size:0x54
fn_80030444 = .text:0x80030444; // type:function size:0x124
fn_80030568 = .text:0x80030568; // type:function size:0x38
fn_800305A0 = .text:0x800305A0; // type:function size:0x358
fn_800308F8 = .text:0x800308F8; // type:function size:0x378
fn_80030C70 = .text:0x80030C70; // type:function size:0x9C
fn_80030D0C = .text:0x80030D0C; // type:function size:0x8C
fn_80030D98 = .text:0x80030D98; // type:function size:0x10
fn_80030DA8 = .text:0x80030DA8; // type:function size:0x2D0
fn_80031078 = .text:0x80031078; // type:function size:0x40
GXSetMisc = .text:0x800310B8; // type:function size:0x94 scope:global
fn_8003114C = .text:0x8003114C; // type:function size:0x5C
fn_800311A8 = .text:0x800311A8; // type:function size:0x16C
fn_80031314 = .text:0x80031314; // type:function size:0x80
fn_80031394 = .text:0x80031394; // type:function size:0x14
fn_800313A8 = .text:0x800313A8; // type:function size:0x14
fn_800313BC = .text:0x800313BC; // type:function size:0x1C
fn_800313D8 = .text:0x800313D8; // type:function size:0x88
fn_80031460 = .text:0x80031460; // type:function size:0x1C
fn_8003147C = .text:0x8003147C; // type:function size:0x14
fn_80031490 = .text:0x80031490; // type:function size:0x1C
fn_800314AC = .text:0x800314AC; // type:function size:0x28
fn_800314D4 = .text:0x800314D4; // type:function size:0x44
fn_80031518 = .text:0x80031518; // type:function size:0x88
fn_800315A0 = .text:0x800315A0; // type:function size:0x44
fn_800315E4 = .text:0x800315E4; // type:function size:0x84
__GXPEInit = .text:0x80031668; // type:function size:0x80 scope:global
fn_800316E8 = .text:0x800316E8; // type:function size:0xA0
fn_80031788 = .text:0x80031788; // type:function size:0xF0
fn_80031878 = .text:0x80031878; // type:function size:0x88
fn_80031900 = .text:0x80031900; // type:function size:0x48
fn_80031948 = .text:0x80031948; // type:function size:0x48
fn_80031990 = .text:0x80031990; // type:function size:0x5C
fn_800319EC = .text:0x800319EC; // type:function size:0x4C
fn_80031A38 = .text:0x80031A38; // type:function size:0x44
fn_80031A7C = .text:0x80031A7C; // type:function size:0x3C
fn_80031AB8 = .text:0x80031AB8; // type:function size:0x24
fn_80031ADC = .text:0x80031ADC; // type:function size:0x120
fn_80031BFC = .text:0x80031BFC; // type:function size:0x90
fn_80031C8C = .text:0x80031C8C; // type:function size:0x90
fn_80031D1C = .text:0x80031D1C; // type:function size:0x3C
fn_80031D58 = .text:0x80031D58; // type:function size:0x154
fn_80031EAC = .text:0x80031EAC; // type:function size:0x28
fn_80031ED4 = .text:0x80031ED4; // type:function size:0x68
fn_80031F3C = .text:0x80031F3C; // type:function size:0xC8
fn_80032004 = .text:0x80032004; // type:function size:0x68
fn_8003206C = .text:0x8003206C; // type:function size:0x228
fn_80032294 = .text:0x80032294; // type:function size:0x1C
fn_800322B0 = .text:0x800322B0; // type:function size:0x15C
fn_8003240C = .text:0x8003240C; // type:function size:0x17C
fn_80032588 = .text:0x80032588; // type:function size:0x38
fn_800325C0 = .text:0x800325C0; // type:function size:0x10
fn_800325D0 = .text:0x800325D0; // type:function size:0xC
fn_800325DC = .text:0x800325DC; // type:function size:0x7C
fn_80032658 = .text:0x80032658; // type:function size:0xF4
fn_8003274C = .text:0x8003274C; // type:function size:0xF4
fn_80032840 = .text:0x80032840; // type:function size:0x44
fn_80032884 = .text:0x80032884; // type:function size:0xCC
fn_80032950 = .text:0x80032950; // type:function size:0x15C
fn_80032AAC = .text:0x80032AAC; // type:function size:0xC8
fn_80032B74 = .text:0x80032B74; // type:function size:0x274
fn_80032DE8 = .text:0x80032DE8; // type:function size:0x48
fn_80032E30 = .text:0x80032E30; // type:function size:0x194
fn_80032FC4 = .text:0x80032FC4; // type:function size:0x8
fn_80032FCC = .text:0x80032FCC; // type:function size:0x198
fn_80033164 = .text:0x80033164; // type:function size:0x54
GXInitTexCacheRegion = .text:0x800331B8; // type:function size:0x120 scope:global
GXInitTlutRegion = .text:0x800332D8; // type:function size:0x48 scope:global
fn_80033320 = .text:0x80033320; // type:function size:0x48
fn_80033368 = .text:0x80033368; // type:function size:0x14
fn_8003337C = .text:0x8003337C; // type:function size:0x14
fn_80033390 = .text:0x80033390; // type:function size:0xB8
fn_80033448 = .text:0x80033448; // type:function size:0x17C
__GXSetTmemConfig = .text:0x800335C4; // type:function size:0x240 scope:global
fn_80033804 = .text:0x80033804; // type:function size:0x9C
fn_800338A0 = .text:0x800338A0; // type:function size:0x160
fn_80033A00 = .text:0x80033A00; // type:function size:0x17C
fn_80033B7C = .text:0x80033B7C; // type:function size:0x114
fn_80033C90 = .text:0x80033C90; // type:function size:0x28
fn_80033CB8 = .text:0x80033CB8; // type:function size:0x48
fn_80033D00 = .text:0x80033D00; // type:function size:0x64
fn_80033D64 = .text:0x80033D64; // type:function size:0xCC
__GXFlushTextureState = .text:0x80033E30; // type:function size:0x24 scope:global
fn_80033E54 = .text:0x80033E54; // type:function size:0x8C
fn_80033EE0 = .text:0x80033EE0; // type:function size:0x44
fn_80033F24 = .text:0x80033F24; // type:function size:0x44
fn_80033F68 = .text:0x80033F68; // type:function size:0x68
fn_80033FD0 = .text:0x80033FD0; // type:function size:0x68
fn_80034038 = .text:0x80034038; // type:function size:0x6C
fn_800340A4 = .text:0x800340A4; // type:function size:0x6C
fn_80034110 = .text:0x80034110; // type:function size:0x54
fn_80034164 = .text:0x80034164; // type:function size:0x98
fn_800341FC = .text:0x800341FC; // type:function size:0x54
fn_80034250 = .text:0x80034250; // type:function size:0x84
fn_800342D4 = .text:0x800342D4; // type:function size:0x1D8
fn_800344AC = .text:0x800344AC; // type:function size:0x30
fn_800344DC = .text:0x800344DC; // type:function size:0x21C
fn_800346F8 = .text:0x800346F8; // type:function size:0x100
fn_800347F8 = .text:0x800347F8; // type:function size:0x54
fn_8003484C = .text:0x8003484C; // type:function size:0x2C
fn_80034878 = .text:0x80034878; // type:function size:0x2C
fn_800348A4 = .text:0x800348A4; // type:function size:0x34
fn_800348D8 = .text:0x800348D8; // type:function size:0x38
fn_80034910 = .text:0x80034910; // type:function size:0xE8
fn_800349F8 = .text:0x800349F8; // type:function size:0x2C
fn_80034A24 = .text:0x80034A24; // type:function size:0x3C
fn_80034A60 = .text:0x80034A60; // type:function size:0x38
fn_80034A98 = .text:0x80034A98; // type:function size:0x7C
fn_80034B14 = .text:0x80034B14; // type:function size:0x4
fn_80034B18 = .text:0x80034B18; // type:function size:0x174
fn_80034C8C = .text:0x80034C8C; // type:function size:0xB4
fn_80034D40 = .text:0x80034D40; // type:function size:0xC0
fn_80034E00 = .text:0x80034E00; // type:function size:0x60
fn_80034E60 = .text:0x80034E60; // type:function size:0x50
fn_80034EB0 = .text:0x80034EB0; // type:function size:0x50
fn_80034F00 = .text:0x80034F00; // type:function size:0x38
fn_80034F38 = .text:0x80034F38; // type:function size:0xB4
fn_80034FEC = .text:0x80034FEC; // type:function size:0x104
fn_800350F0 = .text:0x800350F0; // type:function size:0x24
fn_80035114 = .text:0x80035114; // type:function size:0x38
fn_8003514C = .text:0x8003514C; // type:function size:0x90
fn_800351DC = .text:0x800351DC; // type:function size:0x40
fn_8003521C = .text:0x8003521C; // type:function size:0x28
fn_80035244 = .text:0x80035244; // type:function size:0x84
fn_800352C8 = .text:0x800352C8; // type:function size:0x848
fn_80035B10 = .text:0x80035B10; // type:function size:0x10
fn_80035B20 = .text:0x80035B20; // type:function size:0xBC
fn_80035BDC = .text:0x80035BDC; // type:function size:0xC8
fn_80035CA4 = .text:0x80035CA4; // type:function size:0x8
fn_80035CAC = .text:0x80035CAC; // type:function size:0xE7C
fn_80036B28 = .text:0x80036B28; // type:function size:0x20
fn_80036B48 = .text:0x80036B48; // type:function size:0x28
fn_80036B70 = .text:0x80036B70; // type:function size:0x6C
fn_80036BDC = .text:0x80036BDC; // type:function size:0x107C
fn_80037C58 = .text:0x80037C58; // type:function size:0x2C
fn_80037C84 = .text:0x80037C84; // type:function size:0x34
fn_80037CB8 = .text:0x80037CB8; // type:function size:0xCC
fn_80037D84 = .text:0x80037D84; // type:function size:0xF8
fn_80037E7C = .text:0x80037E7C; // type:function size:0x70
fn_80037EEC = .text:0x80037EEC; // type:function size:0xB0
fn_80037F9C = .text:0x80037F9C; // type:function size:0xB0
fn_8003804C = .text:0x8003804C; // type:function size:0x70
fn_800380BC = .text:0x800380BC; // type:function size:0x34
fn_800380F0 = .text:0x800380F0; // type:function size:0x28
fn_80038118 = .text:0x80038118; // type:function size:0xA4
fn_800381BC = .text:0x800381BC; // type:function size:0x18C
fn_80038348 = .text:0x80038348; // type:function size:0xCC
fn_80038414 = .text:0x80038414; // type:function size:0x54
fn_80038468 = .text:0x80038468; // type:function size:0x54
fn_800384BC = .text:0x800384BC; // type:function size:0xD0
fn_8003858C = .text:0x8003858C; // type:function size:0x98
fn_80038624 = .text:0x80038624; // type:function size:0x44
fn_80038668 = .text:0x80038668; // type:function size:0x3C
fn_800386A4 = .text:0x800386A4; // type:function size:0x54
Hu_IsStub = .text:0x800386F8; // type:function size:0x8 scope:weak
OSGetConsoleType = .text:0x80038700; // type:function size:0x28 scope:global
ClearArena = .text:0x80038728; // type:function size:0x128 scope:local
InquiryCallback = .text:0x80038850; // type:function size:0x3C scope:local
OSInit = .text:0x8003888C; // type:function size:0x378 scope:global
OSExceptionInit = .text:0x80038C04; // type:function size:0x280 scope:local
__OSDBINTSTART = .text:0x80038E84; // type:label scope:global
__OSDBIntegrator = .text:0x80038E84; // type:function size:0x24 scope:local
__OSDBINTEND = .text:0x80038EA8; // type:label scope:global
fn_80038EA8 = .text:0x80038EA8; // type:function size:0x4
__OSDBJUMPEND = .text:0x80038EAC; // type:label scope:global
__OSSetExceptionHandler = .text:0x80038EAC; // type:function size:0x1C scope:global
__OSGetExceptionHandler = .text:0x80038EC8; // type:function size:0x14 scope:global
__OSEVStart = .text:0x80038EDC; // type:label scope:global
OSExceptionVector = .text:0x80038EDC; // type:function size:0x9C scope:local
__DBVECTOR = .text:0x80038F34; // type:label scope:global data:4byte
__OSEVSetNumber = .text:0x80038F44; // type:label scope:global data:4byte
__OSEVEnd = .text:0x80038F74; // type:label scope:global
OSDefaultExceptionHandler = .text:0x80038F78; // type:function size:0x58 scope:global
__OSPSInit = .text:0x80038FD0; // type:function size:0x38 scope:global
fn_80039008 = .text:0x80039008; // type:function size:0x14
OSRegisterVersion = .text:0x8003901C; // type:function size:0x2C scope:global
OSInitAlarm = .text:0x80039048; // type:function size:0x4C scope:global
OSCreateAlarm = .text:0x80039094; // type:function size:0x10 scope:global
InsertAlarm = .text:0x800390A4; // type:function size:0x250 scope:local
OSSetAlarm = .text:0x800392F4; // type:function size:0x68 scope:global
fn_8003935C = .text:0x8003935C; // type:function size:0x11C
DecrementerExceptionCallback = .text:0x80039478; // type:function size:0x230 scope:local
DecrementerExceptionHandler = .text:0x800396A8; // type:function size:0x50 scope:local
fn_800396F8 = .text:0x800396F8; // type:function size:0xAC
fn_800397A4 = .text:0x800397A4; // type:function size:0xFC
fn_800398A0 = .text:0x800398A0; // type:function size:0x7C
fn_8003991C = .text:0x8003991C; // type:function size:0x10
fn_8003992C = .text:0x8003992C; // type:function size:0x70
fn_8003999C = .text:0x8003999C; // type:function size:0x6C
OSGetArenaHi = .text:0x80039A08; // type:function size:0x8 scope:global
OSGetArenaLo = .text:0x80039A10; // type:function size:0x8 scope:global
OSSetArenaHi = .text:0x80039A18; // type:function size:0x8 scope:global
OSSetArenaLo = .text:0x80039A20; // type:function size:0x8 scope:global
fn_80039A28 = .text:0x80039A28; // type:function size:0x2C
fn_80039A54 = .text:0x80039A54; // type:function size:0x20
__OSInitAudioSystem = .text:0x80039A74; // type:function size:0x1BC scope:global
__OSStopAudioSystem = .text:0x80039C30; // type:function size:0xD8 scope:global
DCEnable = .text:0x80039D08; // type:function size:0x14 scope:global
DCInvalidateRange = .text:0x80039D1C; // type:function size:0x2C scope:global
DCFlushRange = .text:0x80039D48; // type:function size:0x30 scope:global
fn_80039D78 = .text:0x80039D78; // type:function size:0x30
DCFlushRangeNoSync = .text:0x80039DA8; // type:function size:0x2C scope:global
ICInvalidateRange = .text:0x80039DD4; // type:function size:0x34 scope:global
ICFlashInvalidate = .text:0x80039E08; // type:function size:0x10 scope:global
ICEnable = .text:0x80039E18; // type:function size:0x14 scope:global
fn_80039E2C = .text:0x80039E2C; // type:function size:0xCC
fn_80039EF8 = .text:0x80039EF8; // type:function size:0x38
LCDisable = .text:0x80039F30; // type:function size:0x28 scope:global
L2GlobalInvalidate = .text:0x80039F58; // type:function size:0x98 scope:global
DMAErrorHandler = .text:0x80039FF0; // type:function size:0x160 scope:global
__OSCacheInit = .text:0x8003A150; // type:function size:0xF4 scope:global
__OSLoadFPUContext = .text:0x8003A244; // type:function size:0x124 scope:local
__OSSaveFPUContext = .text:0x8003A368; // type:function size:0x128 scope:local
OSSaveFPUContext = .text:0x8003A490; // type:function size:0x8 scope:global
OSSetCurrentContext = .text:0x8003A498; // type:function size:0x5C scope:global
fn_8003A4F4 = .text:0x8003A4F4; // type:function size:0xC
fn_8003A500 = .text:0x8003A500; // type:function size:0x80
OSLoadContext = .text:0x8003A580; // type:function size:0xD8 scope:global
fn_8003A658 = .text:0x8003A658; // type:function size:0x8
OSClearContext = .text:0x8003A660; // type:function size:0x24 scope:global
fn_8003A684 = .text:0x8003A684; // type:function size:0xBC
OSDumpContext = .text:0x8003A740; // type:function size:0x2A8 scope:global
OSSwitchFPUContext = .text:0x8003A9E8; // type:function size:0x84 scope:local
__OSContextInit = .text:0x8003AA6C; // type:function size:0x48 scope:global
OSReport = .text:0x8003AAB4; // type:function size:0x80 scope:global
fn_8003AB34 = .text:0x8003AB34; // type:function size:0x12C
OSSetErrorHandler = .text:0x8003AC60; // type:function size:0x218 scope:global
__OSUnhandledException = .text:0x8003AE78; // type:function size:0x2E8 scope:global
fn_8003B160 = .text:0x8003B160; // type:function size:0x19C
fn_8003B2FC = .text:0x8003B2FC; // type:function size:0x174
fn_8003B470 = .text:0x8003B470; // type:function size:0x58
fn_8003B4C8 = .text:0x8003B4C8; // type:function size:0x8C
fn_8003B554 = .text:0x8003B554; // type:function size:0x334
fn_8003B888 = .text:0x8003B888; // type:function size:0x3B0
fn_8003BC38 = .text:0x8003BC38; // type:function size:0xE0
fn_8003BD18 = .text:0x8003BD18; // type:function size:0x1A8
OSDisableInterrupts = .text:0x8003BEC0; // type:function size:0x14 scope:global
OSEnableInterrupts = .text:0x8003BED4; // type:function size:0x14 scope:global
OSRestoreInterrupts = .text:0x8003BEE8; // type:function size:0x24 scope:global
__OSSetInterruptHandler = .text:0x8003BF0C; // type:function size:0x1C scope:global
fn_8003BF28 = .text:0x8003BF28; // type:function size:0x14
__OSInterruptInit = .text:0x8003BF3C; // type:function size:0x74 scope:global
fn_8003BFB0 = .text:0x8003BFB0; // type:function size:0x2D8
__OSMaskInterrupts = .text:0x8003C288; // type:function size:0x88 scope:global
__OSUnmaskInterrupts = .text:0x8003C310; // type:function size:0x88 scope:global
fn_8003C398 = .text:0x8003C398; // type:function size:0x344
ExternalInterruptHandler = .text:0x8003C6DC; // type:function size:0x50 scope:local
fn_8003C72C = .text:0x8003C72C; // type:function size:0x4
fn_8003C730 = .text:0x8003C730; // type:function size:0x4
fn_8003C734 = .text:0x8003C734; // type:function size:0xC
fn_8003C740 = .text:0x8003C740; // type:function size:0x2BC
fn_8003C9FC = .text:0x8003C9FC; // type:function size:0x2E0
fn_8003CCDC = .text:0x8003CCDC; // type:function size:0x24
fn_8003CD00 = .text:0x8003CD00; // type:function size:0x3C
fn_8003CD3C = .text:0x8003CD3C; // type:function size:0x238
fn_8003CF74 = .text:0x8003CF74; // type:function size:0x1D4
__OSModuleInit = .text:0x8003D148; // type:function size:0x18 scope:global
fn_8003D160 = .text:0x8003D160; // type:function size:0x3C
MEMIntrruptHandler = .text:0x8003D19C; // type:function size:0x6C scope:local
Config24MB = .text:0x8003D208; // type:function size:0x80 scope:local
Config48MB = .text:0x8003D288; // type:function size:0x80 scope:local
RealMode = .text:0x8003D308; // type:function size:0x18 scope:local
__OSInitMemoryProtection = .text:0x8003D320; // type:function size:0x120 scope:global
fn_8003D440 = .text:0x8003D440; // type:function size:0x70
fn_8003D4B0 = .text:0x8003D4B0; // type:function size:0x10
fn_8003D4C0 = .text:0x8003D4C0; // type:function size:0xC
__OSReboot = .text:0x8003D4CC; // type:function size:0x340 scope:global
OSRegisterResetFunction = .text:0x8003D80C; // type:function size:0x84 scope:global
Reset = .text:0x8003D890; // type:function size:0x70 scope:local
fn_8003D900 = .text:0x8003D900; // type:function size:0x48
OSResetSystem = .text:0x8003D948; // type:function size:0x278 scope:global
OSGetResetCode = .text:0x8003DBC0; // type:function size:0x30 scope:global
__OSResetSWInterruptHandler = .text:0x8003DBF0; // type:function size:0xF4 scope:global
fn_8003DCE4 = .text:0x8003DCE4; // type:function size:0x298
fn_8003DF7C = .text:0x8003DF7C; // type:function size:0x60
fn_8003DFDC = .text:0x8003DFDC; // type:function size:0x118
__OSInitSram = .text:0x8003E0F4; // type:function size:0x134 scope:global
__OSLockSram = .text:0x8003E228; // type:function size:0x5C scope:global
__OSLockSramEx = .text:0x8003E284; // type:function size:0x5C scope:global
fn_8003E2E0 = .text:0x8003E2E0; // type:function size:0x308
__OSUnlockSram = .text:0x8003E5E8; // type:function size:0x24 scope:global
__OSUnlockSramEx = .text:0x8003E60C; // type:function size:0x24 scope:global
__OSSyncSram = .text:0x8003E630; // type:function size:0x10 scope:global
fn_8003E640 = .text:0x8003E640; // type:function size:0x124
fn_8003E764 = .text:0x8003E764; // type:function size:0x80
fn_8003E7E4 = .text:0x8003E7E4; // type:function size:0xA4
fn_8003E888 = .text:0x8003E888; // type:function size:0x70
fn_8003E8F8 = .text:0x8003E8F8; // type:function size:0xA4
fn_8003E99C = .text:0x8003E99C; // type:function size:0x84
fn_8003EA20 = .text:0x8003EA20; // type:function size:0xAC
__OSSystemCallVectorStart = .text:0x8003EACC; // type:label scope:global
fn_8003EACC = .text:0x8003EACC; // type:function size:0x20
__OSSystemCallVectorEnd = .text:0x8003EAE8; // type:label scope:global
__OSInitSystemCall = .text:0x8003EAEC; // type:function size:0x64 scope:global
fn_8003EB50 = .text:0x8003EB50; // type:function size:0x4
__OSThreadInit = .text:0x8003EB54; // type:function size:0x158 scope:global
OSInitThreadQueue = .text:0x8003ECAC; // type:function size:0x10 scope:global
fn_8003ECBC = .text:0x8003ECBC; // type:function size:0xC
OSDisableScheduler = .text:0x8003ECC8; // type:function size:0x40 scope:global
OSEnableScheduler = .text:0x8003ED08; // type:function size:0x40 scope:global
fn_8003ED48 = .text:0x8003ED48; // type:function size:0x68
fn_8003EDB0 = .text:0x8003EDB0; // type:function size:0x3C
fn_8003EDEC = .text:0x8003EDEC; // type:function size:0x1C0
SelectThread = .text:0x8003EFAC; // type:function size:0x228 scope:local
__OSReschedule = .text:0x8003F1D4; // type:function size:0x30 scope:global
fn_8003F204 = .text:0x8003F204; // type:function size:0x1E8
fn_8003F3EC = .text:0x8003F3EC; // type:function size:0xE4
OSCancelThread = .text:0x8003F4D0; // type:function size:0x1BC scope:global
fn_8003F68C = .text:0x8003F68C; // type:function size:0x288
fn_8003F914 = .text:0x8003F914; // type:function size:0x170
fn_8003FA84 = .text:0x8003FA84; // type:function size:0xEC
fn_8003FB70 = .text:0x8003FB70; // type:function size:0x104
fn_8003FC74 = .text:0x8003FC74; // type:function size:0xC0
fn_8003FD34 = .text:0x8003FD34; // type:function size:0x8
OSClearStack = .text:0x8003FD3C; // type:function size:0xAC scope:global
OSGetTime = .text:0x8003FDE8; // type:function size:0x18 scope:global
OSGetTick = .text:0x8003FE00; // type:function size:0x8 scope:global
__OSGetSystemTime = .text:0x8003FE08; // type:function size:0x64 scope:global
__init_user = .text:0x8003FE6C; // type:function size:0x20 scope:global
__init_cpp = .text:0x8003FE8C; // type:function size:0x54 scope:local
_ExitProcess = .text:0x8003FEE0; // type:function size:0x20 scope:global
fn_8003FF00 = .text:0x8003FF00; // type:function size:0x1A4
fn_800400A4 = .text:0x800400A4; // type:function size:0xC4
fn_80040168 = .text:0x80040168; // type:function size:0xC0
fn_80040228 = .text:0x80040228; // type:function size:0xD8
fn_80040300 = .text:0x80040300; // type:function size:0x32C
fn_8004062C = .text:0x8004062C; // type:function size:0x134
fn_80040760 = .text:0x80040760; // type:function size:0x100
fn_80040860 = .text:0x80040860; // type:function size:0x218
fn_80040A78 = .text:0x80040A78; // type:function size:0x3AC
fn_80040E24 = .text:0x80040E24; // type:function size:0xA4
fn_80040EC8 = .text:0x80040EC8; // type:function size:0x60
fn_80040F28 = .text:0x80040F28; // type:function size:0x174
fn_8004109C = .text:0x8004109C; // type:function size:0x174
fn_80041210 = .text:0x80041210; // type:function size:0x3F8
fn_80041608 = .text:0x80041608; // type:function size:0x194
fn_8004179C = .text:0x8004179C; // type:function size:0x60
fn_800417FC = .text:0x800417FC; // type:function size:0x54
__PADDisableRecalibration = .text:0x80041850; // type:function size:0x7C scope:global
fn_800418CC = .text:0x800418CC; // type:function size:0x20
fn_800418EC = .text:0x800418EC; // type:function size:0x3C
fn_80041928 = .text:0x80041928; // type:function size:0x2FC
SIInterruptHandler = .text:0x80041C24; // type:function size:0x344 scope:local
fn_80041F68 = .text:0x80041F68; // type:function size:0x98
fn_80042000 = .text:0x80042000; // type:function size:0xCC
fn_800420CC = .text:0x800420CC; // type:function size:0xF4
SIInit = .text:0x800421C0; // type:function size:0xB4 scope:global
fn_80042274 = .text:0x80042274; // type:function size:0x20C
fn_80042480 = .text:0x80042480; // type:function size:0x7C
fn_800424FC = .text:0x800424FC; // type:function size:0x14
fn_80042510 = .text:0x80042510; // type:function size:0x10
SISetXY = .text:0x80042520; // type:function size:0x6C scope:global
fn_8004258C = .text:0x8004258C; // type:function size:0x9C
fn_80042628 = .text:0x80042628; // type:function size:0x6C
fn_80042694 = .text:0x80042694; // type:function size:0xD4
fn_80042768 = .text:0x80042768; // type:function size:0xC4
fn_8004282C = .text:0x8004282C; // type:function size:0x8C
SITransfer = .text:0x800428B8; // type:function size:0x16C scope:global
GetTypeCallback = .text:0x80042A24; // type:function size:0x298 scope:local
SIGetType = .text:0x80042CBC; // type:function size:0x1C4 scope:global
fn_80042E80 = .text:0x80042E80; // type:function size:0x13C
SISetSamplingRate = .text:0x80042FBC; // type:function size:0xE4 scope:global
fn_800430A0 = .text:0x800430A0; // type:function size:0x24
fn_800430C4 = .text:0x800430C4; // type:function size:0x230
fn_800432F4 = .text:0x800432F4; // type:function size:0x44
fn_80043338 = .text:0x80043338; // type:function size:0xA0
fn_800433D8 = .text:0x800433D8; // type:function size:0x200
fn_800435D8 = .text:0x800435D8; // type:function size:0x4B0
fn_80043A88 = .text:0x80043A88; // type:function size:0x54
fn_80043ADC = .text:0x80043ADC; // type:function size:0x2D4
fn_80043DB0 = .text:0x80043DB0; // type:function size:0x1A0
fn_80043F50 = .text:0x80043F50; // type:function size:0x828
fn_80044778 = .text:0x80044778; // type:function size:0x130
fn_800448A8 = .text:0x800448A8; // type:function size:0x6C
fn_80044914 = .text:0x80044914; // type:function size:0x7C
fn_80044990 = .text:0x80044990; // type:function size:0x68
fn_800449F8 = .text:0x800449F8; // type:function size:0x98
VIGetTvFormat = .text:0x80044A90; // type:function size:0x68 scope:global
fn_80044AF8 = .text:0x80044AF8; // type:function size:0x3C
fn_80044B34 = .text:0x80044B34; // type:function size:0x24
fn_80044B58 = .text:0x80044B58; // type:function size:0x3C
fn_80044B94 = .text:0x80044B94; // type:function size:0x1C
fn_80044BB0 = .text:0x80044BB0; // type:function size:0x1C
fn_80044BCC = .text:0x80044BCC; // type:function size:0x28
fn_80044BF4 = .text:0x80044BF4; // type:function size:0x40
fn_80044C34 = .text:0x80044C34; // type:function size:0x78
fn_80044CAC = .text:0x80044CAC; // type:function size:0x24
fn_80044CD0 = .text:0x80044CD0; // type:function size:0x20
fn_80044CF0 = .text:0x80044CF0; // type:function size:0x68
fn_80044D58 = .text:0x80044D58; // type:function size:0x68
fn_80044DC0 = .text:0x80044DC0; // type:function size:0x68
fn_80044E28 = .text:0x80044E28; // type:function size:0x2C
fn_80044E54 = .text:0x80044E54; // type:function size:0x30
fn_80044E84 = .text:0x80044E84; // type:function size:0x30
fn_80044EB4 = .text:0x80044EB4; // type:function size:0x78
fn_80044F2C = .text:0x80044F2C; // type:function size:0x70
fn_80044F9C = .text:0x80044F9C; // type:function size:0xAC
fn_80045048 = .text:0x80045048; // type:function size:0xAC
fn_800450F4 = .text:0x800450F4; // type:function size:0x5C
fn_80045150 = .text:0x80045150; // type:function size:0xE4
fn_80045234 = .text:0x80045234; // type:function size:0x244
fn_80045478 = .text:0x80045478; // type:function size:0x4C
fn_800454C4 = .text:0x800454C4; // type:function size:0x2C
fn_800454F0 = .text:0x800454F0; // type:function size:0x78
fn_80045568 = .text:0x80045568; // type:function size:0x78
fn_800455E0 = .text:0x800455E0; // type:function size:0x78
fn_80045658 = .text:0x80045658; // type:function size:0x70
fn_800456C8 = .text:0x800456C8; // type:function size:0x60
fn_80045728 = .text:0x80045728; // type:function size:0xB0
fn_800457D8 = .text:0x800457D8; // type:function size:0x94
fn_8004586C = .text:0x8004586C; // type:function size:0xA8
fn_80045914 = .text:0x80045914; // type:function size:0x160
fn_80045A74 = .text:0x80045A74; // type:function size:0x214
fn_80045C88 = .text:0x80045C88; // type:function size:0x30
fn_80045CB8 = .text:0x80045CB8; // type:function size:0x5C
fn_80045D14 = .text:0x80045D14; // type:function size:0xE4
fn_80045DF8 = .text:0x80045DF8; // type:function size:0x44
fn_80045E3C = .text:0x80045E3C; // type:function size:0x3C
fn_80045E78 = .text:0x80045E78; // type:function size:0xC4
fn_80045F3C = .text:0x80045F3C; // type:function size:0x18
fn_80045F54 = .text:0x80045F54; // type:function size:0x40
fn_80045F94 = .text:0x80045F94; // type:function size:0x114
fn_800460A8 = .text:0x800460A8; // type:function size:0x8
fn_800460B0 = .text:0x800460B0; // type:function size:0x48
fn_800460F8 = .text:0x800460F8; // type:function size:0xF4
fn_800461EC = .text:0x800461EC; // type:function size:0x8C
fn_80046278 = .text:0x80046278; // type:function size:0x2A0
fn_80046518 = .text:0x80046518; // type:function size:0x8
fn_80046520 = .text:0x80046520; // type:function size:0x8
fn_80046528 = .text:0x80046528; // type:function size:0x34
fn_8004655C = .text:0x8004655C; // type:function size:0x4
fn_80046560 = .text:0x80046560; // type:function size:0x1C
fn_8004657C = .text:0x8004657C; // type:function size:0x138
fn_800466B4 = .text:0x800466B4; // type:function size:0x2F4
fn_800469A8 = .text:0x800469A8; // type:function size:0x1BC
fn_80046B64 = .text:0x80046B64; // type:function size:0x394
fn_80046EF8 = .text:0x80046EF8; // type:function size:0x9C
fn_80046F94 = .text:0x80046F94; // type:function size:0x24
fn_80046FB8 = .text:0x80046FB8; // type:function size:0x2C
fn_80046FE4 = .text:0x80046FE4; // type:function size:0x34
fn_80047018 = .text:0x80047018; // type:function size:0x28
fn_80047040 = .text:0x80047040; // type:function size:0x64
fn_800470A4 = .text:0x800470A4; // type:function size:0x28
fn_800470CC = .text:0x800470CC; // type:function size:0x30
fn_800470FC = .text:0x800470FC; // type:function size:0x54
fn_80047150 = .text:0x80047150; // type:function size:0x78
fn_800471C8 = .text:0x800471C8; // type:function size:0x78
fn_80047240 = .text:0x80047240; // type:function size:0x50
fn_80047290 = .text:0x80047290; // type:function size:0x2C
fn_800472BC = .text:0x800472BC; // type:function size:0x24
fn_800472E0 = .text:0x800472E0; // type:function size:0x78
fn_80047358 = .text:0x80047358; // type:function size:0x2C
fn_80047384 = .text:0x80047384; // type:function size:0x2C
fn_800473B0 = .text:0x800473B0; // type:function size:0x2C
fn_800473DC = .text:0x800473DC; // type:function size:0x1C
fn_800473F8 = .text:0x800473F8; // type:function size:0x98
fn_80047490 = .text:0x80047490; // type:function size:0x2C
fn_800474BC = .text:0x800474BC; // type:function size:0x164
fn_80047620 = .text:0x80047620; // type:function size:0x1D8
fn_800477F8 = .text:0x800477F8; // type:function size:0x80
fn_80047878 = .text:0x80047878; // type:function size:0x80
fn_800478F8 = .text:0x800478F8; // type:function size:0x4C
fn_80047944 = .text:0x80047944; // type:function size:0x24
fn_80047968 = .text:0x80047968; // type:function size:0x2C
fn_80047994 = .text:0x80047994; // type:function size:0x58
fn_800479EC = .text:0x800479EC; // type:function size:0x80
fn_80047A6C = .text:0x80047A6C; // type:function size:0x3C
fn_80047AA8 = .text:0x80047AA8; // type:function size:0x68
fn_80047B10 = .text:0x80047B10; // type:function size:0x2C
fn_80047B3C = .text:0x80047B3C; // type:function size:0x60
fn_80047B9C = .text:0x80047B9C; // type:function size:0x58
fn_80047BF4 = .text:0x80047BF4; // type:function size:0x134
fn_80047D28 = .text:0x80047D28; // type:function size:0x4C
fn_80047D74 = .text:0x80047D74; // type:function size:0x28
fn_80047D9C = .text:0x80047D9C; // type:function size:0x60
fn_80047DFC = .text:0x80047DFC; // type:function size:0x60
fn_80047E5C = .text:0x80047E5C; // type:function size:0x38
fn_80047E94 = .text:0x80047E94; // type:function size:0x110
fn_80047FA4 = .text:0x80047FA4; // type:function size:0x5C
fn_80048000 = .text:0x80048000; // type:function size:0x34
fn_80048034 = .text:0x80048034; // type:function size:0x1B8
fn_800481EC = .text:0x800481EC; // type:function size:0x50
fn_8004823C = .text:0x8004823C; // type:function size:0xCC
fn_80048308 = .text:0x80048308; // type:function size:0x28
fn_80048330 = .text:0x80048330; // type:function size:0x40
fn_80048370 = .text:0x80048370; // type:function size:0xC4
fn_80048434 = .text:0x80048434; // type:function size:0x9C
fn_800484D0 = .text:0x800484D0; // type:function size:0x14
fn_800484E4 = .text:0x800484E4; // type:function size:0x2C
fn_80048510 = .text:0x80048510; // type:function size:0x144
fn_80048654 = .text:0x80048654; // type:function size:0x1D4
fn_80048828 = .text:0x80048828; // type:function size:0x4C
fn_80048874 = .text:0x80048874; // type:function size:0xE0
fn_80048954 = .text:0x80048954; // type:function size:0x58
fn_800489AC = .text:0x800489AC; // type:function size:0x74
fn_80048A20 = .text:0x80048A20; // type:function size:0x44
fn_80048A64 = .text:0x80048A64; // type:function size:0x20
fn_80048A84 = .text:0x80048A84; // type:function size:0x10
fn_80048A94 = .text:0x80048A94; // type:function size:0xC
fn_80048AA0 = .text:0x80048AA0; // type:function size:0x38
fn_80048AD8 = .text:0x80048AD8; // type:function size:0x28
fn_80048B00 = .text:0x80048B00; // type:function size:0x44
fn_80048B44 = .text:0x80048B44; // type:function size:0x68
fn_80048BAC = .text:0x80048BAC; // type:function size:0x30
fn_80048BDC = .text:0x80048BDC; // type:function size:0x18C
fn_80048D68 = .text:0x80048D68; // type:function size:0x10C
fn_80048E74 = .text:0x80048E74; // type:function size:0x34
fn_80048EA8 = .text:0x80048EA8; // type:function size:0x80
fn_80048F28 = .text:0x80048F28; // type:function size:0x2C
fn_80048F54 = .text:0x80048F54; // type:function size:0xDC
fn_80049030 = .text:0x80049030; // type:function size:0x4
fn_80049034 = .text:0x80049034; // type:function size:0x70
fn_800490A4 = .text:0x800490A4; // type:function size:0x98
fn_8004913C = .text:0x8004913C; // type:function size:0x98
fn_800491D4 = .text:0x800491D4; // type:function size:0x104
fn_800492D8 = .text:0x800492D8; // type:function size:0xB0
fn_80049388 = .text:0x80049388; // type:function size:0x58
fn_800493E0 = .text:0x800493E0; // type:function size:0x58
fn_80049438 = .text:0x80049438; // type:function size:0x30
fn_80049468 = .text:0x80049468; // type:function size:0x8
fn_80049470 = .text:0x80049470; // type:function size:0x8
fn_80049478 = .text:0x80049478; // type:function size:0x18
fn_80049490 = .text:0x80049490; // type:function size:0x4C
fn_800494DC = .text:0x800494DC; // type:function size:0x104
fn_800495E0 = .text:0x800495E0; // type:function size:0x70
fn_80049650 = .text:0x80049650; // type:function size:0x18
fn_80049668 = .text:0x80049668; // type:function size:0x18
fn_80049680 = .text:0x80049680; // type:function size:0x18
fn_80049698 = .text:0x80049698; // type:function size:0x18
fn_800496B0 = .text:0x800496B0; // type:function size:0x68
fn_80049718 = .text:0x80049718; // type:function size:0x68
fn_80049780 = .text:0x80049780; // type:function size:0x18
fn_80049798 = .text:0x80049798; // type:function size:0x18
fn_800497B0 = .text:0x800497B0; // type:function size:0x34
fn_800497E4 = .text:0x800497E4; // type:function size:0x28
fn_8004980C = .text:0x8004980C; // type:function size:0x7C
fn_80049888 = .text:0x80049888; // type:function size:0x24
fn_800498AC = .text:0x800498AC; // type:function size:0x4
fn_800498B0 = .text:0x800498B0; // type:function size:0xBC
fn_8004996C = .text:0x8004996C; // type:function size:0xC8
fn_80049A34 = .text:0x80049A34; // type:function size:0x14
fn_80049A48 = .text:0x80049A48; // type:function size:0xF4
fn_80049B3C = .text:0x80049B3C; // type:function size:0x208
fn_80049D44 = .text:0x80049D44; // type:function size:0x4
fn_80049D48 = .text:0x80049D48; // type:function size:0xC
fn_80049D54 = .text:0x80049D54; // type:function size:0x18
fn_80049D6C = .text:0x80049D6C; // type:function size:0xF4
fn_80049E60 = .text:0x80049E60; // type:function size:0x14C
fn_80049FAC = .text:0x80049FAC; // type:function size:0xCC
fn_8004A078 = .text:0x8004A078; // type:function size:0x11C
fn_8004A194 = .text:0x8004A194; // type:function size:0x38
fn_8004A1CC = .text:0x8004A1CC; // type:function size:0xC
fn_8004A1D8 = .text:0x8004A1D8; // type:function size:0x14
fn_8004A1EC = .text:0x8004A1EC; // type:function size:0x38
fn_8004A224 = .text:0x8004A224; // type:function size:0x1C
fn_8004A240 = .text:0x8004A240; // type:function size:0x34
fn_8004A274 = .text:0x8004A274; // type:function size:0x134
fn_8004A3A8 = .text:0x8004A3A8; // type:function size:0x50
fn_8004A3F8 = .text:0x8004A3F8; // type:function size:0x138
fn_8004A530 = .text:0x8004A530; // type:function size:0x23C
fn_8004A76C = .text:0x8004A76C; // type:function size:0x24
fn_8004A790 = .text:0x8004A790; // type:function size:0x24
fn_8004A7B4 = .text:0x8004A7B4; // type:function size:0x24
fn_8004A7D8 = .text:0x8004A7D8; // type:function size:0x14
fn_8004A7EC = .text:0x8004A7EC; // type:function size:0xC
fn_8004A7F8 = .text:0x8004A7F8; // type:function size:0x2C
fn_8004A824 = .text:0x8004A824; // type:function size:0x2C
fn_8004A850 = .text:0x8004A850; // type:function size:0x2C
fn_8004A87C = .text:0x8004A87C; // type:function size:0x28
fn_8004A8A4 = .text:0x8004A8A4; // type:function size:0x28
fn_8004A8CC = .text:0x8004A8CC; // type:function size:0x54
fn_8004A920 = .text:0x8004A920; // type:function size:0x64
fn_8004A984 = .text:0x8004A984; // type:function size:0x38
fn_8004A9BC = .text:0x8004A9BC; // type:function size:0x8
fn_8004A9C4 = .text:0x8004A9C4; // type:function size:0xC
fn_8004A9D0 = .text:0x8004A9D0; // type:function size:0x2C
fn_8004A9FC = .text:0x8004A9FC; // type:function size:0x54
fn_8004AA50 = .text:0x8004AA50; // type:function size:0x7C
fn_8004AACC = .text:0x8004AACC; // type:function size:0x5C
fn_8004AB28 = .text:0x8004AB28; // type:function size:0x134
fn_8004AC5C = .text:0x8004AC5C; // type:function size:0x140
fn_8004AD9C = .text:0x8004AD9C; // type:function size:0x58
fn_8004ADF4 = .text:0x8004ADF4; // type:function size:0x100
fn_8004AEF4 = .text:0x8004AEF4; // type:function size:0x2FC
fn_8004B1F0 = .text:0x8004B1F0; // type:function size:0xD8
fn_8004B2C8 = .text:0x8004B2C8; // type:function size:0xD8
fn_8004B3A0 = .text:0x8004B3A0; // type:function size:0x3C
fn_8004B3DC = .text:0x8004B3DC; // type:function size:0xE4
fn_8004B4C0 = .text:0x8004B4C0; // type:function size:0x78
fn_8004B538 = .text:0x8004B538; // type:function size:0xEC
fn_8004B624 = .text:0x8004B624; // type:function size:0x28
fn_8004B64C = .text:0x8004B64C; // type:function size:0x28
fn_8004B674 = .text:0x8004B674; // type:function size:0x28
fn_8004B69C = .text:0x8004B69C; // type:function size:0x28
fn_8004B6C4 = .text:0x8004B6C4; // type:function size:0x28
fn_8004B6EC = .text:0x8004B6EC; // type:function size:0x4
fn_8004B6F0 = .text:0x8004B6F0; // type:function size:0x104
fn_8004B7F4 = .text:0x8004B7F4; // type:function size:0x168
fn_8004B95C = .text:0x8004B95C; // type:function size:0x78
fn_8004B9D4 = .text:0x8004B9D4; // type:function size:0xA0
fn_8004BA74 = .text:0x8004BA74; // type:function size:0x78
fn_8004BAEC = .text:0x8004BAEC; // type:function size:0x34
fn_8004BB20 = .text:0x8004BB20; // type:function size:0x94
fn_8004BBB4 = .text:0x8004BBB4; // type:function size:0x44
fn_8004BBF8 = .text:0x8004BBF8; // type:function size:0x108
fn_8004BD00 = .text:0x8004BD00; // type:function size:0x24
fn_8004BD24 = .text:0x8004BD24; // type:function size:0x38
fn_8004BD5C = .text:0x8004BD5C; // type:function size:0x28
fn_8004BD84 = .text:0x8004BD84; // type:function size:0xD0
fn_8004BE54 = .text:0x8004BE54; // type:function size:0x4
fn_8004BE58 = .text:0x8004BE58; // type:function size:0xC
fn_8004BE64 = .text:0x8004BE64; // type:function size:0x14
fn_8004BE78 = .text:0x8004BE78; // type:function size:0x4C
fn_8004BEC4 = .text:0x8004BEC4; // type:function size:0x20
fn_8004BEE4 = .text:0x8004BEE4; // type:function size:0x94
fn_8004BF78 = .text:0x8004BF78; // type:function size:0x44
fn_8004BFBC = .text:0x8004BFBC; // type:function size:0x4
fn_8004BFC0 = .text:0x8004BFC0; // type:function size:0x10
fn_8004BFD0 = .text:0x8004BFD0; // type:function size:0xC
fn_8004BFDC = .text:0x8004BFDC; // type:function size:0x14
fn_8004BFF0 = .text:0x8004BFF0; // type:function size:0x20
fn_8004C010 = .text:0x8004C010; // type:function size:0xB4
fn_8004C0C4 = .text:0x8004C0C4; // type:function size:0x44
fn_8004C108 = .text:0x8004C108; // type:function size:0x4
fn_8004C10C = .text:0x8004C10C; // type:function size:0x10
fn_8004C11C = .text:0x8004C11C; // type:function size:0xC
fn_8004C128 = .text:0x8004C128; // type:function size:0x14
fn_8004C13C = .text:0x8004C13C; // type:function size:0x54
fn_8004C190 = .text:0x8004C190; // type:function size:0xB4
fn_8004C244 = .text:0x8004C244; // type:function size:0x40
fn_8004C284 = .text:0x8004C284; // type:function size:0x4C
fn_8004C2D0 = .text:0x8004C2D0; // type:function size:0x58
fn_8004C328 = .text:0x8004C328; // type:function size:0xB8
fn_8004C3E0 = .text:0x8004C3E0; // type:function size:0x40
fn_8004C420 = .text:0x8004C420; // type:function size:0x4C
fn_8004C46C = .text:0x8004C46C; // type:function size:0x128
fn_8004C594 = .text:0x8004C594; // type:function size:0x274
fn_8004C808 = .text:0x8004C808; // type:function size:0x11C
fn_8004C924 = .text:0x8004C924; // type:function size:0x248
fn_8004CB6C = .text:0x8004CB6C; // type:function size:0x4EC
fn_8004D058 = .text:0x8004D058; // type:function size:0xF0
fn_8004D148 = .text:0x8004D148; // type:function size:0xC
fn_8004D154 = .text:0x8004D154; // type:function size:0x14
fn_8004D168 = .text:0x8004D168; // type:function size:0x10
fn_8004D178 = .text:0x8004D178; // type:function size:0x4
fn_8004D17C = .text:0x8004D17C; // type:function size:0x534
fn_8004D6B0 = .text:0x8004D6B0; // type:function size:0x5C0
fn_8004DC70 = .text:0x8004DC70; // type:function size:0x4
fn_8004DC74 = .text:0x8004DC74; // type:function size:0x10
fn_8004DC84 = .text:0x8004DC84; // type:function size:0xC
fn_8004DC90 = .text:0x8004DC90; // type:function size:0x14
fn_8004DCA4 = .text:0x8004DCA4; // type:function size:0xDC
fn_8004DD80 = .text:0x8004DD80; // type:function size:0x60
fn_8004DDE0 = .text:0x8004DDE0; // type:function size:0x4B4
fn_8004E294 = .text:0x8004E294; // type:function size:0x3AC
fn_8004E640 = .text:0x8004E640; // type:function size:0x8C
fn_8004E6CC = .text:0x8004E6CC; // type:function size:0x38
fn_8004E704 = .text:0x8004E704; // type:function size:0x98
fn_8004E79C = .text:0x8004E79C; // type:function size:0x4
fn_8004E7A0 = .text:0x8004E7A0; // type:function size:0x8C
fn_8004E82C = .text:0x8004E82C; // type:function size:0xB4
fn_8004E8E0 = .text:0x8004E8E0; // type:function size:0x8C
fn_8004E96C = .text:0x8004E96C; // type:function size:0xC8
fn_8004EA34 = .text:0x8004EA34; // type:function size:0x4
fn_8004EA38 = .text:0x8004EA38; // type:function size:0xA4
fn_8004EADC = .text:0x8004EADC; // type:function size:0xB0
fn_8004EB8C = .text:0x8004EB8C; // type:function size:0x4C
fn_8004EBD8 = .text:0x8004EBD8; // type:function size:0xC4
fn_8004EC9C = .text:0x8004EC9C; // type:function size:0x4
fn_8004ECA0 = .text:0x8004ECA0; // type:function size:0xA0
fn_8004ED40 = .text:0x8004ED40; // type:function size:0xD8
fn_8004EE18 = .text:0x8004EE18; // type:function size:0xA0
fn_8004EEB8 = .text:0x8004EEB8; // type:function size:0xE8
fn_8004EFA0 = .text:0x8004EFA0; // type:function size:0x4
fn_8004EFA4 = .text:0x8004EFA4; // type:function size:0xA0
fn_8004F044 = .text:0x8004F044; // type:function size:0x1FC
fn_8004F240 = .text:0x8004F240; // type:function size:0x4
fn_8004F244 = .text:0x8004F244; // type:function size:0x54
fn_8004F298 = .text:0x8004F298; // type:function size:0xA8
fn_8004F340 = .text:0x8004F340; // type:function size:0x70
fn_8004F3B0 = .text:0x8004F3B0; // type:function size:0xC8
fn_8004F478 = .text:0x8004F478; // type:function size:0x8
fn_8004F480 = .text:0x8004F480; // type:function size:0x84
fn_8004F504 = .text:0x8004F504; // type:function size:0x88
fn_8004F58C = .text:0x8004F58C; // type:function size:0x1CC
fn_8004F758 = .text:0x8004F758; // type:function size:0x4
fn_8004F75C = .text:0x8004F75C; // type:function size:0x54
fn_8004F7B0 = .text:0x8004F7B0; // type:function size:0x4B4
fn_8004FC64 = .text:0x8004FC64; // type:function size:0x458
fn_800500BC = .text:0x800500BC; // type:function size:0x4C
fn_80050108 = .text:0x80050108; // type:function size:0x74
fn_8005017C = .text:0x8005017C; // type:function size:0x5C
fn_800501D8 = .text:0x800501D8; // type:function size:0x5C
fn_80050234 = .text:0x80050234; // type:function size:0x38
fn_8005026C = .text:0x8005026C; // type:function size:0x34
fn_800502A0 = .text:0x800502A0; // type:function size:0xA0
fn_80050340 = .text:0x80050340; // type:function size:0x48
fn_80050388 = .text:0x80050388; // type:function size:0x9C
fn_80050424 = .text:0x80050424; // type:function size:0x64
fn_80050488 = .text:0x80050488; // type:function size:0x6C
fn_800504F4 = .text:0x800504F4; // type:function size:0x144
fn_80050638 = .text:0x80050638; // type:function size:0x4
fn_8005063C = .text:0x8005063C; // type:function size:0x28
fn_80050664 = .text:0x80050664; // type:function size:0x10
fn_80050674 = .text:0x80050674; // type:function size:0x10
fn_80050684 = .text:0x80050684; // type:function size:0x10
fn_80050694 = .text:0x80050694; // type:function size:0x10
fn_800506A4 = .text:0x800506A4; // type:function size:0x30
fn_800506D4 = .text:0x800506D4; // type:function size:0x8
fn_800506DC = .text:0x800506DC; // type:function size:0x34
fn_80050710 = .text:0x80050710; // type:function size:0x10
fn_80050720 = .text:0x80050720; // type:function size:0xA4
fn_800507C4 = .text:0x800507C4; // type:function size:0x2C
fn_800507F0 = .text:0x800507F0; // type:function size:0x84
fn_80050874 = .text:0x80050874; // type:function size:0x40
fn_800508B4 = .text:0x800508B4; // type:function size:0x8
fn_800508BC = .text:0x800508BC; // type:function size:0x98
DBClose = .text:0x80050954; // type:function size:0x4 scope:global
DBOpen = .text:0x80050958; // type:function size:0x4 scope:global
DBWrite = .text:0x8005095C; // type:function size:0x260 scope:global
DBRead = .text:0x80050BBC; // type:function size:0x8C scope:global
DBQueryData = .text:0x80050C48; // type:function size:0x9C scope:global
DBInitInterrupts = .text:0x80050CE4; // type:function size:0x54 scope:global
DBInitComm = .text:0x80050D38; // type:function size:0x78 scope:global
fn_80050DB0 = .text:0x80050DB0; // type:function size:0x40
fn_80050DF0 = .text:0x80050DF0; // type:function size:0x3C
fn_80050E2C = .text:0x80050E2C; // type:function size:0xAC
fn_80050ED8 = .text:0x80050ED8; // type:function size:0xDC
fn_80050FB4 = .text:0x80050FB4; // type:function size:0xDC
fn_80051090 = .text:0x80051090; // type:function size:0xAC
fn_8005113C = .text:0x8005113C; // type:function size:0x298
fn_800513D4 = .text:0x800513D4; // type:function size:0x90
fn_80051464 = .text:0x80051464; // type:function size:0x13C
fn_800515A0 = .text:0x800515A0; // type:function size:0x24
fn_800515C4 = .text:0x800515C4; // type:function size:0x24
fn_800515E8 = .text:0x800515E8; // type:function size:0x2C
fn_80051614 = .text:0x80051614; // type:function size:0x24
fn_80051638 = .text:0x80051638; // type:function size:0x24
fn_8005165C = .text:0x8005165C; // type:function size:0x24
fn_80051680 = .text:0x80051680; // type:function size:0x24
fn_800516A4 = .text:0x800516A4; // type:function size:0x24
fn_800516C8 = .text:0x800516C8; // type:function size:0x8
fn_800516D0 = .text:0x800516D0; // type:function size:0x24
fn_800516F4 = .text:0x800516F4; // type:function size:0x24
fn_80051718 = .text:0x80051718; // type:function size:0x24
fn_8005173C = .text:0x8005173C; // type:function size:0x24
fn_80051760 = .text:0x80051760; // type:function size:0x24
fn_80051784 = .text:0x80051784; // type:function size:0x24
fn_800517A8 = .text:0x800517A8; // type:function size:0x24
fn_800517CC = .text:0x800517CC; // type:function size:0x24
fn_800517F0 = .text:0x800517F0; // type:function size:0x24
fn_80051814 = .text:0x80051814; // type:function size:0x24
fn_80051838 = .text:0x80051838; // type:function size:0x24
fn_8005185C = .text:0x8005185C; // type:function size:0x8
fn_80051864 = .text:0x80051864; // type:function size:0x8
fn_8005186C = .text:0x8005186C; // type:function size:0x8
fn_80051874 = .text:0x80051874; // type:function size:0xC
fn_80051880 = .text:0x80051880; // type:function size:0x8
fn_80051888 = .text:0x80051888; // type:function size:0x8
fn_80051890 = .text:0x80051890; // type:function size:0x280
fn_80051B10 = .text:0x80051B10; // type:function size:0x258
fn_80051D68 = .text:0x80051D68; // type:function size:0x234
fn_80051F9C = .text:0x80051F9C; // type:function size:0xF8
fn_80052094 = .text:0x80052094; // type:function size:0x1F4
fn_80052288 = .text:0x80052288; // type:function size:0x38
fn_800522C0 = .text:0x800522C0; // type:function size:0x40
fn_80052300 = .text:0x80052300; // type:function size:0x24
fn_80052324 = .text:0x80052324; // type:function size:0x4C
fn_80052370 = .text:0x80052370; // type:function size:0x4C
fn_800523BC = .text:0x800523BC; // type:function size:0xC
fn_800523C8 = .text:0x800523C8; // type:function size:0x54
fn_8005241C = .text:0x8005241C; // type:function size:0x290
fn_800526AC = .text:0x800526AC; // type:function size:0x30
fn_800526DC = .text:0x800526DC; // type:function size:0x34
fn_80052710 = .text:0x80052710; // type:function size:0x4C
fn_8005275C = .text:0x8005275C; // type:function size:0x68
fn_800527C4 = .text:0x800527C4; // type:function size:0x3B0
fn_80052B74 = .text:0x80052B74; // type:function size:0x3A4
fn_80052F18 = .text:0x80052F18; // type:function size:0x32C
fn_80053244 = .text:0x80053244; // type:function size:0xEC
fn_80053330 = .text:0x80053330; // type:function size:0x268
fn_80053598 = .text:0x80053598; // type:function size:0x2C
fn_800535C4 = .text:0x800535C4; // type:function size:0x24
fn_800535E8 = .text:0x800535E8; // type:function size:0x38
fn_80053620 = .text:0x80053620; // type:function size:0x34
fn_80053654 = .text:0x80053654; // type:function size:0x338
fn_8005398C = .text:0x8005398C; // type:function size:0x3B0
fn_80053D3C = .text:0x80053D3C; // type:function size:0x184
fn_80053EC0 = .text:0x80053EC0; // type:function size:0x68
fn_80053F28 = .text:0x80053F28; // type:function size:0x270
fn_80054198 = .text:0x80054198; // type:function size:0x44
fn_800541DC = .text:0x800541DC; // type:function size:0x3C4
fn_800545A0 = .text:0x800545A0; // type:function size:0x338
fn_800548D8 = .text:0x800548D8; // type:function size:0x3B0
fn_80054C88 = .text:0x80054C88; // type:function size:0x178
fn_80054E00 = .text:0x80054E00; // type:function size:0x68
fn_80054E68 = .text:0x80054E68; // type:function size:0x208
fn_80055070 = .text:0x80055070; // type:function size:0x8C
fn_800550FC = .text:0x800550FC; // type:function size:0x404
fn_80055500 = .text:0x80055500; // type:function size:0x8
fn_80055508 = .text:0x80055508; // type:function size:0x8
fn_80055510 = .text:0x80055510; // type:function size:0x48
fn_80055558 = .text:0x80055558; // type:function size:0x38
fn_80055590 = .text:0x80055590; // type:function size:0x18
fn_800555A8 = .text:0x800555A8; // type:function size:0x70
fn_80055618 = .text:0x80055618; // type:function size:0x8
fn_80055620 = .text:0x80055620; // type:function size:0x4C
fn_8005566C = .text:0x8005566C; // type:function size:0x4C
fn_800556B8 = .text:0x800556B8; // type:function size:0x8
fn_800556C0 = .text:0x800556C0; // type:function size:0x8
fn_800556C8 = .text:0x800556C8; // type:function size:0x8
fn_800556D0 = .text:0x800556D0; // type:function size:0x8
fn_800556D8 = .text:0x800556D8; // type:function size:0x8
fn_800556E0 = .text:0x800556E0; // type:function size:0x8
fn_800556E8 = .text:0x800556E8; // type:function size:0x8
fn_800556F0 = .text:0x800556F0; // type:function size:0x6C
fn_8005575C = .text:0x8005575C; // type:function size:0xC
fn_80055768 = .text:0x80055768; // type:function size:0x8
fn_80055770 = .text:0x80055770; // type:function size:0x8
fn_80055778 = .text:0x80055778; // type:function size:0x8
fn_80055780 = .text:0x80055780; // type:function size:0xC
fn_8005578C = .text:0x8005578C; // type:function size:0x10C
fn_80055898 = .text:0x80055898; // type:function size:0x680
fn_80055F18 = .text:0x80055F18; // type:function size:0x4C
fn_80055F64 = .text:0x80055F64; // type:function size:0x198
fn_800560FC = .text:0x800560FC; // type:function size:0x1C
fn_80056118 = .text:0x80056118; // type:function size:0x30
fn_80056148 = .text:0x80056148; // type:function size:0x48
fn_80056190 = .text:0x80056190; // type:function size:0x34
fn_800561C4 = .text:0x800561C4; // type:function size:0x2D8
fn_8005649C = .text:0x8005649C; // type:function size:0xEC
fn_80056588 = .text:0x80056588; // type:function size:0x124
fn_800566AC = .text:0x800566AC; // type:function size:0x8
fn_800566B4 = .text:0x800566B4; // type:function size:0xC
fn_800566C0 = .text:0x800566C0; // type:function size:0x1B8
fn_80056878 = .text:0x80056878; // type:function size:0x44
fn_800568BC = .text:0x800568BC; // type:function size:0x38
fn_800568F4 = .text:0x800568F4; // type:function size:0x44
fn_80056938 = .text:0x80056938; // type:function size:0x10
fn_80056948 = .text:0x80056948; // type:function size:0x9C
fn_800569E4 = .text:0x800569E4; // type:function size:0x38
fn_80056A1C = .text:0x80056A1C; // type:function size:0x11C
fn_80056B38 = .text:0x80056B38; // type:function size:0xD0
fn_80056C08 = .text:0x80056C08; // type:function size:0x50
fn_80056C58 = .text:0x80056C58; // type:function size:0x48
fn_80056CA0 = .text:0x80056CA0; // type:function size:0xF0
fn_80056D90 = .text:0x80056D90; // type:function size:0x7C
fn_80056E0C = .text:0x80056E0C; // type:function size:0x1E8
fn_80056FF4 = .text:0x80056FF4; // type:function size:0x4DC
fn_800574D0 = .text:0x800574D0; // type:function size:0x80
fn_80057550 = .text:0x80057550; // type:function size:0x64
fn_800575B4 = .text:0x800575B4; // type:function size:0x30
fn_800575E4 = .text:0x800575E4; // type:function size:0x48
fn_8005762C = .text:0x8005762C; // type:function size:0x48
fn_80057674 = .text:0x80057674; // type:function size:0x8C
fn_80057700 = .text:0x80057700; // type:function size:0x1A8
fn_800578A8 = .text:0x800578A8; // type:function size:0x18
fn_800578C0 = .text:0x800578C0; // type:function size:0x18
fn_800578D8 = .text:0x800578D8; // type:function size:0x5C
fn_80057934 = .text:0x80057934; // type:function size:0x190
fn_80057AC4 = .text:0x80057AC4; // type:function size:0x8C
fn_80057B50 = .text:0x80057B50; // type:function size:0x1C
fn_80057B6C = .text:0x80057B6C; // type:function size:0xC
fn_80057B78 = .text:0x80057B78; // type:function size:0x100
fn_80057C78 = .text:0x80057C78; // type:function size:0x8C
fn_80057D04 = .text:0x80057D04; // type:function size:0x600
fn_80058304 = .text:0x80058304; // type:function size:0x44
fn_80058348 = .text:0x80058348; // type:function size:0x44
fn_8005838C = .text:0x8005838C; // type:function size:0xF0C
fn_80059298 = .text:0x80059298; // type:function size:0x230
fn_800594C8 = .text:0x800594C8; // type:function size:0x29C
fn_80059764 = .text:0x80059764; // type:function size:0x240
fn_800599A4 = .text:0x800599A4; // type:function size:0x234
fn_80059BD8 = .text:0x80059BD8; // type:function size:0x4C8
fn_8005A0A0 = .text:0x8005A0A0; // type:function size:0xC
fn_8005A0AC = .text:0x8005A0AC; // type:function size:0x90
fn_8005A13C = .text:0x8005A13C; // type:function size:0x8
fn_8005A144 = .text:0x8005A144; // type:function size:0x8
fn_8005A14C = .text:0x8005A14C; // type:function size:0xC
fn_8005A158 = .text:0x8005A158; // type:function size:0x10
fn_8005A168 = .text:0x8005A168; // type:function size:0x18
fn_8005A180 = .text:0x8005A180; // type:function size:0x7C
fn_8005A1FC = .text:0x8005A1FC; // type:function size:0x218
fn_8005A414 = .text:0x8005A414; // type:function size:0x3CC
fn_8005A7E0 = .text:0x8005A7E0; // type:function size:0x48
fn_8005A828 = .text:0x8005A828; // type:function size:0xC
fn_8005A834 = .text:0x8005A834; // type:function size:0xF4
fn_8005A928 = .text:0x8005A928; // type:function size:0x70
fn_8005A998 = .text:0x8005A998; // type:function size:0x50
fn_8005A9E8 = .text:0x8005A9E8; // type:function size:0x58
fn_8005AA40 = .text:0x8005AA40; // type:function size:0x1C
fn_8005AA5C = .text:0x8005AA5C; // type:function size:0x50
fn_8005AAAC = .text:0x8005AAAC; // type:function size:0xC
fn_8005AAB8 = .text:0x8005AAB8; // type:function size:0x1C4
fn_8005AC7C = .text:0x8005AC7C; // type:function size:0x94
fn_8005AD10 = .text:0x8005AD10; // type:function size:0xBC
fn_8005ADCC = .text:0x8005ADCC; // type:function size:0x5C
fn_8005AE28 = .text:0x8005AE28; // type:function size:0x294
fn_8005B0BC = .text:0x8005B0BC; // type:function size:0x2BC
fn_8005B378 = .text:0x8005B378; // type:function size:0x4
fn_8005B37C = .text:0x8005B37C; // type:function size:0x34
fn_8005B3B0 = .text:0x8005B3B0; // type:function size:0x180
fn_8005B530 = .text:0x8005B530; // type:function size:0x30
fn_8005B560 = .text:0x8005B560; // type:function size:0x94
fn_8005B5F4 = .text:0x8005B5F4; // type:function size:0x8
fn_8005B5FC = .text:0x8005B5FC; // type:function size:0x164
fn_8005B760 = .text:0x8005B760; // type:function size:0x20
fn_8005B780 = .text:0x8005B780; // type:function size:0x4
fn_8005B784 = .text:0x8005B784; // type:function size:0x4
fn_8005B788 = .text:0x8005B788; // type:function size:0x150
fn_8005B8D8 = .text:0x8005B8D8; // type:function size:0x48
fn_8005B920 = .text:0x8005B920; // type:function size:0x3C
fn_8005B95C = .text:0x8005B95C; // type:function size:0xBC
fn_8005BA18 = .text:0x8005BA18; // type:function size:0x8
fn_8005BA20 = .text:0x8005BA20; // type:function size:0x38
fn_8005BA58 = .text:0x8005BA58; // type:function size:0x38
fn_8005BA90 = .text:0x8005BA90; // type:function size:0x3C
fn_8005BACC = .text:0x8005BACC; // type:function size:0x40
fn_8005BB0C = .text:0x8005BB0C; // type:function size:0x44
fn_8005BB50 = .text:0x8005BB50; // type:function size:0x68
fn_8005BBB8 = .text:0x8005BBB8; // type:function size:0x58
fn_8005BC10 = .text:0x8005BC10; // type:function size:0x58
fn_8005BC68 = .text:0x8005BC68; // type:function size:0x58
fn_8005BCC0 = .text:0x8005BCC0; // type:function size:0x4F4
fn_8005C1B4 = .text:0x8005C1B4; // type:function size:0x40
fn_8005C1F4 = .text:0x8005C1F4; // type:function size:0x120
fn_8005C314 = .text:0x8005C314; // type:function size:0x210
fn_8005C524 = .text:0x8005C524; // type:function size:0x148
fn_8005C66C = .text:0x8005C66C; // type:function size:0x284
fn_8005C8F0 = .text:0x8005C8F0; // type:function size:0x418
fn_8005CD08 = .text:0x8005CD08; // type:function size:0x94
fn_8005CD9C = .text:0x8005CD9C; // type:function size:0xF8
fn_8005CE94 = .text:0x8005CE94; // type:function size:0x308
fn_8005D19C = .text:0x8005D19C; // type:function size:0x434
fn_8005D5D0 = .text:0x8005D5D0; // type:function size:0x2E0
fn_8005D8B0 = .text:0x8005D8B0; // type:function size:0x78
fn_8005D928 = .text:0x8005D928; // type:function size:0x180
fn_8005DAA8 = .text:0x8005DAA8; // type:function size:0xA8
fn_8005DB50 = .text:0x8005DB50; // type:function size:0xF8
fn_8005DC48 = .text:0x8005DC48; // type:function size:0x8
fn_8005DC50 = .text:0x8005DC50; // type:function size:0x18
fn_8005DC68 = .text:0x8005DC68; // type:function size:0x34
fn_8005DC9C = .text:0x8005DC9C; // type:function size:0x20
fn_8005DCBC = .text:0x8005DCBC; // type:function size:0x34
fn_8005DCF0 = .text:0x8005DCF0; // type:function size:0x38
fn_8005DD28 = .text:0x8005DD28; // type:function size:0x8
fn_8005DD30 = .text:0x8005DD30; // type:function size:0x38
fn_8005DD68 = .text:0x8005DD68; // type:function size:0x1C
fn_8005DD84 = .text:0x8005DD84; // type:function size:0x10
fn_8005DD94 = .text:0x8005DD94; // type:function size:0x24
fn_8005DDB8 = .text:0x8005DDB8; // type:function size:0x24
fn_8005DDDC = .text:0x8005DDDC; // type:function size:0x30
fn_8005DE0C = .text:0x8005DE0C; // type:function size:0x158
fn_8005DF64 = .text:0x8005DF64; // type:function size:0x30
fn_8005DF94 = .text:0x8005DF94; // type:function size:0x1C
fn_8005DFB0 = .text:0x8005DFB0; // type:function size:0x218
fn_8005E1C8 = .text:0x8005E1C8; // type:function size:0x20
fn_8005E1E8 = .text:0x8005E1E8; // type:function size:0xCC
fn_8005E2B4 = .text:0x8005E2B4; // type:function size:0x58
fn_8005E30C = .text:0x8005E30C; // type:function size:0xB0
fn_8005E3BC = .text:0x8005E3BC; // type:function size:0x30
fn_8005E3EC = .text:0x8005E3EC; // type:function size:0xBC
fn_8005E4A8 = .text:0x8005E4A8; // type:function size:0x64
fn_8005E50C = .text:0x8005E50C; // type:function size:0xB4
fn_8005E5C0 = .text:0x8005E5C0; // type:function size:0x20
fn_8005E5E0 = .text:0x8005E5E0; // type:function size:0x20
fn_8005E600 = .text:0x8005E600; // type:function size:0x20
fn_8005E620 = .text:0x8005E620; // type:function size:0x20
fn_8005E640 = .text:0x8005E640; // type:function size:0xC0
fn_8005E700 = .text:0x8005E700; // type:function size:0x24
fn_8005E724 = .text:0x8005E724; // type:function size:0x24
fn_8005E748 = .text:0x8005E748; // type:function size:0x20
fn_8005E768 = .text:0x8005E768; // type:function size:0x24
fn_8005E78C = .text:0x8005E78C; // type:function size:0x4
fn_8005E790 = .text:0x8005E790; // type:function size:0x20
fn_8005E7B0 = .text:0x8005E7B0; // type:function size:0x20
fn_8005E7D0 = .text:0x8005E7D0; // type:function size:0x20
fn_8005E7F0 = .text:0x8005E7F0; // type:function size:0x20
fn_8005E810 = .text:0x8005E810; // type:function size:0x20
fn_8005E830 = .text:0x8005E830; // type:function size:0x20
fn_8005E850 = .text:0x8005E850; // type:function size:0x20
fn_8005E870 = .text:0x8005E870; // type:function size:0x20
fn_8005E890 = .text:0x8005E890; // type:function size:0x20
fn_8005E8B0 = .text:0x8005E8B0; // type:function size:0x20
fn_8005E8D0 = .text:0x8005E8D0; // type:function size:0x20
fn_8005E8F0 = .text:0x8005E8F0; // type:function size:0x44
fn_8005E934 = .text:0x8005E934; // type:function size:0x20
fn_8005E954 = .text:0x8005E954; // type:function size:0x20
fn_8005E974 = .text:0x8005E974; // type:function size:0x20
fn_8005E994 = .text:0x8005E994; // type:function size:0x20
fn_8005E9B4 = .text:0x8005E9B4; // type:function size:0x64
fn_8005EA18 = .text:0x8005EA18; // type:function size:0x260
fn_8005EC78 = .text:0x8005EC78; // type:function size:0x2F0
fn_8005EF68 = .text:0x8005EF68; // type:function size:0x154
fn_8005F0BC = .text:0x8005F0BC; // type:function size:0x38
fn_8005F0F4 = .text:0x8005F0F4; // type:function size:0xFC
fn_8005F1F0 = .text:0x8005F1F0; // type:function size:0x38
fn_8005F228 = .text:0x8005F228; // type:function size:0x38
fn_8005F260 = .text:0x8005F260; // type:function size:0x24
fn_8005F284 = .text:0x8005F284; // type:function size:0x38
fn_8005F2BC = .text:0x8005F2BC; // type:function size:0x9C
fn_8005F358 = .text:0x8005F358; // type:function size:0xAC
fn_8005F404 = .text:0x8005F404; // type:function size:0x20
fn_8005F424 = .text:0x8005F424; // type:function size:0x290
fn_8005F6B4 = .text:0x8005F6B4; // type:function size:0x190
fn_8005F844 = .text:0x8005F844; // type:function size:0x2C4
fn_8005FB08 = .text:0x8005FB08; // type:function size:0x5C
fn_8005FB64 = .text:0x8005FB64; // type:function size:0x2C0
fn_8005FE24 = .text:0x8005FE24; // type:function size:0x29C
fn_800600C0 = .text:0x800600C0; // type:function size:0x278
fn_80060338 = .text:0x80060338; // type:function size:0x3D0
fn_80060708 = .text:0x80060708; // type:function size:0x20
fn_80060728 = .text:0x80060728; // type:function size:0x230
fn_80060958 = .text:0x80060958; // type:function size:0x54
fn_800609AC = .text:0x800609AC; // type:function size:0x250
fn_80060BFC = .text:0x80060BFC; // type:function size:0x50
fn_80060C4C = .text:0x80060C4C; // type:function size:0x34
fn_80060C80 = .text:0x80060C80; // type:function size:0xC0
fn_80060D40 = .text:0x80060D40; // type:function size:0x68
fn_80060DA8 = .text:0x80060DA8; // type:function size:0xC0
fn_80060E68 = .text:0x80060E68; // type:function size:0xC0
fn_80060F28 = .text:0x80060F28; // type:function size:0xC0
fn_80060FE8 = .text:0x80060FE8; // type:function size:0xBC
fn_800610A4 = .text:0x800610A4; // type:function size:0x664
fn_80061708 = .text:0x80061708; // type:function size:0x134
fn_8006183C = .text:0x8006183C; // type:function size:0x27C
fn_80061AB8 = .text:0x80061AB8; // type:function size:0x40
fn_80061AF8 = .text:0x80061AF8; // type:function size:0x4
fn_80061AFC = .text:0x80061AFC; // type:function size:0x60
fn_80061B5C = .text:0x80061B5C; // type:function size:0xE4
fn_80061C40 = .text:0x80061C40; // type:function size:0x60
fn_80061CA0 = .text:0x80061CA0; // type:function size:0x64
fn_80061D04 = .text:0x80061D04; // type:function size:0x1A0
fn_80061EA4 = .text:0x80061EA4; // type:function size:0x428
fn_800622CC = .text:0x800622CC; // type:function size:0x60
fn_8006232C = .text:0x8006232C; // type:function size:0xCC
fn_800623F8 = .text:0x800623F8; // type:function size:0x1C4
fn_800625BC = .text:0x800625BC; // type:function size:0x210
fn_800627CC = .text:0x800627CC; // type:function size:0x164
fn_80062930 = .text:0x80062930; // type:function size:0x14
fn_80062944 = .text:0x80062944; // type:function size:0x178
fn_80062ABC = .text:0x80062ABC; // type:function size:0x6C
fn_80062B28 = .text:0x80062B28; // type:function size:0xC
fn_80062B34 = .text:0x80062B34; // type:function size:0xC0
fn_80062BF4 = .text:0x80062BF4; // type:function size:0x34
fn_80062C28 = .text:0x80062C28; // type:function size:0x20
fn_80062C48 = .text:0x80062C48; // type:function size:0x20
fn_80062C68 = .text:0x80062C68; // type:function size:0x3C
fn_80062CA4 = .text:0x80062CA4; // type:function size:0x40
fn_80062CE4 = .text:0x80062CE4; // type:function size:0x40
fn_80062D24 = .text:0x80062D24; // type:function size:0x64
fn_80062D88 = .text:0x80062D88; // type:function size:0x100
fn_80062E88 = .text:0x80062E88; // type:function size:0x100
fn_80062F88 = .text:0x80062F88; // type:function size:0x100
fn_80063088 = .text:0x80063088; // type:function size:0x90
fn_80063118 = .text:0x80063118; // type:function size:0x40
fn_80063158 = .text:0x80063158; // type:function size:0x44
fn_8006319C = .text:0x8006319C; // type:function size:0x6C
fn_80063208 = .text:0x80063208; // type:function size:0xBC
fn_800632C4 = .text:0x800632C4; // type:function size:0x110
fn_800633D4 = .text:0x800633D4; // type:function size:0x240
fn_80063614 = .text:0x80063614; // type:function size:0x30
fn_80063644 = .text:0x80063644; // type:function size:0x8
fn_8006364C = .text:0x8006364C; // type:function size:0xD8
fn_80063724 = .text:0x80063724; // type:function size:0x18C
fn_800638B0 = .text:0x800638B0; // type:function size:0xA4
fn_80063954 = .text:0x80063954; // type:function size:0x78
fn_800639CC = .text:0x800639CC; // type:function size:0x248
fn_80063C14 = .text:0x80063C14; // type:function size:0x4C
fn_80063C60 = .text:0x80063C60; // type:function size:0x4C
fn_80063CAC = .text:0x80063CAC; // type:function size:0xB8
fn_80063D64 = .text:0x80063D64; // type:function size:0x130
fn_80063E94 = .text:0x80063E94; // type:function size:0x94
fn_80063F28 = .text:0x80063F28; // type:function size:0xE8
fn_80064010 = .text:0x80064010; // type:function size:0x5C
fn_8006406C = .text:0x8006406C; // type:function size:0x14
fn_80064080 = .text:0x80064080; // type:function size:0xC
fn_8006408C = .text:0x8006408C; // type:function size:0x8
fn_80064094 = .text:0x80064094; // type:function size:0x40
fn_800640D4 = .text:0x800640D4; // type:function size:0x128
fn_800641FC = .text:0x800641FC; // type:function size:0x48
fn_80064244 = .text:0x80064244; // type:function size:0x54
fn_80064298 = .text:0x80064298; // type:function size:0x4
fn_8006429C = .text:0x8006429C; // type:function size:0x18
fn_800642B4 = .text:0x800642B4; // type:function size:0x8
fn_800642BC = .text:0x800642BC; // type:function size:0x8
fn_800642C4 = .text:0x800642C4; // type:function size:0x8
fn_800642CC = .text:0x800642CC; // type:function size:0x10C
fn_800643D8 = .text:0x800643D8; // type:function size:0x1AC
fn_80064584 = .text:0x80064584; // type:function size:0x15C
fn_800646E0 = .text:0x800646E0; // type:function size:0x1B4
fn_80064894 = .text:0x80064894; // type:function size:0x5C
fn_800648F0 = .text:0x800648F0; // type:function size:0x2C
fn_8006491C = .text:0x8006491C; // type:function size:0xC
fn_80064928 = .text:0x80064928; // type:function size:0x8
fn_80064930 = .text:0x80064930; // type:function size:0x50
fn_80064980 = .text:0x80064980; // type:function size:0x190
fn_80064B10 = .text:0x80064B10; // type:function size:0x48
fn_80064B58 = .text:0x80064B58; // type:function size:0x60
fn_80064BB8 = .text:0x80064BB8; // type:function size:0x4
fn_80064BBC = .text:0x80064BBC; // type:function size:0x48
fn_80064C04 = .text:0x80064C04; // type:function size:0x54
fn_80064C58 = .text:0x80064C58; // type:function size:0x214
fn_80064E6C = .text:0x80064E6C; // type:function size:0x64
fn_80064ED0 = .text:0x80064ED0; // type:function size:0x114
fn_80064FE4 = .text:0x80064FE4; // type:function size:0xA8
fn_8006508C = .text:0x8006508C; // type:function size:0x98
fn_80065124 = .text:0x80065124; // type:function size:0x90
fn_800651B4 = .text:0x800651B4; // type:function size:0x90
fn_80065244 = .text:0x80065244; // type:function size:0x90
fn_800652D4 = .text:0x800652D4; // type:function size:0x90
fn_80065364 = .text:0x80065364; // type:function size:0x10
fn_80065374 = .text:0x80065374; // type:function size:0x10
fn_80065384 = .text:0x80065384; // type:function size:0xF0
fn_80065474 = .text:0x80065474; // type:function size:0x44
fn_800654B8 = .text:0x800654B8; // type:function size:0x104
fn_800655BC = .text:0x800655BC; // type:function size:0x1B4
fn_80065770 = .text:0x80065770; // type:function size:0x148
fn_800658B8 = .text:0x800658B8; // type:function size:0x17C
fn_80065A34 = .text:0x80065A34; // type:function size:0x58
fn_80065A8C = .text:0x80065A8C; // type:function size:0xD8
fn_80065B64 = .text:0x80065B64; // type:function size:0x90
fn_80065BF4 = .text:0x80065BF4; // type:function size:0x90
fn_80065C84 = .text:0x80065C84; // type:function size:0x90
fn_80065D14 = .text:0x80065D14; // type:function size:0x90
fn_80065DA4 = .text:0x80065DA4; // type:function size:0x68
fn_80065E0C = .text:0x80065E0C; // type:function size:0x68
fn_80065E74 = .text:0x80065E74; // type:function size:0x68
fn_80065EDC = .text:0x80065EDC; // type:function size:0x68
fn_80065F44 = .text:0x80065F44; // type:function size:0x90
fn_80065FD4 = .text:0x80065FD4; // type:function size:0x68
fn_8006603C = .text:0x8006603C; // type:function size:0x60
fn_8006609C = .text:0x8006609C; // type:function size:0x98
fn_80066134 = .text:0x80066134; // type:function size:0x60
fn_80066194 = .text:0x80066194; // type:function size:0x64
fn_800661F8 = .text:0x800661F8; // type:function size:0x70
fn_80066268 = .text:0x80066268; // type:function size:0x288
fn_800664F0 = .text:0x800664F0; // type:function size:0x60
fn_80066550 = .text:0x80066550; // type:function size:0xF4
fn_80066644 = .text:0x80066644; // type:function size:0x98
fn_800666DC = .text:0x800666DC; // type:function size:0x230
fn_8006690C = .text:0x8006690C; // type:function size:0x10C
fn_80066A18 = .text:0x80066A18; // type:function size:0x14
fn_80066A2C = .text:0x80066A2C; // type:function size:0xC
fn_80066A38 = .text:0x80066A38; // type:function size:0x14
fn_80066A4C = .text:0x80066A4C; // type:function size:0x58
fn_80066AA4 = .text:0x80066AA4; // type:function size:0x14
fn_80066AB8 = .text:0x80066AB8; // type:function size:0x20
fn_80066AD8 = .text:0x80066AD8; // type:function size:0x20
fn_80066AF8 = .text:0x80066AF8; // type:function size:0x10
fn_80066B08 = .text:0x80066B08; // type:function size:0x8
fn_80066B10 = .text:0x80066B10; // type:function size:0x8
fn_80066B18 = .text:0x80066B18; // type:function size:0x10
fn_80066B28 = .text:0x80066B28; // type:function size:0xB4
fn_80066BDC = .text:0x80066BDC; // type:function size:0xAC
fn_80066C88 = .text:0x80066C88; // type:function size:0x154
fn_80066DDC = .text:0x80066DDC; // type:function size:0x10
fn_80066DEC = .text:0x80066DEC; // type:function size:0x5C
fn_80066E48 = .text:0x80066E48; // type:function size:0x338
fn_80067180 = .text:0x80067180; // type:function size:0xCC
fn_8006724C = .text:0x8006724C; // type:function size:0xDC
fn_80067328 = .text:0x80067328; // type:function size:0x178
fn_800674A0 = .text:0x800674A0; // type:function size:0x58
fn_800674F8 = .text:0x800674F8; // type:function size:0x5C
fn_80067554 = .text:0x80067554; // type:function size:0x1A0
fn_800676F4 = .text:0x800676F4; // type:function size:0x200
fn_800678F4 = .text:0x800678F4; // type:function size:0xD0
fn_800679C4 = .text:0x800679C4; // type:function size:0x6EC
fn_800680B0 = .text:0x800680B0; // type:function size:0x94
fn_80068144 = .text:0x80068144; // type:function size:0x120
fn_80068264 = .text:0x80068264; // type:function size:0x74
fn_800682D8 = .text:0x800682D8; // type:function size:0x20
fn_800682F8 = .text:0x800682F8; // type:function size:0x18
fn_80068310 = .text:0x80068310; // type:function size:0x18
fn_80068328 = .text:0x80068328; // type:function size:0x14
fn_8006833C = .text:0x8006833C; // type:function size:0x108
fn_80068444 = .text:0x80068444; // type:function size:0x16C
fn_800685B0 = .text:0x800685B0; // type:function size:0x178
fn_80068728 = .text:0x80068728; // type:function size:0x16C
fn_80068894 = .text:0x80068894; // type:function size:0x154
fn_800689E8 = .text:0x800689E8; // type:function size:0x108
fn_80068AF0 = .text:0x80068AF0; // type:function size:0xAC
fn_80068B9C = .text:0x80068B9C; // type:function size:0x138
fn_80068CD4 = .text:0x80068CD4; // type:function size:0xB0
fn_80068D84 = .text:0x80068D84; // type:function size:0xF8
fn_80068E7C = .text:0x80068E7C; // type:function size:0x168
fn_80068FE4 = .text:0x80068FE4; // type:function size:0xB0
fn_80069094 = .text:0x80069094; // type:function size:0x134
fn_800691C8 = .text:0x800691C8; // type:function size:0x48
fn_80069210 = .text:0x80069210; // type:function size:0x18
fn_80069228 = .text:0x80069228; // type:function size:0x60
fn_80069288 = .text:0x80069288; // type:function size:0x7C
fn_80069304 = .text:0x80069304; // type:function size:0xC0
fn_800693C4 = .text:0x800693C4; // type:function size:0x9C
fn_80069460 = .text:0x80069460; // type:function size:0x134
fn_80069594 = .text:0x80069594; // type:function size:0x30
fn_800695C4 = .text:0x800695C4; // type:function size:0x28
fn_800695EC = .text:0x800695EC; // type:function size:0x34
fn_80069620 = .text:0x80069620; // type:function size:0x54
fn_80069674 = .text:0x80069674; // type:function size:0x20
fn_80069694 = .text:0x80069694; // type:function size:0x44
fn_800696D8 = .text:0x800696D8; // type:function size:0x5BC
fn_80069C94 = .text:0x80069C94; // type:function size:0xAC
fn_80069D40 = .text:0x80069D40; // type:function size:0x1F0
fn_80069F30 = .text:0x80069F30; // type:function size:0x28
fn_80069F58 = .text:0x80069F58; // type:function size:0x88
fn_80069FE0 = .text:0x80069FE0; // type:function size:0x20
fn_8006A000 = .text:0x8006A000; // type:function size:0x44
fn_8006A044 = .text:0x8006A044; // type:function size:0x2A8
fn_8006A2EC = .text:0x8006A2EC; // type:function size:0x610
fn_8006A8FC = .text:0x8006A8FC; // type:function size:0x124
fn_8006AA20 = .text:0x8006AA20; // type:function size:0xA0
fn_8006AAC0 = .text:0x8006AAC0; // type:function size:0x790
fn_8006B250 = .text:0x8006B250; // type:function size:0x2B4
fn_8006B504 = .text:0x8006B504; // type:function size:0x240
fn_8006B744 = .text:0x8006B744; // type:function size:0xAC
fn_8006B7F0 = .text:0x8006B7F0; // type:function size:0x144
fn_8006B934 = .text:0x8006B934; // type:function size:0x1D0
fn_8006BB04 = .text:0x8006BB04; // type:function size:0xC0
fn_8006BBC4 = .text:0x8006BBC4; // type:function size:0x28
fn_8006BBEC = .text:0x8006BBEC; // type:function size:0x70
fn_8006BC5C = .text:0x8006BC5C; // type:function size:0xBC
fn_8006BD18 = .text:0x8006BD18; // type:function size:0x70
fn_8006BD88 = .text:0x8006BD88; // type:function size:0xBC
fn_8006BE44 = .text:0x8006BE44; // type:function size:0xD0
fn_8006BF14 = .text:0x8006BF14; // type:function size:0x20C
fn_8006C120 = .text:0x8006C120; // type:function size:0x300
fn_8006C420 = .text:0x8006C420; // type:function size:0x8C
fn_8006C4AC = .text:0x8006C4AC; // type:function size:0x1A4
fn_8006C650 = .text:0x8006C650; // type:function size:0xE0
fn_8006C730 = .text:0x8006C730; // type:function size:0x9C
fn_8006C7CC = .text:0x8006C7CC; // type:function size:0x50
fn_8006C81C = .text:0x8006C81C; // type:function size:0x1C
fn_8006C838 = .text:0x8006C838; // type:function size:0x198
fn_8006C9D0 = .text:0x8006C9D0; // type:function size:0x2C0
fn_8006CC90 = .text:0x8006CC90; // type:function size:0x240
fn_8006CED0 = .text:0x8006CED0; // type:function size:0xDC
fn_8006CFAC = .text:0x8006CFAC; // type:function size:0xF0
fn_8006D09C = .text:0x8006D09C; // type:function size:0x98
fn_8006D134 = .text:0x8006D134; // type:function size:0xDC
fn_8006D210 = .text:0x8006D210; // type:function size:0x44
fn_8006D254 = .text:0x8006D254; // type:function size:0x6C
fn_8006D2C0 = .text:0x8006D2C0; // type:function size:0x6C
fn_8006D32C = .text:0x8006D32C; // type:function size:0xB8
fn_8006D3E4 = .text:0x8006D3E4; // type:function size:0x190
fn_8006D574 = .text:0x8006D574; // type:function size:0x60
fn_8006D5D4 = .text:0x8006D5D4; // type:function size:0x1B0
fn_8006D784 = .text:0x8006D784; // type:function size:0x1B8
fn_8006D93C = .text:0x8006D93C; // type:function size:0xB8
fn_8006D9F4 = .text:0x8006D9F4; // type:function size:0x28
fn_8006DA1C = .text:0x8006DA1C; // type:function size:0x98
fn_8006DAB4 = .text:0x8006DAB4; // type:function size:0xF4
fn_8006DBA8 = .text:0x8006DBA8; // type:function size:0x74
fn_8006DC1C = .text:0x8006DC1C; // type:function size:0x1C
fn_8006DC38 = .text:0x8006DC38; // type:function size:0x90
fn_8006DCC8 = .text:0x8006DCC8; // type:function size:0x164
fn_8006DE2C = .text:0x8006DE2C; // type:function size:0x598
_ctors = .ctors:0x8006E3E0; // type:label scope:global data:4byte
_dtors = .dtors:0x8006E400; // type:label scope:global data:4byte
__destroy_global_chain_reference = .dtors:0x8006E400; // type:object size:0x4 scope:global
__constants = .rodata:0x8006E420; // type:object size:0x18 data:double
lbl_8006E438 = .rodata:0x8006E438; // type:object size:0x36 data:string
lbl_8006E470 = .rodata:0x8006E470; // type:object size:0x39 data:string
fix_pool_sizes = .rodata:0x8006E4B0; // type:object size:0x18 data:4byte
@stringBase0 = .rodata:0x8006E4C8; // type:object size:0xDD scope:local data:string_table
@stringBase0 = .rodata:0x8006E5A8; // type:object size:0x5 scope:local data:string_table
@stringBase0 = .rodata:0x8006E5B0; // type:object size:0x25 scope:local data:string_table
lbl_8006E5D8 = .rodata:0x8006E5D8; // type:object size:0x28 data:4byte
lbl_8006E600 = .rodata:0x8006E600; // type:object size:0x2A
lbl_8006E62C = .rodata:0x8006E62C; // type:object size:0x9 data:string
bp = .rodata:0x8006E638; // type:object size:0x10 data:double
dp_h = .rodata:0x8006E648; // type:object size:0x10 data:double
dp_l = .rodata:0x8006E658; // type:object size:0x10 data:double
two_over_pi = .rodata:0x8006E668; // type:object size:0x108
npio2_hw = .rodata:0x8006E770; // type:object size:0x80 data:float
init_jk = .rodata:0x8006E7F0; // type:object size:0x10
PIo2 = .rodata:0x8006E800; // type:object size:0x40 data:double
T = .rodata:0x8006E840; // type:object size:0x68 data:double
atanhi = .rodata:0x8006E8A8; // type:object size:0x20 data:double
atanlo = .rodata:0x8006E8C8; // type:object size:0x20 data:double
aT = .rodata:0x8006E8E8; // type:object size:0x58 data:double
@62 = .rodata:0x8006E940; // type:object size:0x1C scope:local data:string
lbl_8006E960 = .rodata:0x8006E960; // type:object size:0x1D data:string
gTRKMemMap = .rodata:0x8006E980; // type:object size:0x10 data:4byte
lbl_8006E990 = .rodata:0x8006E990; // type:object size:0x28 data:4byte
lbl_8006E9B8 = .rodata:0x8006E9B8; // type:object size:0x28 data:4byte
lbl_8006E9E0 = .rodata:0x8006E9E0; // type:object size:0x28 data:4byte
@154 = .rodata:0x8006EA08; // type:object size:0x21 scope:local data:string
@155 = .rodata:0x8006EA2C; // type:object size:0x24 scope:local data:string
lbl_8006EA50 = .rodata:0x8006EA50; // type:object size:0x10
lbl_8006EA60 = .rodata:0x8006EA60; // type:object size:0x10 data:4byte
lbl_8006EA70 = .rodata:0x8006EA70; // type:object size:0x30 data:4byte
lbl_8006EAA0 = .rodata:0x8006EAA0; // type:object size:0x20
lbl_8006EAC0 = .rodata:0x8006EAC0; // type:object size:0x10
lbl_8006EAD0 = .rodata:0x8006EAD0; // type:object size:0x10
lbl_8006EAE0 = .rodata:0x8006EAE0; // type:object size:0x20
lbl_8006EB00 = .rodata:0x8006EB00; // type:object size:0x30
lbl_8006EB30 = .rodata:0x8006EB30; // type:object size:0x8 data:4byte
lbl_8006EB38 = .rodata:0x8006EB38; // type:object size:0x20
lbl_8006EB58 = .rodata:0x8006EB58; // type:object size:0x28
lbl_8006EB80 = .rodata:0x8006EB80; // type:object size:0x8
lbl_8006EB88 = .rodata:0x8006EB88; // type:object size:0x8
lbl_8006EB90 = .rodata:0x8006EB90; // type:object size:0x8
lbl_8006EB98 = .rodata:0x8006EB98; // type:object size:0x8
lbl_8006EBA0 = .rodata:0x8006EBA0; // type:object size:0x8
lbl_8006EBA8 = .rodata:0x8006EBA8; // type:object size:0x8
lbl_8006EBB0 = .rodata:0x8006EBB0; // type:object size:0x8
lbl_8006EBB8 = .rodata:0x8006EBB8; // type:object size:0x8
lbl_8006EBC0 = .rodata:0x8006EBC0; // type:object size:0x888
lbl_8006F448 = .rodata:0x8006F448; // type:object size:0x8
lbl_8006F450 = .rodata:0x8006F450; // type:object size:0x8
lbl_8006F458 = .rodata:0x8006F458; // type:object size:0x4 data:float
lbl_8006F460 = .rodata:0x8006F460; // type:object size:0x8 data:double
lbl_8006F468 = .rodata:0x8006F468; // type:object size:0x8 data:double
lbl_8006F470 = .rodata:0x8006F470; // type:object size:0x8 data:double
lbl_8006F478 = .rodata:0x8006F478; // type:object size:0x4 data:float
lbl_8006F47C = .rodata:0x8006F47C; // type:object size:0x4 data:float
lbl_8006F480 = .rodata:0x8006F480; // type:object size:0x4 data:float
lbl_8006F484 = .rodata:0x8006F484; // type:object size:0x4 data:float
lbl_8006F488 = .rodata:0x8006F488; // type:object size:0x8 data:double
lbl_8006F490 = .rodata:0x8006F490; // type:object size:0x8
lbl_8006F498 = .rodata:0x8006F498; // type:object size:0x8
lbl_8006F4A0 = .rodata:0x8006F4A0; // type:object size:0x8 data:double
lbl_8006F4A8 = .rodata:0x8006F4A8; // type:object size:0x8 data:double
lbl_8006F4B0 = .rodata:0x8006F4B0; // type:object size:0x30
lbl_8006F4E0 = .rodata:0x8006F4E0; // type:object size:0x60
lbl_8006F540 = .rodata:0x8006F540; // type:object size:0x38 data:double
lbl_8006F578 = .rodata:0x8006F578; // type:object size:0x114
lbl_8006F68C = .rodata:0x8006F68C; // type:object size:0x30
lbl_8006F6BC = .rodata:0x8006F6BC; // type:object size:0xC4
lbl_8006F780 = .rodata:0x8006F780; // type:object size:0x28 data:string
lbl_8006F7A8 = .rodata:0x8006F7A8; // type:object size:0x2C
lbl_8006F7D4 = .rodata:0x8006F7D4; // type:object size:0x8C
lbl_8006F860 = .rodata:0x8006F860; // type:object size:0x60
lbl_8006F8C0 = .rodata:0x8006F8C0; // type:object size:0x2C
lbl_8006F8EC = .rodata:0x8006F8EC; // type:object size:0x2C
lbl_8006F918 = .rodata:0x8006F918; // type:object size:0x2C
lbl_8006F944 = .rodata:0x8006F944; // type:object size:0x2C
lbl_8006F970 = .rodata:0x8006F970; // type:object size:0x2C
lbl_8006F99C = .rodata:0x8006F99C; // type:object size:0x84
lbl_8006FA20 = .rodata:0x8006FA20; // type:object size:0x64
lbl_8006FA84 = .rodata:0x8006FA84; // type:object size:0x28
lbl_8006FAAC = .rodata:0x8006FAAC; // type:object size:0x28 data:string
lbl_8006FAD4 = .rodata:0x8006FAD4; // type:object size:0x28 data:string
lbl_8006FAFC = .rodata:0x8006FAFC; // type:object size:0x28
lbl_8006FB24 = .rodata:0x8006FB24; // type:object size:0x4 data:float
lbl_8006FB28 = .rodata:0x8006FB28; // type:object size:0x2C
lbl_8006FB54 = .rodata:0x8006FB54; // type:object size:0x2C
lbl_8006FB80 = .rodata:0x8006FB80; // type:object size:0x28
lbl_8006FBA8 = .rodata:0x8006FBA8; // type:object size:0x2C
lbl_8006FBD4 = .rodata:0x8006FBD4; // type:object size:0x40
lbl_8006FC14 = .rodata:0x8006FC14; // type:object size:0x2C
lbl_8006FC40 = .rodata:0x8006FC40; // type:object size:0x2C data:string
lbl_8006FC6C = .rodata:0x8006FC6C; // type:object size:0x4 data:4byte
lbl_8006FC70 = .rodata:0x8006FC70; // type:object size:0x38
lbl_8006FCA8 = .rodata:0x8006FCA8; // type:object size:0x48
lbl_8006FCF0 = .rodata:0x8006FCF0; // type:object size:0x40
lbl_8006FD30 = .rodata:0x8006FD30; // type:object size:0x10
lbl_8006FD40 = .rodata:0x8006FD40; // type:object size:0x30
lbl_8006FD70 = .rodata:0x8006FD70; // type:object size:0x8 data:4byte
lbl_8006FD78 = .rodata:0x8006FD78; // type:object size:0x2C data:string
lbl_8006FDA4 = .rodata:0x8006FDA4; // type:object size:0x24
lbl_8006FDC8 = .rodata:0x8006FDC8; // type:object size:0x11C
lbl_8006FEE4 = .rodata:0x8006FEE4; // type:object size:0x24 data:string
lbl_8006FF08 = .rodata:0x8006FF08; // type:object size:0x1FC
lbl_80070104 = .rodata:0x80070104; // type:object size:0x38
lbl_8007013C = .rodata:0x8007013C; // type:object size:0x1EC
lbl_80070328 = .rodata:0x80070328; // type:object size:0x8B8
lbl_80070BE0 = .rodata:0x80070BE0; // type:object size:0x1C data:string
lbl_80070BFC = .rodata:0x80070BFC; // type:object size:0x88
lbl_80070C84 = .rodata:0x80070C84; // type:object size:0x1C
lbl_80070CA0 = .rodata:0x80070CA0; // type:object size:0x18 data:string
lbl_80070CB8 = .rodata:0x80070CB8; // type:object size:0x1C
lbl_80070CD4 = .rodata:0x80070CD4; // type:object size:0x18
lbl_80070CEC = .rodata:0x80070CEC; // type:object size:0x1C
lbl_80070D08 = .rodata:0x80070D08; // type:object size:0x18
lbl_80070D20 = .rodata:0x80070D20; // type:object size:0x1C
lbl_80070D3C = .rodata:0x80070D3C; // type:object size:0xCC
lbl_80070E08 = .rodata:0x80070E08; // type:object size:0x28
lbl_80070E30 = .rodata:0x80070E30; // type:object size:0xB8
lbl_80070EE8 = .rodata:0x80070EE8; // type:object size:0x2C
lbl_80070F14 = .rodata:0x80070F14; // type:object size:0x18 data:string
lbl_80070F2C = .rodata:0x80070F2C; // type:object size:0x18 data:string
lbl_80070F44 = .rodata:0x80070F44; // type:object size:0x1C
lbl_80070F60 = .rodata:0x80070F60; // type:object size:0x1C0
lbl_80071120 = .rodata:0x80071120; // type:object size:0x24
lbl_80071144 = .rodata:0x80071144; // type:object size:0x24
lbl_80071168 = .rodata:0x80071168; // type:object size:0x24
lbl_8007118C = .rodata:0x8007118C; // type:object size:0x20 data:string
lbl_800711AC = .rodata:0x800711AC; // type:object size:0x24
lbl_800711D0 = .rodata:0x800711D0; // type:object size:0x2C
lbl_800711FC = .rodata:0x800711FC; // type:object size:0x2C
lbl_80071228 = .rodata:0x80071228; // type:object size:0x30
lbl_80071258 = .rodata:0x80071258; // type:object size:0x8 data:4byte
lbl_80071260 = .rodata:0x80071260; // type:object size:0x18
lbl_80071278 = .rodata:0x80071278; // type:object size:0x10
lbl_80071288 = .rodata:0x80071288; // type:object size:0x2C data:string
lbl_800712B4 = .rodata:0x800712B4; // type:object size:0x4 data:4byte
lbl_800712B8 = .rodata:0x800712B8; // type:object size:0x10
lbl_800712C8 = .rodata:0x800712C8; // type:object size:0x34
lbl_800712FC = .rodata:0x800712FC; // type:object size:0x120
lbl_8007141C = .rodata:0x8007141C; // type:object size:0x20 data:string
lbl_8007143C = .rodata:0x8007143C; // type:object size:0x34
lbl_80071470 = .rodata:0x80071470; // type:object size:0x30
lbl_800714A0 = .rodata:0x800714A0; // type:object size:0x90 data:4byte
lbl_80071530 = .rodata:0x80071530; // type:object size:0x40
lbl_80071570 = .rodata:0x80071570; // type:object size:0x3C
lbl_800715AC = .rodata:0x800715AC; // type:object size:0x18 data:string
lbl_800715C4 = .rodata:0x800715C4; // type:object size:0x18 data:string
lbl_800715DC = .rodata:0x800715DC; // type:object size:0x78
lbl_80071654 = .rodata:0x80071654; // type:object size:0x1C
lbl_80071670 = .rodata:0x80071670; // type:object size:0x98
lbl_80071708 = .rodata:0x80071708; // type:object size:0x2C data:string
lbl_80071734 = .rodata:0x80071734; // type:object size:0x4 data:4byte
lbl_80071738 = .rodata:0x80071738; // type:object size:0x4 data:string
lbl_8007173C = .rodata:0x8007173C; // type:object size:0xC
lbl_80071748 = .rodata:0x80071748; // type:object size:0x1B8
lbl_80071900 = .rodata:0x80071900; // type:object size:0x24 data:string
lbl_80071924 = .rodata:0x80071924; // type:object size:0x2C
lbl_80071950 = .rodata:0x80071950; // type:object size:0x24
lbl_80071974 = .rodata:0x80071974; // type:object size:0x10 data:string
lbl_80071984 = .rodata:0x80071984; // type:object size:0x2C
lbl_800719B0 = .rodata:0x800719B0; // type:object size:0x40 data:string
lbl_800719F0 = .rodata:0x800719F0; // type:object size:0x40
lbl_80071A30 = .rodata:0x80071A30; // type:object size:0x38
lbl_80071A68 = .rodata:0x80071A68; // type:object size:0x18
lbl_80071A80 = .rodata:0x80071A80; // type:object size:0x30
lbl_80071AB0 = .rodata:0x80071AB0; // type:object size:0x1A data:string
lbl_80071AE0 = .data:0x80071AE0; // type:object size:0x10
lbl_80071AF0 = .data:0x80071AF0; // type:object size:0x1A8
jumptable_80071C98 = .data:0x80071C98; // type:object size:0x34 scope:local
__files = .data:0x80071CD0; // type:object size:0x140 scope:global
pow_10$415 = .data:0x80071E10; // type:object size:0x40 data:double
jumptable_80071E50 = .data:0x80071E50; // type:object size:0x124 scope:local
__ctype_map = .data:0x80071F78; // type:object size:0x100
__lower_map = .data:0x80072078; // type:object size:0x100
__upper_map = .data:0x80072178; // type:object size:0x100
__lconv = .data:0x80072278; // type:object size:0x38 data:4byte
@1249 = .data:0x800722B0; // type:object size:0x84 scope:local
jumptable_80072334 = .data:0x80072334; // type:object size:0x84 scope:local
jumptable_800723B8 = .data:0x800723B8; // type:object size:0xE0 scope:local
jumptable_80072498 = .data:0x80072498; // type:object size:0x44 scope:local
jumptable_800724E0 = .data:0x800724E0; // type:object size:0xD0 scope:local
jumptable_800725B0 = .data:0x800725B0; // type:object size:0x44 scope:local
jumptable_800725F4 = .data:0x800725F4; // type:object size:0x44 scope:local
gTRKDispatchTable = .data:0x80072638; // type:object size:0x84
jumptable_800726C0 = .data:0x800726C0; // type:object size:0x1C scope:local
jumptable_800726DC = .data:0x800726DC; // type:object size:0x1C scope:local
gTRKRestoreFlags = .data:0x800726F8; // type:object size:0x9 scope:global data:byte
gTRKExceptionStatus = .data:0x80072704; // type:object size:0x10 scope:local data:4byte
gTRKStepStatus = .data:0x80072714; // type:object size:0x14 data:4byte
TRK_ISR_OFFSETS = .data:0x80072728; // type:object size:0x3C data:4byte
gDBCommTable = .data:0x80072768; // type:object size:0x1C scope:global data:4byte
lbl_80072788 = .data:0x80072788; // type:object size:0x44 data:string
lbl_800727D0 = .data:0x800727D0; // type:object size:0x44 data:string
lbl_80072818 = .data:0x80072818; // type:object size:0x45 data:string
lbl_80072860 = .data:0x80072860; // type:object size:0x44 data:string
__AXSrcCycles = .data:0x800728A8; // type:object size:0x14
__AXMainMixCycles = .data:0x800728BC; // type:object size:0x40
__AXAuxMixCycles = .data:0x800728FC; // type:object size:0x80
__AXCompressorTable = .data:0x80072980; // type:object size:0x1A40
axDspSlave = .data:0x800743C0; // type:object size:0x1F20
lens$108 = .data:0x800762E0; // type:object size:0x20 scope:local data:4byte
lens$108 = .data:0x80076300; // type:object size:0x10 scope:local data:4byte
rsmpTab12khz = .data:0x80076310; // type:object size:0x800
lbl_80076B10 = .data:0x80076B10; // type:object size:0x46 data:string
ResetFunctionInfo = .data:0x80076B58; // type:object size:0x10
CardData = .data:0x80076B80; // type:object size:0x160
SectorSizeTable = .data:0x80076CE0; // type:object size:0x20
LatencyTable = .data:0x80076D00; // type:object size:0x20
lbl_80076D20 = .data:0x80076D20; // type:object size:0x18 data:string
lbl_80076D38 = .data:0x80076D38; // type:object size:0x45 data:string
lbl_80076D80 = .data:0x80076D80; // type:object size:0x1E data:string
lbl_80076DA0 = .data:0x80076DA0; // type:object size:0xC data:string
lbl_80076DAC = .data:0x80076DAC; // type:object size:0x9 data:string
lbl_80076DB8 = .data:0x80076DB8; // type:object size:0x1D data:string
lbl_80076DD8 = .data:0x80076DD8; // type:object size:0x2D data:string
lbl_80076E08 = .data:0x80076E08; // type:object size:0x2D data:string
lbl_80076E38 = .data:0x80076E38; // type:object size:0x2D data:string
lbl_80076E68 = .data:0x80076E68; // type:object size:0x2D data:string
lbl_80076E98 = .data:0x80076E98; // type:object size:0x2D data:string
lbl_80076EC8 = .data:0x80076EC8; // type:object size:0x2B data:string
lbl_80076EF8 = .data:0x80076EF8; // type:object size:0xC8 data:string
lbl_80076FC0 = .data:0x80076FC0; // type:object size:0x37 data:string
lbl_80076FF8 = .data:0x80076FF8; // type:object size:0x34 data:string
lbl_8007702C = .data:0x8007702C; // type:object size:0x2F data:string
lbl_80077060 = .data:0x80077060; // type:object size:0x45 data:string
@18 = .data:0x800770A8; // type:object size:0xA scope:local data:string
lbl_800770B4 = .data:0x800770B4; // type:object size:0x34 data:string
jumptable_800770E8 = .data:0x800770E8; // type:object size:0x40 scope:local
ImmCommand = .data:0x80077128; // type:object size:0xC data:4byte
lbl_80077134 = .data:0x80077134; // type:object size:0x41 data:string
jumptable_80077178 = .data:0x80077178; // type:object size:0x34 scope:local
jumptable_800771AC = .data:0x800771AC; // type:object size:0x34 scope:local
ErrorTable = .data:0x800771E0; // type:object size:0x48 data:4byte
@36 = .data:0x80077228; // type:object size:0x1A scope:local data:string
lbl_80077244 = .data:0x80077244; // type:object size:0x16 scope:local data:string
lbl_8007725C = .data:0x8007725C; // type:object size:0x14 scope:local data:string
lbl_80077270 = .data:0x80077270; // type:object size:0x14 scope:local data:string
lbl_80077284 = .data:0x80077284; // type:object size:0x14 scope:local data:string
lbl_80077298 = .data:0x80077298; // type:object size:0x110
lbl_800773A8 = .data:0x800773A8; // type:object size:0x44 data:string
lbl_800773EC = .data:0x800773EC; // type:object size:0xD0
lbl_800774BC = .data:0x800774BC; // type:object size:0x1C
GXResetFuncInfo = .data:0x800774D8; // type:object size:0x10 scope:local
jumptable_800774E8 = .data:0x800774E8; // type:object size:0x68 scope:local
jumptable_80077550 = .data:0x80077550; // type:object size:0x44 scope:local
jumptable_80077594 = .data:0x80077594; // type:object size:0x44 scope:local
jumptable_800775D8 = .data:0x800775D8; // type:object size:0x1C scope:local
jumptable_800775F4 = .data:0x800775F4; // type:object size:0x54 scope:local
lbl_80077648 = .data:0x80077648; // type:object size:0x3C
lbl_80077684 = .data:0x80077684; // type:object size:0x3C
lbl_800776C0 = .data:0x800776C0; // type:object size:0x3C
lbl_800776FC = .data:0x800776FC; // type:object size:0x3C
lbl_80077738 = .data:0x80077738; // type:object size:0x40
jumptable_80077778 = .data:0x80077778; // type:object size:0xF4 scope:local
jumptable_8007786C = .data:0x8007786C; // type:object size:0xF4 scope:local
jumptable_80077960 = .data:0x80077960; // type:object size:0x3C scope:local
lbl_800779A0 = .data:0x800779A0; // type:object size:0x50
lbl_800779F0 = .data:0x800779F0; // type:object size:0x28
lbl_80077A18 = .data:0x80077A18; // type:object size:0x20
jumptable_80077A38 = .data:0x80077A38; // type:object size:0x5C scope:local
jumptable_80077A94 = .data:0x80077A94; // type:object size:0x90 scope:local
lbl_80077B28 = .data:0x80077B28; // type:object size:0xBC0
@1 = .data:0x800786E8; // type:object size:0x44 scope:local data:string
DSPInitCode = .data:0x800788F0; // type:object size:0x80 scope:local
@69 = .data:0x80078970; // type:object size:0x29 scope:local data:string
lbl_80078BA0 = .data:0x80078BA0; // type:object size:0x1B4
@74 = .data:0x80078D54; // type:object size:0x23 scope:local data:string
@13 = .data:0x80078D78; // type:object size:0x16 scope:local data:string
@87 = .data:0x80079054; // type:object size:0x40 scope:local
lbl_80079098 = .data:0x80079098; // type:object size:0x180
lbl_80079218 = .data:0x80079218; // type:object size:0x990
lbl_80079BA8 = .data:0x80079BA8; // type:object size:0x30 data:4byte
lbl_80079BD8 = .data:0x80079BD8; // type:object size:0x28
lbl_80079C00 = .data:0x80079C00; // type:object size:0x28
ResetFunctionInfo = .data:0x80079C28; // type:object size:0x10 scope:local
lbl_80079C38 = .data:0x80079C38; // type:object size:0x48
lbl_80079C80 = .data:0x80079C80; // type:object size:0x10
lbl_80079C90 = .data:0x80079C90; // type:object size:0x44 data:string
Si = .data:0x80079CD4; // type:object size:0x14 scope:local data:4byte
Type = .data:0x80079CE8; // type:object size:0x10 scope:local
XYNTSC = .data:0x80079DA8; // type:object size:0x30 scope:local
lbl_80079E40 = .data:0x80079E40; // type:object size:0x1F4
jumptable_8007A034 = .data:0x8007A034; // type:object size:0x6C scope:local
@724 = .data:0x8007A1F4; // type:object size:0x1C scope:local
lbl_8007A210 = .data:0x8007A210; // type:object size:0x18
lbl_8007A228 = .data:0x8007A228; // type:object size:0xC
lbl_8007A234 = .data:0x8007A234; // type:object size:0xC
lbl_8007A240 = .data:0x8007A240; // type:object size:0x10 data:4byte
lbl_8007A250 = .data:0x8007A250; // type:object size:0x10 data:string
jumptable_8007A260 = .data:0x8007A260; // type:object size:0x28 scope:local
lbl_8007A288 = .data:0x8007A288; // type:object size:0x20
lbl_8007A2A8 = .data:0x8007A2A8; // type:object size:0x28
lbl_8007A2D0 = .data:0x8007A2D0; // type:object size:0x28
lbl_8007A2F8 = .data:0x8007A2F8; // type:object size:0x18
lbl_8007A310 = .data:0x8007A310; // type:object size:0xC
lbl_8007A31C = .data:0x8007A31C; // type:object size:0x2C
lbl_8007A348 = .data:0x8007A348; // type:object size:0x2C data:string
lbl_8007A374 = .data:0x8007A374; // type:object size:0x38
lbl_8007A3AC = .data:0x8007A3AC; // type:object size:0x2C data:string
lbl_8007A3D8 = .data:0x8007A3D8; // type:object size:0x38
lbl_8007A410 = .data:0x8007A410; // type:object size:0x30 data:string
lbl_8007A440 = .data:0x8007A440; // type:object size:0x10
lbl_8007A450 = .data:0x8007A450; // type:object size:0x20
lbl_8007A470 = .data:0x8007A470; // type:object size:0x20
lbl_8007A490 = .data:0x8007A490; // type:object size:0x8 data:4byte
lbl_8007A498 = .data:0x8007A498; // type:object size:0x4 data:4byte
lbl_8007A49C = .data:0x8007A49C; // type:object size:0x4 data:4byte
lbl_8007A4A0 = .data:0x8007A4A0; // type:object size:0x200
lbl_8007A6A0 = .data:0x8007A6A0; // type:object size:0x4 data:4byte
lbl_8007A6A4 = .data:0x8007A6A4; // type:object size:0x4 data:4byte
lbl_8007A6A8 = .data:0x8007A6A8; // type:object size:0x10 data:4byte
lbl_8007A6B8 = .data:0x8007A6B8; // type:object size:0x8 data:4byte
lbl_8007A6C0 = .data:0x8007A6C0; // type:object size:0x18 data:4byte
lbl_8007A6D8 = .data:0x8007A6D8; // type:object size:0x8 data:4byte
lbl_8007A6E0 = .data:0x8007A6E0; // type:object size:0x68
lbl_8007A748 = .data:0x8007A748; // type:object size:0x8 data:4byte
lbl_8007A750 = .data:0x8007A750; // type:object size:0x30
lbl_8007A780 = .data:0x8007A780; // type:object size:0x30
lbl_8007A7B0 = .data:0x8007A7B0; // type:object size:0x1C0
lbl_8007A970 = .data:0x8007A970; // type:object size:0x68
lbl_8007A9D8 = .data:0x8007A9D8; // type:object size:0x4 data:4byte
lbl_8007A9DC = .data:0x8007A9DC; // type:object size:0x7C data:4byte
lbl_8007AA58 = .data:0x8007AA58; // type:object size:0x2008
lbl_8007CA60 = .data:0x8007CA60; // type:object size:0x660
lbl_8007D0C0 = .bss:0x8007D0C0; // type:object size:0xC
lbl_8007D0CC = .bss:0x8007D0CC; // type:object size:0xB84
__atexit_funcs = .bss:0x8007DC50; // type:object size:0x100 scope:local
protopool$192 = .bss:0x8007DD50; // type:object size:0x38 data:4byte
stderr_buff = .bss:0x8007DD88; // type:object size:0x100
stdout_buff = .bss:0x8007DE88; // type:object size:0x100
stdin_buff = .bss:0x8007DF88; // type:object size:0x100
gTRKEventQueue = .bss:0x8007E088; // type:object size:0x28
gTRKBigEndian = .bss:0x8007E0B0; // type:object size:0x4 scope:global data:4byte
gTRKMsgBufs = .bss:0x8007E0B8; // type:object size:0x19B0
gTRKInputPendingPtr = .bss:0x8007FA68; // type:object size:0x4 scope:global data:4byte
gTRKFramingState = .bss:0x8007FA6C; // type:object size:0x14 data:4byte
gTRKDispatchTableSize = .bss:0x8007FA80; // type:object size:0x4 data:4byte
IsTRKConnected = .bss:0x8007FA88; // type:object size:0x4 data:4byte
TRK_saved_exceptionID = .bss:0x8007FA90; // type:object size:0x2 scope:local data:2byte
gTRKState = .bss:0x8007FA94; // type:object size:0xA4 scope:global data:4byte
gTRKCPUState = .bss:0x8007FB38; // type:object size:0x430 scope:global
gTRKSaveState = .bss:0x8007FF68; // type:object size:0x94 scope:global data:4byte
TRKvalue128_temp = .bss:0x8007FFFC; // type:object size:0x10
lc_base = .bss:0x80080010; // type:object size:0x4 data:4byte
TRK_mainError = .bss:0x80080018; // type:object size:0x4 scope:local data:4byte
gWritePos = .bss:0x80080020; // type:object size:0x4 data:4byte
gReadPos = .bss:0x80080024; // type:object size:0x4 data:4byte
gReadCount = .bss:0x80080028; // type:object size:0x4 data:4byte
_MetroTRK_Has_Framing = .bss:0x8008002C; // type:object size:0x4 data:4byte
gReadBuf = .bss:0x80080030; // type:object size:0x110A
gWriteBuf = .bss:0x8008113C; // type:object size:0x110A
bUseSerialIO = .bss:0x80082248; // type:object size:0x1 data:byte
__AXStackHead = .bss:0x80082250; // type:object size:0x80 data:4byte
__AXStackTail = .bss:0x800822D0; // type:object size:0x80 data:4byte
__AXBufferAuxA = .bss:0x80082360; // type:object size:0x1680 data:4byte
__AXBufferAuxB = .bss:0x800839E0; // type:object size:0x1680 data:4byte
__AXCommandList = .bss:0x80085060; // type:object size:0x600
__AXOutBuffer = .bss:0x80085660; // type:object size:0x500 data:4byte
__AXOutSBuffer = .bss:0x80085B60; // type:object size:0x280
__AXDSPTask = .bss:0x80085DE0; // type:object size:0x50
__AXDramImage = .bss:0x80085E30; // type:object size:0x4000
__AXLocalProfile = .bss:0x80089E30; // type:object size:0x38
__AXStudio = .bss:0x80089E80; // type:object size:0x36
__AXPB = .bss:0x80089EC0; // type:object size:0x3B00 data:2byte
__AXITD = .bss:0x8008D9C0; // type:object size:0x1000
__AXUpdates = .bss:0x8008E9C0; // type:object size:0x4000
__AXVPB = .bss:0x800929C0; // type:object size:0x8900
__CARDBlock = .bss:0x8009B2C0; // type:object size:0x220 data:4byte
__CARDDiskNone = .bss:0x8009B4E0; // type:object size:0x20
CommandList = .bss:0x8009B500; // type:object size:0x3C scope:local data:4byte
AlarmForTimeout = .bss:0x8009B568; // type:object size:0x28 scope:local
BB2 = .bss:0x8009B5E0; // type:object size:0x20 scope:local
CurrDiskID = .bss:0x8009B600; // type:object size:0x20
DummyCommandBlock = .bss:0x8009B620; // type:object size:0x30 scope:local
ResetAlarm = .bss:0x8009B650; // type:object size:0x28
WaitingQueue = .bss:0x8009B678; // type:object size:0x20 scope:local data:4byte
bb2Buf = .bss:0x8009B698; // type:object size:0x3F scope:local
block$16 = .bss:0x8009B6D8; // type:object size:0x30 scope:local
Ecb = .bss:0x8009B708; // type:object size:0xC0 scope:local data:4byte
gxData = .bss:0x8009B7C8; // type:object size:0x4F8 scope:local
lbl_8009BD40 = .bss:0x8009BD40; // type:object size:0x1800 data:4byte
DriveInfo = .bss:0x8009D540; // type:object size:0x20 scope:local
__OSErrorTable = .bss:0x8009D590; // type:object size:0x44 scope:global data:4byte
lbl_8009D5E0 = .bss:0x8009D5E0; // type:object size:0x20
Scb = .bss:0x8009D600; // type:object size:0x54 scope:local data:4byte
RunQueue = .bss:0x8009D658; // type:object size:0x100 scope:local data:4byte
lbl_8009E050 = .bss:0x8009E050; // type:object size:0x10
lbl_8009E060 = .bss:0x8009E060; // type:object size:0x40
Packet = .bss:0x8009E0A0; // type:object size:0x80 scope:local data:4byte
lbl_8009E120 = .bss:0x8009E120; // type:object size:0xA0
TypeTime = .bss:0x8009E1C0; // type:object size:0x20 scope:local
lbl_8009E1E0 = .bss:0x8009E1E0; // type:object size:0x20
lbl_8009E200 = .bss:0x8009E200; // type:object size:0x40
lbl_8009E240 = .bss:0x8009E240; // type:object size:0x60 data:4byte
lbl_8009E2A0 = .bss:0x8009E2A0; // type:object size:0x148 data:2byte
lbl_8009E3E8 = .bss:0x8009E3E8; // type:object size:0x80
lbl_8009E468 = .bss:0x8009E468; // type:object size:0x10
lbl_8009E478 = .bss:0x8009E478; // type:object size:0x500
lbl_8009E978 = .bss:0x8009E978; // type:object size:0xF0
lbl_8009EA68 = .bss:0x8009EA68; // type:object size:0xC data:4byte
lbl_8009EA74 = .bss:0x8009EA74; // type:object size:0x20 data:4byte
lbl_8009EA94 = .bss:0x8009EA94; // type:object size:0x30
lbl_8009EAC4 = .bss:0x8009EAC4; // type:object size:0x10 data:float
lbl_8009EAD4 = .bss:0x8009EAD4; // type:object size:0x28 data:float
lbl_8009EAFC = .bss:0x8009EAFC; // type:object size:0x34 data:float
lbl_8009EB30 = .bss:0x8009EB30; // type:object size:0x20
lbl_8009EB50 = .bss:0x8009EB50; // type:object size:0x20
lbl_8009EB70 = .bss:0x8009EB70; // type:object size:0x100
lbl_8009EC70 = .bss:0x8009EC70; // type:object size:0x30
lbl_8009ECA0 = .bss:0x8009ECA0; // type:object size:0x100
lbl_8009EDA0 = .bss:0x8009EDA0; // type:object size:0x1E0
lbl_8009EF80 = .bss:0x8009EF80; // type:object size:0x28 data:4byte
lbl_8009EFA8 = .bss:0x8009EFA8; // type:object size:0x10 data:4byte
lbl_8009EFB8 = .bss:0x8009EFB8; // type:object size:0x4 data:4byte
lbl_8009EFBC = .bss:0x8009EFBC; // type:object size:0xC04 data:byte
lbl_8009FBC0 = .bss:0x8009FBC0; // type:object size:0x9C0 data:byte
lbl_800A0580 = .bss:0x800A0580; // type:object size:0x4 data:4byte
lbl_800A0584 = .bss:0x800A0584; // type:object size:0x4 data:4byte
lbl_800A0588 = .bss:0x800A0588; // type:object size:0x14 data:4byte
lbl_800A059C = .bss:0x800A059C; // type:object size:0xC84 data:2byte
lbl_800A1220 = .bss:0x800A1220; // type:object size:0x8 data:4byte
lbl_800A1228 = .bss:0x800A1228; // type:object size:0x8 data:4byte
lbl_800A1230 = .bss:0x800A1230; // type:object size:0x4 data:4byte
lbl_800A1234 = .bss:0x800A1234; // type:object size:0x4 data:4byte
lbl_800A1238 = .bss:0x800A1238; // type:object size:0x120
lbl_800A1358 = .bss:0x800A1358; // type:object size:0x8 data:4byte
lbl_800A1360 = .bss:0x800A1360; // type:object size:0x40
lbl_800A13A0 = .bss:0x800A13A0; // type:object size:0x400
lbl_800A17A0 = .bss:0x800A17A0; // type:object size:0x8 data:4byte
lbl_800A17A8 = .bss:0x800A17A8; // type:object size:0x9D0 data:4byte
lbl_800A2178 = .bss:0x800A2178; // type:object size:0x16C0 data:byte
lbl_800A3838 = .bss:0x800A3838; // type:object size:0x4 data:4byte
lbl_800A383C = .bss:0x800A383C; // type:object size:0x4 data:4byte
lbl_800A3840 = .bss:0x800A3840; // type:object size:0x4 data:4byte
lbl_800A3844 = .bss:0x800A3844; // type:object size:0x4 data:4byte
lbl_800A3848 = .bss:0x800A3848; // type:object size:0xE60 data:byte
lbl_800A46A8 = .bss:0x800A46A8; // type:object size:0x4 data:4byte
lbl_800A46AC = .bss:0x800A46AC; // type:object size:0x20 data:4byte
lbl_800A46CC = .bss:0x800A46CC; // type:object size:0x10 data:4byte
lbl_800A46DC = .bss:0x800A46DC; // type:object size:0x14 data:4byte
lbl_800A46F0 = .bss:0x800A46F0; // type:object size:0x10 data:4byte
lbl_800A4700 = .bss:0x800A4700; // type:object size:0x4 data:4byte
lbl_800A4704 = .bss:0x800A4704; // type:object size:0x3C4 data:4byte
lbl_800A4AC8 = .bss:0x800A4AC8; // type:object size:0x4
lbl_800A4ACC = .bss:0x800A4ACC; // type:object size:0x7CAC data:4byte
lbl_800AC778 = .bss:0x800AC778; // type:object size:0x4 data:4byte
lbl_800AC77C = .bss:0x800AC77C; // type:object size:0x4 data:4byte
lbl_800AC780 = .bss:0x800AC780; // type:object size:0x8 data:4byte
lbl_800AC788 = .bss:0x800AC788; // type:object size:0x4 data:4byte
lbl_800AC78C = .bss:0x800AC78C; // type:object size:0x4 data:4byte
lbl_800AC790 = .bss:0x800AC790; // type:object size:0x4 data:4byte
lbl_800AC794 = .bss:0x800AC794; // type:object size:0x4 data:4byte
lbl_800AC798 = .bss:0x800AC798; // type:object size:0x4 data:4byte
lbl_800AC79C = .bss:0x800AC79C; // type:object size:0x20
lbl_800AC7BC = .bss:0x800AC7BC; // type:object size:0x100
lbl_800AC8BC = .bss:0x800AC8BC; // type:object size:0x4 data:4byte
lbl_800AC8C0 = .bss:0x800AC8C0; // type:object size:0x400
lbl_800ACCC0 = .bss:0x800ACCC0; // type:object size:0x440 data:byte
lbl_800AD100 = .bss:0x800AD100; // type:object size:0x4 data:4byte
lbl_800AD104 = .bss:0x800AD104; // type:object size:0x4 data:4byte
lbl_800AD108 = .bss:0x800AD108; // type:object size:0x2080
lbl_800AF188 = .bss:0x800AF188; // type:object size:0x4 data:4byte
lbl_800AF18C = .bss:0x800AF18C; // type:object size:0x140 data:4byte
lbl_800AF2CC = .bss:0x800AF2CC; // type:object size:0x344 data:4byte
lbl_800AF610 = .bss:0x800AF610; // type:object size:0xC data:4byte
lbl_800AF61C = .bss:0x800AF61C; // type:object size:0x4 data:4byte
lbl_800AF620 = .bss:0x800AF620; // type:object size:0x4 data:4byte
lbl_800AF624 = .bss:0x800AF624; // type:object size:0xFA4 data:byte
lbl_800B05C8 = .bss:0x800B05C8; // type:object size:0x100
lbl_800B06C8 = .bss:0x800B06C8; // type:object size:0x4 data:4byte
lbl_800B06CC = .bss:0x800B06CC; // type:object size:0x104 data:4byte
lbl_800B07D0 = .bss:0x800B07D0; // type:object size:0x10 data:4byte
lbl_800B07E0 = .bss:0x800B07E0; // type:object size:0x4 data:4byte
lbl_800B07E4 = .bss:0x800B07E4; // type:object size:0x2384 data:byte
lbl_800B2B68 = .bss:0x800B2B68; // type:object size:0x4 data:4byte
lbl_800B2B6C = .bss:0x800B2B6C; // type:object size:0x4 data:4byte
lbl_800B2B70 = .bss:0x800B2B70; // type:object size:0x4 data:4byte
lbl_800B2B74 = .bss:0x800B2B74; // type:object size:0x484
lbl_800B2FF8 = .bss:0x800B2FF8; // type:object size:0x4 data:4byte
lbl_800B2FFC = .bss:0x800B2FFC; // type:object size:0x4004 data:4byte
lbl_800B7000 = .bss:0x800B7000; // type:object size:0x4 data:4byte
lbl_800B7004 = .bss:0x800B7004; // type:object size:0xC04
lbl_800B7C08 = .bss:0x800B7C08; // type:object size:0x30 data:4byte
lbl_800B7C38 = .bss:0x800B7C38; // type:object size:0x80
lbl_800B7CB8 = .bss:0x800B7CB8; // type:object size:0x8 data:4byte
lbl_800B7CC0 = .bss:0x800B7CC0; // type:object size:0x8 data:4byte
lbl_800B7CC8 = .bss:0x800B7CC8; // type:object size:0x8 data:4byte
lbl_800B7CD0 = .bss:0x800B7CD0; // type:object size:0x200
lbl_800B7ED0 = .bss:0x800B7ED0; // type:object size:0x4 data:4byte
lbl_800B7ED4 = .bss:0x800B7ED4; // type:object size:0x9F4 data:4byte
lbl_800B88C8 = .bss:0x800B88C8; // type:object size:0x4 data:4byte
lbl_800B88CC = .bss:0x800B88CC; // type:object size:0x104 data:4byte
lbl_800B89D0 = .bss:0x800B89D0; // type:object size:0x4 data:4byte
lbl_800B89D4 = .bss:0x800B89D4; // type:object size:0x4 data:4byte
lbl_800B89D8 = .bss:0x800B89D8; // type:object size:0x8 data:4byte
lbl_800B89E0 = .bss:0x800B89E0; // type:object size:0x4 data:4byte
lbl_800B89E4 = .bss:0x800B89E4; // type:object size:0x10C0
lbl_800B9AA4 = .bss:0x800B9AA4; // type:object size:0xE84 data:byte
lbl_800BA928 = .bss:0x800BA928; // type:object size:0x14 data:4byte
lbl_800BA93C = .bss:0x800BA93C; // type:object size:0x180 data:4byte
@wstringBase0 = .sdata:0x800BAAC0; // type:object size:0x2 scope:local
next = .sdata:0x800BAAC8; // type:object size:0x4 scope:local data:4byte
__float_nan = .sdata:0x800BAAD0; // type:object size:0x4 data:float
__float_huge = .sdata:0x800BAAD4; // type:object size:0x4 data:float
__double_max = .sdata:0x800BAAD8; // type:object size:0x8 data:double
__double_huge = .sdata:0x800BAAE0; // type:object size:0x8 data:double
__extended_min = .sdata:0x800BAAE8; // type:object size:0x8 data:double
__extended_max = .sdata:0x800BAAF0; // type:object size:0x8 data:double
__AIVersion = .sdata:0x800BAAF8; // type:object size:0x4 data:4byte
__ARVersion = .sdata:0x800BAB00; // type:object size:0x4 data:4byte
__ARQVersion = .sdata:0x800BAB08; // type:object size:0x4 data:4byte
__AXVersion = .sdata:0x800BAB10; // type:object size:0x4 data:4byte
axDspSlaveLength = .sdata:0x800BAB18; // type:object size:0x2 data:2byte
__AXFXAlloc = .sdata:0x800BAB20; // type:object size:0x4 data:4byte
__AXFXFree = .sdata:0x800BAB24; // type:object size:0x4 data:4byte
__CARDVersion = .sdata:0x800BAB28; // type:object size:0x4 data:4byte
next = .sdata:0x800BAB30; // type:object size:0x4 scope:local data:4byte
__CARDVendorID = .sdata:0x800BAB38; // type:object size:0x2 data:2byte
__DSPVersion = .sdata:0x800BAB40; // type:object size:0x4 data:4byte
FirstRead = .sdata:0x800BAB48; // type:object size:0x4 data:4byte
lbl_800BAB50 = .sdata:0x800BAB50; // type:object size:0x8 data:string
__DVDVersion = .sdata:0x800BAB58; // type:object size:0x4 scope:global data:4byte
autoInvalidation = .sdata:0x800BAB5C; // type:object size:0x4 scope:local data:4byte
checkOptionalCommand = .sdata:0x800BAB60; // type:object size:0x4 data:4byte
lbl_800BAB64 = .sdata:0x800BAB64; // type:object size:0x6 data:string
DmaCommand = .sdata:0x800BAB6C; // type:object size:0x4 data:4byte
@35 = .sdata:0x800BAB70; // type:object size:0x2 scope:local data:string
@40 = .sdata:0x800BAB74; // type:object size:0x4 scope:local data:string
@41 = .sdata:0x800BAB78; // type:object size:0x3 scope:local data:string
__EXIVersion = .sdata:0x800BAB80; // type:object size:0x4 scope:global data:4byte
__GXVersion = .sdata:0x800BAB88; // type:object size:0x4 scope:global data:4byte
lbl_800BAB90 = .sdata:0x800BAB90; // type:object size:0x4
lbl_800BAB94 = .sdata:0x800BAB94; // type:object size:0x4
lbl_800BAB98 = .sdata:0x800BAB98; // type:object size:0x8
lbl_800BABA0 = .sdata:0x800BABA0; // type:object size:0x8
lbl_800BABA8 = .sdata:0x800BABA8; // type:object size:0x8
lbl_800BABB0 = .sdata:0x800BABB0; // type:object size:0x8
lbl_800BABB8 = .sdata:0x800BABB8; // type:object size:0x8
lbl_800BABC0 = .sdata:0x800BABC0; // type:object size:0x8
lbl_800BABC8 = .sdata:0x800BABC8; // type:object size:0x8
lbl_800BABD0 = .sdata:0x800BABD0; // type:object size:0x8
lbl_800BABD8 = .sdata:0x800BABD8; // type:object size:0x8
lbl_800BABE0 = .sdata:0x800BABE0; // type:object size:0x8
__OSVersion = .sdata:0x800BABE8; // type:object size:0x4 scope:global data:4byte
lbl_800BABEC = .sdata:0x800BABEC; // type:object size:0x4 data:string
lbl_800BABF0 = .sdata:0x800BABF0; // type:object size:0x8 data:4byte
__OSArenaLo = .sdata:0x800BABF8; // type:object size:0x4 scope:local data:4byte
lbl_800BAC00 = .sdata:0x800BAC00; // type:object size:0x4 data:4byte
@76 = .sdata:0x800BAC04; // type:object size:0x2 scope:local data:string
lbl_800BAC08 = .sdata:0x800BAC08; // type:object size:0x8 data:2byte
SwitchThreadCallback = .sdata:0x800BAC10; // type:object size:0x4 scope:local data:4byte
lbl_800BAC18 = .sdata:0x800BAC18; // type:object size:0x4 data:4byte
lbl_800BAC1C = .sdata:0x800BAC1C; // type:object size:0x4 data:4byte
lbl_800BAC20 = .sdata:0x800BAC20; // type:object size:0x4 data:4byte
lbl_800BAC24 = .sdata:0x800BAC24; // type:object size:0x4 data:4byte
lbl_800BAC28 = .sdata:0x800BAC28; // type:object size:0x4 data:4byte
lbl_800BAC2C = .sdata:0x800BAC2C; // type:object size:0x4 data:4byte
lbl_800BAC30 = .sdata:0x800BAC30; // type:object size:0x4
lbl_800BAC34 = .sdata:0x800BAC34; // type:object size:0x4
__SIVersion = .sdata:0x800BAC38; // type:object size:0x4 scope:global data:4byte
lbl_800BAC40 = .sdata:0x800BAC40; // type:object size:0x4 data:4byte
lbl_800BAC44 = .sdata:0x800BAC44; // type:object size:0xC
lbl_800BAC50 = .sdata:0x800BAC50; // type:object size:0x8 data:4byte
lbl_800BAC58 = .sdata:0x800BAC58; // type:object size:0xC
lbl_800BAC64 = .sdata:0x800BAC64; // type:object size:0x8 data:float
lbl_800BAC6C = .sdata:0x800BAC6C; // type:object size:0x4 data:float
lbl_800BAC70 = .sdata:0x800BAC70; // type:object size:0x8 data:4byte
lbl_800BAC78 = .sdata:0x800BAC78; // type:object size:0x8
lbl_800BAC80 = .sdata:0x800BAC80; // type:object size:0x8 data:4byte
lbl_800BAC88 = .sdata:0x800BAC88; // type:object size:0x1 data:byte
lbl_800BACA0 = .sbss:0x800BACA0; // type:object size:0x4 data:4byte
lbl_800BACA4 = .sbss:0x800BACA4; // type:object size:0x4 data:4byte
lbl_800BACA8 = .sbss:0x800BACA8; // type:object size:0x4 data:4byte
lbl_800BACAC = .sbss:0x800BACAC; // type:object size:0x4 data:4byte
lbl_800BACB0 = .sbss:0x800BACB0; // type:object size:0x4 data:4byte
lbl_800BACB4 = .sbss:0x800BACB4; // type:object size:0x4 data:4byte
lbl_800BACB8 = .sbss:0x800BACB8; // type:object size:0x4 data:4byte
lbl_800BACBC = .sbss:0x800BACBC; // type:object size:0x4 data:4byte
lbl_800BACC0 = .sbss:0x800BACC0; // type:object size:0x4 data:4byte
lbl_800BACC4 = .sbss:0x800BACC4; // type:object size:0x4 data:4byte
lbl_800BACC8 = .sbss:0x800BACC8; // type:object size:0x8 data:4byte
lbl_800BACD0 = .sbss:0x800BACD0; // type:object size:0x8 data:4byte
__global_destructor_chain = .sbss:0x800BACD8; // type:object size:0x4 scope:global data:4byte
__aborting = .sbss:0x800BACE0; // type:object size:0x4 scope:global data:4byte
__atexit_curr_func = .sbss:0x800BACE4; // type:object size:0x4 scope:local data:4byte
__stdio_exit = .sbss:0x800BACE8; // type:object size:0x4 scope:global data:4byte
__console_exit = .sbss:0x800BACEC; // type:object size:0x4 scope:global data:4byte
init$193 = .sbss:0x800BACF0; // type:object size:0x1 data:byte
errno = .sbss:0x800BACF8; // type:object size:0x4 data:4byte
initialized$16 = .sbss:0x800BAD00; // type:object size:0x4 data:4byte
zero = .sbss:0x800BAD08; // type:object size:0x8 scope:local data:double
zero = .sbss:0x800BAD10; // type:object size:0x8 scope:local data:double
__AIS_Callback = .sbss:0x800BAD18; // type:object size:0x4 data:4byte
__AID_Callback = .sbss:0x800BAD1C; // type:object size:0x4 data:4byte
__CallbackStack = .sbss:0x800BAD20; // type:object size:0x4 data:4byte
__OldStack = .sbss:0x800BAD24; // type:object size:0x4 data:4byte
__AI_init_flag = .sbss:0x800BAD28; // type:object size:0x4 data:4byte
__AID_Active = .sbss:0x800BAD2C; // type:object size:0x4 data:4byte
bound_32KHz = .sbss:0x800BAD30; // type:object size:0x8 data:4byte
bound_48KHz = .sbss:0x800BAD38; // type:object size:0x8 data:4byte
min_wait = .sbss:0x800BAD40; // type:object size:0x8 data:4byte
max_wait = .sbss:0x800BAD48; // type:object size:0x8 data:4byte
buffer = .sbss:0x800BAD50; // type:object size:0x8 data:4byte
__AR_Callback = .sbss:0x800BAD58; // type:object size:0x4 data:4byte
__AR_Size = .sbss:0x800BAD5C; // type:object size:0x4 data:4byte
__AR_InternalSize = .sbss:0x800BAD60; // type:object size:0x4 data:4byte
__AR_ExpansionSize = .sbss:0x800BAD64; // type:object size:0x4 data:4byte
__AR_StackPointer = .sbss:0x800BAD68; // type:object size:0x4 data:4byte
__AR_FreeBlocks = .sbss:0x800BAD6C; // type:object size:0x4 data:4byte
__AR_BlockLength = .sbss:0x800BAD70; // type:object size:0x4 data:4byte
__AR_init_flag = .sbss:0x800BAD74; // type:object size:0x4 data:4byte
__ARQRequestQueueHi = .sbss:0x800BAD78; // type:object size:0x4 data:4byte
__ARQRequestTailHi = .sbss:0x800BAD7C; // type:object size:0x4 data:4byte
__ARQRequestQueueLo = .sbss:0x800BAD80; // type:object size:0x4 data:4byte
__ARQRequestTailLo = .sbss:0x800BAD84; // type:object size:0x4 data:4byte
__ARQRequestPendingHi = .sbss:0x800BAD88; // type:object size:0x4 data:4byte
__ARQRequestPendingLo = .sbss:0x800BAD8C; // type:object size:0x4 data:4byte
__ARQCallbackHi = .sbss:0x800BAD90; // type:object size:0x4 data:4byte
__ARQCallbackLo = .sbss:0x800BAD94; // type:object size:0x4 data:4byte
__ARQChunkSize = .sbss:0x800BAD98; // type:object size:0x4 data:4byte
__ARQ_init_flag = .sbss:0x800BAD9C; // type:object size:0x4 data:4byte
__AXCallbackStack = .sbss:0x800BADA0; // type:object size:0x4 data:4byte
__AXCallbackAuxA = .sbss:0x800BADA8; // type:object size:0x4 data:4byte
__AXCallbackAuxB = .sbss:0x800BADAC; // type:object size:0x4 data:4byte
__AXContextAuxA = .sbss:0x800BADB0; // type:object size:0x4 data:4byte
__AXContextAuxB = .sbss:0x800BADB4; // type:object size:0x4 data:4byte
__AXAuxADspWrite = .sbss:0x800BADB8; // type:object size:0x4 data:4byte
__AXAuxADspRead = .sbss:0x800BADBC; // type:object size:0x4 data:4byte
__AXAuxBDspWrite = .sbss:0x800BADC0; // type:object size:0x4 data:4byte
__AXAuxBDspRead = .sbss:0x800BADC4; // type:object size:0x4 data:4byte
__AXAuxDspWritePosition = .sbss:0x800BADC8; // type:object size:0x4 data:4byte
__AXAuxDspReadPosition = .sbss:0x800BADCC; // type:object size:0x4 data:4byte
__AXAuxDspWritePositionDpl2 = .sbss:0x800BADD0; // type:object size:0x4 data:4byte
__AXAuxDspReadPositionDpl2 = .sbss:0x800BADD4; // type:object size:0x4 data:4byte
__AXAuxCpuReadWritePosition = .sbss:0x800BADD8; // type:object size:0x4 data:4byte
__AXCommandListPosition = .sbss:0x800BADE0; // type:object size:0x4 data:4byte
__AXClWrite = .sbss:0x800BADE4; // type:object size:0x4 data:4byte
__AXCommandListCycles = .sbss:0x800BADE8; // type:object size:0x4 data:4byte
__AXCompressor = .sbss:0x800BADEC; // type:object size:0x4 data:4byte
__AXClMode = .sbss:0x800BADF0; // type:object size:0x4 data:4byte
__AXOutFrame = .sbss:0x800BADF8; // type:object size:0x4 data:4byte
__AXOutDspReady = .sbss:0x800BADFC; // type:object size:0x4 data:4byte
__AXOsTime = .sbss:0x800BAE00; // type:object size:0x8 data:4byte
__AXUserFrameCallback = .sbss:0x800BAE08; // type:object size:0x4 data:4byte
__AXDSPInitFlag = .sbss:0x800BAE0C; // type:object size:0x4 data:4byte
__AXDSPDoneFlag = .sbss:0x800BAE10; // type:object size:0x4 data:4byte
__AXDebugSteppingMode = .sbss:0x800BAE14; // type:object size:0x4 data:4byte
__AXOutThreadQueue = .sbss:0x800BAE18; // type:object size:0x8
__AXSpbAL = .sbss:0x800BAE20; // type:object size:0x4 data:4byte
__AXSpbAR = .sbss:0x800BAE24; // type:object size:0x4 data:4byte
__AXSpbAS = .sbss:0x800BAE28; // type:object size:0x4 data:4byte
__AXSpbAAL = .sbss:0x800BAE2C; // type:object size:0x4 data:4byte
__AXSpbAAR = .sbss:0x800BAE30; // type:object size:0x4 data:4byte
__AXSpbAAS = .sbss:0x800BAE34; // type:object size:0x4 data:4byte
__AXSpbABL = .sbss:0x800BAE38; // type:object size:0x4 data:4byte
__AXSpbABR = .sbss:0x800BAE3C; // type:object size:0x4 data:4byte
__AXSpbABS = .sbss:0x800BAE40; // type:object size:0x4 data:4byte
__AXMaxDspCycles = .sbss:0x800BAE48; // type:object size:0x4 data:4byte
__AXRecDspCycles = .sbss:0x800BAE4C; // type:object size:0x4 data:4byte
__AXNumVoices = .sbss:0x800BAE50; // type:object size:0x4 data:4byte
__AXProfile = .sbss:0x800BAE58; // type:object size:0x4 data:4byte
__AXMaxProfiles = .sbss:0x800BAE5C; // type:object size:0x4 data:4byte
__AXCurrentProfile = .sbss:0x800BAE60; // type:object size:0x4 data:4byte
__AXProfileInitialized = .sbss:0x800BAE64; // type:object size:0x4 data:4byte
__CARDEncode = .sbss:0x800BAE68; // type:object size:0x2 data:2byte
__DBInterface = .sbss:0x800BAE70; // type:object size:0x4 scope:global data:4byte
DBVerbose = .sbss:0x800BAE74; // type:object size:0x4 scope:global data:4byte
__DSP_init_flag = .sbss:0x800BAE78; // type:object size:0x4 data:4byte
__DSP_rude_task_pending = .sbss:0x800BAE80; // type:object size:0x4 data:4byte
__DSP_rude_task = .sbss:0x800BAE84; // type:object size:0x4 data:4byte
__DSP_tmp_task = .sbss:0x800BAE88; // type:object size:0x4 data:4byte
__DSP_last_task = .sbss:0x800BAE8C; // type:object size:0x4 data:4byte
__DSP_first_task = .sbss:0x800BAE90; // type:object size:0x4 data:4byte
__DSP_curr_task = .sbss:0x800BAE94; // type:object size:0x4 data:4byte
StopAtNextInt = .sbss:0x800BAE98; // type:object size:0x4 scope:local data:4byte
LastLength = .sbss:0x800BAE9C; // type:object size:0x4 data:4byte
Callback = .sbss:0x800BAEA0; // type:object size:0x4 scope:local data:4byte
ResetCoverCallback = .sbss:0x800BAEA4; // type:object size:0x4 data:4byte
LastResetEnd = .sbss:0x800BAEA8; // type:object size:0x8 scope:local data:4byte
ResetOccurred = .sbss:0x800BAEB0; // type:object size:0x4 scope:local data:4byte
WaitingCoverClose = .sbss:0x800BAEB4; // type:object size:0x4 scope:local data:4byte
Breaking = .sbss:0x800BAEB8; // type:object size:0x4 data:4byte
WorkAroundType = .sbss:0x800BAEBC; // type:object size:0x4 scope:local data:4byte
WorkAroundSeekLocation = .sbss:0x800BAEC0; // type:object size:0x4 scope:local data:4byte
LastReadFinished = .sbss:0x800BAEC8; // type:object size:0x8 data:4byte
LastReadIssued = .sbss:0x800BAED0; // type:object size:0x8 data:4byte
LastCommandWasRead = .sbss:0x800BAED8; // type:object size:0x4 data:4byte
NextCommandNumber = .sbss:0x800BAEDC; // type:object size:0x4 scope:local data:4byte
BootInfo = .sbss:0x800BAEE0; // type:object size:0x4 scope:local data:4byte
FstStart = .sbss:0x800BAEE4; // type:object size:0x4 scope:local data:4byte
FstStringStart = .sbss:0x800BAEE8; // type:object size:0x4 scope:local data:4byte
MaxEntryNum = .sbss:0x800BAEEC; // type:object size:0x4 scope:local data:4byte
currentDirectory = .sbss:0x800BAEF0; // type:object size:0x4 data:4byte
__DVDLongFileNameFlag = .sbss:0x800BAEF4; // type:object size:0x4 scope:global data:4byte
__DVDThreadQueue = .sbss:0x800BAEF8; // type:object size:0x8 scope:global
executing = .sbss:0x800BAF00; // type:object size:0x4 scope:local data:4byte
IDShouldBe = .sbss:0x800BAF04; // type:object size:0x4 scope:local data:4byte
bootInfo = .sbss:0x800BAF08; // type:object size:0x4 scope:local data:4byte
PauseFlag = .sbss:0x800BAF0C; // type:object size:0x4 scope:local data:4byte
PausingFlag = .sbss:0x800BAF10; // type:object size:0x4 scope:local data:4byte
AutoFinishing = .sbss:0x800BAF14; // type:object size:0x4 data:4byte
FatalErrorFlag = .sbss:0x800BAF18; // type:object size:0x4 scope:local data:4byte
CurrCommand = .sbss:0x800BAF1C; // type:object size:0x4 scope:local data:4byte
Canceling = .sbss:0x800BAF20; // type:object size:0x4 data:4byte
CancelCallback = .sbss:0x800BAF24; // type:object size:0x4 data:4byte
ResumeFromHere = .sbss:0x800BAF28; // type:object size:0x4 scope:local data:4byte
CancelLastError = .sbss:0x800BAF2C; // type:object size:0x4 scope:local data:4byte
LastError = .sbss:0x800BAF30; // type:object size:0x4 data:4byte
NumInternalRetry = .sbss:0x800BAF34; // type:object size:0x4 data:4byte
ResetRequired = .sbss:0x800BAF38; // type:object size:0x4 scope:local data:4byte
FirstTimeInBootrom = .sbss:0x800BAF3C; // type:object size:0x4 scope:local data:4byte
DVDInitialized = .sbss:0x800BAF40; // type:object size:0x4 scope:local data:4byte
LastState = .sbss:0x800BAF44; // type:object size:0x4 data:4byte
FatalFunc = .sbss:0x800BAF48; // type:object size:0x4 data:4byte
status = .sbss:0x800BAF50; // type:object size:0x4 data:4byte
bb2 = .sbss:0x800BAF54; // type:object size:0x4 scope:local data:4byte
idTmp = .sbss:0x800BAF58; // type:object size:0x4 scope:local data:4byte
IDSerialPort1 = .sbss:0x800BAF60; // type:object size:0x4 scope:local data:4byte
lbl_800BAF68 = .sbss:0x800BAF68; // type:object size:0x4 data:4byte
lbl_800BAF6C = .sbss:0x800BAF6C; // type:object size:0x4 data:4byte
lbl_800BAF70 = .sbss:0x800BAF70; // type:object size:0x4 data:4byte
lbl_800BAF74 = .sbss:0x800BAF74; // type:object size:0x4 data:4byte
__piReg = .sbss:0x800BAF78; // type:object size:0x4 scope:global data:4byte
__cpReg = .sbss:0x800BAF7C; // type:object size:0x4 scope:global data:4byte
__peReg = .sbss:0x800BAF80; // type:object size:0x4 scope:global data:4byte
__memReg = .sbss:0x800BAF84; // type:object size:0x4 scope:global data:4byte
lbl_800BAF88 = .sbss:0x800BAF88; // type:object size:0x8 data:4byte
lbl_800BAF90 = .sbss:0x800BAF90; // type:object size:0x4 data:4byte
lbl_800BAF94 = .sbss:0x800BAF94; // type:object size:0x4 data:4byte
lbl_800BAF98 = .sbss:0x800BAF98; // type:object size:0x4 data:4byte
resetFuncRegistered$63 = .sbss:0x800BAF9C; // type:object size:0x4 scope:local data:4byte
lbl_800BAFA0 = .sbss:0x800BAFA0; // type:object size:0x4 data:4byte
lbl_800BAFA4 = .sbss:0x800BAFA4; // type:object size:0x4 data:4byte
lbl_800BAFA8 = .sbss:0x800BAFA8; // type:object size:0x4 data:4byte
lbl_800BAFAC = .sbss:0x800BAFAC; // type:object size:0x1 data:byte
lbl_800BAFB0 = .sbss:0x800BAFB0; // type:object size:0x4 data:4byte
lbl_800BAFB4 = .sbss:0x800BAFB4; // type:object size:0x4 data:4byte
lbl_800BAFB8 = .sbss:0x800BAFB8; // type:object size:0x8 data:4byte
lbl_800BAFC0 = .sbss:0x800BAFC0; // type:object size:0x4 data:4byte
lbl_800BAFC4 = .sbss:0x800BAFC4; // type:object size:0x4 data:4byte
lbl_800BAFC8 = .sbss:0x800BAFC8; // type:object size:0x1 data:byte
lbl_800BAFCC = .sbss:0x800BAFCC; // type:object size:0xC
lbl_800BAFD8 = .sbss:0x800BAFD8; // type:object size:0x4 data:4byte
lbl_800BAFDC = .sbss:0x800BAFDC; // type:object size:0x4 data:4byte
lbl_800BAFE0 = .sbss:0x800BAFE0; // type:object size:0x8 data:4byte
BootInfo = .sbss:0x800BAFE8; // type:object size:0x4 scope:local data:4byte
BI2DebugFlag = .sbss:0x800BAFEC; // type:object size:0x4 scope:local data:4byte
BI2DebugFlagHolder = .sbss:0x800BAFF0; // type:object size:0x4 scope:local data:4byte
__OSIsGcam = .sbss:0x800BAFF4; // type:object size:0x4 scope:weak data:4byte
AreWeInitialized = .sbss:0x800BAFF8; // type:object size:0x4 scope:local data:4byte
OSExceptionTable = .sbss:0x800BAFFC; // type:object size:0x4 scope:local data:4byte
__OSSavedRegionEnd = .sbss:0x800BB000; // type:object size:0x4 scope:global data:4byte
__OSSavedRegionStart = .sbss:0x800BB004; // type:object size:0x4 scope:global data:4byte
__OSInIPL = .sbss:0x800BB008; // type:object size:0x4 scope:global data:4byte
__OSStartTime = .sbss:0x800BB010; // type:object size:0x8 scope:global data:4byte
AlarmQueue = .sbss:0x800BB018; // type:object size:0x8 scope:local data:4byte
lbl_800BB020 = .sbss:0x800BB020; // type:object size:0x4 data:4byte
lbl_800BB024 = .sbss:0x800BB024; // type:object size:0x4 data:4byte
lbl_800BB028 = .sbss:0x800BB028; // type:object size:0x4 data:4byte
lbl_800BB02C = .sbss:0x800BB02C; // type:object size:0x4 data:4byte
__OSArenaHi = .sbss:0x800BB030; // type:object size:0x4 scope:local data:4byte
lbl_800BB038 = .sbss:0x800BB038; // type:object size:0x4 data:4byte
lbl_800BB03C = .sbss:0x800BB03C; // type:object size:0x4 data:4byte
lbl_800BB040 = .sbss:0x800BB040; // type:object size:0x4 data:4byte
lbl_800BB044 = .sbss:0x800BB044; // type:object size:0x4 data:4byte
InterruptHandlerTable = .sbss:0x800BB048; // type:object size:0x4 scope:local data:4byte
__OSLastInterruptSrr0 = .sbss:0x800BB04C; // type:object size:0x4 scope:global data:4byte
__OSLastInterrupt = .sbss:0x800BB050; // type:object size:0x2 scope:global data:2byte
__OSLastInterruptTime = .sbss:0x800BB058; // type:object size:0x8 scope:global data:4byte
lbl_800BB060 = .sbss:0x800BB060; // type:object size:0x4 data:4byte
lbl_800BB064 = .sbss:0x800BB064; // type:object size:0x4 data:4byte
lbl_800BB068 = .sbss:0x800BB068; // type:object size:0x8 data:4byte
ResetFunctionQueue = .sbss:0x800BB070; // type:object size:0x8 scope:local data:4byte
lbl_800BB078 = .sbss:0x800BB078; // type:object size:0x4 data:4byte
lbl_800BB07C = .sbss:0x800BB07C; // type:object size:0x4 data:4byte
lbl_800BB080 = .sbss:0x800BB080; // type:object size:0x8 data:4byte
lbl_800BB088 = .sbss:0x800BB088; // type:object size:0x4 data:4byte
lbl_800BB08C = .sbss:0x800BB08C; // type:object size:0x4 data:4byte
lbl_800BB090 = .sbss:0x800BB090; // type:object size:0x4 data:4byte
lbl_800BB094 = .sbss:0x800BB094; // type:object size:0x4 data:4byte
RunQueueBits = .sbss:0x800BB098; // type:object size:0x4 scope:local data:4byte
RunQueueHint = .sbss:0x800BB09C; // type:object size:0x4 scope:local data:4byte
Reschedule = .sbss:0x800BB0A0; // type:object size:0x4 scope:local data:4byte
lbl_800BB0A8 = .sbss:0x800BB0A8; // type:object size:0x4 data:4byte
lbl_800BB0AC = .sbss:0x800BB0AC; // type:object size:0x4 data:4byte
lbl_800BB0B0 = .sbss:0x800BB0B0; // type:object size:0x4 data:4byte
lbl_800BB0B4 = .sbss:0x800BB0B4; // type:object size:0x4 data:4byte
lbl_800BB0B8 = .sbss:0x800BB0B8; // type:object size:0x4 data:4byte
lbl_800BB0BC = .sbss:0x800BB0BC; // type:object size:0x4 data:4byte
lbl_800BB0C0 = .sbss:0x800BB0C0; // type:object size:0x4 data:4byte
lbl_800BB0C4 = .sbss:0x800BB0C4; // type:object size:0x4 data:4byte
lbl_800BB0C8 = .sbss:0x800BB0C8; // type:object size:0x4 data:4byte
__PADSpec = .sbss:0x800BB0CC; // type:object size:0x4 scope:global data:4byte
lbl_800BB0D0 = .sbss:0x800BB0D0; // type:object size:0x4
cmdTypeAndStatus$371 = .sbss:0x800BB0D4; // type:object size:0x4 scope:local
lbl_800BB0D8 = .sbss:0x800BB0D8; // type:object size:0x8 data:4byte
SamplingRate = .sbss:0x800BB0E0; // type:object size:0x4 scope:local data:4byte
lbl_800BB0E8 = .sbss:0x800BB0E8; // type:object size:0x4 data:4byte
lbl_800BB0EC = .sbss:0x800BB0EC; // type:object size:0x4 data:4byte
lbl_800BB0F0 = .sbss:0x800BB0F0; // type:object size:0x4 data:4byte
lbl_800BB0F4 = .sbss:0x800BB0F4; // type:object size:0x8
lbl_800BB0FC = .sbss:0x800BB0FC; // type:object size:0x4 data:4byte
lbl_800BB100 = .sbss:0x800BB100; // type:object size:0x4 data:4byte
lbl_800BB104 = .sbss:0x800BB104; // type:object size:0x4 data:4byte
lbl_800BB108 = .sbss:0x800BB108; // type:object size:0x2 data:2byte
lbl_800BB10A = .sbss:0x800BB10A; // type:object size:0x2 data:2byte
lbl_800BB10C = .sbss:0x800BB10C; // type:object size:0x4 data:4byte
lbl_800BB110 = .sbss:0x800BB110; // type:object size:0x4 data:4byte
lbl_800BB114 = .sbss:0x800BB114; // type:object size:0x4 data:4byte
lbl_800BB118 = .sbss:0x800BB118; // type:object size:0x8 data:4byte
lbl_800BB120 = .sbss:0x800BB120; // type:object size:0x4 data:4byte
lbl_800BB124 = .sbss:0x800BB124; // type:object size:0x4 data:4byte
lbl_800BB128 = .sbss:0x800BB128; // type:object size:0x4 data:4byte
CurrTvMode = .sbss:0x800BB12C; // type:object size:0x4 scope:local data:4byte
lbl_800BB130 = .sbss:0x800BB130; // type:object size:0x4 data:4byte
lbl_800BB134 = .sbss:0x800BB134; // type:object size:0x4 data:4byte
lbl_800BB138 = .sbss:0x800BB138; // type:object size:0x4 data:4byte
lbl_800BB13C = .sbss:0x800BB13C; // type:object size:0x4 data:4byte
lbl_800BB140 = .sbss:0x800BB140; // type:object size:0x8
lbl_800BB148 = .sbss:0x800BB148; // type:object size:0x4 data:4byte
lbl_800BB14C = .sbss:0x800BB14C; // type:object size:0x4 data:4byte
lbl_800BB150 = .sbss:0x800BB150; // type:object size:0x4 data:4byte
lbl_800BB154 = .sbss:0x800BB154; // type:object size:0x4 data:4byte
lbl_800BB158 = .sbss:0x800BB158; // type:object size:0x4 data:4byte
lbl_800BB15C = .sbss:0x800BB15C; // type:object size:0x4 data:4byte
lbl_800BB160 = .sbss:0x800BB160; // type:object size:0x4 data:4byte
lbl_800BB164 = .sbss:0x800BB164; // type:object size:0x4 data:4byte
lbl_800BB168 = .sbss:0x800BB168; // type:object size:0x4 data:float
lbl_800BB16C = .sbss:0x800BB16C; // type:object size:0x4 data:4byte
lbl_800BB170 = .sbss:0x800BB170; // type:object size:0x8 data:4byte
lbl_800BB178 = .sbss:0x800BB178; // type:object size:0x4 data:4byte
lbl_800BB17C = .sbss:0x800BB17C; // type:object size:0x4 data:4byte
lbl_800BB180 = .sbss:0x800BB180; // type:object size:0x4 data:4byte
lbl_800BB184 = .sbss:0x800BB184; // type:object size:0x4 data:4byte
lbl_800BB188 = .sbss:0x800BB188; // type:object size:0x4 data:4byte
lbl_800BB18C = .sbss:0x800BB18C; // type:object size:0x4 data:4byte
lbl_800BB190 = .sbss:0x800BB190; // type:object size:0x4 data:4byte
lbl_800BB194 = .sbss:0x800BB194; // type:object size:0x4 data:4byte
lbl_800BB198 = .sbss:0x800BB198; // type:object size:0x4 data:4byte
lbl_800BB19C = .sbss:0x800BB19C; // type:object size:0x4 data:4byte
lbl_800BB1A0 = .sbss:0x800BB1A0; // type:object size:0x4 data:4byte
lbl_800BB1A4 = .sbss:0x800BB1A4; // type:object size:0x4 data:4byte
lbl_800BB1A8 = .sbss:0x800BB1A8; // type:object size:0x4 data:4byte
lbl_800BB1AC = .sbss:0x800BB1AC; // type:object size:0x4 data:4byte
lbl_800BB1B0 = .sbss:0x800BB1B0; // type:object size:0x4 data:4byte
lbl_800BB1B4 = .sbss:0x800BB1B4; // type:object size:0x4 data:4byte
lbl_800BB1B8 = .sbss:0x800BB1B8; // type:object size:0x4 data:4byte
lbl_800BB1BC = .sbss:0x800BB1BC; // type:object size:0x4 data:4byte
lbl_800BB1C0 = .sbss:0x800BB1C0; // type:object size:0x8 data:4byte
lbl_800BB1C8 = .sbss:0x800BB1C8; // type:object size:0x4 data:4byte
lbl_800BB1CC = .sbss:0x800BB1CC; // type:object size:0x4 data:4byte
lbl_800BB1D0 = .sbss:0x800BB1D0; // type:object size:0x4 data:4byte
lbl_800BB1D4 = .sbss:0x800BB1D4; // type:object size:0x4 data:4byte
lbl_800BB1D8 = .sbss:0x800BB1D8; // type:object size:0x8 data:4byte
lbl_800BB1E0 = .sbss:0x800BB1E0; // type:object size:0x4 data:4byte
lbl_800BB1E4 = .sbss:0x800BB1E4; // type:object size:0x4 data:4byte
lbl_800BB1E8 = .sbss:0x800BB1E8; // type:object size:0x4 data:4byte
lbl_800BB1EC = .sbss:0x800BB1EC; // type:object size:0x4 data:4byte
lbl_800BB1F0 = .sbss:0x800BB1F0; // type:object size:0x4 data:4byte
lbl_800BB1F4 = .sbss:0x800BB1F4; // type:object size:0x2 data:2byte
lbl_800BB1F8 = .sbss:0x800BB1F8; // type:object size:0x4 data:4byte
lbl_800BB1FC = .sbss:0x800BB1FC; // type:object size:0x4 data:4byte
lbl_800BB200 = .sbss:0x800BB200; // type:object size:0x4 data:4byte
lbl_800BB204 = .sbss:0x800BB204; // type:object size:0x4 data:4byte
lbl_800BB208 = .sbss:0x800BB208; // type:object size:0x4 data:4byte
lbl_800BB20C = .sbss:0x800BB20C; // type:object size:0x4 data:4byte
lbl_800BB210 = .sbss:0x800BB210; // type:object size:0x4 data:4byte
lbl_800BB214 = .sbss:0x800BB214; // type:object size:0x1 data:byte
lbl_800BB218 = .sbss:0x800BB218; // type:object size:0x4 data:4byte
lbl_800BB21C = .sbss:0x800BB21C; // type:object size:0x4 data:4byte
lbl_800BB220 = .sdata2:0x800BB220; // type:object size:0x4 data:4byte
lbl_800BB224 = .sdata2:0x800BB224; // type:object size:0x4 data:4byte
lbl_800BB228 = .sdata2:0x800BB228; // type:object size:0x4 data:4byte
lbl_800BB22C = .sdata2:0x800BB22C; // type:object size:0x4 data:float
lbl_800BB230 = .sdata2:0x800BB230; // type:object size:0x4 data:float
lbl_800BB238 = .sdata2:0x800BB238; // type:object size:0x8 data:double
lbl_800BB240 = .sdata2:0x800BB240; // type:object size:0x4 data:float
lbl_800BB248 = .sdata2:0x800BB248; // type:object size:0x8 data:double
lbl_800BB250 = .sdata2:0x800BB250; // type:object size:0x8 data:double
lbl_800BB258 = .sdata2:0x800BB258; // type:object size:0x8 data:double
lbl_800BB260 = .sdata2:0x800BB260; // type:object size:0x8 data:double
lbl_800BB268 = .sdata2:0x800BB268; // type:object size:0x8 data:double
lbl_800BB270 = .sdata2:0x800BB270; // type:object size:0x8 data:double
lbl_800BB278 = .sdata2:0x800BB278; // type:object size:0x4 data:4byte
lbl_800BB280 = .sdata2:0x800BB280; // type:object size:0x8 data:double
lbl_800BB288 = .sdata2:0x800BB288; // type:object size:0x4 data:string
lbl_800BB28C = .sdata2:0x800BB28C; // type:object size:0x1 data:string
lbl_800BB290 = .sdata2:0x800BB290; // type:object size:0x8 data:double
lbl_800BB298 = .sdata2:0x800BB298; // type:object size:0x8 data:double
lbl_800BB2A0 = .sdata2:0x800BB2A0; // type:object size:0x8 data:double
lbl_800BB2A8 = .sdata2:0x800BB2A8; // type:object size:0x8 data:double
lbl_800BB2B0 = .sdata2:0x800BB2B0; // type:object size:0x8 data:double
lbl_800BB2B8 = .sdata2:0x800BB2B8; // type:object size:0x8 data:double
lbl_800BB2C0 = .sdata2:0x800BB2C0; // type:object size:0x8 data:double
lbl_800BB2C8 = .sdata2:0x800BB2C8; // type:object size:0x8 data:double
lbl_800BB2D0 = .sdata2:0x800BB2D0; // type:object size:0x8 data:double
lbl_800BB2D8 = .sdata2:0x800BB2D8; // type:object size:0x8 data:double
lbl_800BB2E0 = .sdata2:0x800BB2E0; // type:object size:0x8 data:double
lbl_800BB2E8 = .sdata2:0x800BB2E8; // type:object size:0x8 data:double
lbl_800BB2F0 = .sdata2:0x800BB2F0; // type:object size:0x8 data:double
lbl_800BB2F8 = .sdata2:0x800BB2F8; // type:object size:0x8 data:double
lbl_800BB300 = .sdata2:0x800BB300; // type:object size:0x8 data:double
lbl_800BB308 = .sdata2:0x800BB308; // type:object size:0x8 data:double
lbl_800BB310 = .sdata2:0x800BB310; // type:object size:0x8 data:double
lbl_800BB318 = .sdata2:0x800BB318; // type:object size:0x8 data:double
lbl_800BB320 = .sdata2:0x800BB320; // type:object size:0x8 data:double
lbl_800BB328 = .sdata2:0x800BB328; // type:object size:0x8 data:double
lbl_800BB330 = .sdata2:0x800BB330; // type:object size:0x8 data:double
lbl_800BB338 = .sdata2:0x800BB338; // type:object size:0x8 data:double
lbl_800BB340 = .sdata2:0x800BB340; // type:object size:0x8 data:double
lbl_800BB348 = .sdata2:0x800BB348; // type:object size:0x8 data:double
lbl_800BB350 = .sdata2:0x800BB350; // type:object size:0x8 data:double
lbl_800BB358 = .sdata2:0x800BB358; // type:object size:0x8 data:double
lbl_800BB360 = .sdata2:0x800BB360; // type:object size:0x8 data:double
lbl_800BB368 = .sdata2:0x800BB368; // type:object size:0x8 data:double
lbl_800BB370 = .sdata2:0x800BB370; // type:object size:0x8 data:double
lbl_800BB378 = .sdata2:0x800BB378; // type:object size:0x8 data:double
lbl_800BB380 = .sdata2:0x800BB380; // type:object size:0x8 data:double
lbl_800BB388 = .sdata2:0x800BB388; // type:object size:0x8 data:double
lbl_800BB390 = .sdata2:0x800BB390; // type:object size:0x8 data:double
lbl_800BB398 = .sdata2:0x800BB398; // type:object size:0x8 data:double
lbl_800BB3A0 = .sdata2:0x800BB3A0; // type:object size:0x8 data:double
lbl_800BB3A8 = .sdata2:0x800BB3A8; // type:object size:0x8 data:double
lbl_800BB3B0 = .sdata2:0x800BB3B0; // type:object size:0x8 data:double
lbl_800BB3B8 = .sdata2:0x800BB3B8; // type:object size:0x8 data:double
lbl_800BB3C0 = .sdata2:0x800BB3C0; // type:object size:0x8 data:double
lbl_800BB3C8 = .sdata2:0x800BB3C8; // type:object size:0x8 data:double
lbl_800BB3D0 = .sdata2:0x800BB3D0; // type:object size:0x8 data:double
lbl_800BB3D8 = .sdata2:0x800BB3D8; // type:object size:0x8 data:double
lbl_800BB3E0 = .sdata2:0x800BB3E0; // type:object size:0x8 data:double
lbl_800BB3E8 = .sdata2:0x800BB3E8; // type:object size:0x8 data:double
lbl_800BB3F0 = .sdata2:0x800BB3F0; // type:object size:0x8 data:double
lbl_800BB3F8 = .sdata2:0x800BB3F8; // type:object size:0x8 data:double
lbl_800BB400 = .sdata2:0x800BB400; // type:object size:0x8 data:double
lbl_800BB408 = .sdata2:0x800BB408; // type:object size:0x8 data:double
lbl_800BB410 = .sdata2:0x800BB410; // type:object size:0x8 data:double
lbl_800BB418 = .sdata2:0x800BB418; // type:object size:0x8 data:double
lbl_800BB420 = .sdata2:0x800BB420; // type:object size:0x8 data:double
lbl_800BB428 = .sdata2:0x800BB428; // type:object size:0x8 data:double
lbl_800BB430 = .sdata2:0x800BB430; // type:object size:0x8 data:double
lbl_800BB438 = .sdata2:0x800BB438; // type:object size:0x8 data:double
lbl_800BB440 = .sdata2:0x800BB440; // type:object size:0x8 data:double
lbl_800BB448 = .sdata2:0x800BB448; // type:object size:0x8 data:double
lbl_800BB450 = .sdata2:0x800BB450; // type:object size:0x8 data:double
lbl_800BB458 = .sdata2:0x800BB458; // type:object size:0x8 data:double
lbl_800BB460 = .sdata2:0x800BB460; // type:object size:0x8 data:double
lbl_800BB468 = .sdata2:0x800BB468; // type:object size:0x8 data:double
lbl_800BB470 = .sdata2:0x800BB470; // type:object size:0x8 data:double
lbl_800BB478 = .sdata2:0x800BB478; // type:object size:0x8 data:double
lbl_800BB480 = .sdata2:0x800BB480; // type:object size:0x8 data:double
lbl_800BB488 = .sdata2:0x800BB488; // type:object size:0x8 data:double
lbl_800BB490 = .sdata2:0x800BB490; // type:object size:0x8 data:double
lbl_800BB498 = .sdata2:0x800BB498; // type:object size:0x8 data:double
lbl_800BB4A0 = .sdata2:0x800BB4A0; // type:object size:0x8 data:double
lbl_800BB4A8 = .sdata2:0x800BB4A8; // type:object size:0x8 data:double
lbl_800BB4B0 = .sdata2:0x800BB4B0; // type:object size:0x8 data:double
lbl_800BB4B8 = .sdata2:0x800BB4B8; // type:object size:0x8 data:double
lbl_800BB4C0 = .sdata2:0x800BB4C0; // type:object size:0x8 data:double
lbl_800BB4C8 = .sdata2:0x800BB4C8; // type:object size:0x8 data:double
lbl_800BB4D0 = .sdata2:0x800BB4D0; // type:object size:0x8 data:double
lbl_800BB4D8 = .sdata2:0x800BB4D8; // type:object size:0x8 data:double
lbl_800BB4E0 = .sdata2:0x800BB4E0; // type:object size:0x8 data:double
lbl_800BB4E8 = .sdata2:0x800BB4E8; // type:object size:0x8 data:double
lbl_800BB4F0 = .sdata2:0x800BB4F0; // type:object size:0x8 data:double
lbl_800BB4F8 = .sdata2:0x800BB4F8; // type:object size:0x8 data:double
lbl_800BB500 = .sdata2:0x800BB500; // type:object size:0x8 data:double
lbl_800BB508 = .sdata2:0x800BB508; // type:object size:0x8 data:double
lbl_800BB510 = .sdata2:0x800BB510; // type:object size:0x8 data:double
lbl_800BB518 = .sdata2:0x800BB518; // type:object size:0x8 data:double
lbl_800BB520 = .sdata2:0x800BB520; // type:object size:0x8 data:double
lbl_800BB528 = .sdata2:0x800BB528; // type:object size:0x8 data:double
lbl_800BB530 = .sdata2:0x800BB530; // type:object size:0x8 data:double
lbl_800BB538 = .sdata2:0x800BB538; // type:object size:0x8 data:double
lbl_800BB540 = .sdata2:0x800BB540; // type:object size:0x8 data:double
lbl_800BB548 = .sdata2:0x800BB548; // type:object size:0x8 data:double
lbl_800BB550 = .sdata2:0x800BB550; // type:object size:0x8 data:double
lbl_800BB558 = .sdata2:0x800BB558; // type:object size:0x8 data:double
lbl_800BB560 = .sdata2:0x800BB560; // type:object size:0x8 data:double
lbl_800BB568 = .sdata2:0x800BB568; // type:object size:0x8 data:double
lbl_800BB570 = .sdata2:0x800BB570; // type:object size:0x8 data:double
lbl_800BB578 = .sdata2:0x800BB578; // type:object size:0x8 data:double
lbl_800BB580 = .sdata2:0x800BB580; // type:object size:0x8 data:double
lbl_800BB588 = .sdata2:0x800BB588; // type:object size:0x8 data:double
lbl_800BB590 = .sdata2:0x800BB590; // type:object size:0x8 data:double
lbl_800BB598 = .sdata2:0x800BB598; // type:object size:0x8 data:double
lbl_800BB5A0 = .sdata2:0x800BB5A0; // type:object size:0x8 data:double
lbl_800BB5A8 = .sdata2:0x800BB5A8; // type:object size:0x8 data:double
lbl_800BB5B0 = .sdata2:0x800BB5B0; // type:object size:0x8 data:double
lbl_800BB5B8 = .sdata2:0x800BB5B8; // type:object size:0x8 data:double
lbl_800BB5C0 = .sdata2:0x800BB5C0; // type:object size:0x8 data:double
lbl_800BB5C8 = .sdata2:0x800BB5C8; // type:object size:0x8 data:double
lbl_800BB5D0 = .sdata2:0x800BB5D0; // type:object size:0x8 data:double
lbl_800BB5D8 = .sdata2:0x800BB5D8; // type:object size:0x8 data:double
lbl_800BB5E0 = .sdata2:0x800BB5E0; // type:object size:0x8 data:double
lbl_800BB5E8 = .sdata2:0x800BB5E8; // type:object size:0x8 data:double
lbl_800BB5F0 = .sdata2:0x800BB5F0; // type:object size:0x8 data:double
lbl_800BB5F8 = .sdata2:0x800BB5F8; // type:object size:0x8 data:double
lbl_800BB600 = .sdata2:0x800BB600; // type:object size:0x8 data:double
lbl_800BB608 = .sdata2:0x800BB608; // type:object size:0x8 data:double
lbl_800BB610 = .sdata2:0x800BB610; // type:object size:0x8 data:double
lbl_800BB618 = .sdata2:0x800BB618; // type:object size:0x8 data:double
lbl_800BB620 = .sdata2:0x800BB620; // type:object size:0x8 data:double
lbl_800BB628 = .sdata2:0x800BB628; // type:object size:0x8 data:double
lbl_800BB630 = .sdata2:0x800BB630; // type:object size:0x8 data:double
lbl_800BB638 = .sdata2:0x800BB638; // type:object size:0x8 data:double
lbl_800BB640 = .sdata2:0x800BB640; // type:object size:0x8 data:double
lbl_800BB648 = .sdata2:0x800BB648; // type:object size:0x8 data:double
lbl_800BB650 = .sdata2:0x800BB650; // type:object size:0x8 data:double
lbl_800BB658 = .sdata2:0x800BB658; // type:object size:0x8 data:double
lbl_800BB660 = .sdata2:0x800BB660; // type:object size:0x8 data:double
lbl_800BB668 = .sdata2:0x800BB668; // type:object size:0x8 data:double
lbl_800BB670 = .sdata2:0x800BB670; // type:object size:0x8 data:double
lbl_800BB678 = .sdata2:0x800BB678; // type:object size:0x8 data:double
lbl_800BB680 = .sdata2:0x800BB680; // type:object size:0x8 data:double
lbl_800BB688 = .sdata2:0x800BB688; // type:object size:0x8 data:double
lbl_800BB690 = .sdata2:0x800BB690; // type:object size:0x8 data:double
lbl_800BB698 = .sdata2:0x800BB698; // type:object size:0x8 data:double
lbl_800BB6A0 = .sdata2:0x800BB6A0; // type:object size:0x8 data:double
lbl_800BB6A8 = .sdata2:0x800BB6A8; // type:object size:0x8 data:double
lbl_800BB6B0 = .sdata2:0x800BB6B0; // type:object size:0x8 data:double
lbl_800BB6B8 = .sdata2:0x800BB6B8; // type:object size:0x8 data:double
lbl_800BB6C0 = .sdata2:0x800BB6C0; // type:object size:0x8 data:double
lbl_800BB6C8 = .sdata2:0x800BB6C8; // type:object size:0x8 data:double
lbl_800BB6D0 = .sdata2:0x800BB6D0; // type:object size:0x8 data:double
lbl_800BB6D8 = .sdata2:0x800BB6D8; // type:object size:0x8 data:double
lbl_800BB6E0 = .sdata2:0x800BB6E0; // type:object size:0x8 data:double
lbl_800BB6E8 = .sdata2:0x800BB6E8; // type:object size:0x8 data:double
lbl_800BB6F0 = .sdata2:0x800BB6F0; // type:object size:0x8 data:double
lbl_800BB6F8 = .sdata2:0x800BB6F8; // type:object size:0x8 data:double
lbl_800BB700 = .sdata2:0x800BB700; // type:object size:0x8 data:double
lbl_800BB708 = .sdata2:0x800BB708; // type:object size:0x8 data:double
lbl_800BB710 = .sdata2:0x800BB710; // type:object size:0x8 data:double
lbl_800BB718 = .sdata2:0x800BB718; // type:object size:0x8 data:double
lbl_800BB720 = .sdata2:0x800BB720; // type:object size:0x8 data:double
lbl_800BB728 = .sdata2:0x800BB728; // type:object size:0x8 data:double
lbl_800BB730 = .sdata2:0x800BB730; // type:object size:0x8 data:double
lbl_800BB738 = .sdata2:0x800BB738; // type:object size:0x8 data:double
lbl_800BB740 = .sdata2:0x800BB740; // type:object size:0x8 data:double
lbl_800BB748 = .sdata2:0x800BB748; // type:object size:0x8 data:double
lbl_800BB750 = .sdata2:0x800BB750; // type:object size:0x8 data:double
lbl_800BB758 = .sdata2:0x800BB758; // type:object size:0x8 data:double
lbl_800BB760 = .sdata2:0x800BB760; // type:object size:0x8 data:double
lbl_800BB768 = .sdata2:0x800BB768; // type:object size:0x8 data:double
lbl_800BB770 = .sdata2:0x800BB770; // type:object size:0x8 data:double
lbl_800BB778 = .sdata2:0x800BB778; // type:object size:0x8 data:double
lbl_800BB780 = .sdata2:0x800BB780; // type:object size:0x8 data:double
lbl_800BB788 = .sdata2:0x800BB788; // type:object size:0x8 data:double
lbl_800BB790 = .sdata2:0x800BB790; // type:object size:0x8 data:double
lbl_800BB798 = .sdata2:0x800BB798; // type:object size:0x8 data:double
lbl_800BB7A0 = .sdata2:0x800BB7A0; // type:object size:0x8 data:double
lbl_800BB7A8 = .sdata2:0x800BB7A8; // type:object size:0x8 data:double
lbl_800BB7B0 = .sdata2:0x800BB7B0; // type:object size:0x8 data:double
lbl_800BB7B8 = .sdata2:0x800BB7B8; // type:object size:0x8 data:double
lbl_800BB7C0 = .sdata2:0x800BB7C0; // type:object size:0x4 data:float
lbl_800BB7C8 = .sdata2:0x800BB7C8; // type:object size:0x8 data:double
lbl_800BB7D0 = .sdata2:0x800BB7D0; // type:object size:0x8 data:double
lbl_800BB7D8 = .sdata2:0x800BB7D8; // type:object size:0x8 data:double
lbl_800BB7E0 = .sdata2:0x800BB7E0; // type:object size:0x4 data:float
lbl_800BB7E8 = .sdata2:0x800BB7E8; // type:object size:0x4 data:float
lbl_800BB7EC = .sdata2:0x800BB7EC; // type:object size:0x4 data:float
lbl_800BB7F0 = .sdata2:0x800BB7F0; // type:object size:0x4 data:float
lbl_800BB7F4 = .sdata2:0x800BB7F4; // type:object size:0x4 data:float
lbl_800BB7F8 = .sdata2:0x800BB7F8; // type:object size:0x4 data:float
lbl_800BB7FC = .sdata2:0x800BB7FC; // type:object size:0x4 data:float
lbl_800BB800 = .sdata2:0x800BB800; // type:object size:0x4 data:float
lbl_800BB804 = .sdata2:0x800BB804; // type:object size:0x4 data:float
lbl_800BB808 = .sdata2:0x800BB808; // type:object size:0x8 data:double
i2fMagic = .sdata2:0x800BB810; // type:object size:0x8 scope:local data:double
value0_6 = .sdata2:0x800BB818; // type:object size:0x4 scope:local data:float
value0_3 = .sdata2:0x800BB81C; // type:object size:0x4 scope:local data:float
lbl_800BB820 = .sdata2:0x800BB820; // type:object size:0x4 data:float
lbl_800BB828 = .sdata2:0x800BB828; // type:object size:0x4 data:float
lbl_800BB82C = .sdata2:0x800BB82C; // type:object size:0x4 data:float
lbl_800BB830 = .sdata2:0x800BB830; // type:object size:0x4 data:float
lbl_800BB834 = .sdata2:0x800BB834; // type:object size:0x4 data:float
lbl_800BB838 = .sdata2:0x800BB838; // type:object size:0x4 data:float
lbl_800BB83C = .sdata2:0x800BB83C; // type:object size:0x4 data:float
lbl_800BB840 = .sdata2:0x800BB840; // type:object size:0x4 data:float
lbl_800BB844 = .sdata2:0x800BB844; // type:object size:0x4 data:float
lbl_800BB848 = .sdata2:0x800BB848; // type:object size:0x8 data:double
value0_3 = .sdata2:0x800BB850; // type:object size:0x4 scope:local data:float
value0_6 = .sdata2:0x800BB854; // type:object size:0x4 scope:local data:float
i2fMagic = .sdata2:0x800BB858; // type:object size:0x8 scope:local data:double
i2fMagic = .sdata2:0x800BB860; // type:object size:0x8 scope:local data:double
gx = .sdata2:0x800BB868; // type:object size:0x4 scope:global data:4byte
lbl_800BB86C = .sdata2:0x800BB86C; // type:object size:0x4 data:4byte
lbl_800BB870 = .sdata2:0x800BB870; // type:object size:0x4 data:4byte
lbl_800BB874 = .sdata2:0x800BB874; // type:object size:0x4 data:4byte
lbl_800BB878 = .sdata2:0x800BB878; // type:object size:0x4 data:float
lbl_800BB87C = .sdata2:0x800BB87C; // type:object size:0x4 data:float
lbl_800BB880 = .sdata2:0x800BB880; // type:object size:0x4 data:float
lbl_800BB888 = .sdata2:0x800BB888; // type:object size:0x8 data:double
lbl_800BB890 = .sdata2:0x800BB890; // type:object size:0x8 data:float
lbl_800BB898 = .sdata2:0x800BB898; // type:object size:0x4 data:float
lbl_800BB8A0 = .sdata2:0x800BB8A0; // type:object size:0x8 data:double
lbl_800BB8A8 = .sdata2:0x800BB8A8; // type:object size:0x4 data:float
lbl_800BB8AC = .sdata2:0x800BB8AC; // type:object size:0x4 data:float
lbl_800BB8B0 = .sdata2:0x800BB8B0; // type:object size:0x4 data:float
lbl_800BB8B4 = .sdata2:0x800BB8B4; // type:object size:0x4 data:float
lbl_800BB8B8 = .sdata2:0x800BB8B8; // type:object size:0x4 data:float
lbl_800BB8BC = .sdata2:0x800BB8BC; // type:object size:0x4 data:float
lbl_800BB8C0 = .sdata2:0x800BB8C0; // type:object size:0x8 data:float
lbl_800BB8C8 = .sdata2:0x800BB8C8; // type:object size:0x4 data:float
lbl_800BB8CC = .sdata2:0x800BB8CC; // type:object size:0x4 data:float
lbl_800BB8D0 = .sdata2:0x800BB8D0; // type:object size:0x4 data:float
lbl_800BB8D8 = .sdata2:0x800BB8D8; // type:object size:0x8 data:double
lbl_800BB8E0 = .sdata2:0x800BB8E0; // type:object size:0x4 data:float
lbl_800BB8E8 = .sdata2:0x800BB8E8; // type:object size:0x8 data:double
lbl_800BB8F0 = .sdata2:0x800BB8F0; // type:object size:0x4 data:float
lbl_800BB8F8 = .sdata2:0x800BB8F8; // type:object size:0x8 data:double
lbl_800BB900 = .sdata2:0x800BB900; // type:object size:0x4 data:float
lbl_800BB904 = .sdata2:0x800BB904; // type:object size:0x4 data:float
lbl_800BB908 = .sdata2:0x800BB908; // type:object size:0x4 data:float
lbl_800BB910 = .sdata2:0x800BB910; // type:object size:0x8 data:double
lbl_800BB918 = .sdata2:0x800BB918; // type:object size:0x4 data:float
lbl_800BB91C = .sdata2:0x800BB91C; // type:object size:0x4 data:float
lbl_800BB920 = .sdata2:0x800BB920; // type:object size:0x4 data:float
lbl_800BB924 = .sdata2:0x800BB924; // type:object size:0x4 data:float
lbl_800BB928 = .sdata2:0x800BB928; // type:object size:0x4 data:float
lbl_800BB92C = .sdata2:0x800BB92C; // type:object size:0x4 data:float
lbl_800BB930 = .sdata2:0x800BB930; // type:object size:0x4 data:float
lbl_800BB934 = .sdata2:0x800BB934; // type:object size:0x4 data:float
lbl_800BB938 = .sdata2:0x800BB938; // type:object size:0x4 data:float
lbl_800BB93C = .sdata2:0x800BB93C; // type:object size:0x4 data:float
lbl_800BB940 = .sdata2:0x800BB940; // type:object size:0x4 data:float
lbl_800BB944 = .sdata2:0x800BB944; // type:object size:0x4 data:float
lbl_800BB948 = .sdata2:0x800BB948; // type:object size:0x4 data:float
lbl_800BB94C = .sdata2:0x800BB94C; // type:object size:0x4 data:float
lbl_800BB950 = .sdata2:0x800BB950; // type:object size:0x4 data:float
lbl_800BB954 = .sdata2:0x800BB954; // type:object size:0x4 data:float
lbl_800BB958 = .sdata2:0x800BB958; // type:object size:0x4 data:4byte
lbl_800BB95C = .sdata2:0x800BB95C; // type:object size:0x4 data:4byte
lbl_800BB960 = .sdata2:0x800BB960; // type:object size:0x8 data:float
lbl_800BB968 = .sdata2:0x800BB968; // type:object size:0x4 data:float
lbl_800BB96C = .sdata2:0x800BB96C; // type:object size:0x4 data:float
lbl_800BB970 = .sdata2:0x800BB970; // type:object size:0x4 data:float
lbl_800BB978 = .sdata2:0x800BB978; // type:object size:0x8 data:double
lbl_800BB980 = .sdata2:0x800BB980; // type:object size:0x8 data:double
lbl_800BB988 = .sdata2:0x800BB988; // type:object size:0x4 data:float
lbl_800BB98C = .sdata2:0x800BB98C; // type:object size:0x4 data:float
lbl_800BB990 = .sdata2:0x800BB990; // type:object size:0x8 data:float
lbl_800BB998 = .sdata2:0x800BB998; // type:object size:0x4 data:float
lbl_800BB99C = .sdata2:0x800BB99C; // type:object size:0x4 data:float
lbl_800BB9A0 = .sdata2:0x800BB9A0; // type:object size:0x8 data:float
lbl_800BB9A8 = .sdata2:0x800BB9A8; // type:object size:0x4 data:float
lbl_800BB9B0 = .sdata2:0x800BB9B0; // type:object size:0x8 data:double
lbl_800BB9B8 = .sdata2:0x800BB9B8; // type:object size:0x4 data:4byte
lbl_800BB9BC = .sdata2:0x800BB9BC; // type:object size:0x4 data:4byte
lbl_800BB9C0 = .sdata2:0x800BB9C0; // type:object size:0x4 data:float
lbl_800BB9C4 = .sdata2:0x800BB9C4; // type:object size:0x4 data:float
lbl_800BB9C8 = .sdata2:0x800BB9C8; // type:object size:0x4 data:float
lbl_800BB9CC = .sdata2:0x800BB9CC; // type:object size:0x4 data:float
lbl_800BB9D0 = .sdata2:0x800BB9D0; // type:object size:0x4 data:float
lbl_800BB9D4 = .sdata2:0x800BB9D4; // type:object size:0x4 data:float
lbl_800BB9D8 = .sdata2:0x800BB9D8; // type:object size:0x8 data:double
lbl_800BB9E0 = .sdata2:0x800BB9E0; // type:object size:0x8 data:double
lbl_800BB9E8 = .sdata2:0x800BB9E8; // type:object size:0x8 data:double
lbl_800BB9F0 = .sdata2:0x800BB9F0; // type:object size:0x4 data:float
lbl_800BB9F8 = .sdata2:0x800BB9F8; // type:object size:0x8 data:double
lbl_800BBA00 = .sdata2:0x800BBA00; // type:object size:0x4 data:float
lbl_800BBA04 = .sdata2:0x800BBA04; // type:object size:0x4 data:float
lbl_800BBA08 = .sdata2:0x800BBA08; // type:object size:0x8 data:double
lbl_800BBA10 = .sdata2:0x800BBA10; // type:object size:0x8 data:double
lbl_800BBA18 = .sdata2:0x800BBA18; // type:object size:0x4 data:float
lbl_800BBA1C = .sdata2:0x800BBA1C; // type:object size:0x4 data:float
lbl_800BBA20 = .sdata2:0x800BBA20; // type:object size:0x8 data:double
lbl_800BBA28 = .sdata2:0x800BBA28; // type:object size:0x4 data:float
lbl_800BBA2C = .sdata2:0x800BBA2C; // type:object size:0x4 data:float
lbl_800BBA30 = .sdata2:0x800BBA30; // type:object size:0x4 data:float
lbl_800BBA38 = .sdata2:0x800BBA38; // type:object size:0x8 data:double
lbl_800BBA40 = .sdata2:0x800BBA40; // type:object size:0x8 data:double
lbl_800BBA48 = .sdata2:0x800BBA48; // type:object size:0x8 data:double
lbl_800BBA50 = .sdata2:0x800BBA50; // type:object size:0x8 data:double
lbl_800BBA58 = .sdata2:0x800BBA58; // type:object size:0x8 data:double
lbl_800BBA60 = .sdata2:0x800BBA60; // type:object size:0x8 data:double
lbl_800BBA68 = .sdata2:0x800BBA68; // type:object size:0x8 data:double
lbl_800BBA70 = .sdata2:0x800BBA70; // type:object size:0x4 data:float
lbl_800BBA74 = .sdata2:0x800BBA74; // type:object size:0x4 data:float
lbl_800BBA78 = .sdata2:0x800BBA78; // type:object size:0x4 data:float
lbl_800BBA7C = .sdata2:0x800BBA7C; // type:object size:0x4 data:float
lbl_800BBA80 = .sdata2:0x800BBA80; // type:object size:0x4 data:float
lbl_800BBA88 = .sdata2:0x800BBA88; // type:object size:0x8 data:double
lbl_800BBA90 = .sdata2:0x800BBA90; // type:object size:0x4 data:float
lbl_800BBA94 = .sdata2:0x800BBA94; // type:object size:0x4 data:float
lbl_800BBA98 = .sdata2:0x800BBA98; // type:object size:0x4 data:float
lbl_800BBA9C = .sdata2:0x800BBA9C; // type:object size:0x4 data:float
lbl_800BBAA0 = .sdata2:0x800BBAA0; // type:object size:0x4 data:float
lbl_800BBAA4 = .sdata2:0x800BBAA4; // type:object size:0x4 data:float
lbl_800BBAA8 = .sdata2:0x800BBAA8; // type:object size:0x8 data:float
lbl_800BBAB0 = .sdata2:0x800BBAB0; // type:object size:0x4 data:float
lbl_800BBAB4 = .sdata2:0x800BBAB4; // type:object size:0x4 data:float
lbl_800BBAB8 = .sdata2:0x800BBAB8; // type:object size:0x8 data:float
lbl_800BBAC0 = .sdata2:0x800BBAC0; // type:object size:0x4 data:float
lbl_800BBAC4 = .sdata2:0x800BBAC4; // type:object size:0x4 data:float
lbl_800BBAC8 = .sdata2:0x800BBAC8; // type:object size:0x8 data:float
lbl_800BBAD0 = .sdata2:0x800BBAD0; // type:object size:0x8 data:float
lbl_800BBAD8 = .sdata2:0x800BBAD8; // type:object size:0x4 data:float
lbl_800BBADC = .sdata2:0x800BBADC; // type:object size:0x4 data:float
lbl_800BBAE0 = .sdata2:0x800BBAE0; // type:object size:0x8 data:double
lbl_800BBAE8 = .sdata2:0x800BBAE8; // type:object size:0x8 data:double
lbl_800BBAF0 = .sdata2:0x800BBAF0; // type:object size:0x8 data:float
lbl_800BBAF8 = .sdata2:0x800BBAF8; // type:object size:0x8 data:float
lbl_800BBB00 = .sdata2:0x800BBB00; // type:object size:0x4 data:float
lbl_800BBB08 = .sdata2:0x800BBB08; // type:object size:0x8 data:double
lbl_800BBB10 = .sdata2:0x800BBB10; // type:object size:0x8 data:float
lbl_800BBB18 = .sdata2:0x800BBB18; // type:object size:0x4 data:float
lbl_800BBB1C = .sdata2:0x800BBB1C; // type:object size:0x4 data:float
lbl_800BBB20 = .sdata2:0x800BBB20; // type:object size:0x8 data:double
lbl_800BBB28 = .sdata2:0x800BBB28; // type:object size:0x8 data:double
lbl_800BBB30 = .sdata2:0x800BBB30; // type:object size:0x4 data:float
lbl_800BBB34 = .sdata2:0x800BBB34; // type:object size:0x4 data:float
lbl_800BBB38 = .sdata2:0x800BBB38; // type:object size:0x8 data:double
lbl_800BBB40 = .sdata2:0x800BBB40; // type:object size:0x4 data:float
lbl_800BBB48 = .sdata2:0x800BBB48; // type:object size:0x8 data:double
lbl_800BBB50 = .sdata2:0x800BBB50; // type:object size:0x4 data:float
lbl_800BBB54 = .sdata2:0x800BBB54; // type:object size:0x4 data:float
lbl_800BBB58 = .sdata2:0x800BBB58; // type:object size:0x4 data:float
lbl_800BBB60 = .sdata2:0x800BBB60; // type:object size:0x8 data:double
lbl_800BBB68 = .sdata2:0x800BBB68; // type:object size:0x4 data:float
lbl_800BBB6C = .sdata2:0x800BBB6C; // type:object size:0x4 data:float
lbl_800BBB70 = .sdata2:0x800BBB70; // type:object size:0x4 data:float
lbl_800BBB74 = .sdata2:0x800BBB74; // type:object size:0x4 data:float
lbl_800BBB78 = .sdata2:0x800BBB78; // type:object size:0x8 data:float
lbl_800BBB80 = .sdata2:0x800BBB80; // type:object size:0x4 data:float
lbl_800BBB84 = .sdata2:0x800BBB84; // type:object size:0x4 data:float
lbl_800BBB88 = .sdata2:0x800BBB88; // type:object size:0x4 data:float
lbl_800BBB8C = .sdata2:0x800BBB8C; // type:object size:0x4 data:float
lbl_800BBB90 = .sdata2:0x800BBB90; // type:object size:0x8 data:float
lbl_800BBB98 = .sdata2:0x800BBB98; // type:object size:0x8 data:float
lbl_800BBBA0 = .sdata2:0x800BBBA0; // type:object size:0x4 data:float
lbl_800BBBA4 = .sdata2:0x800BBBA4; // type:object size:0x4 data:float
lbl_800BBBA8 = .sdata2:0x800BBBA8; // type:object size:0x4 data:float
lbl_800BBBAC = .sdata2:0x800BBBAC; // type:object size:0x4 data:float
lbl_800BBBB0 = .sdata2:0x800BBBB0; // type:object size:0x8 data:double
lbl_800BBBB8 = .sdata2:0x800BBBB8; // type:object size:0x8 data:double
lbl_800BBBC0 = .sdata2:0x800BBBC0; // type:object size:0x8 data:double
lbl_800BBBC8 = .sdata2:0x800BBBC8; // type:object size:0x8 data:double
lbl_800BBBD0 = .sdata2:0x800BBBD0; // type:object size:0x4 data:float
lbl_800BBBD4 = .sdata2:0x800BBBD4; // type:object size:0x4 data:float
lbl_800BBBD8 = .sdata2:0x800BBBD8; // type:object size:0x4 data:float
lbl_800BBBDC = .sdata2:0x800BBBDC; // type:object size:0x4 data:float
lbl_800BBBE0 = .sdata2:0x800BBBE0; // type:object size:0x4 data:float
lbl_800BBBE4 = .sdata2:0x800BBBE4; // type:object size:0x4 data:float
lbl_800BBBE8 = .sdata2:0x800BBBE8; // type:object size:0x4 data:float
lbl_800BBBEC = .sdata2:0x800BBBEC; // type:object size:0x4 data:float
lbl_800BBBF0 = .sdata2:0x800BBBF0; // type:object size:0x4 data:float
lbl_800BBBF4 = .sdata2:0x800BBBF4; // type:object size:0x4 data:float
lbl_800BBBF8 = .sdata2:0x800BBBF8; // type:object size:0x4 data:float
lbl_800BBBFC = .sdata2:0x800BBBFC; // type:object size:0x4 data:float
lbl_800BBC00 = .sdata2:0x800BBC00; // type:object size:0x4 data:float
lbl_800BBC04 = .sdata2:0x800BBC04; // type:object size:0x4 data:float
lbl_800BBC08 = .sdata2:0x800BBC08; // type:object size:0x4 data:float
lbl_800BBC10 = .sdata2:0x800BBC10; // type:object size:0x8 data:double
lbl_800BBC18 = .sdata2:0x800BBC18; // type:object size:0x4 data:float
lbl_800BBC1C = .sdata2:0x800BBC1C; // type:object size:0x4 data:float
lbl_800BBC20 = .sdata2:0x800BBC20; // type:object size:0x8 data:double
lbl_800BBC28 = .sdata2:0x800BBC28; // type:object size:0x8 data:double
lbl_800BBC30 = .sdata2:0x800BBC30; // type:object size:0x4 data:float
lbl_800BBC38 = .sdata2:0x800BBC38; // type:object size:0x8 data:double
lbl_800BBC40 = .sdata2:0x800BBC40; // type:object size:0x8 data:double
lbl_800BBC48 = .sdata2:0x800BBC48; // type:object size:0x8 data:double
lbl_800BBC50 = .sdata2:0x800BBC50; // type:object size:0x4 data:float
lbl_800BBC54 = .sdata2:0x800BBC54; // type:object size:0x4 data:float
lbl_800BBC58 = .sdata2:0x800BBC58; // type:object size:0x4 data:float
lbl_800BBC5C = .sdata2:0x800BBC5C; // type:object size:0x4 data:float
lbl_800BBC60 = .sdata2:0x800BBC60; // type:object size:0x8 data:float
lbl_800BBC68 = .sdata2:0x800BBC68; // type:object size:0x4 data:float
lbl_800BBC6C = .sdata2:0x800BBC6C; // type:object size:0x4 data:float
lbl_800BBC70 = .sdata2:0x800BBC70; // type:object size:0x4 data:float
lbl_800BBC74 = .sdata2:0x800BBC74; // type:object size:0x4 data:float
lbl_800BBC78 = .sdata2:0x800BBC78; // type:object size:0x4 data:float
lbl_800BBC7C = .sdata2:0x800BBC7C; // type:object size:0x4 data:float
lbl_800BBC80 = .sdata2:0x800BBC80; // type:object size:0x4 data:float
lbl_800BBC88 = .sdata2:0x800BBC88; // type:object size:0x8 data:double
lbl_800BBC90 = .sdata2:0x800BBC90; // type:object size:0x4 data:float
lbl_800BBC94 = .sdata2:0x800BBC94; // type:object size:0x4 data:float
lbl_800BBC98 = .sdata2:0x800BBC98; // type:object size:0x4 data:float
lbl_800BBCA0 = .sdata2:0x800BBCA0; // type:object size:0x8 data:double
lbl_800BBCA8 = .sdata2:0x800BBCA8; // type:object size:0x8 data:double
