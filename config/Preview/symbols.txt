memset = .init:0x80003100; // type:function size:0x30 scope:global
__fill_mem = .init:0x80003130; // type:function size:0xB8 scope:global
memcpy = .init:0x800031E8; // type:function size:0x50 scope:global
TRK_memset = .init:0x80003238; // type:function size:0x30
TRK_memcpy = .init:0x80003268; // type:function size:0x24
gTRKInterruptVectorTable = .init:0x8000328C; // type:label scope:global
__TRK_reset = .init:0x800051C0; // type:function size:0x104
gTRKInterruptVectorTableEnd = .init:0x800051C0; // type:label scope:global
__check_pad3 = .init:0x800052C4; // type:function size:0x40 scope:local
__start = .init:0x80005304; // type:function size:0x138 scope:weak
__init_registers = .init:0x8000543C; // type:function size:0x1C scope:local
__init_data = .init:0x80005458; // type:function size:0xC0 scope:local
__init_hardware = .init:0x80005518; // type:function size:0x20 scope:global
__flush_cache = .init:0x80005538; // type:function size:0x34 scope:global
_rom_copy_info = .init:0x8000556C; // type:object size:0x6C scope:global data:4byte
_bss_init_info = .init:0x800055D8; // type:object size:0x18 scope:global data:4byte
main = .text:0x80005600; // type:function size:0x2F8 scope:global
__va_arg = .text:0x800058F8; // type:function size:0xC8 scope:global
__destroy_global_chain = .text:0x800059C0; // type:function size:0x48 scope:global
__cvt_fp2unsigned = .text:0x80005A08; // type:function size:0x5C
__save_fpr = .text:0x80005A64; // type:function size:0x4C scope:global
_savefpr_14 = .text:0x80005A64; // type:label scope:global
_savefpr_15 = .text:0x80005A68; // type:label scope:global
_savefpr_16 = .text:0x80005A6C; // type:label scope:global
_savefpr_17 = .text:0x80005A70; // type:label scope:global
_savefpr_18 = .text:0x80005A74; // type:label scope:global
_savefpr_19 = .text:0x80005A78; // type:label scope:global
_savefpr_20 = .text:0x80005A7C; // type:label scope:global
_savefpr_21 = .text:0x80005A80; // type:label scope:global
_savefpr_22 = .text:0x80005A84; // type:label scope:global
_savefpr_23 = .text:0x80005A88; // type:label scope:global
_savefpr_24 = .text:0x80005A8C; // type:label scope:global
_savefpr_25 = .text:0x80005A90; // type:label scope:global
_savefpr_26 = .text:0x80005A94; // type:label scope:global
_savefpr_27 = .text:0x80005A98; // type:label scope:global
_savefpr_28 = .text:0x80005A9C; // type:label scope:global
_savefpr_29 = .text:0x80005AA0; // type:label scope:global
_savefpr_30 = .text:0x80005AA4; // type:label scope:global
_savefpr_31 = .text:0x80005AA8; // type:label scope:global
__restore_fpr = .text:0x80005AB0; // type:function size:0x4C scope:global
_restfpr_14 = .text:0x80005AB0; // type:label scope:global
_restfpr_15 = .text:0x80005AB4; // type:label scope:global
_restfpr_16 = .text:0x80005AB8; // type:label scope:global
_restfpr_17 = .text:0x80005ABC; // type:label scope:global
_restfpr_18 = .text:0x80005AC0; // type:label scope:global
_restfpr_19 = .text:0x80005AC4; // type:label scope:global
_restfpr_20 = .text:0x80005AC8; // type:label scope:global
_restfpr_21 = .text:0x80005ACC; // type:label scope:global
_restfpr_22 = .text:0x80005AD0; // type:label scope:global
_restfpr_23 = .text:0x80005AD4; // type:label scope:global
_restfpr_24 = .text:0x80005AD8; // type:label scope:global
_restfpr_25 = .text:0x80005ADC; // type:label scope:global
_restfpr_26 = .text:0x80005AE0; // type:label scope:global
_restfpr_27 = .text:0x80005AE4; // type:label scope:global
_restfpr_28 = .text:0x80005AE8; // type:label scope:global
_restfpr_29 = .text:0x80005AEC; // type:label scope:global
_restfpr_30 = .text:0x80005AF0; // type:label scope:global
_restfpr_31 = .text:0x80005AF4; // type:label scope:global
__save_gpr = .text:0x80005AFC; // type:function size:0x4C scope:global
_savegpr_14 = .text:0x80005AFC; // type:label scope:global
_savegpr_15 = .text:0x80005B00; // type:label scope:global
_savegpr_16 = .text:0x80005B04; // type:label scope:global
_savegpr_17 = .text:0x80005B08; // type:label scope:global
_savegpr_18 = .text:0x80005B0C; // type:label scope:global
_savegpr_19 = .text:0x80005B10; // type:label scope:global
_savegpr_20 = .text:0x80005B14; // type:label scope:global
_savegpr_21 = .text:0x80005B18; // type:label scope:global
_savegpr_22 = .text:0x80005B1C; // type:label scope:global
_savegpr_23 = .text:0x80005B20; // type:label scope:global
_savegpr_24 = .text:0x80005B24; // type:label scope:global
_savegpr_25 = .text:0x80005B28; // type:label scope:global
_savegpr_26 = .text:0x80005B2C; // type:label scope:global
_savegpr_27 = .text:0x80005B30; // type:label scope:global
_savegpr_28 = .text:0x80005B34; // type:label scope:global
_savegpr_29 = .text:0x80005B38; // type:label scope:global
_savegpr_30 = .text:0x80005B3C; // type:label scope:global
_savegpr_31 = .text:0x80005B40; // type:label scope:global
__restore_gpr = .text:0x80005B48; // type:function size:0x4C scope:global
_restgpr_14 = .text:0x80005B48; // type:label scope:global
_restgpr_15 = .text:0x80005B4C; // type:label scope:global
_restgpr_16 = .text:0x80005B50; // type:label scope:global
_restgpr_17 = .text:0x80005B54; // type:label scope:global
_restgpr_18 = .text:0x80005B58; // type:label scope:global
_restgpr_19 = .text:0x80005B5C; // type:label scope:global
_restgpr_20 = .text:0x80005B60; // type:label scope:global
_restgpr_21 = .text:0x80005B64; // type:label scope:global
_restgpr_22 = .text:0x80005B68; // type:label scope:global
_restgpr_23 = .text:0x80005B6C; // type:label scope:global
_restgpr_24 = .text:0x80005B70; // type:label scope:global
_restgpr_25 = .text:0x80005B74; // type:label scope:global
_restgpr_26 = .text:0x80005B78; // type:label scope:global
_restgpr_27 = .text:0x80005B7C; // type:label scope:global
_restgpr_28 = .text:0x80005B80; // type:label scope:global
_restgpr_29 = .text:0x80005B84; // type:label scope:global
_restgpr_30 = .text:0x80005B88; // type:label scope:global
_restgpr_31 = .text:0x80005B8C; // type:label scope:global
__div2u = .text:0x80005B94; // type:function size:0xEC scope:global
__div2i = .text:0x80005C80; // type:function size:0x138
__mod2u = .text:0x80005DB8; // type:function size:0xE4 scope:global
__mod2i = .text:0x80005E9C; // type:function size:0x10C
__shl2i = .text:0x80005FA8; // type:function size:0x24
__shr2u = .text:0x80005FCC; // type:function size:0x24
__shr2i = .text:0x80005FF0; // type:function size:0x28
__cvt_sll_dbl = .text:0x80006018; // type:function size:0xB0
__cvt_dbl_usll = .text:0x800060C8; // type:function size:0xCC
__sys_free = .text:0x80006194; // type:function size:0xB8
exit = .text:0x8000624C; // type:function size:0xCC scope:global
free = .text:0x80006318; // type:function size:0x134
deallocate_from_fixed_pools = .text:0x8000644C; // type:function size:0x1FC
SubBlock_merge_next = .text:0x80006648; // type:function size:0xBC
Block_link = .text:0x80006704; // type:function size:0x17C
__flush_all = .text:0x80006880; // type:function size:0x70
__close_all = .text:0x800068F0; // type:function size:0x98 scope:global
__dec2num = .text:0x80006988; // type:function size:0x954
__num2dec = .text:0x800072DC; // type:function size:0x1A4
__num2dec_internal = .text:0x80007480; // type:function size:0x23C
__minus_dec = .text:0x800076BC; // type:function size:0x4FC
__less_dec = .text:0x80007BB8; // type:function size:0xF8
__equals_dec = .text:0x80007CB0; // type:function size:0x10C
__two_exp = .text:0x80007DBC; // type:function size:0x340
__str2dec = .text:0x800080FC; // type:function size:0xEC
__timesdec = .text:0x800081E8; // type:function size:0x28C
__ull2dec = .text:0x80008474; // type:function size:0x110
__count_trailing_zerol = .text:0x80008584; // type:function size:0x70
__flush_buffer = .text:0x800085F4; // type:function size:0xC4 scope:global
__prep_buffer = .text:0x800086B8; // type:function size:0x34 scope:global
toupper = .text:0x800086EC; // type:function size:0x24
tolower = .text:0x80008710; // type:function size:0x24
__fwrite = .text:0x80008734; // type:function size:0x30C scope:global
fwrite = .text:0x80008A40; // type:function size:0x20 scope:global
fflush = .text:0x80008A60; // type:function size:0x138
fclose = .text:0x80008B98; // type:function size:0xC0
fseek = .text:0x80008C58; // type:function size:0x20 scope:global
_fseek = .text:0x80008C78; // type:function size:0x23C
ftell = .text:0x80008EB4; // type:function size:0x70
wcstombs = .text:0x80008F24; // type:function size:0xA0 scope:global
unicode_to_UTF8 = .text:0x80008FC4; // type:function size:0xA4
mbtowc = .text:0x80009068; // type:function size:0x20
utf8_to_unicode = .text:0x80009088; // type:function size:0x120
is_utf8_complete = .text:0x800091A8; // type:function size:0xEC
memcmp = .text:0x80009294; // type:function size:0x4C
__memrchr = .text:0x800092E0; // type:function size:0x2C scope:global
memchr = .text:0x8000930C; // type:function size:0x2C scope:global
memmove = .text:0x80009338; // type:function size:0xCC scope:global
__copy_longs_rev_unaligned = .text:0x80009404; // type:function size:0xB0
__copy_longs_unaligned = .text:0x800094B4; // type:function size:0xC4
__copy_longs_rev_aligned = .text:0x80009578; // type:function size:0xAC
__copy_longs_aligned = .text:0x80009624; // type:function size:0xC0
__stdio_atexit = .text:0x800096E4; // type:function size:0x10 scope:global
sprintf = .text:0x800096F4; // type:function size:0xE0
vsprintf = .text:0x800097D4; // type:function size:0x78
vprintf = .text:0x8000984C; // type:function size:0x7C scope:global
__StringWrite = .text:0x800098C8; // type:function size:0x6C
__FileWrite = .text:0x80009934; // type:function size:0x58 scope:global
__pformatter = .text:0x8000998C; // type:function size:0x774 scope:local
float2str = .text:0x8000A100; // type:function size:0x6EC scope:local
round_decimal = .text:0x8000A7EC; // type:function size:0x12C
double2hex = .text:0x8000A918; // type:function size:0x338 scope:local
longlong2str = .text:0x8000AC50; // type:function size:0x2DC scope:local
long2str = .text:0x8000AF2C; // type:function size:0x220 scope:local
parse_format = .text:0x8000B14C; // type:function size:0x504 scope:local
srand = .text:0x8000B650; // type:function size:0x8
rand = .text:0x8000B658; // type:function size:0x20
sscanf = .text:0x8000B678; // type:function size:0xC4
__StringRead = .text:0x8000B73C; // type:function size:0x90
__sformatter = .text:0x8000B7CC; // type:function size:0x9AC
parse_format = .text:0x8000C178; // type:function size:0x548 scope:local
strstr = .text:0x8000C6C0; // type:function size:0x68
strchr = .text:0x8000C728; // type:function size:0x30 scope:global
strncmp = .text:0x8000C758; // type:function size:0x40
strcmp = .text:0x8000C798; // type:function size:0x128
strncat = .text:0x8000C8C0; // type:function size:0x4C
strcat = .text:0x8000C90C; // type:function size:0x2C
strncpy = .text:0x8000C938; // type:function size:0x44
strcpy = .text:0x8000C97C; // type:function size:0xB8
strlen = .text:0x8000CA34; // type:function size:0x1C scope:global
__strtold = .text:0x8000CA50; // type:function size:0x100C
atoi = .text:0x8000DA5C; // type:function size:0xC0
strtoul = .text:0x8000DB1C; // type:function size:0xAC
__strtoull = .text:0x8000DBC8; // type:function size:0x40C
__strtoul = .text:0x8000DFD4; // type:function size:0x378
__close_console = .text:0x8000E34C; // type:function size:0x8
__write_console = .text:0x8000E354; // type:function size:0xC4
fwide = .text:0x8000E418; // type:function size:0x88 scope:global
__ieee754_acos = .text:0x8000E4A0; // type:function size:0x310
__ieee754_asin = .text:0x8000E7B0; // type:function size:0x264
__ieee754_atan2 = .text:0x8000EA14; // type:function size:0x290
__ieee754_log = .text:0x8000ECA4; // type:function size:0x27C
__ieee754_log10 = .text:0x8000EF20; // type:function size:0x110
__ieee754_pow = .text:0x8000F030; // type:function size:0x88C
__ieee754_rem_pio2 = .text:0x8000F8BC; // type:function size:0x3A0
__kernel_cos = .text:0x8000FC5C; // type:function size:0xF4
__kernel_rem_pio2 = .text:0x8000FD50; // type:function size:0xE54
__kernel_sin = .text:0x80010BA4; // type:function size:0xA0
__kernel_tan = .text:0x80010C44; // type:function size:0x214
atan = .text:0x80010E58; // type:function size:0x200
ceil = .text:0x80011058; // type:function size:0x144
copysign = .text:0x8001119C; // type:function size:0x28
cos = .text:0x800111C4; // type:function size:0xD4
floor = .text:0x80011298; // type:function size:0x148
frexp = .text:0x800113E0; // type:function size:0x8C
ldexp = .text:0x8001146C; // type:function size:0x1C4
modf = .text:0x80011630; // type:function size:0xFC
nextafter = .text:0x8001172C; // type:function size:0x184
sin = .text:0x800118B0; // type:function size:0xD8
tan = .text:0x80011988; // type:function size:0x78
acos = .text:0x80011A00; // type:function size:0x20
asin = .text:0x80011A20; // type:function size:0x20
atan2 = .text:0x80011A40; // type:function size:0x20
log = .text:0x80011A60; // type:function size:0x20
log10 = .text:0x80011A80; // type:function size:0x20
pow = .text:0x80011AA0; // type:function size:0x20
modff__FfPf = .text:0x80011AC0; // type:function size:0x130
sqrtf__Ff = .text:0x80011BF0; // type:function size:0x64
floorf = .text:0x80011C54; // type:function size:0x24
powf = .text:0x80011C78; // type:function size:0x24
fabsf = .text:0x80011C9C; // type:function size:0xC
tanf = .text:0x80011CA8; // type:function size:0x24
sinf = .text:0x80011CCC; // type:function size:0x24
cosf = .text:0x80011CF0; // type:function size:0x24
atanf = .text:0x80011D14; // type:function size:0x24
acosf = .text:0x80011D38; // type:function size:0x24
TRKNubMainLoop = .text:0x80011D5C; // type:function size:0xF8 scope:global
TRKDestructEvent = .text:0x80011E54; // type:function size:0x24 scope:global
TRKConstructEvent = .text:0x80011E78; // type:function size:0x18
TRKPostEvent = .text:0x80011E90; // type:function size:0xE0
TRKGetNextEvent = .text:0x80011F70; // type:function size:0xB4 scope:global
TRKInitializeEventQueue = .text:0x80012024; // type:function size:0x58 scope:global
TRKNubWelcome = .text:0x8001207C; // type:function size:0x28 scope:global
TRKTerminateNub = .text:0x800120A4; // type:function size:0x24 scope:global
TRKInitializeNub = .text:0x800120C8; // type:function size:0x134 scope:global
TRKMessageSend = .text:0x800121FC; // type:function size:0x1DC
TRKReadBuffer_ui32 = .text:0x800123D8; // type:function size:0xF0
TRKReadBuffer_ui8 = .text:0x800124C8; // type:function size:0x98
TRKReadBuffer1_ui64 = .text:0x80012560; // type:function size:0xE8
TRKReadBuffer1_ui32 = .text:0x80012648; // type:function size:0xC8
TRKReadBuffer1_ui16 = .text:0x80012710; // type:function size:0xB8
TRKReadBuffer1_ui8 = .text:0x800127C8; // type:function size:0x80
TRKAppendBuffer_ui32 = .text:0x80012848; // type:function size:0xA8
TRKAppendBuffer_ui8 = .text:0x800128F0; // type:function size:0x68
TRKAppendBuffer1_ui64 = .text:0x80012958; // type:function size:0x88
TRKAppendBuffer1_ui32 = .text:0x800129E0; // type:function size:0x64
TRKAppendBuffer1_ui16 = .text:0x80012A44; // type:function size:0x54
TRKReadBuffer = .text:0x80012A98; // type:function size:0x8C
TRKAppendBuffer = .text:0x80012B24; // type:function size:0xA4
TRKSetBufferPosition = .text:0x80012BC8; // type:function size:0x30
TRKResetBuffer = .text:0x80012BF8; // type:function size:0x40
TRKReleaseBuffer = .text:0x80012C38; // type:function size:0x64
TRKGetBuffer = .text:0x80012C9C; // type:function size:0x2C scope:global
TRKGetFreeBuffer = .text:0x80012CC8; // type:function size:0xC8
TRKInitializeMessageBuffers = .text:0x80012D90; // type:function size:0x74 scope:global
TRKTerminateSerialHandler = .text:0x80012E04; // type:function size:0x8
TRKInitializeSerialHandler = .text:0x80012E0C; // type:function size:0x24 scope:global
TRKProcessInput = .text:0x80012E30; // type:function size:0x50
TRKGetInput = .text:0x80012E80; // type:function size:0x98 scope:global
TRKTestForPacket = .text:0x80012F18; // type:function size:0x2B8
usr_put_initialize = .text:0x800131D0; // type:function size:0x4 scope:global
usr_puts_serial = .text:0x800131D4; // type:function size:0x88
TRKDispatchMessage = .text:0x8001325C; // type:function size:0x84 scope:global
TRKInitializeDispatcher = .text:0x800132E0; // type:function size:0x18 scope:global
TRKDoSetOption = .text:0x800132F8; // type:function size:0x1A4
TRKDoStop = .text:0x8001349C; // type:function size:0x100
TRKDoStep = .text:0x8001359C; // type:function size:0x530
TRKDoContinue = .text:0x80013ACC; // type:function size:0x154
TRKDoFlushCache = .text:0x80013C20; // type:function size:0x2F8
TRKDoWriteRegisters = .text:0x80013F18; // type:function size:0x3C8
TRKDoReadRegisters = .text:0x800142E0; // type:function size:0x3CC
TRKDoWriteMemory = .text:0x800146AC; // type:function size:0x420
TRKDoReadMemory = .text:0x80014ACC; // type:function size:0x410
TRKDoCPUType = .text:0x80014EDC; // type:function size:0x398
TRKDoSupportMask = .text:0x80015274; // type:function size:0x230
TRKDoVersions = .text:0x800154A4; // type:function size:0x2D8
TRKDoReset = .text:0x8001577C; // type:function size:0xB8
TRKDoDisconnect = .text:0x80015834; // type:function size:0xE4
TRKDoConnect = .text:0x80015918; // type:function size:0xBC
TRKDoUnsupported = .text:0x800159D4; // type:function size:0xB0
TRKStandardACK = .text:0x80015A84; // type:function size:0xB8
SetTRKConnected = .text:0x80015B3C; // type:function size:0xC
GetTRKConnected = .text:0x80015B48; // type:function size:0x10
HandlePositionFileSupportRequest = .text:0x80015B58; // type:function size:0x190
HandleCloseFileSupportRequest = .text:0x80015CE8; // type:function size:0x120
HandleOpenFileSupportRequest = .text:0x80015E08; // type:function size:0x1A8
TRKRequestSend = .text:0x80015FB0; // type:function size:0x1A4
TRKSuppAccessFile = .text:0x80016154; // type:function size:0x2C4
TRKReleaseMutex = .text:0x80016418; // type:function size:0x8
TRKAcquireMutex = .text:0x80016420; // type:function size:0x8
TRKInitializeMutex = .text:0x80016428; // type:function size:0x8
TRKDoNotifyStopped = .text:0x80016430; // type:function size:0xD8
TRK_flush_cache = .text:0x80016508; // type:function size:0x38
TRK_fill_mem = .text:0x80016540; // type:function size:0xBC
__TRK_get_MSR = .text:0x800165FC; // type:function size:0x8
__TRK_set_MSR = .text:0x80016604; // type:function size:0x8
TRK_ppc_memcpy = .text:0x8001660C; // type:function size:0x3C
TRKInterruptHandler = .text:0x80016648; // type:function size:0x194 scope:global
TRKExceptionHandler = .text:0x800167DC; // type:function size:0x9C scope:global
TRKSwapAndGo = .text:0x80016878; // type:function size:0xC4 scope:global
TRKInterruptHandlerEnableInterrupts = .text:0x8001693C; // type:function size:0x54 scope:global
TRKTargetSetInputPendingPtr = .text:0x80016990; // type:function size:0x10 scope:global
TRKPPCAccessFPRegister = .text:0x800169A0; // type:function size:0x21C
TRKTargetStop = .text:0x80016BBC; // type:function size:0x18
TRKTargetSetStopped = .text:0x80016BD4; // type:function size:0x10 scope:global
TRKTargetStopped = .text:0x80016BE4; // type:function size:0x10 scope:global
TRKTargetFlushCache = .text:0x80016BF4; // type:function size:0x3C
TRKTargetSupportRequest = .text:0x80016C30; // type:function size:0x208 scope:global
TRKTargetGetPC = .text:0x80016E38; // type:function size:0x10
TRKTargetStepOutOfRange = .text:0x80016E48; // type:function size:0x7C
TRKTargetSingleStep = .text:0x80016EC4; // type:function size:0x6C
TRKTargetAddExceptionInfo = .text:0x80016F30; // type:function size:0xAC
TRKTargetAddStopInfo = .text:0x80016FDC; // type:function size:0x124
TRKTargetInterrupt = .text:0x80017100; // type:function size:0x15C scope:global
TRKPostInterruptEvent = .text:0x8001725C; // type:function size:0xC0 scope:global
TRKTargetCPUType = .text:0x8001731C; // type:function size:0x60
TRKTargetSupportMask = .text:0x8001737C; // type:function size:0xA4
TRKTargetVersions = .text:0x80017420; // type:function size:0x24
TRKTargetAccessExtended2 = .text:0x80017444; // type:function size:0x438
TRKTargetAccessExtended1 = .text:0x8001787C; // type:function size:0x170
TRKTargetAccessFP = .text:0x800179EC; // type:function size:0x13C
TRKTargetAccessDefault = .text:0x80017B28; // type:function size:0xF4
TRKTargetAccessMemory = .text:0x80017C1C; // type:function size:0x14C
TRKValidMemory32 = .text:0x80017D68; // type:function size:0x124
TRKAccessFile = .text:0x80017E90; // type:function size:0x8
TRKOpenFile = .text:0x80017E98; // type:function size:0x8
TRKCloseFile = .text:0x80017EA0; // type:function size:0x8
TRKPositionFile = .text:0x80017EA8; // type:function size:0x8
InitMetroTRK = .text:0x80017EB0; // type:function size:0x94 scope:global
TRKInitializeTarget = .text:0x80017F44; // type:function size:0x4C scope:global
TRKTargetTranslate = .text:0x80017F90; // type:function size:0x40
EnableMetroTRKInterrupts = .text:0x80017FD0; // type:function size:0x20 scope:global
TRKSaveExtended1Block = .text:0x80017FF0; // type:function size:0x1B8 scope:global
TRKRestoreExtended1Block = .text:0x800181A8; // type:function size:0x1B8 scope:global
TRKTargetCPUMinorType = .text:0x80018360; // type:function size:0x8
TRK_main = .text:0x80018368; // type:function size:0x44 scope:global
TRKLoadContext = .text:0x800183AC; // type:function size:0x88 scope:global
TRKUARTInterruptHandler = .text:0x80018434; // type:function size:0x4 scope:global
TRK_board_display = .text:0x80018438; // type:function size:0x24 scope:global
UnreserveEXI2Port = .text:0x8001845C; // type:function size:0x30 scope:global
ReserveEXI2Port = .text:0x8001848C; // type:function size:0x30 scope:global
TRKReadUARTPoll = .text:0x800184BC; // type:function size:0xF0
WriteUART1 = .text:0x800185AC; // type:function size:0x28
WriteUARTFlush = .text:0x800185D4; // type:function size:0xE0
EnableEXI2Interrupts = .text:0x800186B4; // type:function size:0x30
TRKInitializeIntDrivenUART = .text:0x800186E4; // type:function size:0x3C scope:global
InitMetroTRKCommTable = .text:0x80018720; // type:function size:0x100 scope:global
TRKEXICallBack = .text:0x80018820; // type:function size:0x38 scope:global
TRKTargetContinue = .text:0x80018858; // type:function size:0x34 scope:global
GetUseSerialIO = .text:0x8001888C; // type:function size:0x10
SetUseSerialIO = .text:0x8001889C; // type:function size:0xC
__TRK_write_console = .text:0x800188A8; // type:function size:0xBC
__read_console = .text:0x80018964; // type:function size:0xBC
AIRegisterDMACallback = .text:0x80018A20; // type:function size:0x44
AIInitDMA = .text:0x80018A64; // type:function size:0x88
AIStartDMA = .text:0x80018AEC; // type:function size:0x18
AISetStreamPlayState = .text:0x80018B04; // type:function size:0xD8
AIGetStreamPlayState = .text:0x80018BDC; // type:function size:0x10
AISetDSPSampleRate = .text:0x80018BEC; // type:function size:0xE0
AIGetDSPSampleRate = .text:0x80018CCC; // type:function size:0x14
__AI_set_stream_sample_rate = .text:0x80018CE0; // type:function size:0xD4
AIGetStreamSampleRate = .text:0x80018DB4; // type:function size:0x10
AISetStreamVolLeft = .text:0x80018DC4; // type:function size:0x1C
AIGetStreamVolLeft = .text:0x80018DE0; // type:function size:0x10
AISetStreamVolRight = .text:0x80018DF0; // type:function size:0x1C
AIGetStreamVolRight = .text:0x80018E0C; // type:function size:0x10
AIInit = .text:0x80018E1C; // type:function size:0x164
__AISHandler = .text:0x80018F80; // type:function size:0x7C
__AIDHandler = .text:0x80018FFC; // type:function size:0x90
__AICallbackStackSwitch = .text:0x8001908C; // type:function size:0x58
__AI_SRC_INIT = .text:0x800190E4; // type:function size:0x1E4
EXI2_Init = .text:0x800192C8; // type:function size:0x4 scope:global
EXI2_EnableInterrupts = .text:0x800192CC; // type:function size:0x4 scope:global
EXI2_Poll = .text:0x800192D0; // type:function size:0x8 scope:global
EXI2_ReadN = .text:0x800192D8; // type:function size:0x8 scope:global
EXI2_WriteN = .text:0x800192E0; // type:function size:0x8 scope:global
EXI2_Reserve = .text:0x800192E8; // type:function size:0x4 scope:global
EXI2_Unreserve = .text:0x800192EC; // type:function size:0x4 scope:global
AMC_IsStub = .text:0x800192F0; // type:function size:0x8 scope:global
ARRegisterDMACallback = .text:0x800192F8; // type:function size:0x44
ARStartDMA = .text:0x8001933C; // type:function size:0xF0
ARAlloc = .text:0x8001942C; // type:function size:0x68
ARFree = .text:0x80019494; // type:function size:0x74
ARInit = .text:0x80019508; // type:function size:0xBC
__ARHandler = .text:0x800195C4; // type:function size:0x78
__ARChecksize = .text:0x8001963C; // type:function size:0x914
__ARQServiceQueueLo = .text:0x80019F50; // type:function size:0x100
__ARQCallbackHack = .text:0x8001A050; // type:function size:0x4
__ARQInterruptServiceRoutine = .text:0x8001A054; // type:function size:0xCC
ARQInit = .text:0x8001A120; // type:function size:0x68
ARQPostRequest = .text:0x8001A188; // type:function size:0x15C
AXInit = .text:0x8001A2E4; // type:function size:0x34
__AXGetStackHead = .text:0x8001A318; // type:function size:0x18
__AXServiceCallbackStack = .text:0x8001A330; // type:function size:0x74
__AXAllocInit = .text:0x8001A3A4; // type:function size:0xB4
__AXPushFreeStack = .text:0x8001A458; // type:function size:0x20
__AXPushCallbackStack = .text:0x8001A478; // type:function size:0x10
__AXPopCallbackStack = .text:0x8001A488; // type:function size:0x1C
__AXRemoveFromStack = .text:0x8001A4A4; // type:function size:0x94
AXFreeVoice = .text:0x8001A538; // type:function size:0x80
AXAcquireVoice = .text:0x8001A5B8; // type:function size:0x174
__AXAuxInit = .text:0x8001A72C; // type:function size:0xE4
__AXGetAuxAInput = .text:0x8001A810; // type:function size:0x34
__AXGetAuxAInputDpl2 = .text:0x8001A844; // type:function size:0x20
__AXGetAuxAOutput = .text:0x8001A864; // type:function size:0x1C
__AXGetAuxAOutputDpl2R = .text:0x8001A880; // type:function size:0x20
__AXGetAuxAOutputDpl2Ls = .text:0x8001A8A0; // type:function size:0x20
__AXGetAuxAOutputDpl2Rs = .text:0x8001A8C0; // type:function size:0x20
__AXGetAuxBInput = .text:0x8001A8E0; // type:function size:0x34
__AXGetAuxBOutput = .text:0x8001A914; // type:function size:0x1C
__AXGetAuxBForDPL2 = .text:0x8001A930; // type:function size:0x1C
__AXGetAuxBOutputDPL2 = .text:0x8001A94C; // type:function size:0x1C
__AXProcessAux = .text:0x8001A968; // type:function size:0x23C
AXRegisterAuxACallback = .text:0x8001ABA4; // type:function size:0xC
AXRegisterAuxBCallback = .text:0x8001ABB0; // type:function size:0xC
__AXGetCommandListCycles = .text:0x8001ABBC; // type:function size:0x8
__AXGetCommandListAddress = .text:0x8001ABC4; // type:function size:0x3C
__AXNextFrame = .text:0x8001AC00; // type:function size:0x6B0
__AXClInit = .text:0x8001B2B0; // type:function size:0x24
AXSetMode = .text:0x8001B2D4; // type:function size:0x14
__AXOutNewFrame = .text:0x8001B2E8; // type:function size:0x188
__AXOutAiCallback = .text:0x8001B470; // type:function size:0x68
__AXDSPInitCallback = .text:0x8001B4D8; // type:function size:0xC
__AXDSPResumeCallback = .text:0x8001B4E4; // type:function size:0x58
__AXDSPDoneCallback = .text:0x8001B53C; // type:function size:0xC
__AXOutInitDSP = .text:0x8001B548; // type:function size:0xC4
__AXOutInit = .text:0x8001B60C; // type:function size:0x340
AXRegisterCallback = .text:0x8001B94C; // type:function size:0x8
__AXGetStudio = .text:0x8001B954; // type:function size:0xC
__AXPrintStudio = .text:0x8001B960; // type:function size:0x3F8
__AXSPBInit = .text:0x8001BD58; // type:function size:0x2C
__AXDepopVoice = .text:0x8001BD84; // type:function size:0x94
__AXGetNumVoices = .text:0x8001BE18; // type:function size:0x8
__AXServiceVPB = .text:0x8001BE20; // type:function size:0x6FC
__AXSyncPBs = .text:0x8001C51C; // type:function size:0x268
__AXGetPBs = .text:0x8001C784; // type:function size:0xC
__AXSetPBDefault = .text:0x8001C790; // type:function size:0x3C
__AXVPBInit = .text:0x8001C7CC; // type:function size:0x1FC
AXSetVoiceSrcType = .text:0x8001C9C8; // type:function size:0xC4
AXSetVoiceState = .text:0x8001CA8C; // type:function size:0x5C
AXSetVoiceMix = .text:0x8001CAE8; // type:function size:0x254
AXSetVoiceAddr = .text:0x8001CD3C; // type:function size:0x110
AXSetVoiceAdpcm = .text:0x8001CE4C; // type:function size:0xA4
AXSetVoiceSrc = .text:0x8001CEF0; // type:function size:0x98
AXSetVoiceSrcRatio = .text:0x8001CF88; // type:function size:0x98
AXSetVoiceAdpcmLoop = .text:0x8001D020; // type:function size:0x6C
__AXGetCurrentProfile = .text:0x8001D08C; // type:function size:0x48
ReverbHICreate = .text:0x8001D0D4; // type:function size:0x4EC
DoCrossTalk = .text:0x8001D5C0; // type:function size:0x190
HandleReverb = .text:0x8001D750; // type:function size:0x50C scope:local
AXFXReverbHiInit = .text:0x8001DC5C; // type:function size:0x70
AXFXReverbHiCallback = .text:0x8001DCCC; // type:function size:0x104
ReverbSTDCreate = .text:0x8001DDD0; // type:function size:0x40C
HandleReverb = .text:0x8001E1DC; // type:function size:0x3B4 scope:local
AXFXReverbStdInit = .text:0x8001E590; // type:function size:0x6C
AXFXReverbStdCallback = .text:0x8001E5FC; // type:function size:0x30
do_src1 = .text:0x8001E62C; // type:function size:0x198
do_src2 = .text:0x8001E7C4; // type:function size:0x1EC
AXFXChorusInit = .text:0x8001E9B0; // type:function size:0x200
AXFXChorusSettings = .text:0x8001EBB0; // type:function size:0xC4
AXFXChorusCallback = .text:0x8001EC74; // type:function size:0x350
AXFXDelayCallback = .text:0x8001EFC4; // type:function size:0x1D0
AXFXDelaySettings = .text:0x8001F194; // type:function size:0x204
AXFXDelayInit = .text:0x8001F398; // type:function size:0x48
AXFXDelayShutdown = .text:0x8001F3E0; // type:function size:0x90
__AXFXAllocFunction = .text:0x8001F470; // type:function size:0x28
__AXFXFreeFunction = .text:0x8001F498; // type:function size:0x28
AXFXSetHooks = .text:0x8001F4C0; // type:function size:0xC
PPCMfmsr = .text:0x8001F4CC; // type:function size:0x8 scope:global
PPCMtmsr = .text:0x8001F4D4; // type:function size:0x8 scope:global
PPCMfhid0 = .text:0x8001F4DC; // type:function size:0x8 scope:global
PPCMthid0 = .text:0x8001F4E4; // type:function size:0x8
PPCMfl2cr = .text:0x8001F4EC; // type:function size:0x8 scope:global
PPCMtl2cr = .text:0x8001F4F4; // type:function size:0x8 scope:global
PPCMtdec = .text:0x8001F4FC; // type:function size:0x8 scope:weak
PPCSync = .text:0x8001F504; // type:function size:0x8
PPCHalt = .text:0x8001F50C; // type:function size:0x14 scope:weak
PPCMffpscr = .text:0x8001F520; // type:function size:0x18 scope:global
PPCMtfpscr = .text:0x8001F538; // type:function size:0x20 scope:global
PPCMfhid2 = .text:0x8001F558; // type:function size:0x8 scope:global
PPCMthid2 = .text:0x8001F560; // type:function size:0x8 scope:global
PPCMtwpar = .text:0x8001F568; // type:function size:0x8 scope:global
PPCDisableSpeculation = .text:0x8001F570; // type:function size:0x28 scope:global
PPCSetFpNonIEEEMode = .text:0x8001F598; // type:function size:0x8 scope:global
__CARDDefaultApiCallback = .text:0x8001F5A0; // type:function size:0x4
__CARDSyncCallback = .text:0x8001F5A4; // type:function size:0x34
__CARDExtHandler = .text:0x8001F5D8; // type:function size:0xD8
__CARDExiHandler = .text:0x8001F6B0; // type:function size:0x118
__CARDTxHandler = .text:0x8001F7C8; // type:function size:0xA8
__CARDUnlockedHandler = .text:0x8001F870; // type:function size:0x84
__CARDEnableInterrupt = .text:0x8001F8F4; // type:function size:0xC0
__CARDReadStatus = .text:0x8001F9B4; // type:function size:0xF0
__CARDClearStatus = .text:0x8001FAA4; // type:function size:0xAC
TimeoutHandler = .text:0x8001FB50; // type:function size:0xA4
Retry = .text:0x8001FBF4; // type:function size:0x22C
UnlockedCallback = .text:0x8001FE20; // type:function size:0x110
__CARDStart = .text:0x8001FF30; // type:function size:0x1B4
__CARDReadSegment = .text:0x800200E4; // type:function size:0x134
__CARDWritePage = .text:0x80020218; // type:function size:0x11C
__CARDEraseSector = .text:0x80020334; // type:function size:0xE0
CARDInit = .text:0x80020414; // type:function size:0x9C
__CARDSetDiskID = .text:0x800204B0; // type:function size:0x38
__CARDGetControlBlock = .text:0x800204E8; // type:function size:0xB8
__CARDPutControlBlock = .text:0x800205A0; // type:function size:0x64
CARDFreeBlocks = .text:0x80020604; // type:function size:0x150
CARDGetEncoding = .text:0x80020754; // type:function size:0x88
__CARDSync = .text:0x800207DC; // type:function size:0x98
OnReset = .text:0x80020874; // type:function size:0x50
bitrev = .text:0x800208C4; // type:function size:0x16C
ReadArrayUnlock = .text:0x80020A30; // type:function size:0x144
DummyLen = .text:0x80020B74; // type:function size:0xC4
__CARDUnlock = .text:0x80020C38; // type:function size:0xB58
InitCallback = .text:0x80021790; // type:function size:0x70
DoneCallback = .text:0x80021800; // type:function size:0x324
BlockReadCallback = .text:0x80021B24; // type:function size:0xDC
__CARDRead = .text:0x80021C00; // type:function size:0x64
BlockWriteCallback = .text:0x80021C64; // type:function size:0xDC
__CARDWrite = .text:0x80021D40; // type:function size:0x64
__CARDGetFatBlock = .text:0x80021DA4; // type:function size:0x8
WriteCallback = .text:0x80021DAC; // type:function size:0xD4 scope:local
EraseCallback = .text:0x80021E80; // type:function size:0xC8 scope:local
__CARDAllocBlock = .text:0x80021F48; // type:function size:0x118
__CARDFreeBlock = .text:0x80022060; // type:function size:0x9C
__CARDUpdateFatBlock = .text:0x800220FC; // type:function size:0xAC
__CARDGetDirBlock = .text:0x800221A8; // type:function size:0x8
WriteCallback = .text:0x800221B0; // type:function size:0xD0 scope:local
EraseCallback = .text:0x80022280; // type:function size:0xC8 scope:local
__CARDUpdateDir = .text:0x80022348; // type:function size:0xC4
__CARDCheckSum = .text:0x8002240C; // type:function size:0x1B0
VerifyID = .text:0x800225BC; // type:function size:0x284
VerifyDir = .text:0x80022840; // type:function size:0x240
VerifyFAT = .text:0x80022A80; // type:function size:0x284
__CARDVerify = .text:0x80022D04; // type:function size:0x8C
CARDCheckExAsync = .text:0x80022D90; // type:function size:0x590
CARDCheckAsync = .text:0x80023320; // type:function size:0x28
CARDCheck = .text:0x80023348; // type:function size:0x54
IsCard = .text:0x8002339C; // type:function size:0xCC
CARDProbeEx = .text:0x80023468; // type:function size:0x17C
DoMount = .text:0x800235E4; // type:function size:0x410
__CARDMountCallback = .text:0x800239F4; // type:function size:0x138
CARDMountAsync = .text:0x80023B2C; // type:function size:0x1A0
CARDMount = .text:0x80023CCC; // type:function size:0x48
DoUnmount = .text:0x80023D14; // type:function size:0x9C
CARDUnmount = .text:0x80023DB0; // type:function size:0xAC
FormatCallback = .text:0x80023E5C; // type:function size:0x144
__CARDFormatRegionAsync = .text:0x80023FA0; // type:function size:0x658
CARDFormatAsync = .text:0x800245F8; // type:function size:0x48
__CARDCompareFileName = .text:0x80024640; // type:function size:0x68
__CARDAccess = .text:0x800246A8; // type:function size:0x98
__CARDIsPublic = .text:0x80024740; // type:function size:0x30
__CARDGetFileNo = .text:0x80024770; // type:function size:0x150
CARDFastOpen = .text:0x800248C0; // type:function size:0x160
CARDOpen = .text:0x80024A20; // type:function size:0x178
CARDClose = .text:0x80024B98; // type:function size:0x54
__CARDIsOpened = .text:0x80024BEC; // type:function size:0x8
CreateCallbackFat = .text:0x80024BF4; // type:function size:0x130
CARDCreateAsync = .text:0x80024D24; // type:function size:0x220
CARDCreate = .text:0x80024F44; // type:function size:0x48
__CARDSeek = .text:0x80024F8C; // type:function size:0x1B8
ReadCallback = .text:0x80025144; // type:function size:0x130
CARDReadAsync = .text:0x80025274; // type:function size:0x148
CARDRead = .text:0x800253BC; // type:function size:0x48
WriteCallback = .text:0x80025404; // type:function size:0x170 scope:local
EraseCallback = .text:0x80025574; // type:function size:0xB0 scope:local
CARDWriteAsync = .text:0x80025624; // type:function size:0x114
CARDWrite = .text:0x80025738; // type:function size:0x48
DeleteCallback = .text:0x80025780; // type:function size:0xA4
CARDFastDeleteAsync = .text:0x80025824; // type:function size:0x12C
CARDDeleteAsync = .text:0x80025950; // type:function size:0x110
CARDDelete = .text:0x80025A60; // type:function size:0x48
UpdateIconOffsets = .text:0x80025AA8; // type:function size:0x1F8
CARDGetStatus = .text:0x80025CA0; // type:function size:0x12C
CARDSetStatusAsync = .text:0x80025DCC; // type:function size:0x174
CARDSetStatus = .text:0x80025F40; // type:function size:0x48
CARDGetSerialNo = .text:0x80025F88; // type:function size:0xC4
DBInit = .text:0x8002604C; // type:function size:0x28 scope:global
__DBExceptionDestinationAux = .text:0x80026074; // type:function size:0x48
__DBExceptionDestination = .text:0x800260BC; // type:function size:0x10 scope:global
__DBIsExceptionMarked = .text:0x800260CC; // type:function size:0x1C scope:global
DBPrintf = .text:0x800260E8; // type:function size:0x50 scope:global
DSPCheckMailToDSP = .text:0x80026138; // type:function size:0x10
DSPCheckMailFromDSP = .text:0x80026148; // type:function size:0x10
DSPReadMailFromDSP = .text:0x80026158; // type:function size:0x18
DSPSendMailToDSP = .text:0x80026170; // type:function size:0x14
DSPInit = .text:0x80026184; // type:function size:0xB8
DSPCheckInit = .text:0x8002623C; // type:function size:0x8
DSPAddTask = .text:0x80026244; // type:function size:0x70
DSPAssertTask = .text:0x800262B4; // type:function size:0xC8
__DSP_debug_printf = .text:0x8002637C; // type:function size:0x50
__DSPHandler = .text:0x800263CC; // type:function size:0x424
__DSP_exec_task = .text:0x800267F0; // type:function size:0x1A0
__DSP_boot_task = .text:0x80026990; // type:function size:0x18C
__DSP_insert_task = .text:0x80026B1C; // type:function size:0xA0
__DSP_remove_task = .text:0x80026BBC; // type:function size:0x94
__DVDInitWA = .text:0x80026C50; // type:function size:0x40 scope:weak
__DVDInterruptHandler = .text:0x80026C90; // type:function size:0x2E0 scope:weak
AlarmHandler = .text:0x80026F70; // type:function size:0x84
AlarmHandlerForTimeout = .text:0x80026FF4; // type:function size:0x70 scope:local
Read = .text:0x80027064; // type:function size:0x110
SeekTwiceBeforeRead = .text:0x80027174; // type:function size:0x80
DVDLowRead = .text:0x800271F4; // type:function size:0x298
DVDLowSeek = .text:0x8002748C; // type:function size:0x94
DVDLowWaitCoverClose = .text:0x80027520; // type:function size:0x2C scope:weak
DVDLowReadDiskID = .text:0x8002754C; // type:function size:0xA4
DVDLowStopMotor = .text:0x800275F0; // type:function size:0x8C scope:weak
DVDLowRequestError = .text:0x8002767C; // type:function size:0x8C
DVDLowInquiry = .text:0x80027708; // type:function size:0x9C
DVDLowAudioStream = .text:0x800277A4; // type:function size:0x98
DVDLowRequestAudioStatus = .text:0x8002783C; // type:function size:0x8C
DVDLowAudioBufferConfig = .text:0x800278C8; // type:function size:0x9C
DVDLowReset = .text:0x80027964; // type:function size:0xBC scope:global
DVDLowBreak = .text:0x80027A20; // type:function size:0x14
DVDLowClearCallback = .text:0x80027A34; // type:function size:0x18
__DVDLowSetWAType = .text:0x80027A4C; // type:function size:0x44 scope:global
__DVDFSInit = .text:0x80027A90; // type:function size:0x38 scope:global
DVDConvertPathToEntrynum = .text:0x80027AC8; // type:function size:0x2F4
DVDOpen = .text:0x80027DBC; // type:function size:0xC8
DVDClose = .text:0x80027E84; // type:function size:0x24
entryToPath = .text:0x80027EA8; // type:function size:0x160
DVDGetCurrentDir = .text:0x80028008; // type:function size:0xC4
DVDReadAsyncPrio = .text:0x800280CC; // type:function size:0xC0
cbForReadAsync = .text:0x8002818C; // type:function size:0x30
DVDReadPrio = .text:0x800281BC; // type:function size:0x118
cbForReadSync = .text:0x800282D4; // type:function size:0x24
DVDGetTransferredSize = .text:0x800282F8; // type:function size:0x6C
defaultOptionalCommandChecker = .text:0x80028364; // type:function size:0x4
DVDInit = .text:0x80028368; // type:function size:0xCC scope:global
stateReadingFST = .text:0x80028434; // type:function size:0x94
cbForStateReadingFST = .text:0x800284C8; // type:function size:0x8C
cbForStateError = .text:0x80028554; // type:function size:0xAC scope:local
stateTimeout = .text:0x80028600; // type:function size:0x34
stateGettingError = .text:0x80028634; // type:function size:0x28
CategorizeError = .text:0x8002865C; // type:function size:0xB4
cbForStateGettingError = .text:0x80028710; // type:function size:0x294
cbForUnrecoveredError = .text:0x800289A4; // type:function size:0x68
cbForUnrecoveredErrorRetry = .text:0x80028A0C; // type:function size:0x98
stateGoToRetry = .text:0x80028AA4; // type:function size:0x28
cbForStateGoToRetry = .text:0x80028ACC; // type:function size:0x158
stateCheckID = .text:0x80028C24; // type:function size:0xE0
stateCheckID3 = .text:0x80028D04; // type:function size:0x34
stateCheckID2a = .text:0x80028D38; // type:function size:0x34
cbForStateCheckID2a = .text:0x80028D6C; // type:function size:0x74
stateCheckID2 = .text:0x80028DE0; // type:function size:0x38
cbForStateCheckID1 = .text:0x80028E18; // type:function size:0x114
cbForStateCheckID2 = .text:0x80028F2C; // type:function size:0xE4
cbForStateCheckID3 = .text:0x80029010; // type:function size:0xFC
AlarmHandler = .text:0x8002910C; // type:function size:0x44 scope:local
stateCoverClosed = .text:0x80029150; // type:function size:0xCC
stateCoverClosed_CMD = .text:0x8002921C; // type:function size:0x30
cbForStateCoverClosed = .text:0x8002924C; // type:function size:0x70
stateMotorStopped = .text:0x800292BC; // type:function size:0x28
cbForStateMotorStopped = .text:0x800292E4; // type:function size:0xE4 scope:local
stateReady = .text:0x800293C8; // type:function size:0x230 scope:local
stateBusy = .text:0x800295F8; // type:function size:0x320 scope:local
cbForStateBusy = .text:0x80029918; // type:function size:0x638
DVDReadAbsAsyncPrio = .text:0x80029F50; // type:function size:0xDC
DVDReadAbsAsyncForBS = .text:0x8002A02C; // type:function size:0xD0
DVDReadDiskID = .text:0x8002A0FC; // type:function size:0xD4 scope:global
DVDCancelStreamAsync = .text:0x8002A1D0; // type:function size:0xBC
DVDInquiryAsync = .text:0x8002A28C; // type:function size:0xD0 scope:global
DVDReset = .text:0x8002A35C; // type:function size:0x44 scope:global
DVDGetCommandBlockStatus = .text:0x8002A3A0; // type:function size:0x4C
DVDGetDriveStatus = .text:0x8002A3EC; // type:function size:0xAC scope:global
DVDSetAutoInvalidation = .text:0x8002A498; // type:function size:0x10
DVDResume = .text:0x8002A4A8; // type:function size:0x50
DVDCancelAsync = .text:0x8002A4F8; // type:function size:0x27C
DVDCancel = .text:0x8002A774; // type:function size:0xAC
cbForCancelSync = .text:0x8002A820; // type:function size:0x24
DVDGetCurrentDiskID = .text:0x8002A844; // type:function size:0x8
DVDCheckDisk = .text:0x8002A84C; // type:function size:0xF8
__DVDPrepareResetAsync = .text:0x8002A944; // type:function size:0x11C
__DVDClearWaitingQueue = .text:0x8002AA60; // type:function size:0x38 scope:global
__DVDPushWaitingQueue = .text:0x8002AA98; // type:function size:0x68 scope:global
__DVDPopWaitingQueue = .text:0x8002AB00; // type:function size:0xA0 scope:global
__DVDCheckWaitingQueue = .text:0x8002ABA0; // type:function size:0x58 scope:global
__DVDDequeueWaitingQueue = .text:0x8002ABF8; // type:function size:0x60
ErrorCode2Num = .text:0x8002AC58; // type:function size:0x11C scope:local
__DVDStoreErrorCode = .text:0x8002AD74; // type:function size:0x7C scope:global
DVDCompareDiskID = .text:0x8002ADF0; // type:function size:0xF8
__DVDPrintFatalMessage = .text:0x8002AEE8; // type:function size:0x30
cb = .text:0x8002AF18; // type:function size:0xD8 scope:local
__fstLoad = .text:0x8002AFF0; // type:function size:0x168 scope:global
SetExiInterruptMask = .text:0x8002B158; // type:function size:0xF4 scope:local
EXIImm = .text:0x8002B24C; // type:function size:0x25C scope:global
EXIImmEx = .text:0x8002B4A8; // type:function size:0xA0
EXIDma = .text:0x8002B548; // type:function size:0xEC scope:global
EXISync = .text:0x8002B634; // type:function size:0x24C scope:global
EXIClearInterrupts = .text:0x8002B880; // type:function size:0x48 scope:global
EXISetExiCallback = .text:0x8002B8C8; // type:function size:0x7C
__EXIProbe = .text:0x8002B944; // type:function size:0x174 scope:local
EXIProbe = .text:0x8002BAB8; // type:function size:0x80
EXIProbeEx = .text:0x8002BB38; // type:function size:0xB4
EXIAttach = .text:0x8002BBEC; // type:function size:0x10C
EXIDetach = .text:0x8002BCF8; // type:function size:0xBC
EXISelect = .text:0x8002BDB4; // type:function size:0x12C scope:global
EXIDeselect = .text:0x8002BEE0; // type:function size:0x110 scope:global
EXIIntrruptHandler = .text:0x8002BFF0; // type:function size:0xC8 scope:local
TCIntrruptHandler = .text:0x8002C0B8; // type:function size:0x218 scope:local
EXTIntrruptHandler = .text:0x8002C2D0; // type:function size:0xD0 scope:local
EXIInit = .text:0x8002C3A0; // type:function size:0x164 scope:global
EXILock = .text:0x8002C504; // type:function size:0xF4 scope:global
EXIUnlock = .text:0x8002C5F8; // type:function size:0xDC scope:global
EXIGetState = .text:0x8002C6D4; // type:function size:0x18
UnlockedHandler = .text:0x8002C6EC; // type:function size:0x28 scope:local
EXIGetID = .text:0x8002C714; // type:function size:0x3B0 scope:global
InitializeUART = .text:0x8002CAC4; // type:function size:0x70
WriteUARTN = .text:0x8002CB34; // type:function size:0x21C
__GXDefaultTexRegionCallback = .text:0x8002CD50; // type:function size:0x7C
__GXDefaultTlutRegionCallback = .text:0x8002CDCC; // type:function size:0x24
GXInit = .text:0x8002CDF0; // type:function size:0x86C scope:global
__GXInitGX = .text:0x8002D65C; // type:function size:0x8C4 scope:global
fn_8002DF20 = .text:0x8002DF20; // type:function size:0x134
GXInitFifoBase = .text:0x8002E054; // type:function size:0x6C scope:global
fn_8002E0C0 = .text:0x8002E0C0; // type:function size:0x70
fn_8002E130 = .text:0x8002E130; // type:function size:0xC
GXSetCPUFifo = .text:0x8002E13C; // type:function size:0x110 scope:global
GXSetGPFifo = .text:0x8002E24C; // type:function size:0x178 scope:global
__GXFifoInit = .text:0x8002E3C4; // type:function size:0x4C scope:global
fn_8002E410 = .text:0x8002E410; // type:function size:0x24
fn_8002E434 = .text:0x8002E434; // type:function size:0x20
fn_8002E454 = .text:0x8002E454; // type:function size:0x3C
fn_8002E490 = .text:0x8002E490; // type:function size:0x3C
fn_8002E4CC = .text:0x8002E4CC; // type:function size:0x3C
fn_8002E508 = .text:0x8002E508; // type:function size:0x158
fn_8002E660 = .text:0x8002E660; // type:function size:0x350
fn_8002E9B0 = .text:0x8002E9B0; // type:function size:0x54
fn_8002EA04 = .text:0x8002EA04; // type:function size:0x124
fn_8002EB28 = .text:0x8002EB28; // type:function size:0x38
fn_8002EB60 = .text:0x8002EB60; // type:function size:0x358
fn_8002EEB8 = .text:0x8002EEB8; // type:function size:0x378
fn_8002F230 = .text:0x8002F230; // type:function size:0x9C
fn_8002F2CC = .text:0x8002F2CC; // type:function size:0x8C
fn_8002F358 = .text:0x8002F358; // type:function size:0x10
fn_8002F368 = .text:0x8002F368; // type:function size:0x2D0
fn_8002F638 = .text:0x8002F638; // type:function size:0x40
GXSetMisc = .text:0x8002F678; // type:function size:0x6C scope:global
fn_8002F6E4 = .text:0x8002F6E4; // type:function size:0x5C
fn_8002F740 = .text:0x8002F740; // type:function size:0x80
fn_8002F7C0 = .text:0x8002F7C0; // type:function size:0x24
fn_8002F7E4 = .text:0x8002F7E4; // type:function size:0x14
fn_8002F7F8 = .text:0x8002F7F8; // type:function size:0x14
fn_8002F80C = .text:0x8002F80C; // type:function size:0x1C
fn_8002F828 = .text:0x8002F828; // type:function size:0x88
fn_8002F8B0 = .text:0x8002F8B0; // type:function size:0x1C
fn_8002F8CC = .text:0x8002F8CC; // type:function size:0x14
fn_8002F8E0 = .text:0x8002F8E0; // type:function size:0x1C
fn_8002F8FC = .text:0x8002F8FC; // type:function size:0x28
fn_8002F924 = .text:0x8002F924; // type:function size:0x24
fn_8002F948 = .text:0x8002F948; // type:function size:0x88
fn_8002F9D0 = .text:0x8002F9D0; // type:function size:0x84
__GXPEInit = .text:0x8002FA54; // type:function size:0x80 scope:global
fn_8002FAD4 = .text:0x8002FAD4; // type:function size:0xA0
fn_8002FB74 = .text:0x8002FB74; // type:function size:0xF0
fn_8002FC64 = .text:0x8002FC64; // type:function size:0x88
fn_8002FCEC = .text:0x8002FCEC; // type:function size:0x48
fn_8002FD34 = .text:0x8002FD34; // type:function size:0x48
fn_8002FD7C = .text:0x8002FD7C; // type:function size:0x5C
fn_8002FDD8 = .text:0x8002FDD8; // type:function size:0x4C
fn_8002FE24 = .text:0x8002FE24; // type:function size:0x44
fn_8002FE68 = .text:0x8002FE68; // type:function size:0x3C
fn_8002FEA4 = .text:0x8002FEA4; // type:function size:0x24
fn_8002FEC8 = .text:0x8002FEC8; // type:function size:0x120
fn_8002FFE8 = .text:0x8002FFE8; // type:function size:0x90
fn_80030078 = .text:0x80030078; // type:function size:0x90
fn_80030108 = .text:0x80030108; // type:function size:0x3C
fn_80030144 = .text:0x80030144; // type:function size:0x154
fn_80030298 = .text:0x80030298; // type:function size:0x28
fn_800302C0 = .text:0x800302C0; // type:function size:0x68
fn_80030328 = .text:0x80030328; // type:function size:0xC8
fn_800303F0 = .text:0x800303F0; // type:function size:0x68
fn_80030458 = .text:0x80030458; // type:function size:0x228
fn_80030680 = .text:0x80030680; // type:function size:0x1C
fn_8003069C = .text:0x8003069C; // type:function size:0x15C
fn_800307F8 = .text:0x800307F8; // type:function size:0x17C
fn_80030974 = .text:0x80030974; // type:function size:0x38
fn_800309AC = .text:0x800309AC; // type:function size:0x10
fn_800309BC = .text:0x800309BC; // type:function size:0xC
fn_800309C8 = .text:0x800309C8; // type:function size:0x7C
fn_80030A44 = .text:0x80030A44; // type:function size:0xF4
fn_80030B38 = .text:0x80030B38; // type:function size:0xF4
fn_80030C2C = .text:0x80030C2C; // type:function size:0x44
fn_80030C70 = .text:0x80030C70; // type:function size:0xCC
fn_80030D3C = .text:0x80030D3C; // type:function size:0x15C
fn_80030E98 = .text:0x80030E98; // type:function size:0xC8
fn_80030F60 = .text:0x80030F60; // type:function size:0x274
fn_800311D4 = .text:0x800311D4; // type:function size:0x48
fn_8003121C = .text:0x8003121C; // type:function size:0x194
fn_800313B0 = .text:0x800313B0; // type:function size:0x8
fn_800313B8 = .text:0x800313B8; // type:function size:0x198
fn_80031550 = .text:0x80031550; // type:function size:0x54
GXInitTexCacheRegion = .text:0x800315A4; // type:function size:0x120 scope:global
GXInitTlutRegion = .text:0x800316C4; // type:function size:0x48 scope:global
fn_8003170C = .text:0x8003170C; // type:function size:0x48
fn_80031754 = .text:0x80031754; // type:function size:0x14
fn_80031768 = .text:0x80031768; // type:function size:0x14
fn_8003177C = .text:0x8003177C; // type:function size:0xB8
fn_80031834 = .text:0x80031834; // type:function size:0x17C
__GXSetTmemConfig = .text:0x800319B0; // type:function size:0x240 scope:global
fn_80031BF0 = .text:0x80031BF0; // type:function size:0x9C
fn_80031C8C = .text:0x80031C8C; // type:function size:0x160
fn_80031DEC = .text:0x80031DEC; // type:function size:0x17C
fn_80031F68 = .text:0x80031F68; // type:function size:0x114
fn_8003207C = .text:0x8003207C; // type:function size:0x28
fn_800320A4 = .text:0x800320A4; // type:function size:0x48
fn_800320EC = .text:0x800320EC; // type:function size:0x64
fn_80032150 = .text:0x80032150; // type:function size:0xCC
__GXFlushTextureState = .text:0x8003221C; // type:function size:0x24 scope:global
fn_80032240 = .text:0x80032240; // type:function size:0x8C
fn_800322CC = .text:0x800322CC; // type:function size:0x44
fn_80032310 = .text:0x80032310; // type:function size:0x44
fn_80032354 = .text:0x80032354; // type:function size:0x68
fn_800323BC = .text:0x800323BC; // type:function size:0x68
fn_80032424 = .text:0x80032424; // type:function size:0x6C
fn_80032490 = .text:0x80032490; // type:function size:0x6C
fn_800324FC = .text:0x800324FC; // type:function size:0x54
fn_80032550 = .text:0x80032550; // type:function size:0x98
fn_800325E8 = .text:0x800325E8; // type:function size:0x54
fn_8003263C = .text:0x8003263C; // type:function size:0x84
fn_800326C0 = .text:0x800326C0; // type:function size:0x1D8
fn_80032898 = .text:0x80032898; // type:function size:0x30
fn_800328C8 = .text:0x800328C8; // type:function size:0x21C
fn_80032AE4 = .text:0x80032AE4; // type:function size:0x1C8
fn_80032CAC = .text:0x80032CAC; // type:function size:0x100
fn_80032DAC = .text:0x80032DAC; // type:function size:0x54
fn_80032E00 = .text:0x80032E00; // type:function size:0x2C
fn_80032E2C = .text:0x80032E2C; // type:function size:0x2C
fn_80032E58 = .text:0x80032E58; // type:function size:0x34
fn_80032E8C = .text:0x80032E8C; // type:function size:0x38
fn_80032EC4 = .text:0x80032EC4; // type:function size:0xE8
fn_80032FAC = .text:0x80032FAC; // type:function size:0x2C
fn_80032FD8 = .text:0x80032FD8; // type:function size:0x3C
fn_80033014 = .text:0x80033014; // type:function size:0x38
fn_8003304C = .text:0x8003304C; // type:function size:0x7C
fn_800330C8 = .text:0x800330C8; // type:function size:0x4
fn_800330CC = .text:0x800330CC; // type:function size:0x174
fn_80033240 = .text:0x80033240; // type:function size:0xB4
fn_800332F4 = .text:0x800332F4; // type:function size:0xC0
fn_800333B4 = .text:0x800333B4; // type:function size:0x60
fn_80033414 = .text:0x80033414; // type:function size:0x50
fn_80033464 = .text:0x80033464; // type:function size:0x50
fn_800334B4 = .text:0x800334B4; // type:function size:0x38
fn_800334EC = .text:0x800334EC; // type:function size:0xB4
fn_800335A0 = .text:0x800335A0; // type:function size:0x104
fn_800336A4 = .text:0x800336A4; // type:function size:0x24
fn_800336C8 = .text:0x800336C8; // type:function size:0x38
fn_80033700 = .text:0x80033700; // type:function size:0x90
fn_80033790 = .text:0x80033790; // type:function size:0x40
fn_800337D0 = .text:0x800337D0; // type:function size:0x28
fn_800337F8 = .text:0x800337F8; // type:function size:0x84
fn_8003387C = .text:0x8003387C; // type:function size:0x848
fn_800340C4 = .text:0x800340C4; // type:function size:0x10
fn_800340D4 = .text:0x800340D4; // type:function size:0x3C
fn_80034110 = .text:0x80034110; // type:function size:0x30
fn_80034140 = .text:0x80034140; // type:function size:0x6C
fn_800341AC = .text:0x800341AC; // type:function size:0xC8
fn_80034274 = .text:0x80034274; // type:function size:0x2FC
fn_80034570 = .text:0x80034570; // type:function size:0x168
fn_800346D8 = .text:0x800346D8; // type:function size:0x12C
fn_80034804 = .text:0x80034804; // type:function size:0x17C
fn_80034980 = .text:0x80034980; // type:function size:0x17C
fn_80034AFC = .text:0x80034AFC; // type:function size:0xBC
fn_80034BB8 = .text:0x80034BB8; // type:function size:0xC8
fn_80034C80 = .text:0x80034C80; // type:function size:0x8
fn_80034C88 = .text:0x80034C88; // type:function size:0xE74
fn_80035AFC = .text:0x80035AFC; // type:function size:0x20
fn_80035B1C = .text:0x80035B1C; // type:function size:0x28
fn_80035B44 = .text:0x80035B44; // type:function size:0x6C
fn_80035BB0 = .text:0x80035BB0; // type:function size:0x107C
fn_80036C2C = .text:0x80036C2C; // type:function size:0x2C
fn_80036C58 = .text:0x80036C58; // type:function size:0x34
fn_80036C8C = .text:0x80036C8C; // type:function size:0xCC
fn_80036D58 = .text:0x80036D58; // type:function size:0xF8
fn_80036E50 = .text:0x80036E50; // type:function size:0x70
fn_80036EC0 = .text:0x80036EC0; // type:function size:0xA8
fn_80036F68 = .text:0x80036F68; // type:function size:0x104
fn_8003706C = .text:0x8003706C; // type:function size:0x34
fn_800370A0 = .text:0x800370A0; // type:function size:0x28
fn_800370C8 = .text:0x800370C8; // type:function size:0xA4
fn_8003716C = .text:0x8003716C; // type:function size:0x18C
fn_800372F8 = .text:0x800372F8; // type:function size:0xCC
fn_800373C4 = .text:0x800373C4; // type:function size:0x54
fn_80037418 = .text:0x80037418; // type:function size:0x54
fn_8003746C = .text:0x8003746C; // type:function size:0xD0
fn_8003753C = .text:0x8003753C; // type:function size:0x98
fn_800375D4 = .text:0x800375D4; // type:function size:0x44
fn_80037618 = .text:0x80037618; // type:function size:0x3C
fn_80037654 = .text:0x80037654; // type:function size:0x4C
Hu_IsStub = .text:0x800376A0; // type:function size:0x8 scope:weak
OSGetConsoleType = .text:0x800376A8; // type:function size:0x28 scope:global
ClearArena = .text:0x800376D0; // type:function size:0x128 scope:local
InquiryCallback = .text:0x800377F8; // type:function size:0x3C scope:local
OSInit = .text:0x80037834; // type:function size:0x378 scope:global
OSExceptionInit = .text:0x80037BAC; // type:function size:0x280 scope:local
__OSDBINTSTART = .text:0x80037E2C; // type:label scope:global
__OSDBIntegrator = .text:0x80037E2C; // type:function size:0x24 scope:local
__OSDBINTEND = .text:0x80037E50; // type:label scope:global
fn_80037E50 = .text:0x80037E50; // type:function size:0x4
__OSDBJUMPEND = .text:0x80037E54; // type:label scope:global
__OSSetExceptionHandler = .text:0x80037E54; // type:function size:0x1C scope:global
__OSGetExceptionHandler = .text:0x80037E70; // type:function size:0x14 scope:global
__OSEVStart = .text:0x80037E84; // type:label scope:global
OSExceptionVector = .text:0x80037E84; // type:function size:0x9C scope:local
__DBVECTOR = .text:0x80037EDC; // type:label scope:global data:4byte
__OSEVSetNumber = .text:0x80037EEC; // type:label scope:global data:4byte
__OSEVEnd = .text:0x80037F1C; // type:label scope:global
OSDefaultExceptionHandler = .text:0x80037F20; // type:function size:0x58 scope:global
__OSPSInit = .text:0x80037F78; // type:function size:0x38 scope:global
fn_80037FB0 = .text:0x80037FB0; // type:function size:0x14
OSRegisterVersion = .text:0x80037FC4; // type:function size:0x2C scope:global
OSInitAlarm = .text:0x80037FF0; // type:function size:0x4C scope:global
OSCreateAlarm = .text:0x8003803C; // type:function size:0x10 scope:global
InsertAlarm = .text:0x8003804C; // type:function size:0x250 scope:local
OSSetAlarm = .text:0x8003829C; // type:function size:0x68 scope:global
fn_80038304 = .text:0x80038304; // type:function size:0x11C
DecrementerExceptionCallback = .text:0x80038420; // type:function size:0x230 scope:local
DecrementerExceptionHandler = .text:0x80038650; // type:function size:0x50 scope:local
fn_800386A0 = .text:0x800386A0; // type:function size:0xAC
fn_8003874C = .text:0x8003874C; // type:function size:0xFC
fn_80038848 = .text:0x80038848; // type:function size:0x7C
fn_800388C4 = .text:0x800388C4; // type:function size:0x10
fn_800388D4 = .text:0x800388D4; // type:function size:0x70
fn_80038944 = .text:0x80038944; // type:function size:0x6C
fn_800389B0 = .text:0x800389B0; // type:function size:0x360
fn_80038D10 = .text:0x80038D10; // type:function size:0x104
OSGetArenaHi = .text:0x80038E14; // type:function size:0x8 scope:global
OSGetArenaLo = .text:0x80038E1C; // type:function size:0x8 scope:global
OSSetArenaHi = .text:0x80038E24; // type:function size:0x8 scope:global
OSSetArenaLo = .text:0x80038E2C; // type:function size:0x8 scope:global
fn_80038E34 = .text:0x80038E34; // type:function size:0x2C
__OSInitAudioSystem = .text:0x80038E60; // type:function size:0x1BC scope:global
__OSStopAudioSystem = .text:0x8003901C; // type:function size:0xD8 scope:global
DCEnable = .text:0x800390F4; // type:function size:0x14 scope:global
DCInvalidateRange = .text:0x80039108; // type:function size:0x2C scope:global
DCFlushRange = .text:0x80039134; // type:function size:0x30 scope:global
fn_80039164 = .text:0x80039164; // type:function size:0x30
DCFlushRangeNoSync = .text:0x80039194; // type:function size:0x2C scope:global
ICInvalidateRange = .text:0x800391C0; // type:function size:0x34 scope:global
ICFlashInvalidate = .text:0x800391F4; // type:function size:0x10 scope:global
ICEnable = .text:0x80039204; // type:function size:0x14 scope:global
fn_80039218 = .text:0x80039218; // type:function size:0xCC
fn_800392E4 = .text:0x800392E4; // type:function size:0x38
LCDisable = .text:0x8003931C; // type:function size:0x28 scope:global
L2GlobalInvalidate = .text:0x80039344; // type:function size:0x98 scope:global
DMAErrorHandler = .text:0x800393DC; // type:function size:0x160 scope:global
__OSCacheInit = .text:0x8003953C; // type:function size:0xF4 scope:global
__OSLoadFPUContext = .text:0x80039630; // type:function size:0x124 scope:local
__OSSaveFPUContext = .text:0x80039754; // type:function size:0x128 scope:local
OSSaveFPUContext = .text:0x8003987C; // type:function size:0x8 scope:global
OSSetCurrentContext = .text:0x80039884; // type:function size:0x5C scope:global
fn_800398E0 = .text:0x800398E0; // type:function size:0xC
fn_800398EC = .text:0x800398EC; // type:function size:0x80
OSLoadContext = .text:0x8003996C; // type:function size:0xD8 scope:global
fn_80039A44 = .text:0x80039A44; // type:function size:0x8
OSClearContext = .text:0x80039A4C; // type:function size:0x24 scope:global
fn_80039A70 = .text:0x80039A70; // type:function size:0xBC
OSDumpContext = .text:0x80039B2C; // type:function size:0x2A8 scope:global
OSSwitchFPUContext = .text:0x80039DD4; // type:function size:0x84 scope:local
__OSContextInit = .text:0x80039E58; // type:function size:0x48 scope:global
OSReport = .text:0x80039EA0; // type:function size:0x80 scope:global
fn_80039F20 = .text:0x80039F20; // type:function size:0x12C
OSSetErrorHandler = .text:0x8003A04C; // type:function size:0x218 scope:global
__OSUnhandledException = .text:0x8003A264; // type:function size:0x2E8 scope:global
fn_8003A54C = .text:0x8003A54C; // type:function size:0x58
OSDisableInterrupts = .text:0x8003A5A4; // type:function size:0x14 scope:global
OSEnableInterrupts = .text:0x8003A5B8; // type:function size:0x14 scope:global
OSRestoreInterrupts = .text:0x8003A5CC; // type:function size:0x24 scope:global
__OSSetInterruptHandler = .text:0x8003A5F0; // type:function size:0x1C scope:global
fn_8003A60C = .text:0x8003A60C; // type:function size:0x14
__OSInterruptInit = .text:0x8003A620; // type:function size:0x74 scope:global
fn_8003A694 = .text:0x8003A694; // type:function size:0x2D8
__OSMaskInterrupts = .text:0x8003A96C; // type:function size:0x88 scope:global
__OSUnmaskInterrupts = .text:0x8003A9F4; // type:function size:0x88 scope:global
fn_8003AA7C = .text:0x8003AA7C; // type:function size:0x344
ExternalInterruptHandler = .text:0x8003ADC0; // type:function size:0x50 scope:local
fn_8003AE10 = .text:0x8003AE10; // type:function size:0x4
fn_8003AE14 = .text:0x8003AE14; // type:function size:0x4
fn_8003AE18 = .text:0x8003AE18; // type:function size:0xC
fn_8003AE24 = .text:0x8003AE24; // type:function size:0x2BC
fn_8003B0E0 = .text:0x8003B0E0; // type:function size:0x2E0
fn_8003B3C0 = .text:0x8003B3C0; // type:function size:0x24
fn_8003B3E4 = .text:0x8003B3E4; // type:function size:0x3C
fn_8003B420 = .text:0x8003B420; // type:function size:0x238
fn_8003B658 = .text:0x8003B658; // type:function size:0x1D4
__OSModuleInit = .text:0x8003B82C; // type:function size:0x18 scope:global
fn_8003B844 = .text:0x8003B844; // type:function size:0x3C
MEMIntrruptHandler = .text:0x8003B880; // type:function size:0x6C scope:local
Config24MB = .text:0x8003B8EC; // type:function size:0x80 scope:local
Config48MB = .text:0x8003B96C; // type:function size:0x80 scope:local
RealMode = .text:0x8003B9EC; // type:function size:0x18 scope:local
__OSInitMemoryProtection = .text:0x8003BA04; // type:function size:0x120 scope:global
fn_8003BB24 = .text:0x8003BB24; // type:function size:0x70
fn_8003BB94 = .text:0x8003BB94; // type:function size:0x10
fn_8003BBA4 = .text:0x8003BBA4; // type:function size:0xC
__OSReboot = .text:0x8003BBB0; // type:function size:0x340 scope:global
OSRegisterResetFunction = .text:0x8003BEF0; // type:function size:0x84 scope:global
Reset = .text:0x8003BF74; // type:function size:0x70 scope:local
fn_8003BFE4 = .text:0x8003BFE4; // type:function size:0x48
OSResetSystem = .text:0x8003C02C; // type:function size:0x278 scope:global
OSGetResetCode = .text:0x8003C2A4; // type:function size:0x30 scope:global
__OSResetSWInterruptHandler = .text:0x8003C2D4; // type:function size:0xF4 scope:global
fn_8003C3C8 = .text:0x8003C3C8; // type:function size:0x298
fn_8003C660 = .text:0x8003C660; // type:function size:0x20
fn_8003C680 = .text:0x8003C680; // type:function size:0x60
fn_8003C6E0 = .text:0x8003C6E0; // type:function size:0x118
__OSInitSram = .text:0x8003C7F8; // type:function size:0x134 scope:global
__OSLockSram = .text:0x8003C92C; // type:function size:0x5C scope:global
__OSLockSramEx = .text:0x8003C988; // type:function size:0x5C scope:global
fn_8003C9E4 = .text:0x8003C9E4; // type:function size:0x308
__OSUnlockSram = .text:0x8003CCEC; // type:function size:0x24 scope:global
__OSUnlockSramEx = .text:0x8003CD10; // type:function size:0x24 scope:global
__OSSyncSram = .text:0x8003CD34; // type:function size:0x10 scope:global
fn_8003CD44 = .text:0x8003CD44; // type:function size:0x84
fn_8003CDC8 = .text:0x8003CDC8; // type:function size:0xAC
__OSSystemCallVectorStart = .text:0x8003CE74; // type:label scope:global
fn_8003CE74 = .text:0x8003CE74; // type:function size:0x20
__OSSystemCallVectorEnd = .text:0x8003CE90; // type:label scope:global
__OSInitSystemCall = .text:0x8003CE94; // type:function size:0x64 scope:global
fn_8003CEF8 = .text:0x8003CEF8; // type:function size:0x4
__OSThreadInit = .text:0x8003CEFC; // type:function size:0x158 scope:global
OSInitThreadQueue = .text:0x8003D054; // type:function size:0x10 scope:global
fn_8003D064 = .text:0x8003D064; // type:function size:0xC
OSDisableScheduler = .text:0x8003D070; // type:function size:0x40 scope:global
OSEnableScheduler = .text:0x8003D0B0; // type:function size:0x40 scope:global
fn_8003D0F0 = .text:0x8003D0F0; // type:function size:0x68
fn_8003D158 = .text:0x8003D158; // type:function size:0x3C
fn_8003D194 = .text:0x8003D194; // type:function size:0x1C0
SelectThread = .text:0x8003D354; // type:function size:0x228 scope:local
__OSReschedule = .text:0x8003D57C; // type:function size:0x30 scope:global
fn_8003D5AC = .text:0x8003D5AC; // type:function size:0x1E8
fn_8003D794 = .text:0x8003D794; // type:function size:0xE4
OSCancelThread = .text:0x8003D878; // type:function size:0x1BC scope:global
fn_8003DA34 = .text:0x8003DA34; // type:function size:0x288
fn_8003DCBC = .text:0x8003DCBC; // type:function size:0x170
fn_8003DE2C = .text:0x8003DE2C; // type:function size:0xEC
fn_8003DF18 = .text:0x8003DF18; // type:function size:0x104
fn_8003E01C = .text:0x8003E01C; // type:function size:0xC0
fn_8003E0DC = .text:0x8003E0DC; // type:function size:0x8
OSClearStack = .text:0x8003E0E4; // type:function size:0xAC scope:global
OSGetTime = .text:0x8003E190; // type:function size:0x18 scope:global
OSGetTick = .text:0x8003E1A8; // type:function size:0x8 scope:global
__OSGetSystemTime = .text:0x8003E1B0; // type:function size:0x64 scope:global
fn_8003E214 = .text:0x8003E214; // type:function size:0x19C
fn_8003E3B0 = .text:0x8003E3B0; // type:function size:0x204
__init_user = .text:0x8003E5B4; // type:function size:0x20 scope:global
__init_cpp = .text:0x8003E5D4; // type:function size:0x54 scope:local
_ExitProcess = .text:0x8003E628; // type:function size:0x20 scope:global
fn_8003E648 = .text:0x8003E648; // type:function size:0x1A4
fn_8003E7EC = .text:0x8003E7EC; // type:function size:0xC4
fn_8003E8B0 = .text:0x8003E8B0; // type:function size:0xC0
fn_8003E970 = .text:0x8003E970; // type:function size:0xD8
fn_8003EA48 = .text:0x8003EA48; // type:function size:0x32C
fn_8003ED74 = .text:0x8003ED74; // type:function size:0x134
fn_8003EEA8 = .text:0x8003EEA8; // type:function size:0x100
fn_8003EFA8 = .text:0x8003EFA8; // type:function size:0x210
fn_8003F1B8 = .text:0x8003F1B8; // type:function size:0x3AC
fn_8003F564 = .text:0x8003F564; // type:function size:0xA4
fn_8003F608 = .text:0x8003F608; // type:function size:0x60
fn_8003F668 = .text:0x8003F668; // type:function size:0x174
fn_8003F7DC = .text:0x8003F7DC; // type:function size:0x174
fn_8003F950 = .text:0x8003F950; // type:function size:0x3F8
fn_8003FD48 = .text:0x8003FD48; // type:function size:0x194
fn_8003FEDC = .text:0x8003FEDC; // type:function size:0x60
fn_8003FF3C = .text:0x8003FF3C; // type:function size:0x54
__PADDisableRecalibration = .text:0x8003FF90; // type:function size:0x7C scope:global
fn_8004000C = .text:0x8004000C; // type:function size:0x20
fn_8004002C = .text:0x8004002C; // type:function size:0x3C
fn_80040068 = .text:0x80040068; // type:function size:0x2FC
SIInterruptHandler = .text:0x80040364; // type:function size:0x344 scope:local
fn_800406A8 = .text:0x800406A8; // type:function size:0x98
fn_80040740 = .text:0x80040740; // type:function size:0xCC
fn_8004080C = .text:0x8004080C; // type:function size:0xF4
SIInit = .text:0x80040900; // type:function size:0xA4 scope:global
fn_800409A4 = .text:0x800409A4; // type:function size:0x20C
fn_80040BB0 = .text:0x80040BB0; // type:function size:0x7C
fn_80040C2C = .text:0x80040C2C; // type:function size:0x14
fn_80040C40 = .text:0x80040C40; // type:function size:0x10
SISetXY = .text:0x80040C50; // type:function size:0x6C scope:global
fn_80040CBC = .text:0x80040CBC; // type:function size:0x9C
fn_80040D58 = .text:0x80040D58; // type:function size:0x6C
fn_80040DC4 = .text:0x80040DC4; // type:function size:0xD4
fn_80040E98 = .text:0x80040E98; // type:function size:0xC4
fn_80040F5C = .text:0x80040F5C; // type:function size:0x8C
SITransfer = .text:0x80040FE8; // type:function size:0x16C scope:global
GetTypeCallback = .text:0x80041154; // type:function size:0x298 scope:local
SIGetType = .text:0x800413EC; // type:function size:0x1C4 scope:global
fn_800415B0 = .text:0x800415B0; // type:function size:0x13C
SISetSamplingRate = .text:0x800416EC; // type:function size:0xE4 scope:global
fn_800417D0 = .text:0x800417D0; // type:function size:0x24
fn_800417F4 = .text:0x800417F4; // type:function size:0x228
fn_80041A1C = .text:0x80041A1C; // type:function size:0x44
fn_80041A60 = .text:0x80041A60; // type:function size:0x90
fn_80041AF0 = .text:0x80041AF0; // type:function size:0x1F8
fn_80041CE8 = .text:0x80041CE8; // type:function size:0x478
fn_80042160 = .text:0x80042160; // type:function size:0x54
fn_800421B4 = .text:0x800421B4; // type:function size:0x2D4
fn_80042488 = .text:0x80042488; // type:function size:0x1A0
fn_80042628 = .text:0x80042628; // type:function size:0x79C
fn_80042DC4 = .text:0x80042DC4; // type:function size:0x11C
fn_80042EE0 = .text:0x80042EE0; // type:function size:0x6C
fn_80042F4C = .text:0x80042F4C; // type:function size:0x7C
fn_80042FC8 = .text:0x80042FC8; // type:function size:0x68
fn_80043030 = .text:0x80043030; // type:function size:0xA8
fn_800430D8 = .text:0x800430D8; // type:function size:0x98
VIGetTvFormat = .text:0x80043170; // type:function size:0x7C scope:global
fn_800431EC = .text:0x800431EC; // type:function size:0x54
fn_80043240 = .text:0x80043240; // type:function size:0x24
fn_80043264 = .text:0x80043264; // type:function size:0x3C
fn_800432A0 = .text:0x800432A0; // type:function size:0x1C
fn_800432BC = .text:0x800432BC; // type:function size:0x1C
fn_800432D8 = .text:0x800432D8; // type:function size:0x28
fn_80043300 = .text:0x80043300; // type:function size:0x40
fn_80043340 = .text:0x80043340; // type:function size:0x78
fn_800433B8 = .text:0x800433B8; // type:function size:0x24
fn_800433DC = .text:0x800433DC; // type:function size:0x20
fn_800433FC = .text:0x800433FC; // type:function size:0x68
fn_80043464 = .text:0x80043464; // type:function size:0x68
fn_800434CC = .text:0x800434CC; // type:function size:0x68
fn_80043534 = .text:0x80043534; // type:function size:0x2C
fn_80043560 = .text:0x80043560; // type:function size:0x30
fn_80043590 = .text:0x80043590; // type:function size:0x30
fn_800435C0 = .text:0x800435C0; // type:function size:0x78
fn_80043638 = .text:0x80043638; // type:function size:0x70
fn_800436A8 = .text:0x800436A8; // type:function size:0xAC
fn_80043754 = .text:0x80043754; // type:function size:0xAC
fn_80043800 = .text:0x80043800; // type:function size:0x5C
fn_8004385C = .text:0x8004385C; // type:function size:0x244
fn_80043AA0 = .text:0x80043AA0; // type:function size:0x4C
fn_80043AEC = .text:0x80043AEC; // type:function size:0x2C
fn_80043B18 = .text:0x80043B18; // type:function size:0x78
fn_80043B90 = .text:0x80043B90; // type:function size:0x78
fn_80043C08 = .text:0x80043C08; // type:function size:0x78
fn_80043C80 = .text:0x80043C80; // type:function size:0x70
fn_80043CF0 = .text:0x80043CF0; // type:function size:0x60
fn_80043D50 = .text:0x80043D50; // type:function size:0xB0
fn_80043E00 = .text:0x80043E00; // type:function size:0x94
fn_80043E94 = .text:0x80043E94; // type:function size:0xA8
fn_80043F3C = .text:0x80043F3C; // type:function size:0x160
fn_8004409C = .text:0x8004409C; // type:function size:0x214
fn_800442B0 = .text:0x800442B0; // type:function size:0x68
fn_80044318 = .text:0x80044318; // type:function size:0x1B0
fn_800444C8 = .text:0x800444C8; // type:function size:0x8C
fn_80044554 = .text:0x80044554; // type:function size:0x30
fn_80044584 = .text:0x80044584; // type:function size:0x5C
fn_800445E0 = .text:0x800445E0; // type:function size:0xE4
fn_800446C4 = .text:0x800446C4; // type:function size:0x44
fn_80044708 = .text:0x80044708; // type:function size:0x3C
fn_80044744 = .text:0x80044744; // type:function size:0xC4
fn_80044808 = .text:0x80044808; // type:function size:0x18
fn_80044820 = .text:0x80044820; // type:function size:0x40
fn_80044860 = .text:0x80044860; // type:function size:0x114
fn_80044974 = .text:0x80044974; // type:function size:0x8
fn_8004497C = .text:0x8004497C; // type:function size:0x48
fn_800449C4 = .text:0x800449C4; // type:function size:0xF4
fn_80044AB8 = .text:0x80044AB8; // type:function size:0x8C
fn_80044B44 = .text:0x80044B44; // type:function size:0x2A0
fn_80044DE4 = .text:0x80044DE4; // type:function size:0x8
fn_80044DEC = .text:0x80044DEC; // type:function size:0x8
fn_80044DF4 = .text:0x80044DF4; // type:function size:0x34
fn_80044E28 = .text:0x80044E28; // type:function size:0x4
fn_80044E2C = .text:0x80044E2C; // type:function size:0x2C
fn_80044E58 = .text:0x80044E58; // type:function size:0x1C
fn_80044E74 = .text:0x80044E74; // type:function size:0x138
fn_80044FAC = .text:0x80044FAC; // type:function size:0x2F4
fn_800452A0 = .text:0x800452A0; // type:function size:0x1C4
fn_80045464 = .text:0x80045464; // type:function size:0x1BC
fn_80045620 = .text:0x80045620; // type:function size:0x394
fn_800459B4 = .text:0x800459B4; // type:function size:0x9C
fn_80045A50 = .text:0x80045A50; // type:function size:0x360
fn_80045DB0 = .text:0x80045DB0; // type:function size:0x4
fn_80045DB4 = .text:0x80045DB4; // type:function size:0x28
fn_80045DDC = .text:0x80045DDC; // type:function size:0x18
fn_80045DF4 = .text:0x80045DF4; // type:function size:0xC
fn_80045E00 = .text:0x80045E00; // type:function size:0x20
fn_80045E20 = .text:0x80045E20; // type:function size:0x24
fn_80045E44 = .text:0x80045E44; // type:function size:0x2C
fn_80045E70 = .text:0x80045E70; // type:function size:0x34
fn_80045EA4 = .text:0x80045EA4; // type:function size:0x28
fn_80045ECC = .text:0x80045ECC; // type:function size:0x64
fn_80045F30 = .text:0x80045F30; // type:function size:0x28
fn_80045F58 = .text:0x80045F58; // type:function size:0x30
fn_80045F88 = .text:0x80045F88; // type:function size:0x54
fn_80045FDC = .text:0x80045FDC; // type:function size:0x78
fn_80046054 = .text:0x80046054; // type:function size:0x78
fn_800460CC = .text:0x800460CC; // type:function size:0x50
fn_8004611C = .text:0x8004611C; // type:function size:0x2C
fn_80046148 = .text:0x80046148; // type:function size:0x24
fn_8004616C = .text:0x8004616C; // type:function size:0x78
fn_800461E4 = .text:0x800461E4; // type:function size:0x2C
fn_80046210 = .text:0x80046210; // type:function size:0x2C
fn_8004623C = .text:0x8004623C; // type:function size:0x2C
fn_80046268 = .text:0x80046268; // type:function size:0x1C
fn_80046284 = .text:0x80046284; // type:function size:0x98
fn_8004631C = .text:0x8004631C; // type:function size:0x2C
fn_80046348 = .text:0x80046348; // type:function size:0x164
fn_800464AC = .text:0x800464AC; // type:function size:0x1D8
fn_80046684 = .text:0x80046684; // type:function size:0x80
fn_80046704 = .text:0x80046704; // type:function size:0x80
fn_80046784 = .text:0x80046784; // type:function size:0x4C
fn_800467D0 = .text:0x800467D0; // type:function size:0x24
fn_800467F4 = .text:0x800467F4; // type:function size:0x148
fn_8004693C = .text:0x8004693C; // type:function size:0x148
fn_80046A84 = .text:0x80046A84; // type:function size:0x2C
fn_80046AB0 = .text:0x80046AB0; // type:function size:0x58
fn_80046B08 = .text:0x80046B08; // type:function size:0x80
fn_80046B88 = .text:0x80046B88; // type:function size:0x3C
fn_80046BC4 = .text:0x80046BC4; // type:function size:0x3C
fn_80046C00 = .text:0x80046C00; // type:function size:0x68
fn_80046C68 = .text:0x80046C68; // type:function size:0x2C
fn_80046C94 = .text:0x80046C94; // type:function size:0x60
fn_80046CF4 = .text:0x80046CF4; // type:function size:0x58
fn_80046D4C = .text:0x80046D4C; // type:function size:0x134
fn_80046E80 = .text:0x80046E80; // type:function size:0x4C
fn_80046ECC = .text:0x80046ECC; // type:function size:0x28
fn_80046EF4 = .text:0x80046EF4; // type:function size:0x60
fn_80046F54 = .text:0x80046F54; // type:function size:0x60
fn_80046FB4 = .text:0x80046FB4; // type:function size:0x38
fn_80046FEC = .text:0x80046FEC; // type:function size:0x110
fn_800470FC = .text:0x800470FC; // type:function size:0x5C
fn_80047158 = .text:0x80047158; // type:function size:0x34
fn_8004718C = .text:0x8004718C; // type:function size:0x1B8
fn_80047344 = .text:0x80047344; // type:function size:0x50
fn_80047394 = .text:0x80047394; // type:function size:0xCC
fn_80047460 = .text:0x80047460; // type:function size:0x28
fn_80047488 = .text:0x80047488; // type:function size:0x40
fn_800474C8 = .text:0x800474C8; // type:function size:0xC4
fn_8004758C = .text:0x8004758C; // type:function size:0x9C
fn_80047628 = .text:0x80047628; // type:function size:0x14
fn_8004763C = .text:0x8004763C; // type:function size:0x2C
fn_80047668 = .text:0x80047668; // type:function size:0x144
fn_800477AC = .text:0x800477AC; // type:function size:0x1D4
fn_80047980 = .text:0x80047980; // type:function size:0x4C
fn_800479CC = .text:0x800479CC; // type:function size:0xE0
fn_80047AAC = .text:0x80047AAC; // type:function size:0x58
fn_80047B04 = .text:0x80047B04; // type:function size:0x74
fn_80047B78 = .text:0x80047B78; // type:function size:0x44
fn_80047BBC = .text:0x80047BBC; // type:function size:0x20
fn_80047BDC = .text:0x80047BDC; // type:function size:0x10
fn_80047BEC = .text:0x80047BEC; // type:function size:0xC
fn_80047BF8 = .text:0x80047BF8; // type:function size:0x38
fn_80047C30 = .text:0x80047C30; // type:function size:0x28
fn_80047C58 = .text:0x80047C58; // type:function size:0x44
fn_80047C9C = .text:0x80047C9C; // type:function size:0x68
fn_80047D04 = .text:0x80047D04; // type:function size:0x30
fn_80047D34 = .text:0x80047D34; // type:function size:0x18C
fn_80047EC0 = .text:0x80047EC0; // type:function size:0x10C
fn_80047FCC = .text:0x80047FCC; // type:function size:0x34
fn_80048000 = .text:0x80048000; // type:function size:0x80
fn_80048080 = .text:0x80048080; // type:function size:0x2C
fn_800480AC = .text:0x800480AC; // type:function size:0xDC
fn_80048188 = .text:0x80048188; // type:function size:0x4
fn_8004818C = .text:0x8004818C; // type:function size:0x70
fn_800481FC = .text:0x800481FC; // type:function size:0x98
fn_80048294 = .text:0x80048294; // type:function size:0x98
fn_8004832C = .text:0x8004832C; // type:function size:0x104
fn_80048430 = .text:0x80048430; // type:function size:0xB0
fn_800484E0 = .text:0x800484E0; // type:function size:0x58
fn_80048538 = .text:0x80048538; // type:function size:0x58
fn_80048590 = .text:0x80048590; // type:function size:0x30
fn_800485C0 = .text:0x800485C0; // type:function size:0x8
fn_800485C8 = .text:0x800485C8; // type:function size:0x8
fn_800485D0 = .text:0x800485D0; // type:function size:0x18
fn_800485E8 = .text:0x800485E8; // type:function size:0x4C
fn_80048634 = .text:0x80048634; // type:function size:0x104
fn_80048738 = .text:0x80048738; // type:function size:0x70
fn_800487A8 = .text:0x800487A8; // type:function size:0x18
fn_800487C0 = .text:0x800487C0; // type:function size:0x18
fn_800487D8 = .text:0x800487D8; // type:function size:0x18
fn_800487F0 = .text:0x800487F0; // type:function size:0x18
fn_80048808 = .text:0x80048808; // type:function size:0x68
fn_80048870 = .text:0x80048870; // type:function size:0x68
fn_800488D8 = .text:0x800488D8; // type:function size:0x18
fn_800488F0 = .text:0x800488F0; // type:function size:0x18
fn_80048908 = .text:0x80048908; // type:function size:0x34
fn_8004893C = .text:0x8004893C; // type:function size:0x28
fn_80048964 = .text:0x80048964; // type:function size:0x7C
fn_800489E0 = .text:0x800489E0; // type:function size:0x24
fn_80048A04 = .text:0x80048A04; // type:function size:0x4
fn_80048A08 = .text:0x80048A08; // type:function size:0xBC
fn_80048AC4 = .text:0x80048AC4; // type:function size:0xBC
fn_80048B80 = .text:0x80048B80; // type:function size:0x14
fn_80048B94 = .text:0x80048B94; // type:function size:0xF4
fn_80048C88 = .text:0x80048C88; // type:function size:0x208
fn_80048E90 = .text:0x80048E90; // type:function size:0x4
fn_80048E94 = .text:0x80048E94; // type:function size:0xC
fn_80048EA0 = .text:0x80048EA0; // type:function size:0x18
fn_80048EB8 = .text:0x80048EB8; // type:function size:0xF4
fn_80048FAC = .text:0x80048FAC; // type:function size:0xA8
fn_80049054 = .text:0x80049054; // type:function size:0x198
fn_800491EC = .text:0x800491EC; // type:function size:0x14C
fn_80049338 = .text:0x80049338; // type:function size:0xCC
fn_80049404 = .text:0x80049404; // type:function size:0x11C
fn_80049520 = .text:0x80049520; // type:function size:0x98
fn_800495B8 = .text:0x800495B8; // type:function size:0x38
fn_800495F0 = .text:0x800495F0; // type:function size:0xC
fn_800495FC = .text:0x800495FC; // type:function size:0x14
fn_80049610 = .text:0x80049610; // type:function size:0x38
fn_80049648 = .text:0x80049648; // type:function size:0x1C
fn_80049664 = .text:0x80049664; // type:function size:0x34
fn_80049698 = .text:0x80049698; // type:function size:0x134
fn_800497CC = .text:0x800497CC; // type:function size:0x50
fn_8004981C = .text:0x8004981C; // type:function size:0x138
fn_80049954 = .text:0x80049954; // type:function size:0x23C
fn_80049B90 = .text:0x80049B90; // type:function size:0x24
fn_80049BB4 = .text:0x80049BB4; // type:function size:0x24
fn_80049BD8 = .text:0x80049BD8; // type:function size:0x24
fn_80049BFC = .text:0x80049BFC; // type:function size:0x14
fn_80049C10 = .text:0x80049C10; // type:function size:0xC
fn_80049C1C = .text:0x80049C1C; // type:function size:0x2C
fn_80049C48 = .text:0x80049C48; // type:function size:0x2C
fn_80049C74 = .text:0x80049C74; // type:function size:0x2C
fn_80049CA0 = .text:0x80049CA0; // type:function size:0x28
fn_80049CC8 = .text:0x80049CC8; // type:function size:0x28
fn_80049CF0 = .text:0x80049CF0; // type:function size:0x54
fn_80049D44 = .text:0x80049D44; // type:function size:0x64
fn_80049DA8 = .text:0x80049DA8; // type:function size:0x54
fn_80049DFC = .text:0x80049DFC; // type:function size:0x38
fn_80049E34 = .text:0x80049E34; // type:function size:0x8
fn_80049E3C = .text:0x80049E3C; // type:function size:0xC
fn_80049E48 = .text:0x80049E48; // type:function size:0x2C
fn_80049E74 = .text:0x80049E74; // type:function size:0xA4
fn_80049F18 = .text:0x80049F18; // type:function size:0x54
fn_80049F6C = .text:0x80049F6C; // type:function size:0x7C
fn_80049FE8 = .text:0x80049FE8; // type:function size:0x100
fn_8004A0E8 = .text:0x8004A0E8; // type:function size:0x38
fn_8004A120 = .text:0x8004A120; // type:function size:0x20
fn_8004A140 = .text:0x8004A140; // type:function size:0xD0
fn_8004A210 = .text:0x8004A210; // type:function size:0xE0
fn_8004A2F0 = .text:0x8004A2F0; // type:function size:0xA8
fn_8004A398 = .text:0x8004A398; // type:function size:0x5C
fn_8004A3F4 = .text:0x8004A3F4; // type:function size:0x134
fn_8004A528 = .text:0x8004A528; // type:function size:0x140
fn_8004A668 = .text:0x8004A668; // type:function size:0x58
fn_8004A6C0 = .text:0x8004A6C0; // type:function size:0x100
fn_8004A7C0 = .text:0x8004A7C0; // type:function size:0x2FC
fn_8004AABC = .text:0x8004AABC; // type:function size:0xD8
fn_8004AB94 = .text:0x8004AB94; // type:function size:0xD8
fn_8004AC6C = .text:0x8004AC6C; // type:function size:0x3C
fn_8004ACA8 = .text:0x8004ACA8; // type:function size:0xE4
fn_8004AD8C = .text:0x8004AD8C; // type:function size:0x78
fn_8004AE04 = .text:0x8004AE04; // type:function size:0xF0
fn_8004AEF4 = .text:0x8004AEF4; // type:function size:0x28
fn_8004AF1C = .text:0x8004AF1C; // type:function size:0x28
fn_8004AF44 = .text:0x8004AF44; // type:function size:0x28
fn_8004AF6C = .text:0x8004AF6C; // type:function size:0x28
fn_8004AF94 = .text:0x8004AF94; // type:function size:0x28
fn_8004AFBC = .text:0x8004AFBC; // type:function size:0x4
fn_8004AFC0 = .text:0x8004AFC0; // type:function size:0x104
fn_8004B0C4 = .text:0x8004B0C4; // type:function size:0x168
fn_8004B22C = .text:0x8004B22C; // type:function size:0x78
fn_8004B2A4 = .text:0x8004B2A4; // type:function size:0xA0
fn_8004B344 = .text:0x8004B344; // type:function size:0x78
fn_8004B3BC = .text:0x8004B3BC; // type:function size:0x34
fn_8004B3F0 = .text:0x8004B3F0; // type:function size:0x94
fn_8004B484 = .text:0x8004B484; // type:function size:0x44
fn_8004B4C8 = .text:0x8004B4C8; // type:function size:0x108
fn_8004B5D0 = .text:0x8004B5D0; // type:function size:0x24
fn_8004B5F4 = .text:0x8004B5F4; // type:function size:0x38
fn_8004B62C = .text:0x8004B62C; // type:function size:0x28
fn_8004B654 = .text:0x8004B654; // type:function size:0xD0
fn_8004B724 = .text:0x8004B724; // type:function size:0x4
fn_8004B728 = .text:0x8004B728; // type:function size:0xC
fn_8004B734 = .text:0x8004B734; // type:function size:0x14
fn_8004B748 = .text:0x8004B748; // type:function size:0x4C
fn_8004B794 = .text:0x8004B794; // type:function size:0x20
fn_8004B7B4 = .text:0x8004B7B4; // type:function size:0x94
fn_8004B848 = .text:0x8004B848; // type:function size:0x44
fn_8004B88C = .text:0x8004B88C; // type:function size:0x4
fn_8004B890 = .text:0x8004B890; // type:function size:0x10
fn_8004B8A0 = .text:0x8004B8A0; // type:function size:0xC
fn_8004B8AC = .text:0x8004B8AC; // type:function size:0x14
fn_8004B8C0 = .text:0x8004B8C0; // type:function size:0x20
fn_8004B8E0 = .text:0x8004B8E0; // type:function size:0xB4
fn_8004B994 = .text:0x8004B994; // type:function size:0x44
fn_8004B9D8 = .text:0x8004B9D8; // type:function size:0x4
fn_8004B9DC = .text:0x8004B9DC; // type:function size:0x10
fn_8004B9EC = .text:0x8004B9EC; // type:function size:0xC
fn_8004B9F8 = .text:0x8004B9F8; // type:function size:0x14
fn_8004BA0C = .text:0x8004BA0C; // type:function size:0x54
fn_8004BA60 = .text:0x8004BA60; // type:function size:0xB4
fn_8004BB14 = .text:0x8004BB14; // type:function size:0x40
fn_8004BB54 = .text:0x8004BB54; // type:function size:0x4C
fn_8004BBA0 = .text:0x8004BBA0; // type:function size:0x58
fn_8004BBF8 = .text:0x8004BBF8; // type:function size:0xB8
fn_8004BCB0 = .text:0x8004BCB0; // type:function size:0x40
fn_8004BCF0 = .text:0x8004BCF0; // type:function size:0x4C
fn_8004BD3C = .text:0x8004BD3C; // type:function size:0x128
fn_8004BE64 = .text:0x8004BE64; // type:function size:0x274
fn_8004C0D8 = .text:0x8004C0D8; // type:function size:0x11C
fn_8004C1F4 = .text:0x8004C1F4; // type:function size:0x248
fn_8004C43C = .text:0x8004C43C; // type:function size:0x4EC
fn_8004C928 = .text:0x8004C928; // type:function size:0xF0
fn_8004CA18 = .text:0x8004CA18; // type:function size:0xC
fn_8004CA24 = .text:0x8004CA24; // type:function size:0x14
fn_8004CA38 = .text:0x8004CA38; // type:function size:0x10
fn_8004CA48 = .text:0x8004CA48; // type:function size:0x4
fn_8004CA4C = .text:0x8004CA4C; // type:function size:0x534
fn_8004CF80 = .text:0x8004CF80; // type:function size:0x5C0
fn_8004D540 = .text:0x8004D540; // type:function size:0x4
fn_8004D544 = .text:0x8004D544; // type:function size:0x10
fn_8004D554 = .text:0x8004D554; // type:function size:0xC
fn_8004D560 = .text:0x8004D560; // type:function size:0x14
fn_8004D574 = .text:0x8004D574; // type:function size:0x28
fn_8004D59C = .text:0x8004D59C; // type:function size:0x28
fn_8004D5C4 = .text:0x8004D5C4; // type:function size:0x60
fn_8004D624 = .text:0x8004D624; // type:function size:0xDC
fn_8004D700 = .text:0x8004D700; // type:function size:0x2C
fn_8004D72C = .text:0x8004D72C; // type:function size:0x60
fn_8004D78C = .text:0x8004D78C; // type:function size:0x2C
fn_8004D7B8 = .text:0x8004D7B8; // type:function size:0x60
fn_8004D818 = .text:0x8004D818; // type:function size:0x4B4
fn_8004DCCC = .text:0x8004DCCC; // type:function size:0x13C
fn_8004DE08 = .text:0x8004DE08; // type:function size:0x474
fn_8004E27C = .text:0x8004E27C; // type:function size:0x8C
fn_8004E308 = .text:0x8004E308; // type:function size:0x38
fn_8004E340 = .text:0x8004E340; // type:function size:0x98
fn_8004E3D8 = .text:0x8004E3D8; // type:function size:0x4
fn_8004E3DC = .text:0x8004E3DC; // type:function size:0x8C
fn_8004E468 = .text:0x8004E468; // type:function size:0xB4
fn_8004E51C = .text:0x8004E51C; // type:function size:0x8C
fn_8004E5A8 = .text:0x8004E5A8; // type:function size:0xC8
fn_8004E670 = .text:0x8004E670; // type:function size:0x4
fn_8004E674 = .text:0x8004E674; // type:function size:0xA4
fn_8004E718 = .text:0x8004E718; // type:function size:0xB0
fn_8004E7C8 = .text:0x8004E7C8; // type:function size:0x4C
fn_8004E814 = .text:0x8004E814; // type:function size:0xC4
fn_8004E8D8 = .text:0x8004E8D8; // type:function size:0x4
fn_8004E8DC = .text:0x8004E8DC; // type:function size:0xA0
fn_8004E97C = .text:0x8004E97C; // type:function size:0xD8
fn_8004EA54 = .text:0x8004EA54; // type:function size:0xA0
fn_8004EAF4 = .text:0x8004EAF4; // type:function size:0xE8
fn_8004EBDC = .text:0x8004EBDC; // type:function size:0x4
fn_8004EBE0 = .text:0x8004EBE0; // type:function size:0xA0
fn_8004EC80 = .text:0x8004EC80; // type:function size:0xC8
fn_8004ED48 = .text:0x8004ED48; // type:function size:0x48
fn_8004ED90 = .text:0x8004ED90; // type:function size:0xE0
fn_8004EE70 = .text:0x8004EE70; // type:function size:0x4
fn_8004EE74 = .text:0x8004EE74; // type:function size:0x98
fn_8004EF0C = .text:0x8004EF0C; // type:function size:0xCC
fn_8004EFD8 = .text:0x8004EFD8; // type:function size:0xA4
fn_8004F07C = .text:0x8004F07C; // type:function size:0xE8
fn_8004F164 = .text:0x8004F164; // type:function size:0x4
fn_8004F168 = .text:0x8004F168; // type:function size:0xA8
fn_8004F210 = .text:0x8004F210; // type:function size:0xD4
fn_8004F2E4 = .text:0x8004F2E4; // type:function size:0x5C
fn_8004F340 = .text:0x8004F340; // type:function size:0xE8
fn_8004F428 = .text:0x8004F428; // type:function size:0x4
fn_8004F42C = .text:0x8004F42C; // type:function size:0xA4
fn_8004F4D0 = .text:0x8004F4D0; // type:function size:0xE8
fn_8004F5B8 = .text:0x8004F5B8; // type:function size:0xB8
fn_8004F670 = .text:0x8004F670; // type:function size:0x110
fn_8004F780 = .text:0x8004F780; // type:function size:0x4
fn_8004F784 = .text:0x8004F784; // type:function size:0xB4
fn_8004F838 = .text:0x8004F838; // type:function size:0x1FC
fn_8004FA34 = .text:0x8004FA34; // type:function size:0x4
fn_8004FA38 = .text:0x8004FA38; // type:function size:0x54
fn_8004FA8C = .text:0x8004FA8C; // type:function size:0xA8
fn_8004FB34 = .text:0x8004FB34; // type:function size:0x70
fn_8004FBA4 = .text:0x8004FBA4; // type:function size:0xC8
fn_8004FC6C = .text:0x8004FC6C; // type:function size:0x8
fn_8004FC74 = .text:0x8004FC74; // type:function size:0x84
fn_8004FCF8 = .text:0x8004FCF8; // type:function size:0x88
fn_8004FD80 = .text:0x8004FD80; // type:function size:0x1CC
fn_8004FF4C = .text:0x8004FF4C; // type:function size:0x4
fn_8004FF50 = .text:0x8004FF50; // type:function size:0x54
fn_8004FFA4 = .text:0x8004FFA4; // type:function size:0x48
fn_8004FFEC = .text:0x8004FFEC; // type:function size:0x4B4
fn_800504A0 = .text:0x800504A0; // type:function size:0x55C
fn_800509FC = .text:0x800509FC; // type:function size:0x414
fn_80050E10 = .text:0x80050E10; // type:function size:0x44
fn_80050E54 = .text:0x80050E54; // type:function size:0x74
fn_80050EC8 = .text:0x80050EC8; // type:function size:0x5C
fn_80050F24 = .text:0x80050F24; // type:function size:0x5C
fn_80050F80 = .text:0x80050F80; // type:function size:0x38
fn_80050FB8 = .text:0x80050FB8; // type:function size:0x34
fn_80050FEC = .text:0x80050FEC; // type:function size:0xA0
fn_8005108C = .text:0x8005108C; // type:function size:0x28
fn_800510B4 = .text:0x800510B4; // type:function size:0x4
fn_800510B8 = .text:0x800510B8; // type:function size:0x10
fn_800510C8 = .text:0x800510C8; // type:function size:0x10
fn_800510D8 = .text:0x800510D8; // type:function size:0x10
fn_800510E8 = .text:0x800510E8; // type:function size:0x10
fn_800510F8 = .text:0x800510F8; // type:function size:0x14
fn_8005110C = .text:0x8005110C; // type:function size:0x14
fn_80051120 = .text:0x80051120; // type:function size:0x30
fn_80051150 = .text:0x80051150; // type:function size:0x8
fn_80051158 = .text:0x80051158; // type:function size:0x34
fn_8005118C = .text:0x8005118C; // type:function size:0x10
fn_8005119C = .text:0x8005119C; // type:function size:0xA4
fn_80051240 = .text:0x80051240; // type:function size:0x2C
fn_8005126C = .text:0x8005126C; // type:function size:0x84
fn_800512F0 = .text:0x800512F0; // type:function size:0x40
fn_80051330 = .text:0x80051330; // type:function size:0x2C
fn_8005135C = .text:0x8005135C; // type:function size:0x60
fn_800513BC = .text:0x800513BC; // type:function size:0x2C
fn_800513E8 = .text:0x800513E8; // type:function size:0x60
fn_80051448 = .text:0x80051448; // type:function size:0x44
fn_8005148C = .text:0x8005148C; // type:function size:0x3C
fn_800514C8 = .text:0x800514C8; // type:function size:0x60
fn_80051528 = .text:0x80051528; // type:function size:0x18
fn_80051540 = .text:0x80051540; // type:function size:0x8
fn_80051548 = .text:0x80051548; // type:function size:0xEC
fn_80051634 = .text:0x80051634; // type:function size:0x598
fn_80051BCC = .text:0x80051BCC; // type:function size:0x124
fn_80051CF0 = .text:0x80051CF0; // type:function size:0x98
fn_80051D88 = .text:0x80051D88; // type:function size:0x90
fn_80051E18 = .text:0x80051E18; // type:function size:0x98
fn_80051EB0 = .text:0x80051EB0; // type:function size:0x298
fn_80052148 = .text:0x80052148; // type:function size:0xAC
fn_800521F4 = .text:0x800521F4; // type:function size:0xDC
fn_800522D0 = .text:0x800522D0; // type:function size:0xDC
fn_800523AC = .text:0x800523AC; // type:function size:0xAC
fn_80052458 = .text:0x80052458; // type:function size:0x3C
fn_80052494 = .text:0x80052494; // type:function size:0x40
DBInitComm = .text:0x800524D4; // type:function size:0x78 scope:global
DBInitInterrupts = .text:0x8005254C; // type:function size:0x54 scope:global
DBQueryData = .text:0x800525A0; // type:function size:0x9C scope:global
DBRead = .text:0x8005263C; // type:function size:0x8C scope:global
DBWrite = .text:0x800526C8; // type:function size:0x260 scope:global
DBOpen = .text:0x80052928; // type:function size:0x4 scope:global
DBClose = .text:0x8005292C; // type:function size:0x4 scope:global
fn_80052930 = .text:0x80052930; // type:function size:0x24
fn_80052954 = .text:0x80052954; // type:function size:0x24
fn_80052978 = .text:0x80052978; // type:function size:0x8
fn_80052980 = .text:0x80052980; // type:function size:0x24
fn_800529A4 = .text:0x800529A4; // type:function size:0x24
fn_800529C8 = .text:0x800529C8; // type:function size:0x24
fn_800529EC = .text:0x800529EC; // type:function size:0x24
fn_80052A10 = .text:0x80052A10; // type:function size:0x24
fn_80052A34 = .text:0x80052A34; // type:function size:0x24
fn_80052A58 = .text:0x80052A58; // type:function size:0x24
fn_80052A7C = .text:0x80052A7C; // type:function size:0x24
fn_80052AA0 = .text:0x80052AA0; // type:function size:0x24
fn_80052AC4 = .text:0x80052AC4; // type:function size:0x24
fn_80052AE8 = .text:0x80052AE8; // type:function size:0x24
fn_80052B0C = .text:0x80052B0C; // type:function size:0x8
fn_80052B14 = .text:0x80052B14; // type:function size:0x8
fn_80052B1C = .text:0x80052B1C; // type:function size:0x8
fn_80052B24 = .text:0x80052B24; // type:function size:0xC
fn_80052B30 = .text:0x80052B30; // type:function size:0x8
fn_80052B38 = .text:0x80052B38; // type:function size:0x8
fn_80052B40 = .text:0x80052B40; // type:function size:0x5C
fn_80052B9C = .text:0x80052B9C; // type:function size:0x3C4
fn_80052F60 = .text:0x80052F60; // type:function size:0x234
fn_80053194 = .text:0x80053194; // type:function size:0xF8
fn_8005328C = .text:0x8005328C; // type:function size:0x38
fn_800532C4 = .text:0x800532C4; // type:function size:0x40
fn_80053304 = .text:0x80053304; // type:function size:0x24
fn_80053328 = .text:0x80053328; // type:function size:0x4C
fn_80053374 = .text:0x80053374; // type:function size:0x4C
fn_800533C0 = .text:0x800533C0; // type:function size:0xC
fn_800533CC = .text:0x800533CC; // type:function size:0x54
fn_80053420 = .text:0x80053420; // type:function size:0x290
fn_800536B0 = .text:0x800536B0; // type:function size:0x30
fn_800536E0 = .text:0x800536E0; // type:function size:0x34
fn_80053714 = .text:0x80053714; // type:function size:0x4C
fn_80053760 = .text:0x80053760; // type:function size:0x60
fn_800537C0 = .text:0x800537C0; // type:function size:0x3B0
fn_80053B70 = .text:0x80053B70; // type:function size:0x3A4
fn_80053F14 = .text:0x80053F14; // type:function size:0x32C
fn_80054240 = .text:0x80054240; // type:function size:0xEC
fn_8005432C = .text:0x8005432C; // type:function size:0x258
fn_80054584 = .text:0x80054584; // type:function size:0x28
fn_800545AC = .text:0x800545AC; // type:function size:0x24
fn_800545D0 = .text:0x800545D0; // type:function size:0x34
fn_80054604 = .text:0x80054604; // type:function size:0x34
fn_80054638 = .text:0x80054638; // type:function size:0x338
fn_80054970 = .text:0x80054970; // type:function size:0x3B0
fn_80054D20 = .text:0x80054D20; // type:function size:0x184
fn_80054EA4 = .text:0x80054EA4; // type:function size:0x60
fn_80054F04 = .text:0x80054F04; // type:function size:0x270
fn_80055174 = .text:0x80055174; // type:function size:0x44
fn_800551B8 = .text:0x800551B8; // type:function size:0x3C4
fn_8005557C = .text:0x8005557C; // type:function size:0x338
fn_800558B4 = .text:0x800558B4; // type:function size:0x3B0
fn_80055C64 = .text:0x80055C64; // type:function size:0x178
fn_80055DDC = .text:0x80055DDC; // type:function size:0x60
fn_80055E3C = .text:0x80055E3C; // type:function size:0x208
fn_80056044 = .text:0x80056044; // type:function size:0x8C
fn_800560D0 = .text:0x800560D0; // type:function size:0x404
fn_800564D4 = .text:0x800564D4; // type:function size:0x8
fn_800564DC = .text:0x800564DC; // type:function size:0x8
fn_800564E4 = .text:0x800564E4; // type:function size:0x48
fn_8005652C = .text:0x8005652C; // type:function size:0x38
fn_80056564 = .text:0x80056564; // type:function size:0x18
fn_8005657C = .text:0x8005657C; // type:function size:0x70
fn_800565EC = .text:0x800565EC; // type:function size:0x8
fn_800565F4 = .text:0x800565F4; // type:function size:0x30
fn_80056624 = .text:0x80056624; // type:function size:0x30
fn_80056654 = .text:0x80056654; // type:function size:0x8
fn_8005665C = .text:0x8005665C; // type:function size:0x8
fn_80056664 = .text:0x80056664; // type:function size:0x8
fn_8005666C = .text:0x8005666C; // type:function size:0x8
fn_80056674 = .text:0x80056674; // type:function size:0x8
fn_8005667C = .text:0x8005667C; // type:function size:0x8
fn_80056684 = .text:0x80056684; // type:function size:0x8
fn_8005668C = .text:0x8005668C; // type:function size:0x6C
fn_800566F8 = .text:0x800566F8; // type:function size:0xC
fn_80056704 = .text:0x80056704; // type:function size:0x8
fn_8005670C = .text:0x8005670C; // type:function size:0x8
fn_80056714 = .text:0x80056714; // type:function size:0x8
fn_8005671C = .text:0x8005671C; // type:function size:0xC
fn_80056728 = .text:0x80056728; // type:function size:0x10C
fn_80056834 = .text:0x80056834; // type:function size:0x6C0
fn_80056EF4 = .text:0x80056EF4; // type:function size:0x4C
fn_80056F40 = .text:0x80056F40; // type:function size:0x198
fn_800570D8 = .text:0x800570D8; // type:function size:0x1C
fn_800570F4 = .text:0x800570F4; // type:function size:0x30
fn_80057124 = .text:0x80057124; // type:function size:0xBC
fn_800571E0 = .text:0x800571E0; // type:function size:0x30
fn_80057210 = .text:0x80057210; // type:function size:0x2D8
fn_800574E8 = .text:0x800574E8; // type:function size:0xEC
fn_800575D4 = .text:0x800575D4; // type:function size:0x124
fn_800576F8 = .text:0x800576F8; // type:function size:0x8
fn_80057700 = .text:0x80057700; // type:function size:0xC
fn_8005770C = .text:0x8005770C; // type:function size:0x1B8
fn_800578C4 = .text:0x800578C4; // type:function size:0x44
fn_80057908 = .text:0x80057908; // type:function size:0x30
fn_80057938 = .text:0x80057938; // type:function size:0x38
fn_80057970 = .text:0x80057970; // type:function size:0xC
fn_8005797C = .text:0x8005797C; // type:function size:0x94
fn_80057A10 = .text:0x80057A10; // type:function size:0x38
fn_80057A48 = .text:0x80057A48; // type:function size:0x11C
fn_80057B64 = .text:0x80057B64; // type:function size:0xD0
fn_80057C34 = .text:0x80057C34; // type:function size:0x50
fn_80057C84 = .text:0x80057C84; // type:function size:0x48
fn_80057CCC = .text:0x80057CCC; // type:function size:0xF0
fn_80057DBC = .text:0x80057DBC; // type:function size:0x7C
fn_80057E38 = .text:0x80057E38; // type:function size:0x1C0
fn_80057FF8 = .text:0x80057FF8; // type:function size:0x4D8
fn_800584D0 = .text:0x800584D0; // type:function size:0x84
fn_80058554 = .text:0x80058554; // type:function size:0x60
fn_800585B4 = .text:0x800585B4; // type:function size:0x28
fn_800585DC = .text:0x800585DC; // type:function size:0x3C
fn_80058618 = .text:0x80058618; // type:function size:0x3C
fn_80058654 = .text:0x80058654; // type:function size:0x78
fn_800586CC = .text:0x800586CC; // type:function size:0x80
fn_8005874C = .text:0x8005874C; // type:function size:0xFC
fn_80058848 = .text:0x80058848; // type:function size:0x24
fn_8005886C = .text:0x8005886C; // type:function size:0x24
fn_80058890 = .text:0x80058890; // type:function size:0x3C
fn_800588CC = .text:0x800588CC; // type:function size:0x24
fn_800588F0 = .text:0x800588F0; // type:function size:0x24
fn_80058914 = .text:0x80058914; // type:function size:0x1A8
fn_80058ABC = .text:0x80058ABC; // type:function size:0x10
fn_80058ACC = .text:0x80058ACC; // type:function size:0x10
fn_80058ADC = .text:0x80058ADC; // type:function size:0x5C
fn_80058B38 = .text:0x80058B38; // type:function size:0x190
fn_80058CC8 = .text:0x80058CC8; // type:function size:0x8C
fn_80058D54 = .text:0x80058D54; // type:function size:0x1C
fn_80058D70 = .text:0x80058D70; // type:function size:0xC
fn_80058D7C = .text:0x80058D7C; // type:function size:0x100
fn_80058E7C = .text:0x80058E7C; // type:function size:0x8C
fn_80058F08 = .text:0x80058F08; // type:function size:0x600
fn_80059508 = .text:0x80059508; // type:function size:0x54
fn_8005955C = .text:0x8005955C; // type:function size:0xB8
fn_80059614 = .text:0x80059614; // type:function size:0xEFC
fn_8005A510 = .text:0x8005A510; // type:function size:0x230
fn_8005A740 = .text:0x8005A740; // type:function size:0x298
fn_8005A9D8 = .text:0x8005A9D8; // type:function size:0x218
fn_8005ABF0 = .text:0x8005ABF0; // type:function size:0x230
fn_8005AE20 = .text:0x8005AE20; // type:function size:0x4B0
fn_8005B2D0 = .text:0x8005B2D0; // type:function size:0xC
fn_8005B2DC = .text:0x8005B2DC; // type:function size:0x44
fn_8005B320 = .text:0x8005B320; // type:function size:0xC
fn_8005B32C = .text:0x8005B32C; // type:function size:0x90
fn_8005B3BC = .text:0x8005B3BC; // type:function size:0x8
fn_8005B3C4 = .text:0x8005B3C4; // type:function size:0x8
fn_8005B3CC = .text:0x8005B3CC; // type:function size:0xC
fn_8005B3D8 = .text:0x8005B3D8; // type:function size:0x10
fn_8005B3E8 = .text:0x8005B3E8; // type:function size:0x18
fn_8005B400 = .text:0x8005B400; // type:function size:0x64
fn_8005B464 = .text:0x8005B464; // type:function size:0x68
fn_8005B4CC = .text:0x8005B4CC; // type:function size:0x31C
fn_8005B7E8 = .text:0x8005B7E8; // type:function size:0x4C
fn_8005B834 = .text:0x8005B834; // type:function size:0xC
fn_8005B840 = .text:0x8005B840; // type:function size:0x50
fn_8005B890 = .text:0x8005B890; // type:function size:0x84
fn_8005B914 = .text:0x8005B914; // type:function size:0x48
fn_8005B95C = .text:0x8005B95C; // type:function size:0x4C
fn_8005B9A8 = .text:0x8005B9A8; // type:function size:0xC
fn_8005B9B4 = .text:0x8005B9B4; // type:function size:0x74
fn_8005BA28 = .text:0x8005BA28; // type:function size:0x1C0
fn_8005BBE8 = .text:0x8005BBE8; // type:function size:0x1DC
fn_8005BDC4 = .text:0x8005BDC4; // type:function size:0x1C4
fn_8005BF88 = .text:0x8005BF88; // type:function size:0x20
fn_8005BFA8 = .text:0x8005BFA8; // type:function size:0x34
fn_8005BFDC = .text:0x8005BFDC; // type:function size:0x180
fn_8005C15C = .text:0x8005C15C; // type:function size:0x30
fn_8005C18C = .text:0x8005C18C; // type:function size:0x94
fn_8005C220 = .text:0x8005C220; // type:function size:0x8
fn_8005C228 = .text:0x8005C228; // type:function size:0x158
fn_8005C380 = .text:0x8005C380; // type:function size:0x20
fn_8005C3A0 = .text:0x8005C3A0; // type:function size:0x4
fn_8005C3A4 = .text:0x8005C3A4; // type:function size:0x130
fn_8005C4D4 = .text:0x8005C4D4; // type:function size:0x48
fn_8005C51C = .text:0x8005C51C; // type:function size:0x3C
fn_8005C558 = .text:0x8005C558; // type:function size:0x98
fn_8005C5F0 = .text:0x8005C5F0; // type:function size:0x8
fn_8005C5F8 = .text:0x8005C5F8; // type:function size:0x38
fn_8005C630 = .text:0x8005C630; // type:function size:0x38
fn_8005C668 = .text:0x8005C668; // type:function size:0x3C
fn_8005C6A4 = .text:0x8005C6A4; // type:function size:0x40
fn_8005C6E4 = .text:0x8005C6E4; // type:function size:0x44
fn_8005C728 = .text:0x8005C728; // type:function size:0x68
fn_8005C790 = .text:0x8005C790; // type:function size:0x58
fn_8005C7E8 = .text:0x8005C7E8; // type:function size:0x58
fn_8005C840 = .text:0x8005C840; // type:function size:0x58
fn_8005C898 = .text:0x8005C898; // type:function size:0x4E4
fn_8005CD7C = .text:0x8005CD7C; // type:function size:0x2C
fn_8005CDA8 = .text:0x8005CDA8; // type:function size:0x40
fn_8005CDE8 = .text:0x8005CDE8; // type:function size:0x140
fn_8005CF28 = .text:0x8005CF28; // type:function size:0x22C
fn_8005D154 = .text:0x8005D154; // type:function size:0x108
fn_8005D25C = .text:0x8005D25C; // type:function size:0x2A4
fn_8005D500 = .text:0x8005D500; // type:function size:0x3C8
fn_8005D8C8 = .text:0x8005D8C8; // type:function size:0xB0
fn_8005D978 = .text:0x8005D978; // type:function size:0x108
fn_8005DA80 = .text:0x8005DA80; // type:function size:0x2FC
fn_8005DD7C = .text:0x8005DD7C; // type:function size:0x380
fn_8005E0FC = .text:0x8005E0FC; // type:function size:0x2E0
fn_8005E3DC = .text:0x8005E3DC; // type:function size:0x78
fn_8005E454 = .text:0x8005E454; // type:function size:0x180
fn_8005E5D4 = .text:0x8005E5D4; // type:function size:0xA8
fn_8005E67C = .text:0x8005E67C; // type:function size:0xF4
fn_8005E770 = .text:0x8005E770; // type:function size:0x8
fn_8005E778 = .text:0x8005E778; // type:function size:0x18
fn_8005E790 = .text:0x8005E790; // type:function size:0x34
fn_8005E7C4 = .text:0x8005E7C4; // type:function size:0x20
fn_8005E7E4 = .text:0x8005E7E4; // type:function size:0x34
fn_8005E818 = .text:0x8005E818; // type:function size:0x38
fn_8005E850 = .text:0x8005E850; // type:function size:0x8
fn_8005E858 = .text:0x8005E858; // type:function size:0x38
fn_8005E890 = .text:0x8005E890; // type:function size:0x10
fn_8005E8A0 = .text:0x8005E8A0; // type:function size:0x24
fn_8005E8C4 = .text:0x8005E8C4; // type:function size:0x24
fn_8005E8E8 = .text:0x8005E8E8; // type:function size:0x30
fn_8005E918 = .text:0x8005E918; // type:function size:0x158
fn_8005EA70 = .text:0x8005EA70; // type:function size:0x30
fn_8005EAA0 = .text:0x8005EAA0; // type:function size:0x14
fn_8005EAB4 = .text:0x8005EAB4; // type:function size:0x1C0
fn_8005EC74 = .text:0x8005EC74; // type:function size:0x20
fn_8005EC94 = .text:0x8005EC94; // type:function size:0x20
fn_8005ECB4 = .text:0x8005ECB4; // type:function size:0xBC
fn_8005ED70 = .text:0x8005ED70; // type:function size:0x9C
fn_8005EE0C = .text:0x8005EE0C; // type:function size:0x28
fn_8005EE34 = .text:0x8005EE34; // type:function size:0xC8
fn_8005EEFC = .text:0x8005EEFC; // type:function size:0x58
fn_8005EF54 = .text:0x8005EF54; // type:function size:0xA8
fn_8005EFFC = .text:0x8005EFFC; // type:function size:0x20
fn_8005F01C = .text:0x8005F01C; // type:function size:0x20
fn_8005F03C = .text:0x8005F03C; // type:function size:0x20
fn_8005F05C = .text:0x8005F05C; // type:function size:0x20
fn_8005F07C = .text:0x8005F07C; // type:function size:0xAC
fn_8005F128 = .text:0x8005F128; // type:function size:0x24
fn_8005F14C = .text:0x8005F14C; // type:function size:0x24
fn_8005F170 = .text:0x8005F170; // type:function size:0x20
fn_8005F190 = .text:0x8005F190; // type:function size:0x24
fn_8005F1B4 = .text:0x8005F1B4; // type:function size:0x4
fn_8005F1B8 = .text:0x8005F1B8; // type:function size:0x20
fn_8005F1D8 = .text:0x8005F1D8; // type:function size:0x20
fn_8005F1F8 = .text:0x8005F1F8; // type:function size:0x20
fn_8005F218 = .text:0x8005F218; // type:function size:0x20
fn_8005F238 = .text:0x8005F238; // type:function size:0x20
fn_8005F258 = .text:0x8005F258; // type:function size:0x20
fn_8005F278 = .text:0x8005F278; // type:function size:0x20
fn_8005F298 = .text:0x8005F298; // type:function size:0x20
fn_8005F2B8 = .text:0x8005F2B8; // type:function size:0x20
fn_8005F2D8 = .text:0x8005F2D8; // type:function size:0x20
fn_8005F2F8 = .text:0x8005F2F8; // type:function size:0x20
fn_8005F318 = .text:0x8005F318; // type:function size:0x44
fn_8005F35C = .text:0x8005F35C; // type:function size:0x20
fn_8005F37C = .text:0x8005F37C; // type:function size:0x20
fn_8005F39C = .text:0x8005F39C; // type:function size:0x20
fn_8005F3BC = .text:0x8005F3BC; // type:function size:0x20
fn_8005F3DC = .text:0x8005F3DC; // type:function size:0x58
fn_8005F434 = .text:0x8005F434; // type:function size:0x260
fn_8005F694 = .text:0x8005F694; // type:function size:0x2F0
fn_8005F984 = .text:0x8005F984; // type:function size:0x154
fn_8005FAD8 = .text:0x8005FAD8; // type:function size:0x38
fn_8005FB10 = .text:0x8005FB10; // type:function size:0xD8
fn_8005FBE8 = .text:0x8005FBE8; // type:function size:0x34
fn_8005FC1C = .text:0x8005FC1C; // type:function size:0x34
fn_8005FC50 = .text:0x8005FC50; // type:function size:0x24
fn_8005FC74 = .text:0x8005FC74; // type:function size:0x34
fn_8005FCA8 = .text:0x8005FCA8; // type:function size:0x9C
fn_8005FD44 = .text:0x8005FD44; // type:function size:0xA4
fn_8005FDE8 = .text:0x8005FDE8; // type:function size:0x20
fn_8005FE08 = .text:0x8005FE08; // type:function size:0x22C
fn_80060034 = .text:0x80060034; // type:function size:0x188
fn_800601BC = .text:0x800601BC; // type:function size:0x2BC
fn_80060478 = .text:0x80060478; // type:function size:0x5C
fn_800604D4 = .text:0x800604D4; // type:function size:0x2D0
fn_800607A4 = .text:0x800607A4; // type:function size:0x220
fn_800609C4 = .text:0x800609C4; // type:function size:0x240
fn_80060C04 = .text:0x80060C04; // type:function size:0x3C
fn_80060C40 = .text:0x80060C40; // type:function size:0x15C
fn_80060D9C = .text:0x80060D9C; // type:function size:0x24
fn_80060DC0 = .text:0x80060DC0; // type:function size:0x4AC
fn_8006126C = .text:0x8006126C; // type:function size:0x4A4
fn_80061710 = .text:0x80061710; // type:function size:0xA8
fn_800617B8 = .text:0x800617B8; // type:function size:0x68
fn_80061820 = .text:0x80061820; // type:function size:0x90
fn_800618B0 = .text:0x800618B0; // type:function size:0xA8
fn_80061958 = .text:0x80061958; // type:function size:0xA8
fn_80061A00 = .text:0x80061A00; // type:function size:0xA8
fn_80061AA8 = .text:0x80061AA8; // type:function size:0xA4
fn_80061B4C = .text:0x80061B4C; // type:function size:0x664
fn_800621B0 = .text:0x800621B0; // type:function size:0x150
fn_80062300 = .text:0x80062300; // type:function size:0x284
fn_80062584 = .text:0x80062584; // type:function size:0x13C
fn_800626C0 = .text:0x800626C0; // type:function size:0x34
fn_800626F4 = .text:0x800626F4; // type:function size:0x4
fn_800626F8 = .text:0x800626F8; // type:function size:0x54
fn_8006274C = .text:0x8006274C; // type:function size:0xCC
fn_80062818 = .text:0x80062818; // type:function size:0x54
fn_8006286C = .text:0x8006286C; // type:function size:0x58
fn_800628C4 = .text:0x800628C4; // type:function size:0x1A8
fn_80062A6C = .text:0x80062A6C; // type:function size:0x434
fn_80062EA0 = .text:0x80062EA0; // type:function size:0x54
fn_80062EF4 = .text:0x80062EF4; // type:function size:0xC0
fn_80062FB4 = .text:0x80062FB4; // type:function size:0x1CC
fn_80063180 = .text:0x80063180; // type:function size:0x208
fn_80063388 = .text:0x80063388; // type:function size:0x140
fn_800634C8 = .text:0x800634C8; // type:function size:0xC
fn_800634D4 = .text:0x800634D4; // type:function size:0x180
fn_80063654 = .text:0x80063654; // type:function size:0x60
fn_800636B4 = .text:0x800636B4; // type:function size:0x8
fn_800636BC = .text:0x800636BC; // type:function size:0xCC
fn_80063788 = .text:0x80063788; // type:function size:0x24
fn_800637AC = .text:0x800637AC; // type:function size:0x20
fn_800637CC = .text:0x800637CC; // type:function size:0x20
fn_800637EC = .text:0x800637EC; // type:function size:0x3C
fn_80063828 = .text:0x80063828; // type:function size:0x38
fn_80063860 = .text:0x80063860; // type:function size:0x40
fn_800638A0 = .text:0x800638A0; // type:function size:0x64
fn_80063904 = .text:0x80063904; // type:function size:0x100
fn_80063A04 = .text:0x80063A04; // type:function size:0x100
fn_80063B04 = .text:0x80063B04; // type:function size:0x100
fn_80063C04 = .text:0x80063C04; // type:function size:0x90
fn_80063C94 = .text:0x80063C94; // type:function size:0x40
fn_80063CD4 = .text:0x80063CD4; // type:function size:0x44
fn_80063D18 = .text:0x80063D18; // type:function size:0x6C
fn_80063D84 = .text:0x80063D84; // type:function size:0xDC
fn_80063E60 = .text:0x80063E60; // type:function size:0x130
fn_80063F90 = .text:0x80063F90; // type:function size:0x240
fn_800641D0 = .text:0x800641D0; // type:function size:0xBC
fn_8006428C = .text:0x8006428C; // type:function size:0x10C
fn_80064398 = .text:0x80064398; // type:function size:0x18C
fn_80064524 = .text:0x80064524; // type:function size:0x9C
fn_800645C0 = .text:0x800645C0; // type:function size:0x68
fn_80064628 = .text:0x80064628; // type:function size:0x1C8
fn_800647F0 = .text:0x800647F0; // type:function size:0x200
fn_800649F0 = .text:0x800649F0; // type:function size:0x3C
fn_80064A2C = .text:0x80064A2C; // type:function size:0x3C
fn_80064A68 = .text:0x80064A68; // type:function size:0xB8
fn_80064B20 = .text:0x80064B20; // type:function size:0x130
fn_80064C50 = .text:0x80064C50; // type:function size:0x94
fn_80064CE4 = .text:0x80064CE4; // type:function size:0xE8
fn_80064DCC = .text:0x80064DCC; // type:function size:0x5C
fn_80064E28 = .text:0x80064E28; // type:function size:0x14
fn_80064E3C = .text:0x80064E3C; // type:function size:0xC
fn_80064E48 = .text:0x80064E48; // type:function size:0x8
fn_80064E50 = .text:0x80064E50; // type:function size:0x40
fn_80064E90 = .text:0x80064E90; // type:function size:0x128
fn_80064FB8 = .text:0x80064FB8; // type:function size:0x40
fn_80064FF8 = .text:0x80064FF8; // type:function size:0x48
fn_80065040 = .text:0x80065040; // type:function size:0x4
fn_80065044 = .text:0x80065044; // type:function size:0x18
fn_8006505C = .text:0x8006505C; // type:function size:0x8
fn_80065064 = .text:0x80065064; // type:function size:0x8
fn_8006506C = .text:0x8006506C; // type:function size:0x8
fn_80065074 = .text:0x80065074; // type:function size:0x10C
fn_80065180 = .text:0x80065180; // type:function size:0x1AC
fn_8006532C = .text:0x8006532C; // type:function size:0x15C
fn_80065488 = .text:0x80065488; // type:function size:0x1B4
fn_8006563C = .text:0x8006563C; // type:function size:0x5C
fn_80065698 = .text:0x80065698; // type:function size:0x2C
fn_800656C4 = .text:0x800656C4; // type:function size:0xC
fn_800656D0 = .text:0x800656D0; // type:function size:0x8
fn_800656D8 = .text:0x800656D8; // type:function size:0x50
fn_80065728 = .text:0x80065728; // type:function size:0x190
fn_800658B8 = .text:0x800658B8; // type:function size:0x40
fn_800658F8 = .text:0x800658F8; // type:function size:0x4C
fn_80065944 = .text:0x80065944; // type:function size:0x4
fn_80065948 = .text:0x80065948; // type:function size:0x40
fn_80065988 = .text:0x80065988; // type:function size:0x48
fn_800659D0 = .text:0x800659D0; // type:function size:0x214
fn_80065BE4 = .text:0x80065BE4; // type:function size:0x64
fn_80065C48 = .text:0x80065C48; // type:function size:0x8C
fn_80065CD4 = .text:0x80065CD4; // type:function size:0x80
fn_80065D54 = .text:0x80065D54; // type:function size:0x90
fn_80065DE4 = .text:0x80065DE4; // type:function size:0x90
fn_80065E74 = .text:0x80065E74; // type:function size:0x90
fn_80065F04 = .text:0x80065F04; // type:function size:0x10
fn_80065F14 = .text:0x80065F14; // type:function size:0x10
fn_80065F24 = .text:0x80065F24; // type:function size:0x78
fn_80065F9C = .text:0x80065F9C; // type:function size:0x44
fn_80065FE0 = .text:0x80065FE0; // type:function size:0x90
fn_80066070 = .text:0x80066070; // type:function size:0x164
fn_800661D4 = .text:0x800661D4; // type:function size:0xD8
fn_800662AC = .text:0x800662AC; // type:function size:0x110
fn_800663BC = .text:0x800663BC; // type:function size:0x54
fn_80066410 = .text:0x80066410; // type:function size:0xD4
fn_800664E4 = .text:0x800664E4; // type:function size:0x38
fn_8006651C = .text:0x8006651C; // type:function size:0x38
fn_80066554 = .text:0x80066554; // type:function size:0x54
fn_800665A8 = .text:0x800665A8; // type:function size:0x8C
fn_80066634 = .text:0x80066634; // type:function size:0x54
fn_80066688 = .text:0x80066688; // type:function size:0x58
fn_800666E0 = .text:0x800666E0; // type:function size:0x64
fn_80066744 = .text:0x80066744; // type:function size:0x2A8
fn_800669EC = .text:0x800669EC; // type:function size:0x54
fn_80066A40 = .text:0x80066A40; // type:function size:0xE8
fn_80066B28 = .text:0x80066B28; // type:function size:0x8C
fn_80066BB4 = .text:0x80066BB4; // type:function size:0x238
fn_80066DEC = .text:0x80066DEC; // type:function size:0x10C
fn_80066EF8 = .text:0x80066EF8; // type:function size:0xC
fn_80066F04 = .text:0x80066F04; // type:function size:0xC
fn_80066F10 = .text:0x80066F10; // type:function size:0x10
fn_80066F20 = .text:0x80066F20; // type:function size:0x50
fn_80066F70 = .text:0x80066F70; // type:function size:0xC
fn_80066F7C = .text:0x80066F7C; // type:function size:0x20
fn_80066F9C = .text:0x80066F9C; // type:function size:0x20
fn_80066FBC = .text:0x80066FBC; // type:function size:0x10
fn_80066FCC = .text:0x80066FCC; // type:function size:0x8
fn_80066FD4 = .text:0x80066FD4; // type:function size:0x8
fn_80066FDC = .text:0x80066FDC; // type:function size:0x10
fn_80066FEC = .text:0x80066FEC; // type:function size:0xB4
fn_800670A0 = .text:0x800670A0; // type:function size:0xAC
fn_8006714C = .text:0x8006714C; // type:function size:0x154
fn_800672A0 = .text:0x800672A0; // type:function size:0x10
fn_800672B0 = .text:0x800672B0; // type:function size:0x5C
fn_8006730C = .text:0x8006730C; // type:function size:0x328
fn_80067634 = .text:0x80067634; // type:function size:0xCC
fn_80067700 = .text:0x80067700; // type:function size:0xDC
fn_800677DC = .text:0x800677DC; // type:function size:0x170
fn_8006794C = .text:0x8006794C; // type:function size:0x58
fn_800679A4 = .text:0x800679A4; // type:function size:0x5C
fn_80067A00 = .text:0x80067A00; // type:function size:0x1A0
fn_80067BA0 = .text:0x80067BA0; // type:function size:0x200
fn_80067DA0 = .text:0x80067DA0; // type:function size:0xD0
fn_80067E70 = .text:0x80067E70; // type:function size:0x6E4
fn_80068554 = .text:0x80068554; // type:function size:0x94
fn_800685E8 = .text:0x800685E8; // type:function size:0x118
fn_80068700 = .text:0x80068700; // type:function size:0x64
fn_80068764 = .text:0x80068764; // type:function size:0x20
fn_80068784 = .text:0x80068784; // type:function size:0x18
fn_8006879C = .text:0x8006879C; // type:function size:0x18
fn_800687B4 = .text:0x800687B4; // type:function size:0x14
fn_800687C8 = .text:0x800687C8; // type:function size:0x108
fn_800688D0 = .text:0x800688D0; // type:function size:0x164
fn_80068A34 = .text:0x80068A34; // type:function size:0x170
fn_80068BA4 = .text:0x80068BA4; // type:function size:0x16C
fn_80068D10 = .text:0x80068D10; // type:function size:0x154
fn_80068E64 = .text:0x80068E64; // type:function size:0x108
fn_80068F6C = .text:0x80068F6C; // type:function size:0xAC
fn_80069018 = .text:0x80069018; // type:function size:0x138
fn_80069150 = .text:0x80069150; // type:function size:0xB0
fn_80069200 = .text:0x80069200; // type:function size:0xF8
fn_800692F8 = .text:0x800692F8; // type:function size:0x168
fn_80069460 = .text:0x80069460; // type:function size:0xB0
fn_80069510 = .text:0x80069510; // type:function size:0x2B8
fn_800697C8 = .text:0x800697C8; // type:function size:0x108
fn_800698D0 = .text:0x800698D0; // type:function size:0x134
fn_80069A04 = .text:0x80069A04; // type:function size:0x12C
fn_80069B30 = .text:0x80069B30; // type:function size:0x108
fn_80069C38 = .text:0x80069C38; // type:function size:0x1C8
fn_80069E00 = .text:0x80069E00; // type:function size:0x12C
fn_80069F2C = .text:0x80069F2C; // type:function size:0x12C
fn_8006A058 = .text:0x8006A058; // type:function size:0x12C
fn_8006A184 = .text:0x8006A184; // type:function size:0x12C
fn_8006A2B0 = .text:0x8006A2B0; // type:function size:0x12C
fn_8006A3DC = .text:0x8006A3DC; // type:function size:0x12C
fn_8006A508 = .text:0x8006A508; // type:function size:0x260
fn_8006A768 = .text:0x8006A768; // type:function size:0x1DC
fn_8006A944 = .text:0x8006A944; // type:function size:0x1D8
fn_8006AB1C = .text:0x8006AB1C; // type:function size:0x48
fn_8006AB64 = .text:0x8006AB64; // type:function size:0x18
fn_8006AB7C = .text:0x8006AB7C; // type:function size:0x60
fn_8006ABDC = .text:0x8006ABDC; // type:function size:0x7C
fn_8006AC58 = .text:0x8006AC58; // type:function size:0xC0
fn_8006AD18 = .text:0x8006AD18; // type:function size:0x9C
fn_8006ADB4 = .text:0x8006ADB4; // type:function size:0x134
fn_8006AEE8 = .text:0x8006AEE8; // type:function size:0x30
fn_8006AF18 = .text:0x8006AF18; // type:function size:0x28
fn_8006AF40 = .text:0x8006AF40; // type:function size:0x34
fn_8006AF74 = .text:0x8006AF74; // type:function size:0x54
fn_8006AFC8 = .text:0x8006AFC8; // type:function size:0x20
fn_8006AFE8 = .text:0x8006AFE8; // type:function size:0x44
fn_8006B02C = .text:0x8006B02C; // type:function size:0x5BC
fn_8006B5E8 = .text:0x8006B5E8; // type:function size:0xA4
fn_8006B68C = .text:0x8006B68C; // type:function size:0x1F0
fn_8006B87C = .text:0x8006B87C; // type:function size:0x28
fn_8006B8A4 = .text:0x8006B8A4; // type:function size:0x68
fn_8006B90C = .text:0x8006B90C; // type:function size:0x20
fn_8006B92C = .text:0x8006B92C; // type:function size:0x44
fn_8006B970 = .text:0x8006B970; // type:function size:0x2A8
fn_8006BC18 = .text:0x8006BC18; // type:function size:0x590
fn_8006C1A8 = .text:0x8006C1A8; // type:function size:0x124
fn_8006C2CC = .text:0x8006C2CC; // type:function size:0xA0
fn_8006C36C = .text:0x8006C36C; // type:function size:0x790
fn_8006CAFC = .text:0x8006CAFC; // type:function size:0x2B4
fn_8006CDB0 = .text:0x8006CDB0; // type:function size:0x240
fn_8006CFF0 = .text:0x8006CFF0; // type:function size:0xA4
fn_8006D094 = .text:0x8006D094; // type:function size:0xC8
fn_8006D15C = .text:0x8006D15C; // type:function size:0x1C0
fn_8006D31C = .text:0x8006D31C; // type:function size:0x70
fn_8006D38C = .text:0x8006D38C; // type:function size:0xBC
fn_8006D448 = .text:0x8006D448; // type:function size:0x70
fn_8006D4B8 = .text:0x8006D4B8; // type:function size:0xBC
fn_8006D574 = .text:0x8006D574; // type:function size:0xD0
fn_8006D644 = .text:0x8006D644; // type:function size:0x434
fn_8006DA78 = .text:0x8006DA78; // type:function size:0x8C
fn_8006DB04 = .text:0x8006DB04; // type:function size:0x198
fn_8006DC9C = .text:0x8006DC9C; // type:function size:0xE0
fn_8006DD7C = .text:0x8006DD7C; // type:function size:0x9C
fn_8006DE18 = .text:0x8006DE18; // type:function size:0x50
fn_8006DE68 = .text:0x8006DE68; // type:function size:0x1C
fn_8006DE84 = .text:0x8006DE84; // type:function size:0x198
fn_8006E01C = .text:0x8006E01C; // type:function size:0x2C0
fn_8006E2DC = .text:0x8006E2DC; // type:function size:0x224
fn_8006E500 = .text:0x8006E500; // type:function size:0xF0
fn_8006E5F0 = .text:0x8006E5F0; // type:function size:0xDC
fn_8006E6CC = .text:0x8006E6CC; // type:function size:0x1C
fn_8006E6E8 = .text:0x8006E6E8; // type:function size:0x50
fn_8006E738 = .text:0x8006E738; // type:function size:0x6C
fn_8006E7A4 = .text:0x8006E7A4; // type:function size:0xB8
fn_8006E85C = .text:0x8006E85C; // type:function size:0x190
fn_8006E9EC = .text:0x8006E9EC; // type:function size:0x60
fn_8006EA4C = .text:0x8006EA4C; // type:function size:0x1B0
fn_8006EBFC = .text:0x8006EBFC; // type:function size:0x1B8
fn_8006EDB4 = .text:0x8006EDB4; // type:function size:0xB8
fn_8006EE6C = .text:0x8006EE6C; // type:function size:0x28
fn_8006EE94 = .text:0x8006EE94; // type:function size:0x98
fn_8006EF2C = .text:0x8006EF2C; // type:function size:0xF4
fn_8006F020 = .text:0x8006F020; // type:function size:0x74
fn_8006F094 = .text:0x8006F094; // type:function size:0x1C
fn_8006F0B0 = .text:0x8006F0B0; // type:function size:0x164
fn_8006F214 = .text:0x8006F214; // type:function size:0x598
_ctors = .ctors:0x8006F7C0; // type:label scope:global data:4byte
_dtors = .dtors:0x8006F7E0; // type:label scope:global data:4byte
__destroy_global_chain_reference = .dtors:0x8006F7E0; // type:object size:0x4 scope:global
__constants = .rodata:0x8006F800; // type:object size:0x18 data:double
lbl_8006F818 = .rodata:0x8006F818; // type:object size:0x36 data:string
lbl_8006F850 = .rodata:0x8006F850; // type:object size:0x39 data:string
fix_pool_sizes = .rodata:0x8006F890; // type:object size:0x18 data:4byte
@stringBase0 = .rodata:0x8006F8A8; // type:object size:0xDD scope:local data:string_table
@stringBase0 = .rodata:0x8006F988; // type:object size:0x5 scope:local data:string_table
@stringBase0 = .rodata:0x8006F990; // type:object size:0x25 scope:local data:string_table
lbl_8006F9B8 = .rodata:0x8006F9B8; // type:object size:0x28 data:4byte
lbl_8006F9E0 = .rodata:0x8006F9E0; // type:object size:0x2A
lbl_8006FA0C = .rodata:0x8006FA0C; // type:object size:0x9 data:string
bp = .rodata:0x8006FA18; // type:object size:0x10 data:double
dp_h = .rodata:0x8006FA28; // type:object size:0x10 data:double
dp_l = .rodata:0x8006FA38; // type:object size:0x10 data:double
two_over_pi = .rodata:0x8006FA48; // type:object size:0x108
npio2_hw = .rodata:0x8006FB50; // type:object size:0x80 data:float
init_jk = .rodata:0x8006FBD0; // type:object size:0x10
PIo2 = .rodata:0x8006FBE0; // type:object size:0x40 data:double
T = .rodata:0x8006FC20; // type:object size:0x68 data:double
atanhi = .rodata:0x8006FC88; // type:object size:0x20 data:double
atanlo = .rodata:0x8006FCA8; // type:object size:0x20 data:double
aT = .rodata:0x8006FCC8; // type:object size:0x58 data:double
@62 = .rodata:0x8006FD20; // type:object size:0x1C scope:local data:string
lbl_8006FD40 = .rodata:0x8006FD40; // type:object size:0x1D data:string
gTRKMemMap = .rodata:0x8006FD60; // type:object size:0x10 data:4byte
lbl_8006FD70 = .rodata:0x8006FD70; // type:object size:0x28 data:4byte
lbl_8006FD98 = .rodata:0x8006FD98; // type:object size:0x28 data:4byte
lbl_8006FDC0 = .rodata:0x8006FDC0; // type:object size:0x28 data:4byte
@154 = .rodata:0x8006FDE8; // type:object size:0x21 scope:local data:string
@155 = .rodata:0x8006FE0C; // type:object size:0x24 scope:local data:string
lbl_8006FE30 = .rodata:0x8006FE30; // type:object size:0x10
lbl_8006FE40 = .rodata:0x8006FE40; // type:object size:0x10 data:4byte
lbl_8006FE50 = .rodata:0x8006FE50; // type:object size:0x30 data:4byte
lbl_8006FE80 = .rodata:0x8006FE80; // type:object size:0x20
lbl_8006FEA0 = .rodata:0x8006FEA0; // type:object size:0x10
lbl_8006FEB0 = .rodata:0x8006FEB0; // type:object size:0x10
lbl_8006FEC0 = .rodata:0x8006FEC0; // type:object size:0x20
lbl_8006FEE0 = .rodata:0x8006FEE0; // type:object size:0x20 data:string
lbl_8006FF00 = .rodata:0x8006FF00; // type:object size:0x28
lbl_8006FF28 = .rodata:0x8006FF28; // type:object size:0x30
lbl_8006FF58 = .rodata:0x8006FF58; // type:object size:0x34
lbl_8006FF8C = .rodata:0x8006FF8C; // type:object size:0x2C
lbl_8006FFB8 = .rodata:0x8006FFB8; // type:object size:0x28
lbl_8006FFE0 = .rodata:0x8006FFE0; // type:object size:0x30
lbl_80070010 = .rodata:0x80070010; // type:object size:0x2C
lbl_8007003C = .rodata:0x8007003C; // type:object size:0x28 data:string
lbl_80070064 = .rodata:0x80070064; // type:object size:0x2C
lbl_80070090 = .rodata:0x80070090; // type:object size:0x2C
lbl_800700BC = .rodata:0x800700BC; // type:object size:0x30
lbl_800700EC = .rodata:0x800700EC; // type:object size:0x30
lbl_8007011C = .rodata:0x8007011C; // type:object size:0x2C
lbl_80070148 = .rodata:0x80070148; // type:object size:0x2C
lbl_80070174 = .rodata:0x80070174; // type:object size:0x2C
lbl_800701A0 = .rodata:0x800701A0; // type:object size:0x2C
lbl_800701CC = .rodata:0x800701CC; // type:object size:0x2C
lbl_800701F8 = .rodata:0x800701F8; // type:object size:0x2C
lbl_80070224 = .rodata:0x80070224; // type:object size:0x2C
lbl_80070250 = .rodata:0x80070250; // type:object size:0x28 data:string
lbl_80070278 = .rodata:0x80070278; // type:object size:0x28
lbl_800702A0 = .rodata:0x800702A0; // type:object size:0x28 data:string
lbl_800702C8 = .rodata:0x800702C8; // type:object size:0x28 data:string
lbl_800702F0 = .rodata:0x800702F0; // type:object size:0x28
lbl_80070318 = .rodata:0x80070318; // type:object size:0x2C
lbl_80070344 = .rodata:0x80070344; // type:object size:0x28
lbl_8007036C = .rodata:0x8007036C; // type:object size:0x2C
lbl_80070398 = .rodata:0x80070398; // type:object size:0x28
lbl_800703C0 = .rodata:0x800703C0; // type:object size:0x2C
lbl_800703EC = .rodata:0x800703EC; // type:object size:0x40
lbl_8007042C = .rodata:0x8007042C; // type:object size:0x2C
lbl_80070458 = .rodata:0x80070458; // type:object size:0x2C data:string
lbl_80070484 = .rodata:0x80070484; // type:object size:0x34
lbl_800704B8 = .rodata:0x800704B8; // type:object size:0x40
lbl_800704F8 = .rodata:0x800704F8; // type:object size:0x10
lbl_80070508 = .rodata:0x80070508; // type:object size:0x30
lbl_80070538 = .rodata:0x80070538; // type:object size:0x2C data:string
lbl_80070564 = .rodata:0x80070564; // type:object size:0x24
lbl_80070588 = .rodata:0x80070588; // type:object size:0x148
lbl_800706D0 = .rodata:0x800706D0; // type:object size:0x24 data:string
lbl_800706F4 = .rodata:0x800706F4; // type:object size:0x224
lbl_80070918 = .rodata:0x80070918; // type:object size:0x34
lbl_8007094C = .rodata:0x8007094C; // type:object size:0x35C
lbl_80070CA8 = .rodata:0x80070CA8; // type:object size:0x8AC
lbl_80071554 = .rodata:0x80071554; // type:object size:0x1C data:string
lbl_80071570 = .rodata:0x80071570; // type:object size:0x1C
lbl_8007158C = .rodata:0x8007158C; // type:object size:0x1C
lbl_800715A8 = .rodata:0x800715A8; // type:object size:0x50
lbl_800715F8 = .rodata:0x800715F8; // type:object size:0x1C
lbl_80071614 = .rodata:0x80071614; // type:object size:0x18 data:string
lbl_8007162C = .rodata:0x8007162C; // type:object size:0x1C
lbl_80071648 = .rodata:0x80071648; // type:object size:0x18
lbl_80071660 = .rodata:0x80071660; // type:object size:0x1C
lbl_8007167C = .rodata:0x8007167C; // type:object size:0x18
lbl_80071694 = .rodata:0x80071694; // type:object size:0x1C
lbl_800716B0 = .rodata:0x800716B0; // type:object size:0xCC
lbl_8007177C = .rodata:0x8007177C; // type:object size:0x28
lbl_800717A4 = .rodata:0x800717A4; // type:object size:0xBC
lbl_80071860 = .rodata:0x80071860; // type:object size:0x2C
lbl_8007188C = .rodata:0x8007188C; // type:object size:0x18 data:string
lbl_800718A4 = .rodata:0x800718A4; // type:object size:0x18 data:string
lbl_800718BC = .rodata:0x800718BC; // type:object size:0x1C
lbl_800718D8 = .rodata:0x800718D8; // type:object size:0x1C0
lbl_80071A98 = .rodata:0x80071A98; // type:object size:0x24
lbl_80071ABC = .rodata:0x80071ABC; // type:object size:0x24
lbl_80071AE0 = .rodata:0x80071AE0; // type:object size:0x24
lbl_80071B04 = .rodata:0x80071B04; // type:object size:0x20 data:string
lbl_80071B24 = .rodata:0x80071B24; // type:object size:0x24
lbl_80071B48 = .rodata:0x80071B48; // type:object size:0x1C
lbl_80071B64 = .rodata:0x80071B64; // type:object size:0x2C
lbl_80071B90 = .rodata:0x80071B90; // type:object size:0x30
lbl_80071BC0 = .rodata:0x80071BC0; // type:object size:0x30
lbl_80071BF0 = .rodata:0x80071BF0; // type:object size:0xA0
lbl_80071C90 = .rodata:0x80071C90; // type:object size:0x10
lbl_80071CA0 = .rodata:0x80071CA0; // type:object size:0x2C data:string
lbl_80071CCC = .rodata:0x80071CCC; // type:object size:0x14
lbl_80071CE0 = .rodata:0x80071CE0; // type:object size:0x108
lbl_80071DE8 = .rodata:0x80071DE8; // type:object size:0x20 data:string
lbl_80071E08 = .rodata:0x80071E08; // type:object size:0x30
lbl_80071E38 = .rodata:0x80071E38; // type:object size:0xBC
lbl_80071EF4 = .rodata:0x80071EF4; // type:object size:0x40
lbl_80071F34 = .rodata:0x80071F34; // type:object size:0x3C
lbl_80071F70 = .rodata:0x80071F70; // type:object size:0x18 data:string
lbl_80071F88 = .rodata:0x80071F88; // type:object size:0x18 data:string
lbl_80071FA0 = .rodata:0x80071FA0; // type:object size:0x78
lbl_80072018 = .rodata:0x80072018; // type:object size:0x1C
lbl_80072034 = .rodata:0x80072034; // type:object size:0x94
lbl_800720C8 = .rodata:0x800720C8; // type:object size:0x2C data:string
lbl_800720F4 = .rodata:0x800720F4; // type:object size:0x1B4
lbl_800722A8 = .rodata:0x800722A8; // type:object size:0x24 data:string
lbl_800722CC = .rodata:0x800722CC; // type:object size:0x2C
lbl_800722F8 = .rodata:0x800722F8; // type:object size:0x24
lbl_8007231C = .rodata:0x8007231C; // type:object size:0x10 data:string
lbl_8007232C = .rodata:0x8007232C; // type:object size:0x2C
lbl_80072358 = .rodata:0x80072358; // type:object size:0x40 data:string
lbl_80072398 = .rodata:0x80072398; // type:object size:0x40
lbl_800723D8 = .rodata:0x800723D8; // type:object size:0xC
lbl_800723E4 = .rodata:0x800723E4; // type:object size:0xC
lbl_800723F0 = .rodata:0x800723F0; // type:object size:0xC data:string
lbl_800723FC = .rodata:0x800723FC; // type:object size:0x10 data:string
lbl_8007240C = .rodata:0x8007240C; // type:object size:0x10
lbl_8007241C = .rodata:0x8007241C; // type:object size:0x14
lbl_80072430 = .rodata:0x80072430; // type:object size:0x14
lbl_80072444 = .rodata:0x80072444; // type:object size:0xC
lbl_80072450 = .rodata:0x80072450; // type:object size:0x10
lbl_80072460 = .rodata:0x80072460; // type:object size:0x10 data:string
lbl_80072470 = .rodata:0x80072470; // type:object size:0x10
lbl_80072480 = .rodata:0x80072480; // type:object size:0x10
lbl_80072490 = .rodata:0x80072490; // type:object size:0xC data:string
lbl_8007249C = .rodata:0x8007249C; // type:object size:0x41C
lbl_800728B8 = .rodata:0x800728B8; // type:object size:0x18
lbl_800728D0 = .rodata:0x800728D0; // type:object size:0x30
lbl_80072900 = .rodata:0x80072900; // type:object size:0x1A data:string
lbl_80072920 = .data:0x80072920; // type:object size:0x1D0
__files = .data:0x80072AF0; // type:object size:0x140 scope:global
pow_10$415 = .data:0x80072C30; // type:object size:0x40 data:double
jumptable_80072C70 = .data:0x80072C70; // type:object size:0x124 scope:local
__ctype_map = .data:0x80072D98; // type:object size:0x100
__lower_map = .data:0x80072E98; // type:object size:0x100
__upper_map = .data:0x80072F98; // type:object size:0x100
__lconv = .data:0x80073098; // type:object size:0x38 data:4byte
@1249 = .data:0x800730D0; // type:object size:0x84 scope:local
jumptable_80073154 = .data:0x80073154; // type:object size:0x84 scope:local
jumptable_800731D8 = .data:0x800731D8; // type:object size:0xE0 scope:local
jumptable_800732B8 = .data:0x800732B8; // type:object size:0x44 scope:local
jumptable_80073300 = .data:0x80073300; // type:object size:0xD0 scope:local
jumptable_800733D0 = .data:0x800733D0; // type:object size:0x44 scope:local
jumptable_80073414 = .data:0x80073414; // type:object size:0x44 scope:local
gTRKDispatchTable = .data:0x80073458; // type:object size:0x84
jumptable_800734E0 = .data:0x800734E0; // type:object size:0x1C scope:local
jumptable_800734FC = .data:0x800734FC; // type:object size:0x1C scope:local
gTRKRestoreFlags = .data:0x80073518; // type:object size:0x9 scope:global data:byte
gTRKExceptionStatus = .data:0x80073524; // type:object size:0x10 scope:local data:4byte
gTRKStepStatus = .data:0x80073534; // type:object size:0x14 data:4byte
TRK_ISR_OFFSETS = .data:0x80073548; // type:object size:0x3C data:4byte
gDBCommTable = .data:0x80073588; // type:object size:0x1C scope:global data:4byte
__AXSrcCycles = .data:0x800735A8; // type:object size:0x14
__AXMainMixCycles = .data:0x800735BC; // type:object size:0x40
__AXAuxMixCycles = .data:0x800735FC; // type:object size:0x80
__AXCompressorTable = .data:0x80073680; // type:object size:0x1A40
axDspSlave = .data:0x800750C0; // type:object size:0x1F20
lens$108 = .data:0x80076FE0; // type:object size:0x20 scope:local data:4byte
lens$108 = .data:0x80077000; // type:object size:0x10 scope:local data:4byte
rsmpTab12khz = .data:0x80077010; // type:object size:0x800
ResetFunctionInfo = .data:0x80077810; // type:object size:0x10
CardData = .data:0x80077820; // type:object size:0x160
SectorSizeTable = .data:0x80077980; // type:object size:0x20
LatencyTable = .data:0x800779A0; // type:object size:0x20
lbl_800779C0 = .data:0x800779C0; // type:object size:0x18 data:string
lbl_800779D8 = .data:0x800779D8; // type:object size:0x1E data:string
lbl_800779F8 = .data:0x800779F8; // type:object size:0xC data:string
lbl_80077A04 = .data:0x80077A04; // type:object size:0x9 data:string
lbl_80077A10 = .data:0x80077A10; // type:object size:0x1D data:string
lbl_80077A30 = .data:0x80077A30; // type:object size:0x2D data:string
lbl_80077A60 = .data:0x80077A60; // type:object size:0x2D data:string
lbl_80077A90 = .data:0x80077A90; // type:object size:0x2D data:string
lbl_80077AC0 = .data:0x80077AC0; // type:object size:0x2D data:string
lbl_80077AF0 = .data:0x80077AF0; // type:object size:0x2D data:string
lbl_80077B20 = .data:0x80077B20; // type:object size:0x2B data:string
lbl_80077B50 = .data:0x80077B50; // type:object size:0xC8 data:string
lbl_80077C18 = .data:0x80077C18; // type:object size:0x37 data:string
lbl_80077C50 = .data:0x80077C50; // type:object size:0x34 data:string
lbl_80077C84 = .data:0x80077C84; // type:object size:0x2F data:string
lbl_80077CB8 = .data:0x80077CB8; // type:object size:0x45 data:string
@18 = .data:0x80077D00; // type:object size:0xA scope:local data:string
lbl_80077D0C = .data:0x80077D0C; // type:object size:0x34 data:string
jumptable_80077D40 = .data:0x80077D40; // type:object size:0x40 scope:local
ImmCommand = .data:0x80077D80; // type:object size:0xC data:4byte
lbl_8007F3A8 = .data:0x80077D8C; // type:object size:0x41 data:string
jumptable_80077DD0 = .data:0x80077DD0; // type:object size:0x34 scope:local
jumptable_80077E04 = .data:0x80077E04; // type:object size:0x34 scope:local
ErrorTable = .data:0x80077E38; // type:object size:0x48 data:4byte
@36 = .data:0x80077E80; // type:object size:0x1A scope:local data:string
lbl_8007F4C4 = .data:0x80077E9C; // type:object size:0x16 scope:local data:string
lbl_8007F4DC = .data:0x80077EB4; // type:object size:0x14 scope:local data:string
lbl_8007F4F0 = .data:0x80077EC8; // type:object size:0x14 scope:local data:string
lbl_8007F504 = .data:0x80077EDC; // type:object size:0x14 scope:local data:string
lbl_80077EF0 = .data:0x80077EF0; // type:object size:0x45 data:string
lbl_80077F38 = .data:0x80077F38; // type:object size:0xF data:string
lbl_80077F48 = .data:0x80077F48; // type:object size:0x10 data:string
lbl_80077F58 = .data:0x80077F58; // type:object size:0x10 data:string
lbl_80077F69 = .data:0x80077F68; // type:object size:0x10 data:string
lbl_80077F78 = .data:0x80077F78; // type:object size:0x11 data:string
lbl_80077F8C = .data:0x80077F8C; // type:object size:0x11 data:string
lbl_80077FA0 = .data:0x80077FA0; // type:object size:0xC data:string
lbl_80077FAC = .data:0x80077FAC; // type:object size:0x9 data:string
lbl_80077FB8 = .data:0x80077FB8; // type:object size:0xD data:string
lbl_80077FC8 = .data:0x80077FC8; // type:object size:0x12 data:string
lbl_80077FDC = .data:0x80077FDC; // type:object size:0xE data:string
lbl_80077FEC = .data:0x80077FEC; // type:object size:0xE data:string
lbl_80078000 = .data:0x80078000; // type:object size:0x44 data:string
lbl_80078044 = .data:0x80078044; // type:object size:0xD0
lbl_80078114 = .data:0x80078114; // type:object size:0x1C
jumptable_80078130 = .data:0x80078130; // type:object size:0x68 scope:local
jumptable_80078198 = .data:0x80078198; // type:object size:0x44 scope:local
jumptable_800781DC = .data:0x800781DC; // type:object size:0x44 scope:local
jumptable_80078220 = .data:0x80078220; // type:object size:0x1C scope:local
jumptable_8007823C = .data:0x8007823C; // type:object size:0x54 scope:local
lbl_80078290 = .data:0x80078290; // type:object size:0x3C
lbl_800782CC = .data:0x800782CC; // type:object size:0x3C
lbl_80078308 = .data:0x80078308; // type:object size:0x3C
lbl_80078344 = .data:0x80078344; // type:object size:0x3C
jumptable_80078380 = .data:0x80078380; // type:object size:0xF4 scope:local
jumptable_80078474 = .data:0x80078474; // type:object size:0xF4 scope:local
jumptable_80078568 = .data:0x80078568; // type:object size:0x3C scope:local
lbl_800785A8 = .data:0x800785A8; // type:object size:0x50
lbl_800785F8 = .data:0x800785F8; // type:object size:0x28
lbl_80078620 = .data:0x80078620; // type:object size:0x20
jumptable_80078640 = .data:0x80078640; // type:object size:0x5C scope:local
jumptable_8007869C = .data:0x8007869C; // type:object size:0x90 scope:local
lbl_80078730 = .data:0x80078730; // type:object size:0x48
lbl_80078778 = .data:0x80078778; // type:object size:0x28
lbl_800787A0 = .data:0x800787A0; // type:object size:0xBC0
@1 = .data:0x80079360; // type:object size:0x44 scope:local data:string
lbl_80079568 = .data:0x80079568; // type:object size:0x398
DSPInitCode = .data:0x80079900; // type:object size:0x80 scope:local
@69 = .data:0x80079980; // type:object size:0x29 scope:local data:string
lbl_80079BB0 = .data:0x80079BB0; // type:object size:0x1B4
@74 = .data:0x80079D64; // type:object size:0x23 scope:local data:string
@13 = .data:0x80079D88; // type:object size:0x16 scope:local data:string
@87 = .data:0x8007A064; // type:object size:0x40 scope:local
lbl_8007A0A8 = .data:0x8007A0A8; // type:object size:0x30 data:4byte
lbl_8007A0D8 = .data:0x8007A0D8; // type:object size:0x28
lbl_8007A100 = .data:0x8007A100; // type:object size:0x28
ResetFunctionInfo = .data:0x8007A128; // type:object size:0x10 scope:local
lbl_8007A138 = .data:0x8007A138; // type:object size:0x30
lbl_8007A168 = .data:0x8007A168; // type:object size:0x30
lbl_8007A198 = .data:0x8007A198; // type:object size:0x10
Si = .data:0x8007A1A8; // type:object size:0x14 scope:local data:4byte
Type = .data:0x8007A1BC; // type:object size:0x10 scope:local
XYNTSC = .data:0x8007A278; // type:object size:0x30 scope:local
lbl_8007A310 = .data:0x8007A310; // type:object size:0x164
jumptable_8007A474 = .data:0x8007A474; // type:object size:0x58 scope:local
lbl_8007A5D8 = .data:0x8007A5D8; // type:object size:0xC
lbl_8007A5E4 = .data:0x8007A5E4; // type:object size:0xC
lbl_8007A5F0 = .data:0x8007A5F0; // type:object size:0x10 data:4byte
lbl_8007A600 = .data:0x8007A600; // type:object size:0x2000
lbl_8007C600 = .data:0x8007C600; // type:object size:0x10 data:string
jumptable_8007C610 = .data:0x8007C610; // type:object size:0x28 scope:local
lbl_8007C638 = .data:0x8007C638; // type:object size:0x20
lbl_8007C658 = .data:0x8007C658; // type:object size:0x10
jumptable_8007C668 = .data:0x8007C668; // type:object size:0x4C scope:local
lbl_8007C6B8 = .data:0x8007C6B8; // type:object size:0x14 data:string
lbl_8007C6CC = .data:0x8007C6CC; // type:object size:0x14 data:string
lbl_8007C6E0 = .data:0x8007C6E0; // type:object size:0x20
lbl_8007C700 = .data:0x8007C700; // type:object size:0x28
lbl_8007C728 = .data:0x8007C728; // type:object size:0x28
lbl_8007C750 = .data:0x8007C750; // type:object size:0x18
lbl_8007C768 = .data:0x8007C768; // type:object size:0xC
lbl_8007C774 = .data:0x8007C774; // type:object size:0x2C
lbl_8007C7A0 = .data:0x8007C7A0; // type:object size:0x2C data:string
lbl_8007C7CC = .data:0x8007C7CC; // type:object size:0x38
lbl_8007C804 = .data:0x8007C804; // type:object size:0x2C data:string
lbl_8007C830 = .data:0x8007C830; // type:object size:0x38
lbl_8007C868 = .data:0x8007C868; // type:object size:0x30 data:string
lbl_8007C898 = .data:0x8007C898; // type:object size:0x10
lbl_8007C8A8 = .data:0x8007C8A8; // type:object size:0x20
lbl_8007C8C8 = .data:0x8007C8C8; // type:object size:0x20
lbl_8007C8E8 = .data:0x8007C8E8; // type:object size:0x200
lbl_8007CAE8 = .data:0x8007CAE8; // type:object size:0x18 data:4byte
lbl_8007CB00 = .data:0x8007CB00; // type:object size:0x68
lbl_8007CB68 = .data:0x8007CB68; // type:object size:0x30
lbl_8007CB98 = .data:0x8007CB98; // type:object size:0x30
lbl_8007CBC8 = .data:0x8007CBC8; // type:object size:0x1C0
lbl_8007CD88 = .data:0x8007CD88; // type:object size:0x68
lbl_8007CDF0 = .data:0x8007CDF0; // type:object size:0x80 data:4byte
lbl_8007CE70 = .data:0x8007CE70; // type:object size:0x2008
lbl_8007EE78 = .data:0x8007EE78; // type:object size:0x5C
lbl_8007EED4 = .data:0x8007EED4; // type:object size:0x64 data:4byte
lbl_8007EF38 = .data:0x8007EF38; // type:object size:0x460
lbl_8007F3A0 = .bss:0x8007F3A0; // type:object size:0x10
__atexit_funcs = .bss:0x8007F3B0; // type:object size:0x100 scope:local
protopool$192 = .bss:0x8007F4B0; // type:object size:0x38 data:4byte
stderr_buff = .bss:0x8007F4E8; // type:object size:0x100
stdout_buff = .bss:0x8007F5E8; // type:object size:0x100
stdin_buff = .bss:0x8007F6E8; // type:object size:0x100
gTRKEventQueue = .bss:0x8007F7E8; // type:object size:0x28
gTRKBigEndian = .bss:0x8007F810; // type:object size:0x4 scope:global data:4byte
gTRKMsgBufs = .bss:0x8007F818; // type:object size:0x19B0
gTRKInputPendingPtr = .bss:0x800811C8; // type:object size:0x4 scope:global data:4byte
gTRKFramingState = .bss:0x800811CC; // type:object size:0x14 data:4byte
gTRKDispatchTableSize = .bss:0x800811E0; // type:object size:0x4 data:4byte
IsTRKConnected = .bss:0x800811E8; // type:object size:0x4 data:4byte
TRK_saved_exceptionID = .bss:0x800811F0; // type:object size:0x2 scope:local data:2byte
gTRKState = .bss:0x800811F4; // type:object size:0xA4 scope:global data:4byte
gTRKCPUState = .bss:0x80081298; // type:object size:0x430 scope:global
gTRKSaveState = .bss:0x800816C8; // type:object size:0x94 scope:global data:4byte
TRKvalue128_temp = .bss:0x8008175C; // type:object size:0x10
lc_base = .bss:0x80081770; // type:object size:0x4 data:4byte
TRK_mainError = .bss:0x80081778; // type:object size:0x4 scope:local data:4byte
gWritePos = .bss:0x80081780; // type:object size:0x4 data:4byte
gReadPos = .bss:0x80081784; // type:object size:0x4 data:4byte
gReadCount = .bss:0x80081788; // type:object size:0x4 data:4byte
_MetroTRK_Has_Framing = .bss:0x8008178C; // type:object size:0x4 data:4byte
gReadBuf = .bss:0x80081790; // type:object size:0x110A
gWriteBuf = .bss:0x8008289C; // type:object size:0x110A
bUseSerialIO = .bss:0x800839A8; // type:object size:0x1 data:byte
__AXStackHead = .bss:0x800839B0; // type:object size:0x80 data:4byte
__AXStackTail = .bss:0x80083A30; // type:object size:0x80 data:4byte
__AXBufferAuxA = .bss:0x80083AC0; // type:object size:0x1680 data:4byte
__AXBufferAuxB = .bss:0x80085140; // type:object size:0x1680 data:4byte
__AXCommandList = .bss:0x800867C0; // type:object size:0x600
__AXOutBuffer = .bss:0x80086DC0; // type:object size:0x500 data:4byte
__AXOutSBuffer = .bss:0x800872C0; // type:object size:0x280
__AXLocalProfile = .bss:0x80087540; // type:object size:0x38
task = .bss:0x80087578; // type:object size:0x50
ax_dram_image = .bss:0x800875C8; // type:object size:0x4000
__AXStudio = .bss:0x8008B5E0; // type:object size:0x36
__AXPB = .bss:0x8008B620; // type:object size:0x3B00 data:2byte
__AXITD = .bss:0x8008F120; // type:object size:0x1000
__AXUpdates = .bss:0x80090120; // type:object size:0x4000
__AXVPB = .bss:0x80094120; // type:object size:0x8900
__CARDBlock = .bss:0x8009CA20; // type:object size:0x220 data:4byte
__CARDDiskNone = .bss:0x8009CC40; // type:object size:0x20
CommandList = .bss:0x8009CC60; // type:object size:0x3C scope:local data:4byte
AlarmForTimeout = .bss:0x8009CCC8; // type:object size:0x28 scope:local
BB2 = .bss:0x8009CD40; // type:object size:0x20 scope:local
CurrDiskID = .bss:0x8009CD60; // type:object size:0x20
DummyCommandBlock = .bss:0x8009CD80; // type:object size:0x30 scope:local
ResetAlarm = .bss:0x8009CDB0; // type:object size:0x28
WaitingQueue = .bss:0x8009CDD8; // type:object size:0x20 scope:local data:4byte
bb2Buf = .bss:0x8009CDF8; // type:object size:0x3F scope:local
block$16 = .bss:0x8009CE38; // type:object size:0x30 scope:local
Ecb = .bss:0x8009CE68; // type:object size:0xC0 scope:local data:4byte
gxData = .bss:0x8009CF28; // type:object size:0x4F8 scope:local
lbl_8009D4A0 = .bss:0x8009D4A0; // type:object size:0x1800 data:4byte
DriveInfo = .bss:0x8009ECA0; // type:object size:0x20 scope:local
__OSErrorTable = .bss:0x8009ECF0; // type:object size:0x44 scope:global data:4byte
lbl_8009ED40 = .bss:0x8009ED40; // type:object size:0x20
Scb = .bss:0x8009ED60; // type:object size:0x54 scope:local data:4byte
RunQueue = .bss:0x8009EDB8; // type:object size:0x100 scope:local data:4byte
lbl_8009F7B0 = .bss:0x8009F7B0; // type:object size:0x10
lbl_8009F7C0 = .bss:0x8009F7C0; // type:object size:0x40
Packet = .bss:0x8009F800; // type:object size:0x80 scope:local data:4byte
lbl_8009F880 = .bss:0x8009F880; // type:object size:0xA0
TypeTime = .bss:0x8009F920; // type:object size:0x20 scope:local
lbl_8009F940 = .bss:0x8009F940; // type:object size:0x20
lbl_8009F960 = .bss:0x8009F960; // type:object size:0x40
lbl_8009F9A0 = .bss:0x8009F9A0; // type:object size:0x60 data:4byte
lbl_8009FA00 = .bss:0x8009FA00; // type:object size:0x78 data:2byte
lbl_8009FA78 = .bss:0x8009FA78; // type:object size:0x78
lbl_8009FAF0 = .bss:0x8009FAF0; // type:object size:0x58 data:2byte
lbl_8009FB48 = .bss:0x8009FB48; // type:object size:0x80
lbl_8009FBC8 = .bss:0x8009FBC8; // type:object size:0x10
lbl_8009FBD8 = .bss:0x8009FBD8; // type:object size:0x20
lbl_8009FBF8 = .bss:0x8009FBF8; // type:object size:0x500
lbl_800A00F8 = .bss:0x800A00F8; // type:object size:0xF0
lbl_800A01E8 = .bss:0x800A01E8; // type:object size:0xC data:4byte
lbl_800A01F4 = .bss:0x800A01F4; // type:object size:0x20 data:4byte
lbl_800A0214 = .bss:0x800A0214; // type:object size:0x30
lbl_800A0244 = .bss:0x800A0244; // type:object size:0x10 data:float
lbl_800A0254 = .bss:0x800A0254; // type:object size:0x28 data:float
lbl_800A027C = .bss:0x800A027C; // type:object size:0x44 data:float
lbl_800A02C0 = .bss:0x800A02C0; // type:object size:0x20
lbl_800A02E0 = .bss:0x800A02E0; // type:object size:0xD0
lbl_800A03B0 = .bss:0x800A03B0; // type:object size:0x20
lbl_800A03D0 = .bss:0x800A03D0; // type:object size:0x20
lbl_800A03F0 = .bss:0x800A03F0; // type:object size:0x100
lbl_800A04F0 = .bss:0x800A04F0; // type:object size:0x30
lbl_800A0520 = .bss:0x800A0520; // type:object size:0x100
lbl_800A0620 = .bss:0x800A0620; // type:object size:0x1E0
lbl_800A0800 = .bss:0x800A0800; // type:object size:0x28 data:4byte
lbl_800A0828 = .bss:0x800A0828; // type:object size:0x48
lbl_800A0870 = .bss:0x800A0870; // type:object size:0x9C0 data:byte
lbl_800A1230 = .bss:0x800A1230; // type:object size:0xC40 data:2byte
lbl_800A1E70 = .bss:0x800A1E70; // type:object size:0x800
lbl_800A2670 = .bss:0x800A2670; // type:object size:0x20
lbl_800A2690 = .bss:0x800A2690; // type:object size:0x100
lbl_800A2790 = .bss:0x800A2790; // type:object size:0xA80 data:byte
lbl_800A3210 = .bss:0x800A3210; // type:object size:0x40
lbl_800A3250 = .bss:0x800A3250; // type:object size:0x400
lbl_800A3650 = .bss:0x800A3650; // type:object size:0x9C0 data:byte
lbl_800A4010 = .bss:0x800A4010; // type:object size:0x16C0 data:byte
lbl_800A56D0 = .bss:0x800A56D0; // type:object size:0x800
lbl_800A5ED0 = .bss:0x800A5ED0; // type:object size:0xB40 data:byte
lbl_800A6A10 = .bss:0x800A6A10; // type:object size:0x100
lbl_800A6B10 = .bss:0x800A6B10; // type:object size:0x3C0 data:4byte
lbl_800A6ED0 = .bss:0x800A6ED0; // type:object size:0x630
lbl_800A7500 = .bss:0x800A7500; // type:object size:0x5318
lbl_800AC818 = .bss:0x800AC818; // type:object size:0x20
lbl_800AC838 = .bss:0x800AC838; // type:object size:0x100
lbl_800AC938 = .bss:0x800AC938; // type:object size:0x400
lbl_800ACD38 = .bss:0x800ACD38; // type:object size:0x380 data:byte
lbl_800AD0B8 = .bss:0x800AD0B8; // type:object size:0x2080
lbl_800AF138 = .bss:0x800AF138; // type:object size:0x12C
lbl_800AF264 = .bss:0x800AF264; // type:object size:0xC data:byte
lbl_800AF270 = .bss:0x800AF270; // type:object size:0x340 data:4byte
lbl_800AF5B0 = .bss:0x800AF5B0; // type:object size:0xC data:4byte
lbl_800AF5BC = .bss:0x800AF5BC; // type:object size:0xFA4 data:byte
lbl_800B0560 = .bss:0x800B0560; // type:object size:0x100
lbl_800B0660 = .bss:0x800B0660; // type:object size:0x100
lbl_800B0760 = .bss:0x800B0760; // type:object size:0x2380 data:byte
lbl_800B2AE0 = .bss:0x800B2AE0; // type:object size:0x480
lbl_800B2F60 = .bss:0x800B2F60; // type:object size:0x4000 data:4byte
lbl_800B6F60 = .bss:0x800B6F60; // type:object size:0xC00
lbl_800B7B60 = .bss:0x800B7B60; // type:object size:0x20
lbl_800B7B80 = .bss:0x800B7B80; // type:object size:0x100
lbl_800B7C80 = .bss:0x800B7C80; // type:object size:0x38
lbl_800B7CB8 = .bss:0x800B7CB8; // type:object size:0xE0
lbl_800B7D98 = .bss:0x800B7D98; // type:object size:0x1C
lbl_800B7DB4 = .bss:0x800B7DB4; // type:object size:0x1C data:4byte
lbl_800B7DD0 = .bss:0x800B7DD0; // type:object size:0x12C
lbl_800B7EFC = .bss:0x800B7EFC; // type:object size:0x8C4 data:byte
lbl_800B87C0 = .bss:0x800B87C0; // type:object size:0x100
lbl_800B88C0 = .bss:0x800B88C0; // type:object size:0x80
lbl_800B8940 = .bss:0x800B8940; // type:object size:0x1040
lbl_800B9980 = .bss:0x800B9980; // type:object size:0xE80 data:byte
lbl_800BA800 = .bss:0x800BA800; // type:object size:0x180 data:4byte
lbl_800BA980 = .bss:0x800BA980; // type:object size:0x104
lbl_800BAA84 = .bss:0x800BAA84; // type:object size:0x100 data:byte
lbl_800BAB84 = .bss:0x800BAB84; // type:object size:0x104 data:byte
lbl_800BAC88 = .bss:0x800BAC88; // type:object size:0x10 data:byte
lbl_800BACA0 = .sdata:0x800BACA0; // type:object size:0x8
@wstringBase0 = .sdata:0x800BACA8; // type:object size:0x2 scope:local
next = .sdata:0x800BACB0; // type:object size:0x4 scope:local data:4byte
__float_nan = .sdata:0x800BACB8; // type:object size:0x4 data:float
__float_huge = .sdata:0x800BACBC; // type:object size:0x4 data:float
__double_max = .sdata:0x800BACC0; // type:object size:0x8 data:double
__double_huge = .sdata:0x800BACC8; // type:object size:0x8 data:double
__extended_min = .sdata:0x800BACD0; // type:object size:0x8 data:double
__extended_max = .sdata:0x800BACD8; // type:object size:0x8 data:double
axDspSlaveLength = .sdata:0x800BACE0; // type:object size:0x2 data:2byte
__AXFXAlloc = .sdata:0x800BACE8; // type:object size:0x4 data:4byte
__AXFXFree = .sdata:0x800BACEC; // type:object size:0x4 data:4byte
next = .sdata:0x800BACF0; // type:object size:0x4 scope:local data:4byte
__CARDVendorID = .sdata:0x800BACF8; // type:object size:0x2 data:2byte
FirstRead = .sdata:0x800BAD00; // type:object size:0x4 data:4byte
lbl_800BAD08 = .sdata:0x800BAD08; // type:object size:0x8 data:string
__DVDVersion = .sdata:0x800BAD10; // type:object size:0x4 scope:global data:4byte
autoInvalidation = .sdata:0x800BAD14; // type:object size:0x4 scope:local data:4byte
checkOptionalCommand = .sdata:0x800BAD18; // type:object size:0x4 data:4byte
lbl_800BAD1C = .sdata:0x800BAD1C; // type:object size:0x6 data:string
DmaCommand = .sdata:0x800BAD24; // type:object size:0x4 data:4byte
@35 = .sdata:0x800BAD28; // type:object size:0x2 scope:local data:string
@40 = .sdata:0x800BAD2C; // type:object size:0x4 scope:local data:string
@41 = .sdata:0x800BAD30; // type:object size:0x3 scope:local data:string
__EXIVersion = .sdata:0x800BAD38; // type:object size:0x4 scope:global data:4byte
__GXVersion = .sdata:0x800BAD40; // type:object size:0x4 scope:global data:4byte
lbl_800BAD48 = .sdata:0x800BAD48; // type:object size:0x4
lbl_800BAD4C = .sdata:0x800BAD4C; // type:object size:0x4
lbl_800BAD50 = .sdata:0x800BAD50; // type:object size:0x8
lbl_800BAD58 = .sdata:0x800BAD58; // type:object size:0x8
lbl_800BAD60 = .sdata:0x800BAD60; // type:object size:0x8
lbl_800BAD68 = .sdata:0x800BAD68; // type:object size:0x8
lbl_800BAD70 = .sdata:0x800BAD70; // type:object size:0x8
lbl_800BAD78 = .sdata:0x800BAD78; // type:object size:0x8
lbl_800BAD80 = .sdata:0x800BAD80; // type:object size:0x8
lbl_800BAD88 = .sdata:0x800BAD88; // type:object size:0x8
lbl_800BAD90 = .sdata:0x800BAD90; // type:object size:0x8
lbl_800BAD98 = .sdata:0x800BAD98; // type:object size:0x4 data:4byte
lbl_800BAD9C = .sdata:0x800BAD9C; // type:object size:0x4 data:string
lbl_800BADA0 = .sdata:0x800BADA0; // type:object size:0x8
__OSVersion = .sdata:0x800BADA8; // type:object size:0x4 scope:global data:4byte
lbl_800BADAC = .sdata:0x800BADAC; // type:object size:0x4 data:string
lbl_800BADB0 = .sdata:0x800BADB0; // type:object size:0x8 data:4byte
__OSArenaLo = .sdata:0x800BADB8; // type:object size:0x4 scope:local data:4byte
lbl_800BADC0 = .sdata:0x800BADC0; // type:object size:0x4 data:4byte
@76 = .sdata:0x800BADC4; // type:object size:0x2 scope:local data:string
lbl_800BADC8 = .sdata:0x800BADC8; // type:object size:0x8 data:2byte
SwitchThreadCallback = .sdata:0x800BADD0; // type:object size:0x4 scope:local data:4byte
lbl_800BADD8 = .sdata:0x800BADD8; // type:object size:0x4 data:4byte
lbl_800BADDC = .sdata:0x800BADDC; // type:object size:0x4 data:4byte
lbl_800BADE0 = .sdata:0x800BADE0; // type:object size:0x4 data:4byte
lbl_800BADE4 = .sdata:0x800BADE4; // type:object size:0x4 data:4byte
lbl_800BADE8 = .sdata:0x800BADE8; // type:object size:0x4 data:4byte
lbl_800BADEC = .sdata:0x800BADEC; // type:object size:0x4
lbl_800BADF0 = .sdata:0x800BADF0; // type:object size:0x8
lbl_800BADF8 = .sdata:0x800BADF8; // type:object size:0x8 data:4byte
lbl_800BAE00 = .sdata:0x800BAE00; // type:object size:0xC
lbl_800BAE0C = .sdata:0x800BAE0C; // type:object size:0x8 data:float
lbl_800BAE14 = .sdata:0x800BAE14; // type:object size:0x4 data:float
lbl_800BAE18 = .sdata:0x800BAE18; // type:object size:0x8 data:4byte
lbl_800BAE20 = .sdata:0x800BAE20; // type:object size:0x8
lbl_800BAE28 = .sdata:0x800BAE28; // type:object size:0x8
lbl_800BAE30 = .sdata:0x800BAE30; // type:object size:0x8
lbl_800BAE38 = .sdata:0x800BAE38; // type:object size:0x8
lbl_800BAE40 = .sdata:0x800BAE40; // type:object size:0x8 data:4byte
lbl_800BAE48 = .sdata:0x800BAE48; // type:object size:0x8 data:byte
lbl_800BAE50 = .sdata:0x800BAE50; // type:object size:0x4 data:4byte
lbl_800BAE54 = .sdata:0x800BAE54; // type:object size:0x4 data:4byte
lbl_800BAE58 = .sdata:0x800BAE58; // type:object size:0x8 data:4byte
lbl_800BAE60 = .sdata:0x800BAE60; // type:object size:0x4 data:4byte
lbl_800BAE64 = .sdata:0x800BAE64; // type:object size:0x4 data:4byte
lbl_800BAE68 = .sdata:0x800BAE68; // type:object size:0x4 data:4byte
lbl_800BAE6C = .sdata:0x800BAE6C; // type:object size:0x4 data:4byte
lbl_800BAE70 = .sdata:0x800BAE70; // type:object size:0x8 data:4byte
lbl_800BAE78 = .sdata:0x800BAE78; // type:object size:0x8 data:4byte
lbl_800BAE80 = .sdata:0x800BAE80; // type:object size:0x8 data:4byte
lbl_800BAE88 = .sdata:0x800BAE88; // type:object size:0x8 data:4byte
lbl_800BAE90 = .sdata:0x800BAE90; // type:object size:0x8 data:4byte
lbl_800BAE98 = .sdata:0x800BAE98; // type:object size:0x4 data:4byte
lbl_800BAE9C = .sdata:0x800BAE9C; // type:object size:0x4 data:4byte
lbl_800BAEA0 = .sbss:0x800BAEA0; // type:object size:0x8 data:4byte
__global_destructor_chain = .sbss:0x800BAEA8; // type:object size:0x4 scope:global data:4byte
__aborting = .sbss:0x800BAEB0; // type:object size:0x4 scope:global data:4byte
__atexit_curr_func = .sbss:0x800BAEB4; // type:object size:0x4 scope:local data:4byte
__stdio_exit = .sbss:0x800BAEB8; // type:object size:0x4 scope:global data:4byte
__console_exit = .sbss:0x800BAEBC; // type:object size:0x4 scope:global data:4byte
init$193 = .sbss:0x800BAEC0; // type:object size:0x1 data:byte
errno = .sbss:0x800BAEC8; // type:object size:0x4 data:4byte
initialized$16 = .sbss:0x800BAED0; // type:object size:0x4 data:4byte
zero = .sbss:0x800BAED8; // type:object size:0x8 scope:local data:double
zero = .sbss:0x800BAEE0; // type:object size:0x8 scope:local data:double
__AIS_Callback = .sbss:0x800BAEE8; // type:object size:0x4 data:4byte
__AID_Callback = .sbss:0x800BAEEC; // type:object size:0x4 data:4byte
__CallbackStack = .sbss:0x800BAEF0; // type:object size:0x4 data:4byte
__OldStack = .sbss:0x800BAEF4; // type:object size:0x4 data:4byte
__AI_init_flag = .sbss:0x800BAEF8; // type:object size:0x4 data:4byte
bound_32KHz = .sbss:0x800BAF00; // type:object size:0x8 data:4byte
bound_48KHz = .sbss:0x800BAF08; // type:object size:0x8 data:4byte
min_wait = .sbss:0x800BAF10; // type:object size:0x8 data:4byte
max_wait = .sbss:0x800BAF18; // type:object size:0x8 data:4byte
buffer = .sbss:0x800BAF20; // type:object size:0x8 data:4byte
__AR_Callback = .sbss:0x800BAF28; // type:object size:0x4 data:4byte
__AR_Size = .sbss:0x800BAF2C; // type:object size:0x4 data:4byte
__AR_InternalSize = .sbss:0x800BAF30; // type:object size:0x4 data:4byte
__AR_ExpansionSize = .sbss:0x800BAF34; // type:object size:0x4 data:4byte
__AR_StackPointer = .sbss:0x800BAF38; // type:object size:0x4 data:4byte
__AR_FreeBlocks = .sbss:0x800BAF3C; // type:object size:0x4 data:4byte
__AR_BlockLength = .sbss:0x800BAF40; // type:object size:0x4 data:4byte
__AR_init_flag = .sbss:0x800BAF44; // type:object size:0x4 data:4byte
__ARQRequestQueueHi = .sbss:0x800BAF48; // type:object size:0x4 data:4byte
__ARQRequestTailHi = .sbss:0x800BAF4C; // type:object size:0x4 data:4byte
__ARQRequestQueueLo = .sbss:0x800BAF50; // type:object size:0x4 data:4byte
__ARQRequestTailLo = .sbss:0x800BAF54; // type:object size:0x4 data:4byte
__ARQRequestPendingHi = .sbss:0x800BAF58; // type:object size:0x4 data:4byte
__ARQRequestPendingLo = .sbss:0x800BAF5C; // type:object size:0x4 data:4byte
__ARQCallbackHi = .sbss:0x800BAF60; // type:object size:0x4 data:4byte
__ARQCallbackLo = .sbss:0x800BAF64; // type:object size:0x4 data:4byte
__ARQChunkSize = .sbss:0x800BAF68; // type:object size:0x4 data:4byte
__ARQ_init_flag = .sbss:0x800BAF6C; // type:object size:0x4 data:4byte
__AXCallbackStack = .sbss:0x800BAF70; // type:object size:0x4 data:4byte
__AXCallbackAuxA = .sbss:0x800BAF78; // type:object size:0x4 data:4byte
__AXCallbackAuxB = .sbss:0x800BAF7C; // type:object size:0x4 data:4byte
__AXContextAuxA = .sbss:0x800BAF80; // type:object size:0x4 data:4byte
__AXContextAuxB = .sbss:0x800BAF84; // type:object size:0x4 data:4byte
__AXAuxADspWrite = .sbss:0x800BAF88; // type:object size:0x4 data:4byte
__AXAuxADspRead = .sbss:0x800BAF8C; // type:object size:0x4 data:4byte
__AXAuxBDspWrite = .sbss:0x800BAF90; // type:object size:0x4 data:4byte
__AXAuxBDspRead = .sbss:0x800BAF94; // type:object size:0x4 data:4byte
__AXAuxDspWritePosition = .sbss:0x800BAF98; // type:object size:0x4 data:4byte
__AXAuxDspReadPosition = .sbss:0x800BAF9C; // type:object size:0x4 data:4byte
__AXAuxDspWritePositionDpl2 = .sbss:0x800BAFA0; // type:object size:0x4 data:4byte
__AXAuxDspReadPositionDpl2 = .sbss:0x800BAFA4; // type:object size:0x4 data:4byte
__AXAuxCpuReadWritePosition = .sbss:0x800BAFA8; // type:object size:0x4 data:4byte
__AXCommandListPosition = .sbss:0x800BAFB0; // type:object size:0x4 data:4byte
__AXClWrite = .sbss:0x800BAFB4; // type:object size:0x4 data:4byte
__AXCommandListCycles = .sbss:0x800BAFB8; // type:object size:0x4 data:4byte
__AXCompressor = .sbss:0x800BAFBC; // type:object size:0x4 data:4byte
__AXClMode = .sbss:0x800BAFC0; // type:object size:0x4 data:4byte
__AXOutFrame = .sbss:0x800BAFC8; // type:object size:0x4 data:4byte
__AXOutDspReady = .sbss:0x800BAFCC; // type:object size:0x4 data:4byte
__AXOsTime = .sbss:0x800BAFD0; // type:object size:0x8 data:4byte
__AXUserFrameCallback = .sbss:0x800BAFD8; // type:object size:0x4 data:4byte
__AXDSPInitFlag = .sbss:0x800BAFDC; // type:object size:0x4 data:4byte
__AXDSPDoneFlag = .sbss:0x800BAFE0; // type:object size:0x4 data:4byte
__AXDebugSteppingMode = .sbss:0x800BAFE4; // type:object size:0x4 data:4byte
__AXSpbAL = .sbss:0x800BAFE8; // type:object size:0x4 data:4byte
__AXSpbAR = .sbss:0x800BAFEC; // type:object size:0x4 data:4byte
__AXSpbAS = .sbss:0x800BAFF0; // type:object size:0x4 data:4byte
__AXSpbAAL = .sbss:0x800BAFF4; // type:object size:0x4 data:4byte
__AXSpbAAR = .sbss:0x800BAFF8; // type:object size:0x4 data:4byte
__AXSpbAAS = .sbss:0x800BAFFC; // type:object size:0x4 data:4byte
__AXSpbABL = .sbss:0x800BB000; // type:object size:0x4 data:4byte
__AXSpbABR = .sbss:0x800BB004; // type:object size:0x4 data:4byte
__AXSpbABS = .sbss:0x800BB008; // type:object size:0x4 data:4byte
__AXMaxDspCycles = .sbss:0x800BB010; // type:object size:0x4 data:4byte
__AXRecDspCycles = .sbss:0x800BB014; // type:object size:0x4 data:4byte
__AXNumVoices = .sbss:0x800BB018; // type:object size:0x4 data:4byte
__AXProfile = .sbss:0x800BB020; // type:object size:0x4 data:4byte
__AXMaxProfiles = .sbss:0x800BB024; // type:object size:0x4 data:4byte
__AXCurrentProfile = .sbss:0x800BB028; // type:object size:0x4 data:4byte
__AXProfileInitialized = .sbss:0x800BB02C; // type:object size:0x4 data:4byte
__DBInterface = .sbss:0x800BB030; // type:object size:0x4 scope:global data:4byte
DBVerbose = .sbss:0x800BB034; // type:object size:0x4 scope:global data:4byte
__DSP_init_flag = .sbss:0x800BB038; // type:object size:0x4 data:4byte
__DSP_rude_task_pending = .sbss:0x800BB040; // type:object size:0x4 data:4byte
__DSP_rude_task = .sbss:0x800BB044; // type:object size:0x4 data:4byte
__DSP_tmp_task = .sbss:0x800BB048; // type:object size:0x4 data:4byte
__DSP_last_task = .sbss:0x800BB04C; // type:object size:0x4 data:4byte
__DSP_first_task = .sbss:0x800BB050; // type:object size:0x4 data:4byte
__DSP_curr_task = .sbss:0x800BB054; // type:object size:0x4 data:4byte
StopAtNextInt = .sbss:0x800BB058; // type:object size:0x4 scope:local data:4byte
LastLength = .sbss:0x800BB05C; // type:object size:0x4 data:4byte
Callback = .sbss:0x800BB060; // type:object size:0x4 scope:local data:4byte
ResetCoverCallback = .sbss:0x800BB064; // type:object size:0x4 data:4byte
LastResetEnd = .sbss:0x800BB068; // type:object size:0x8 scope:local data:4byte
ResetOccurred = .sbss:0x800BB070; // type:object size:0x4 scope:local data:4byte
WaitingCoverClose = .sbss:0x800BB074; // type:object size:0x4 scope:local data:4byte
Breaking = .sbss:0x800BB078; // type:object size:0x4 data:4byte
WorkAroundType = .sbss:0x800BB07C; // type:object size:0x4 scope:local data:4byte
WorkAroundSeekLocation = .sbss:0x800BB080; // type:object size:0x4 scope:local data:4byte
LastReadFinished = .sbss:0x800BB088; // type:object size:0x8 data:4byte
LastReadIssued = .sbss:0x800BB090; // type:object size:0x8 data:4byte
LastCommandWasRead = .sbss:0x800BB098; // type:object size:0x4 data:4byte
NextCommandNumber = .sbss:0x800BB09C; // type:object size:0x4 scope:local data:4byte
BootInfo = .sbss:0x800BB0A0; // type:object size:0x4 scope:local data:4byte
FstStart = .sbss:0x800BB0A4; // type:object size:0x4 scope:local data:4byte
FstStringStart = .sbss:0x800BB0A8; // type:object size:0x4 scope:local data:4byte
MaxEntryNum = .sbss:0x800BB0AC; // type:object size:0x4 scope:local data:4byte
currentDirectory = .sbss:0x800BB0B0; // type:object size:0x4 data:4byte
__DVDLongFileNameFlag = .sbss:0x800BB0B4; // type:object size:0x4 scope:global data:4byte
__DVDThreadQueue = .sbss:0x800BB0B8; // type:object size:0x8 scope:global
executing = .sbss:0x800BB0C0; // type:object size:0x4 scope:local data:4byte
IDShouldBe = .sbss:0x800BB0C4; // type:object size:0x4 scope:local data:4byte
bootInfo = .sbss:0x800BB0C8; // type:object size:0x4 scope:local data:4byte
PauseFlag = .sbss:0x800BB0CC; // type:object size:0x4 scope:local data:4byte
PausingFlag = .sbss:0x800BB0D0; // type:object size:0x4 scope:local data:4byte
AutoFinishing = .sbss:0x800BB0D4; // type:object size:0x4 data:4byte
FatalErrorFlag = .sbss:0x800BB0D8; // type:object size:0x4 scope:local data:4byte
CurrCommand = .sbss:0x800BB0DC; // type:object size:0x4 scope:local data:4byte
Canceling = .sbss:0x800BB0E0; // type:object size:0x4 data:4byte
CancelCallback = .sbss:0x800BB0E4; // type:object size:0x4 data:4byte
ResumeFromHere = .sbss:0x800BB0E8; // type:object size:0x4 scope:local data:4byte
CancelLastError = .sbss:0x800BB0EC; // type:object size:0x4 scope:local data:4byte
LastError = .sbss:0x800BB0F0; // type:object size:0x4 data:4byte
NumInternalRetry = .sbss:0x800BB0F4; // type:object size:0x4 data:4byte
ResetRequired = .sbss:0x800BB0F8; // type:object size:0x4 scope:local data:4byte
FirstTimeInBootrom = .sbss:0x800BB0FC; // type:object size:0x4 scope:local data:4byte
DVDInitialized = .sbss:0x800BB100; // type:object size:0x4 scope:local data:4byte
LastState = .sbss:0x800BB104; // type:object size:0x4 data:4byte
FatalFunc = .sbss:0x800BB108; // type:object size:0x4 data:4byte
status = .sbss:0x800BB110; // type:object size:0x4 data:4byte
bb2 = .sbss:0x800BB114; // type:object size:0x4 scope:local data:4byte
idTmp = .sbss:0x800BB118; // type:object size:0x4 scope:local data:4byte
IDSerialPort1 = .sbss:0x800BB120; // type:object size:0x4 scope:local data:4byte
Chan = .sbss:0x800BB128; // type:object size:0x4 data:4byte
Dev = .sbss:0x800BB12C; // type:object size:0x4 data:4byte
Enabled = .sbss:0x800BB130; // type:object size:0x4 data:4byte
BarnacleEnabled = .sbss:0x800BB134; // type:object size:0x4 data:4byte
__piReg = .sbss:0x800BB138; // type:object size:0x4 scope:global data:4byte
__cpReg = .sbss:0x800BB13C; // type:object size:0x4 scope:global data:4byte
__peReg = .sbss:0x800BB140; // type:object size:0x4 scope:global data:4byte
__memReg = .sbss:0x800BB144; // type:object size:0x4 scope:global data:4byte
lbl_800BB148 = .sbss:0x800BB148; // type:object size:0x4 data:4byte
lbl_800BB14C = .sbss:0x800BB14C; // type:object size:0x4 data:4byte
lbl_800BB150 = .sbss:0x800BB150; // type:object size:0x4 data:4byte
lbl_800BB154 = .sbss:0x800BB154; // type:object size:0x1 data:byte
lbl_800BB158 = .sbss:0x800BB158; // type:object size:0x4 data:4byte
lbl_800BB15C = .sbss:0x800BB15C; // type:object size:0x4 data:4byte
lbl_800BB160 = .sbss:0x800BB160; // type:object size:0x8 data:4byte
lbl_800BB168 = .sbss:0x800BB168; // type:object size:0x4 data:4byte
lbl_800BB16C = .sbss:0x800BB16C; // type:object size:0x4 data:4byte
lbl_800BB170 = .sbss:0x800BB170; // type:object size:0x1 data:byte
lbl_800BB174 = .sbss:0x800BB174; // type:object size:0xC
lbl_800BB180 = .sbss:0x800BB180; // type:object size:0x4 data:4byte
lbl_800BB184 = .sbss:0x800BB184; // type:object size:0x4 data:4byte
lbl_800BB188 = .sbss:0x800BB188; // type:object size:0x4 data:4byte
lbl_800BB18C = .sbss:0x800BB18C; // type:object size:0x4 data:4byte
lbl_800BB190 = .sbss:0x800BB190; // type:object size:0x4 data:4byte
lbl_800BB194 = .sbss:0x800BB194; // type:object size:0x4 data:4byte
lbl_800BB198 = .sbss:0x800BB198; // type:object size:0x8 data:4byte
BootInfo = .sbss:0x800BB1A0; // type:object size:0x4 scope:local data:4byte
BI2DebugFlag = .sbss:0x800BB1A4; // type:object size:0x4 scope:local data:4byte
BI2DebugFlagHolder = .sbss:0x800BB1A8; // type:object size:0x4 scope:local data:4byte
__OSIsGcam = .sbss:0x800BB1AC; // type:object size:0x4 scope:weak data:4byte
AreWeInitialized = .sbss:0x800BB1B0; // type:object size:0x4 scope:local data:4byte
OSExceptionTable = .sbss:0x800BB1B4; // type:object size:0x4 scope:local data:4byte
__OSSavedRegionEnd = .sbss:0x800BB1B8; // type:object size:0x4 scope:global data:4byte
__OSSavedRegionStart = .sbss:0x800BB1BC; // type:object size:0x4 scope:global data:4byte
__OSInIPL = .sbss:0x800BB1C0; // type:object size:0x4 scope:global data:4byte
__OSStartTime = .sbss:0x800BB1C8; // type:object size:0x8 scope:global data:4byte
AlarmQueue = .sbss:0x800BB1D0; // type:object size:0x8 scope:local data:4byte
lbl_800BB1D8 = .sbss:0x800BB1D8; // type:object size:0x4 data:4byte
lbl_800BB1DC = .sbss:0x800BB1DC; // type:object size:0x4 data:4byte
lbl_800BB1E0 = .sbss:0x800BB1E0; // type:object size:0x4 data:4byte
lbl_800BB1E4 = .sbss:0x800BB1E4; // type:object size:0x4 data:4byte
__OSArenaHi = .sbss:0x800BB1E8; // type:object size:0x4 scope:local data:4byte
InterruptHandlerTable = .sbss:0x800BB1F0; // type:object size:0x4 scope:local data:4byte
__OSLastInterruptSrr0 = .sbss:0x800BB1F4; // type:object size:0x4 scope:global data:4byte
__OSLastInterrupt = .sbss:0x800BB1F8; // type:object size:0x2 scope:global data:2byte
__OSLastInterruptTime = .sbss:0x800BB200; // type:object size:0x8 scope:global data:4byte
lbl_800BB208 = .sbss:0x800BB208; // type:object size:0x4 data:4byte
lbl_800BB20C = .sbss:0x800BB20C; // type:object size:0x4 data:4byte
lbl_800BB210 = .sbss:0x800BB210; // type:object size:0x8 data:4byte
ResetFunctionQueue = .sbss:0x800BB218; // type:object size:0x8 scope:local data:4byte
lbl_800BB220 = .sbss:0x800BB220; // type:object size:0x4 data:4byte
lbl_800BB224 = .sbss:0x800BB224; // type:object size:0x4 data:4byte
lbl_800BB228 = .sbss:0x800BB228; // type:object size:0x8 data:4byte
lbl_800BB230 = .sbss:0x800BB230; // type:object size:0x4 data:4byte
lbl_800BB234 = .sbss:0x800BB234; // type:object size:0x4 data:4byte
lbl_800BB238 = .sbss:0x800BB238; // type:object size:0x4 data:4byte
lbl_800BB23C = .sbss:0x800BB23C; // type:object size:0x4 data:4byte
RunQueueBits = .sbss:0x800BB240; // type:object size:0x4 scope:local data:4byte
RunQueueHint = .sbss:0x800BB244; // type:object size:0x4 scope:local data:4byte
Reschedule = .sbss:0x800BB248; // type:object size:0x4 scope:local data:4byte
lbl_800BB250 = .sbss:0x800BB250; // type:object size:0x4 data:4byte
lbl_800BB254 = .sbss:0x800BB254; // type:object size:0x4 data:4byte
lbl_800BB258 = .sbss:0x800BB258; // type:object size:0x4 data:4byte
lbl_800BB25C = .sbss:0x800BB25C; // type:object size:0x4 data:4byte
lbl_800BB260 = .sbss:0x800BB260; // type:object size:0x4 data:4byte
lbl_800BB264 = .sbss:0x800BB264; // type:object size:0x4 data:4byte
lbl_800BB268 = .sbss:0x800BB268; // type:object size:0x4 data:4byte
lbl_800BB26C = .sbss:0x800BB26C; // type:object size:0x4 data:4byte
lbl_800BB270 = .sbss:0x800BB270; // type:object size:0x4 data:4byte
__PADSpec = .sbss:0x800BB274; // type:object size:0x4 scope:global data:4byte
lbl_800BB278 = .sbss:0x800BB278; // type:object size:0x4
cmdTypeAndStatus$371 = .sbss:0x800BB27C; // type:object size:0x4 scope:local
lbl_800BB280 = .sbss:0x800BB280; // type:object size:0x8 data:4byte
SamplingRate = .sbss:0x800BB288; // type:object size:0x4 scope:local data:4byte
lbl_800BB290 = .sbss:0x800BB290; // type:object size:0x4 data:4byte
lbl_800BB294 = .sbss:0x800BB294; // type:object size:0x4 data:4byte
lbl_800BB298 = .sbss:0x800BB298; // type:object size:0x8
lbl_800BB2A0 = .sbss:0x800BB2A0; // type:object size:0x4 data:4byte
lbl_800BB2A4 = .sbss:0x800BB2A4; // type:object size:0x4 data:4byte
lbl_800BB2A8 = .sbss:0x800BB2A8; // type:object size:0x4 data:4byte
lbl_800BB2AC = .sbss:0x800BB2AC; // type:object size:0x2 data:2byte
lbl_800BB2AE = .sbss:0x800BB2AE; // type:object size:0x2 data:2byte
lbl_800BB2B0 = .sbss:0x800BB2B0; // type:object size:0x8 data:4byte
lbl_800BB2B8 = .sbss:0x800BB2B8; // type:object size:0x4 data:4byte
lbl_800BB2BC = .sbss:0x800BB2BC; // type:object size:0x4 data:4byte
lbl_800BB2C0 = .sbss:0x800BB2C0; // type:object size:0x8 data:4byte
lbl_800BB2C8 = .sbss:0x800BB2C8; // type:object size:0x4 data:4byte
lbl_800BB2CC = .sbss:0x800BB2CC; // type:object size:0x4 data:4byte
lbl_800BB2D0 = .sbss:0x800BB2D0; // type:object size:0x4 data:4byte
CurrTvMode = .sbss:0x800BB2D4; // type:object size:0x4 scope:local data:4byte
lbl_800BB2D8 = .sbss:0x800BB2D8; // type:object size:0x4 data:4byte
lbl_800BB2DC = .sbss:0x800BB2DC; // type:object size:0x4 data:4byte
lbl_800BB2E0 = .sbss:0x800BB2E0; // type:object size:0x8
lbl_800BB2E8 = .sbss:0x800BB2E8; // type:object size:0x8 data:float
lbl_800BB2F0 = .sbss:0x800BB2F0; // type:object size:0x4 data:4byte
lbl_800BB2F4 = .sbss:0x800BB2F4; // type:object size:0x4 data:4byte
lbl_800BB2F8 = .sbss:0x800BB2F8; // type:object size:0x4 data:4byte
lbl_800BB2FC = .sbss:0x800BB2FC; // type:object size:0x4 data:4byte
lbl_800BB300 = .sbss:0x800BB300; // type:object size:0x4 data:4byte
lbl_800BB304 = .sbss:0x800BB304; // type:object size:0x4 data:4byte
lbl_800BB308 = .sbss:0x800BB308; // type:object size:0x4 data:4byte
lbl_800BB30C = .sbss:0x800BB30C; // type:object size:0x4 data:4byte
lbl_800BB310 = .sbss:0x800BB310; // type:object size:0x4 data:float
lbl_800BB314 = .sbss:0x800BB314; // type:object size:0x4 data:4byte
lbl_800BB318 = .sbss:0x800BB318; // type:object size:0x8 data:4byte
lbl_800BB320 = .sbss:0x800BB320; // type:object size:0x4 data:4byte
lbl_800BB324 = .sbss:0x800BB324; // type:object size:0x4 data:4byte
lbl_800BB328 = .sbss:0x800BB328; // type:object size:0x4 data:4byte
lbl_800BB32C = .sbss:0x800BB32C; // type:object size:0x4 data:4byte
lbl_800BB330 = .sbss:0x800BB330; // type:object size:0x4 data:4byte
lbl_800BB334 = .sbss:0x800BB334; // type:object size:0x4 data:4byte
lbl_800BB338 = .sbss:0x800BB338; // type:object size:0x4 data:4byte
lbl_800BB33C = .sbss:0x800BB33C; // type:object size:0x4 data:4byte
lbl_800BB340 = .sbss:0x800BB340; // type:object size:0x4 data:4byte
lbl_800BB344 = .sbss:0x800BB344; // type:object size:0x4 data:4byte
lbl_800BB348 = .sbss:0x800BB348; // type:object size:0x4 data:4byte
lbl_800BB34C = .sbss:0x800BB34C; // type:object size:0x4 data:4byte
lbl_800BB350 = .sbss:0x800BB350; // type:object size:0x4 data:4byte
lbl_800BB354 = .sbss:0x800BB354; // type:object size:0x4 data:4byte
lbl_800BB358 = .sbss:0x800BB358; // type:object size:0x4 data:4byte
lbl_800BB35C = .sbss:0x800BB35C; // type:object size:0x4 data:4byte
lbl_800BB360 = .sbss:0x800BB360; // type:object size:0x4 data:4byte
lbl_800BB364 = .sbss:0x800BB364; // type:object size:0x4 data:4byte
lbl_800BB368 = .sbss:0x800BB368; // type:object size:0x4 data:4byte
lbl_800BB36C = .sbss:0x800BB36C; // type:object size:0x4 data:4byte
lbl_800BB370 = .sbss:0x800BB370; // type:object size:0x8 data:4byte
lbl_800BB378 = .sbss:0x800BB378; // type:object size:0x4 data:float
lbl_800BB37C = .sbss:0x800BB37C; // type:object size:0x4 data:float
lbl_800BB380 = .sbss:0x800BB380; // type:object size:0x4 data:4byte
lbl_800BB384 = .sbss:0x800BB384; // type:object size:0x4 data:4byte
lbl_800BB388 = .sbss:0x800BB388; // type:object size:0x8 data:byte
lbl_800BB390 = .sbss:0x800BB390; // type:object size:0x4 data:4byte
lbl_800BB394 = .sbss:0x800BB394; // type:object size:0x4 data:4byte
lbl_800BB398 = .sbss:0x800BB398; // type:object size:0x4 data:4byte
lbl_800BB39C = .sbss:0x800BB39C; // type:object size:0x4 data:4byte
lbl_800BB3A0 = .sbss:0x800BB3A0; // type:object size:0x4 data:4byte
lbl_800BB3A4 = .sbss:0x800BB3A4; // type:object size:0x2 data:2byte
lbl_800BB3A8 = .sbss:0x800BB3A8; // type:object size:0x4 data:4byte
lbl_800BB3AC = .sbss:0x800BB3AC; // type:object size:0x4 data:4byte
lbl_800BB3B0 = .sbss:0x800BB3B0; // type:object size:0x8 data:4byte
lbl_800BB3B8 = .sbss:0x800BB3B8; // type:object size:0x4 data:4byte
lbl_800BB3BC = .sbss:0x800BB3BC; // type:object size:0x4 data:4byte
lbl_800BB3C0 = .sbss:0x800BB3C0; // type:object size:0x4 data:4byte
lbl_800BB3C4 = .sbss:0x800BB3C4; // type:object size:0x4 data:4byte
lbl_800BB3C8 = .sbss:0x800BB3C8; // type:object size:0x4 data:4byte
lbl_800BB3CC = .sbss:0x800BB3CC; // type:object size:0x1 data:byte
lbl_800BB3D0 = .sbss:0x800BB3D0; // type:object size:0x4 data:4byte
lbl_800BB3D4 = .sbss:0x800BB3D4; // type:object size:0x4 data:4byte
lbl_800BB3D8 = .sbss:0x800BB3D8; // type:object size:0x4 data:4byte
lbl_800BB3DC = .sbss:0x800BB3DC; // type:object size:0x2 data:2byte
lbl_800BB3DE = .sbss:0x800BB3DE; // type:object size:0x2 data:2byte
lbl_800BB3E0 = .sbss:0x800BB3E0; // type:object size:0x8 data:2byte
lbl_800BB3E8 = .sbss:0x800BB3E8; // type:object size:0x8 data:4byte
lbl_800BB3F0 = .sbss:0x800BB3F0; // type:object size:0x8 data:4byte
lbl_800BB3F8 = .sbss:0x800BB3F8; // type:object size:0x4 data:4byte
lbl_800BB3FC = .sbss:0x800BB3FC; // type:object size:0x4 data:4byte
lbl_800BB400 = .sbss:0x800BB400; // type:object size:0x8 data:4byte
lbl_800BB408 = .sbss:0x800BB408; // type:object size:0x4 data:4byte
lbl_800BB40C = .sbss:0x800BB40C; // type:object size:0x4 data:4byte
lbl_800BB410 = .sbss:0x800BB410; // type:object size:0x8 data:4byte
lbl_800BB418 = .sbss:0x800BB418; // type:object size:0x8 data:4byte
lbl_800BB420 = .sbss:0x800BB420; // type:object size:0x8 data:4byte
lbl_800BB428 = .sbss:0x800BB428; // type:object size:0x4 data:4byte
lbl_800BB42C = .sbss:0x800BB42C; // type:object size:0x4 data:4byte
lbl_800BB430 = .sbss:0x800BB430; // type:object size:0x8 data:4byte
lbl_800BB438 = .sbss:0x800BB438; // type:object size:0x4 data:4byte
lbl_800BB43C = .sbss:0x800BB43C; // type:object size:0x4 data:4byte
lbl_800BB440 = .sbss:0x800BB440; // type:object size:0x4 data:4byte
lbl_800BB444 = .sbss:0x800BB444; // type:object size:0x4 data:float
lbl_800BB448 = .sbss:0x800BB448; // type:object size:0x4 data:4byte
lbl_800BB44C = .sbss:0x800BB44C; // type:object size:0x4 data:4byte
lbl_800BB450 = .sbss:0x800BB450; // type:object size:0x4 data:4byte
lbl_800BB454 = .sbss:0x800BB454; // type:object size:0x4 data:4byte
lbl_800BB458 = .sbss:0x800BB458; // type:object size:0x4 data:4byte
lbl_800BB45C = .sbss:0x800BB45C; // type:object size:0x4 data:4byte
lbl_800BB460 = .sbss:0x800BB460; // type:object size:0x8 data:4byte
lbl_800BB468 = .sbss:0x800BB468; // type:object size:0x8 data:4byte
lbl_800BB470 = .sbss:0x800BB470; // type:object size:0x4 data:4byte
lbl_800BB474 = .sbss:0x800BB474; // type:object size:0x4 data:4byte
lbl_800BB478 = .sbss:0x800BB478; // type:object size:0x4 data:4byte
lbl_800BB47C = .sbss:0x800BB47C; // type:object size:0x4 data:4byte
lbl_800BB480 = .sbss:0x800BB480; // type:object size:0x4 data:4byte
lbl_800BB484 = .sbss:0x800BB484; // type:object size:0x4 data:4byte
lbl_800BB488 = .sbss:0x800BB488; // type:object size:0x4 data:4byte
lbl_800BB48C = .sbss:0x800BB48C; // type:object size:0x4 data:4byte
lbl_800BB490 = .sbss:0x800BB490; // type:object size:0x4 data:4byte
lbl_800BB494 = .sbss:0x800BB494; // type:object size:0x4 data:4byte
lbl_800BB498 = .sbss:0x800BB498; // type:object size:0x4 data:4byte
lbl_800BB49C = .sbss:0x800BB49C; // type:object size:0x4 data:4byte
lbl_800BB4A0 = .sbss:0x800BB4A0; // type:object size:0x4 data:4byte
lbl_800BB4A4 = .sbss:0x800BB4A4; // type:object size:0x4 data:4byte
lbl_800BB4A8 = .sbss:0x800BB4A8; // type:object size:0x8 data:4byte
lbl_800BB4B0 = .sbss:0x800BB4B0; // type:object size:0x4 data:4byte
lbl_800BB4B4 = .sbss:0x800BB4B4; // type:object size:0x4 data:4byte
lbl_800BB4B8 = .sbss:0x800BB4B8; // type:object size:0x8 data:4byte
lbl_800BB4C0 = .sbss:0x800BB4C0; // type:object size:0x4 data:4byte
lbl_800BB4C4 = .sbss:0x800BB4C4; // type:object size:0x4 data:4byte
lbl_800BB4C8 = .sbss:0x800BB4C8; // type:object size:0x4 data:4byte
lbl_800BB4CC = .sbss:0x800BB4CC; // type:object size:0x4 data:4byte
lbl_800BB4D0 = .sbss:0x800BB4D0; // type:object size:0x4 data:4byte
lbl_800BB4D4 = .sbss:0x800BB4D4; // type:object size:0x4 data:4byte
lbl_800BB4D8 = .sbss:0x800BB4D8; // type:object size:0x4 data:4byte
lbl_800BB4DC = .sbss:0x800BB4DC; // type:object size:0x4 data:4byte
lbl_800BB4E0 = .sbss:0x800BB4E0; // type:object size:0x8 data:4byte
lbl_800BB4E8 = .sbss:0x800BB4E8; // type:object size:0x4 data:4byte
lbl_800BB4EC = .sbss:0x800BB4EC; // type:object size:0x4 data:4byte
lbl_800BB4F0 = .sbss:0x800BB4F0; // type:object size:0x8 data:4byte
lbl_800BB4F8 = .sbss:0x800BB4F8; // type:object size:0x4 data:4byte
lbl_800BB4FC = .sbss:0x800BB4FC; // type:object size:0x4 data:4byte
lbl_800BB500 = .sbss:0x800BB500; // type:object size:0x8 data:4byte
lbl_800BB508 = .sbss:0x800BB508; // type:object size:0x4 data:4byte
lbl_800BB50C = .sbss:0x800BB50C; // type:object size:0x4 data:4byte
lbl_800BB510 = .sbss:0x800BB510; // type:object size:0x4 data:4byte
lbl_800BB514 = .sbss:0x800BB514; // type:object size:0x4 data:4byte
lbl_800BB518 = .sbss:0x800BB518; // type:object size:0x8 data:4byte
lbl_800BB520 = .sbss:0x800BB520; // type:object size:0x8 data:4byte
lbl_800BB528 = .sbss:0x800BB528; // type:object size:0x4 data:4byte
lbl_800BB52C = .sbss:0x800BB52C; // type:object size:0x4 data:4byte
lbl_800BB530 = .sbss:0x800BB530; // type:object size:0x8 data:4byte
lbl_800BB538 = .sbss:0x800BB538; // type:object size:0x8 data:4byte
lbl_800BB540 = .sbss:0x800BB540; // type:object size:0x8 data:4byte
lbl_800BB548 = .sbss:0x800BB548; // type:object size:0x4 data:4byte
lbl_800BB54C = .sbss:0x800BB54C; // type:object size:0x8 data:4byte
lbl_800BB554 = .sbss:0x800BB554; // type:object size:0x8 data:4byte
lbl_800BB55C = .sbss:0x800BB55C; // type:object size:0xC data:4byte
lbl_800BB568 = .sbss:0x800BB568; // type:object size:0x4 data:4byte
lbl_800BB56C = .sbss:0x800BB56C; // type:object size:0x4 data:4byte
lbl_800BB570 = .sbss:0x800BB570; // type:object size:0x4 data:4byte
lbl_800BB574 = .sbss:0x800BB574; // type:object size:0x4 data:4byte
lbl_800BB578 = .sbss:0x800BB578; // type:object size:0x4 data:4byte
lbl_800BB57C = .sbss:0x800BB57C; // type:object size:0x4 data:4byte
lbl_800BB580 = .sbss:0x800BB580; // type:object size:0x4 data:4byte
lbl_800BB584 = .sbss:0x800BB584; // type:object size:0x4 data:4byte
lbl_800BB588 = .sbss:0x800BB588; // type:object size:0x4 data:4byte
lbl_800BB58C = .sbss:0x800BB58C; // type:object size:0x4 data:4byte
lbl_800BB590 = .sbss:0x800BB590; // type:object size:0x4 data:4byte
lbl_800BB594 = .sbss:0x800BB594; // type:object size:0x4 data:4byte
lbl_800BB598 = .sbss:0x800BB598; // type:object size:0x8 data:4byte
lbl_800BB5A0 = .sbss:0x800BB5A0; // type:object size:0x4 data:4byte
lbl_800BB5A4 = .sbss:0x800BB5A4; // type:object size:0x4 data:4byte
lbl_800BB5A8 = .sbss:0x800BB5A8; // type:object size:0x8 data:4byte
lbl_800BB5B0 = .sbss:0x800BB5B0; // type:object size:0x4 data:4byte
lbl_800BB5B4 = .sbss:0x800BB5B4; // type:object size:0x4 data:4byte
lbl_800BB5C0 = .sdata2:0x800BB5C0; // type:object size:0x8 data:double
lbl_800BB5C8 = .sdata2:0x800BB5C8; // type:object size:0x8 data:double
lbl_800BB5D0 = .sdata2:0x800BB5D0; // type:object size:0x8 data:double
lbl_800BB5D8 = .sdata2:0x800BB5D8; // type:object size:0x8 data:double
lbl_800BB5E0 = .sdata2:0x800BB5E0; // type:object size:0x8 data:double
lbl_800BB5E8 = .sdata2:0x800BB5E8; // type:object size:0x8 data:double
lbl_800BB5F0 = .sdata2:0x800BB5F0; // type:object size:0x4 data:4byte
lbl_800BB5F8 = .sdata2:0x800BB5F8; // type:object size:0x8 data:double
lbl_800BB600 = .sdata2:0x800BB600; // type:object size:0x4 data:string
lbl_800BB604 = .sdata2:0x800BB604; // type:object size:0x1 data:string
lbl_800BB608 = .sdata2:0x800BB608; // type:object size:0x8 data:double
lbl_800BB610 = .sdata2:0x800BB610; // type:object size:0x8 data:double
lbl_800BB618 = .sdata2:0x800BB618; // type:object size:0x8 data:double
lbl_800BB620 = .sdata2:0x800BB620; // type:object size:0x8 data:double
lbl_800BB628 = .sdata2:0x800BB628; // type:object size:0x8 data:double
lbl_800BB630 = .sdata2:0x800BB630; // type:object size:0x8 data:double
lbl_800BB638 = .sdata2:0x800BB638; // type:object size:0x8 data:double
lbl_800BB640 = .sdata2:0x800BB640; // type:object size:0x8 data:double
lbl_800BB648 = .sdata2:0x800BB648; // type:object size:0x8 data:double
lbl_800BB650 = .sdata2:0x800BB650; // type:object size:0x8 data:double
lbl_800BB658 = .sdata2:0x800BB658; // type:object size:0x8 data:double
lbl_800BB660 = .sdata2:0x800BB660; // type:object size:0x8 data:double
lbl_800BB668 = .sdata2:0x800BB668; // type:object size:0x8 data:double
lbl_800BB670 = .sdata2:0x800BB670; // type:object size:0x8 data:double
lbl_800BB678 = .sdata2:0x800BB678; // type:object size:0x8 data:double
lbl_800BB680 = .sdata2:0x800BB680; // type:object size:0x8 data:double
lbl_800BB688 = .sdata2:0x800BB688; // type:object size:0x8 data:double
lbl_800BB690 = .sdata2:0x800BB690; // type:object size:0x8 data:double
lbl_800BB698 = .sdata2:0x800BB698; // type:object size:0x8 data:double
lbl_800BB6A0 = .sdata2:0x800BB6A0; // type:object size:0x8 data:double
lbl_800BB6A8 = .sdata2:0x800BB6A8; // type:object size:0x8 data:double
lbl_800BB6B0 = .sdata2:0x800BB6B0; // type:object size:0x8 data:double
lbl_800BB6B8 = .sdata2:0x800BB6B8; // type:object size:0x8 data:double
lbl_800BB6C0 = .sdata2:0x800BB6C0; // type:object size:0x8 data:double
lbl_800BB6C8 = .sdata2:0x800BB6C8; // type:object size:0x8 data:double
lbl_800BB6D0 = .sdata2:0x800BB6D0; // type:object size:0x8 data:double
lbl_800BB6D8 = .sdata2:0x800BB6D8; // type:object size:0x8 data:double
lbl_800BB6E0 = .sdata2:0x800BB6E0; // type:object size:0x8 data:double
lbl_800BB6E8 = .sdata2:0x800BB6E8; // type:object size:0x8 data:double
lbl_800BB6F0 = .sdata2:0x800BB6F0; // type:object size:0x8 data:double
lbl_800BB6F8 = .sdata2:0x800BB6F8; // type:object size:0x8 data:double
lbl_800BB700 = .sdata2:0x800BB700; // type:object size:0x8 data:double
lbl_800BB708 = .sdata2:0x800BB708; // type:object size:0x8 data:double
lbl_800BB710 = .sdata2:0x800BB710; // type:object size:0x8 data:double
lbl_800BB718 = .sdata2:0x800BB718; // type:object size:0x8 data:double
lbl_800BB720 = .sdata2:0x800BB720; // type:object size:0x8 data:double
lbl_800BB728 = .sdata2:0x800BB728; // type:object size:0x8 data:double
lbl_800BB730 = .sdata2:0x800BB730; // type:object size:0x8 data:double
lbl_800BB738 = .sdata2:0x800BB738; // type:object size:0x8 data:double
lbl_800BB740 = .sdata2:0x800BB740; // type:object size:0x8 data:double
lbl_800BB748 = .sdata2:0x800BB748; // type:object size:0x8 data:double
lbl_800BB750 = .sdata2:0x800BB750; // type:object size:0x8 data:double
lbl_800BB758 = .sdata2:0x800BB758; // type:object size:0x8 data:double
lbl_800BB760 = .sdata2:0x800BB760; // type:object size:0x8 data:double
lbl_800BB768 = .sdata2:0x800BB768; // type:object size:0x8 data:double
lbl_800BB770 = .sdata2:0x800BB770; // type:object size:0x8 data:double
lbl_800BB778 = .sdata2:0x800BB778; // type:object size:0x8 data:double
lbl_800BB780 = .sdata2:0x800BB780; // type:object size:0x8 data:double
lbl_800BB788 = .sdata2:0x800BB788; // type:object size:0x8 data:double
lbl_800BB790 = .sdata2:0x800BB790; // type:object size:0x8 data:double
lbl_800BB798 = .sdata2:0x800BB798; // type:object size:0x8 data:double
lbl_800BB7A0 = .sdata2:0x800BB7A0; // type:object size:0x8 data:double
lbl_800BB7A8 = .sdata2:0x800BB7A8; // type:object size:0x8 data:double
lbl_800BB7B0 = .sdata2:0x800BB7B0; // type:object size:0x8 data:double
lbl_800BB7B8 = .sdata2:0x800BB7B8; // type:object size:0x8 data:double
lbl_800BB7C0 = .sdata2:0x800BB7C0; // type:object size:0x8 data:double
lbl_800BB7C8 = .sdata2:0x800BB7C8; // type:object size:0x8 data:double
lbl_800BB7D0 = .sdata2:0x800BB7D0; // type:object size:0x8 data:double
lbl_800BB7D8 = .sdata2:0x800BB7D8; // type:object size:0x8 data:double
lbl_800BB7E0 = .sdata2:0x800BB7E0; // type:object size:0x8 data:double
lbl_800BB7E8 = .sdata2:0x800BB7E8; // type:object size:0x8 data:double
lbl_800BB7F0 = .sdata2:0x800BB7F0; // type:object size:0x8 data:double
lbl_800BB7F8 = .sdata2:0x800BB7F8; // type:object size:0x8 data:double
lbl_800BB800 = .sdata2:0x800BB800; // type:object size:0x8 data:double
lbl_800BB808 = .sdata2:0x800BB808; // type:object size:0x8 data:double
lbl_800BB810 = .sdata2:0x800BB810; // type:object size:0x8 data:double
lbl_800BB818 = .sdata2:0x800BB818; // type:object size:0x8 data:double
lbl_800BB820 = .sdata2:0x800BB820; // type:object size:0x8 data:double
lbl_800BB828 = .sdata2:0x800BB828; // type:object size:0x8 data:double
lbl_800BB830 = .sdata2:0x800BB830; // type:object size:0x8 data:double
lbl_800BB838 = .sdata2:0x800BB838; // type:object size:0x8 data:double
lbl_800BB840 = .sdata2:0x800BB840; // type:object size:0x8 data:double
lbl_800BB848 = .sdata2:0x800BB848; // type:object size:0x8 data:double
lbl_800BB850 = .sdata2:0x800BB850; // type:object size:0x8 data:double
lbl_800BB858 = .sdata2:0x800BB858; // type:object size:0x8 data:double
lbl_800BB860 = .sdata2:0x800BB860; // type:object size:0x8 data:double
lbl_800BB868 = .sdata2:0x800BB868; // type:object size:0x8 data:double
lbl_800BB870 = .sdata2:0x800BB870; // type:object size:0x8 data:double
lbl_800BB878 = .sdata2:0x800BB878; // type:object size:0x8 data:double
lbl_800BB880 = .sdata2:0x800BB880; // type:object size:0x8 data:double
lbl_800BB888 = .sdata2:0x800BB888; // type:object size:0x8 data:double
lbl_800BB890 = .sdata2:0x800BB890; // type:object size:0x8 data:double
lbl_800BB898 = .sdata2:0x800BB898; // type:object size:0x8 data:double
lbl_800BB8A0 = .sdata2:0x800BB8A0; // type:object size:0x8 data:double
lbl_800BB8A8 = .sdata2:0x800BB8A8; // type:object size:0x8 data:double
lbl_800BB8B0 = .sdata2:0x800BB8B0; // type:object size:0x8 data:double
lbl_800BB8B8 = .sdata2:0x800BB8B8; // type:object size:0x8 data:double
lbl_800BB8C0 = .sdata2:0x800BB8C0; // type:object size:0x8 data:double
lbl_800BB8C8 = .sdata2:0x800BB8C8; // type:object size:0x8 data:double
lbl_800BB8D0 = .sdata2:0x800BB8D0; // type:object size:0x8 data:double
lbl_800BB8D8 = .sdata2:0x800BB8D8; // type:object size:0x8 data:double
lbl_800BB8E0 = .sdata2:0x800BB8E0; // type:object size:0x8 data:double
lbl_800BB8E8 = .sdata2:0x800BB8E8; // type:object size:0x8 data:double
lbl_800BB8F0 = .sdata2:0x800BB8F0; // type:object size:0x8 data:double
lbl_800BB8F8 = .sdata2:0x800BB8F8; // type:object size:0x8 data:double
lbl_800BB900 = .sdata2:0x800BB900; // type:object size:0x8 data:double
lbl_800BB908 = .sdata2:0x800BB908; // type:object size:0x8 data:double
lbl_800BB910 = .sdata2:0x800BB910; // type:object size:0x8 data:double
lbl_800BB918 = .sdata2:0x800BB918; // type:object size:0x8 data:double
lbl_800BB920 = .sdata2:0x800BB920; // type:object size:0x8 data:double
lbl_800BB928 = .sdata2:0x800BB928; // type:object size:0x8 data:double
lbl_800BB930 = .sdata2:0x800BB930; // type:object size:0x8 data:double
lbl_800BB938 = .sdata2:0x800BB938; // type:object size:0x8 data:double
lbl_800BB940 = .sdata2:0x800BB940; // type:object size:0x8 data:double
lbl_800BB948 = .sdata2:0x800BB948; // type:object size:0x8 data:double
lbl_800BB950 = .sdata2:0x800BB950; // type:object size:0x8 data:double
lbl_800BB958 = .sdata2:0x800BB958; // type:object size:0x8 data:double
lbl_800BB960 = .sdata2:0x800BB960; // type:object size:0x8 data:double
lbl_800BB968 = .sdata2:0x800BB968; // type:object size:0x8 data:double
lbl_800BB970 = .sdata2:0x800BB970; // type:object size:0x8 data:double
lbl_800BB978 = .sdata2:0x800BB978; // type:object size:0x8 data:double
lbl_800BB980 = .sdata2:0x800BB980; // type:object size:0x8 data:double
lbl_800BB988 = .sdata2:0x800BB988; // type:object size:0x8 data:double
lbl_800BB990 = .sdata2:0x800BB990; // type:object size:0x8 data:double
lbl_800BB998 = .sdata2:0x800BB998; // type:object size:0x8 data:double
lbl_800BB9A0 = .sdata2:0x800BB9A0; // type:object size:0x8 data:double
lbl_800BB9A8 = .sdata2:0x800BB9A8; // type:object size:0x8 data:double
lbl_800BB9B0 = .sdata2:0x800BB9B0; // type:object size:0x8 data:double
lbl_800BB9B8 = .sdata2:0x800BB9B8; // type:object size:0x8 data:double
lbl_800BB9C0 = .sdata2:0x800BB9C0; // type:object size:0x8 data:double
lbl_800BB9C8 = .sdata2:0x800BB9C8; // type:object size:0x8 data:double
lbl_800BB9D0 = .sdata2:0x800BB9D0; // type:object size:0x8 data:double
lbl_800BB9D8 = .sdata2:0x800BB9D8; // type:object size:0x8 data:double
lbl_800BB9E0 = .sdata2:0x800BB9E0; // type:object size:0x8 data:double
lbl_800BB9E8 = .sdata2:0x800BB9E8; // type:object size:0x8 data:double
lbl_800BB9F0 = .sdata2:0x800BB9F0; // type:object size:0x8 data:double
lbl_800BB9F8 = .sdata2:0x800BB9F8; // type:object size:0x8 data:double
lbl_800BBA00 = .sdata2:0x800BBA00; // type:object size:0x8 data:double
lbl_800BBA08 = .sdata2:0x800BBA08; // type:object size:0x8 data:double
lbl_800BBA10 = .sdata2:0x800BBA10; // type:object size:0x8 data:double
lbl_800BBA18 = .sdata2:0x800BBA18; // type:object size:0x8 data:double
lbl_800BBA20 = .sdata2:0x800BBA20; // type:object size:0x8 data:double
lbl_800BBA28 = .sdata2:0x800BBA28; // type:object size:0x8 data:double
lbl_800BBA30 = .sdata2:0x800BBA30; // type:object size:0x8 data:double
lbl_800BBA38 = .sdata2:0x800BBA38; // type:object size:0x8 data:double
lbl_800BBA40 = .sdata2:0x800BBA40; // type:object size:0x8 data:double
lbl_800BBA48 = .sdata2:0x800BBA48; // type:object size:0x8 data:double
lbl_800BBA50 = .sdata2:0x800BBA50; // type:object size:0x8 data:double
lbl_800BBA58 = .sdata2:0x800BBA58; // type:object size:0x8 data:double
lbl_800BBA60 = .sdata2:0x800BBA60; // type:object size:0x8 data:double
lbl_800BBA68 = .sdata2:0x800BBA68; // type:object size:0x8 data:double
lbl_800BBA70 = .sdata2:0x800BBA70; // type:object size:0x8 data:double
lbl_800BBA78 = .sdata2:0x800BBA78; // type:object size:0x8 data:double
lbl_800BBA80 = .sdata2:0x800BBA80; // type:object size:0x8 data:double
lbl_800BBA88 = .sdata2:0x800BBA88; // type:object size:0x8 data:double
lbl_800BBA90 = .sdata2:0x800BBA90; // type:object size:0x8 data:double
lbl_800BBA98 = .sdata2:0x800BBA98; // type:object size:0x8 data:double
lbl_800BBAA0 = .sdata2:0x800BBAA0; // type:object size:0x8 data:double
lbl_800BBAA8 = .sdata2:0x800BBAA8; // type:object size:0x8 data:double
lbl_800BBAB0 = .sdata2:0x800BBAB0; // type:object size:0x8 data:double
lbl_800BBAB8 = .sdata2:0x800BBAB8; // type:object size:0x8 data:double
lbl_800BBAC0 = .sdata2:0x800BBAC0; // type:object size:0x8 data:double
lbl_800BBAC8 = .sdata2:0x800BBAC8; // type:object size:0x8 data:double
lbl_800BBAD0 = .sdata2:0x800BBAD0; // type:object size:0x8 data:double
lbl_800BBAD8 = .sdata2:0x800BBAD8; // type:object size:0x8 data:double
lbl_800BBAE0 = .sdata2:0x800BBAE0; // type:object size:0x8 data:double
lbl_800BBAE8 = .sdata2:0x800BBAE8; // type:object size:0x8 data:double
lbl_800BBAF0 = .sdata2:0x800BBAF0; // type:object size:0x8 data:double
lbl_800BBAF8 = .sdata2:0x800BBAF8; // type:object size:0x8 data:double
lbl_800BBB00 = .sdata2:0x800BBB00; // type:object size:0x8 data:double
lbl_800BBB08 = .sdata2:0x800BBB08; // type:object size:0x8 data:double
lbl_800BBB10 = .sdata2:0x800BBB10; // type:object size:0x8 data:double
lbl_800BBB18 = .sdata2:0x800BBB18; // type:object size:0x8 data:double
lbl_800BBB20 = .sdata2:0x800BBB20; // type:object size:0x8 data:double
lbl_800BBB28 = .sdata2:0x800BBB28; // type:object size:0x8 data:double
lbl_800BBB30 = .sdata2:0x800BBB30; // type:object size:0x8 data:double
lbl_800BBB38 = .sdata2:0x800BBB38; // type:object size:0x4 data:float
lbl_800BBB40 = .sdata2:0x800BBB40; // type:object size:0x8 data:double
lbl_800BBB48 = .sdata2:0x800BBB48; // type:object size:0x8 data:double
lbl_800BBB50 = .sdata2:0x800BBB50; // type:object size:0x8 data:double
lbl_800BBB58 = .sdata2:0x800BBB58; // type:object size:0x4 data:float
lbl_800BBB60 = .sdata2:0x800BBB60; // type:object size:0x4 data:float
lbl_800BBB64 = .sdata2:0x800BBB64; // type:object size:0x4 data:float
lbl_800BBB68 = .sdata2:0x800BBB68; // type:object size:0x4 data:float
lbl_800BBB6C = .sdata2:0x800BBB6C; // type:object size:0x4 data:float
lbl_800BBB70 = .sdata2:0x800BBB70; // type:object size:0x4 data:float
lbl_800BBB74 = .sdata2:0x800BBB74; // type:object size:0x4 data:float
lbl_800BBB78 = .sdata2:0x800BBB78; // type:object size:0x4 data:float
lbl_800BBB7C = .sdata2:0x800BBB7C; // type:object size:0x4 data:float
lbl_800BBB80 = .sdata2:0x800BBB80; // type:object size:0x8 data:double
i2fMagic = .sdata2:0x800BBB88; // type:object size:0x8 scope:local data:double
value0_6 = .sdata2:0x800BBB90; // type:object size:0x4 scope:local data:float
value0_3 = .sdata2:0x800BBB94; // type:object size:0x4 scope:local data:float
lbl_800BBB98 = .sdata2:0x800BBB98; // type:object size:0x4 data:float
lbl_800BBBA0 = .sdata2:0x800BBBA0; // type:object size:0x4 data:float
lbl_800BBBA4 = .sdata2:0x800BBBA4; // type:object size:0x4 data:float
lbl_800BBBA8 = .sdata2:0x800BBBA8; // type:object size:0x4 data:float
lbl_800BBBAC = .sdata2:0x800BBBAC; // type:object size:0x4 data:float
lbl_800BBBB0 = .sdata2:0x800BBBB0; // type:object size:0x4 data:float
lbl_800BBBB4 = .sdata2:0x800BBBB4; // type:object size:0x4 data:float
lbl_800BBBB8 = .sdata2:0x800BBBB8; // type:object size:0x4 data:float
lbl_800BBBBC = .sdata2:0x800BBBBC; // type:object size:0x4 data:float
lbl_800BBBC0 = .sdata2:0x800BBBC0; // type:object size:0x8 data:double
value0_3 = .sdata2:0x800BBBC8; // type:object size:0x4 scope:local data:float
value0_6 = .sdata2:0x800BBBCC; // type:object size:0x4 scope:local data:float
i2fMagic = .sdata2:0x800BBBD0; // type:object size:0x8 scope:local data:double
i2fMagic = .sdata2:0x800BBBD8; // type:object size:0x8 scope:local data:double
gx = .sdata2:0x800BBBE0; // type:object size:0x4 scope:global data:4byte
lbl_800BBBE4 = .sdata2:0x800BBBE4; // type:object size:0x4 data:4byte
lbl_800BBBE8 = .sdata2:0x800BBBE8; // type:object size:0x4 data:4byte
lbl_800BBBEC = .sdata2:0x800BBBEC; // type:object size:0x4 data:4byte
lbl_800BBBF0 = .sdata2:0x800BBBF0; // type:object size:0x4 data:float
lbl_800BBBF4 = .sdata2:0x800BBBF4; // type:object size:0x4 data:float
lbl_800BBBF8 = .sdata2:0x800BBBF8; // type:object size:0x4 data:float
lbl_800BBC00 = .sdata2:0x800BBC00; // type:object size:0x8 data:double
lbl_800BBC08 = .sdata2:0x800BBC08; // type:object size:0x8 data:float
lbl_800BBC10 = .sdata2:0x800BBC10; // type:object size:0x4 data:float
lbl_800BBC18 = .sdata2:0x800BBC18; // type:object size:0x8 data:double
lbl_800BBC20 = .sdata2:0x800BBC20; // type:object size:0x4 data:float
lbl_800BBC24 = .sdata2:0x800BBC24; // type:object size:0x4 data:float
lbl_800BBC28 = .sdata2:0x800BBC28; // type:object size:0x4 data:float
lbl_800BBC2C = .sdata2:0x800BBC2C; // type:object size:0x4 data:float
lbl_800BBC30 = .sdata2:0x800BBC30; // type:object size:0x4 data:float
lbl_800BBC34 = .sdata2:0x800BBC34; // type:object size:0x4 data:float
lbl_800BBC38 = .sdata2:0x800BBC38; // type:object size:0x8 data:float
lbl_800BBC40 = .sdata2:0x800BBC40; // type:object size:0x4 data:float
lbl_800BBC44 = .sdata2:0x800BBC44; // type:object size:0x4 data:float
lbl_800BBC48 = .sdata2:0x800BBC48; // type:object size:0x4 data:float
lbl_800BBC50 = .sdata2:0x800BBC50; // type:object size:0x8 data:double
lbl_800BBC58 = .sdata2:0x800BBC58; // type:object size:0x4 data:float
lbl_800BBC60 = .sdata2:0x800BBC60; // type:object size:0x8 data:double
lbl_800BBC68 = .sdata2:0x800BBC68; // type:object size:0x4 data:float
lbl_800BBC70 = .sdata2:0x800BBC70; // type:object size:0x8 data:double
lbl_800BBC78 = .sdata2:0x800BBC78; // type:object size:0x8 data:double
lbl_800BBC80 = .sdata2:0x800BBC80; // type:object size:0x8 data:double
lbl_800BBC88 = .sdata2:0x800BBC88; // type:object size:0x4 data:float
lbl_800BBC90 = .sdata2:0x800BBC90; // type:object size:0x8 data:double
lbl_800BBC98 = .sdata2:0x800BBC98; // type:object size:0x4 data:float
lbl_800BBC9C = .sdata2:0x800BBC9C; // type:object size:0x4 data:float
lbl_800BBCA0 = .sdata2:0x800BBCA0; // type:object size:0x4 data:float
lbl_800BBCA8 = .sdata2:0x800BBCA8; // type:object size:0x8 data:double
lbl_800BBCB0 = .sdata2:0x800BBCB0; // type:object size:0x4 data:float
lbl_800BBCB4 = .sdata2:0x800BBCB4; // type:object size:0x4 data:float
lbl_800BBCB8 = .sdata2:0x800BBCB8; // type:object size:0x4 data:float
lbl_800BBCBC = .sdata2:0x800BBCBC; // type:object size:0x4 data:float
lbl_800BBCC0 = .sdata2:0x800BBCC0; // type:object size:0x4 data:float
lbl_800BBCC4 = .sdata2:0x800BBCC4; // type:object size:0x4 data:float
lbl_800BBCC8 = .sdata2:0x800BBCC8; // type:object size:0x8 data:float
lbl_800BBCD0 = .sdata2:0x800BBCD0; // type:object size:0x4 data:float
lbl_800BBCD4 = .sdata2:0x800BBCD4; // type:object size:0x4 data:float
lbl_800BBCD8 = .sdata2:0x800BBCD8; // type:object size:0x4 data:float
lbl_800BBCDC = .sdata2:0x800BBCDC; // type:object size:0x4 data:float
lbl_800BBCE0 = .sdata2:0x800BBCE0; // type:object size:0x4 data:float
lbl_800BBCE4 = .sdata2:0x800BBCE4; // type:object size:0x4 data:float
lbl_800BBCE8 = .sdata2:0x800BBCE8; // type:object size:0x4 data:float
lbl_800BBCEC = .sdata2:0x800BBCEC; // type:object size:0x4 data:float
lbl_800BBCF0 = .sdata2:0x800BBCF0; // type:object size:0x8 data:float
lbl_800BBCF8 = .sdata2:0x800BBCF8; // type:object size:0x8 data:float
lbl_800BBD00 = .sdata2:0x800BBD00; // type:object size:0x4 data:float
lbl_800BBD04 = .sdata2:0x800BBD04; // type:object size:0x4 data:float
lbl_800BBD08 = .sdata2:0x800BBD08; // type:object size:0x4 data:float
lbl_800BBD10 = .sdata2:0x800BBD10; // type:object size:0x8 data:double
lbl_800BBD18 = .sdata2:0x800BBD18; // type:object size:0x8 data:double
lbl_800BBD20 = .sdata2:0x800BBD20; // type:object size:0x4 data:float
lbl_800BBD24 = .sdata2:0x800BBD24; // type:object size:0x4 data:float
lbl_800BBD28 = .sdata2:0x800BBD28; // type:object size:0x8 data:float
lbl_800BBD30 = .sdata2:0x800BBD30; // type:object size:0x4 data:float
lbl_800BBD34 = .sdata2:0x800BBD34; // type:object size:0x4 data:float
lbl_800BBD38 = .sdata2:0x800BBD38; // type:object size:0x8 data:float
lbl_800BBD40 = .sdata2:0x800BBD40; // type:object size:0x4 data:float
lbl_800BBD48 = .sdata2:0x800BBD48; // type:object size:0x8 data:double
lbl_800BBD50 = .sdata2:0x800BBD50; // type:object size:0x4 data:4byte
lbl_800BBD54 = .sdata2:0x800BBD54; // type:object size:0x4 data:4byte
lbl_800BBD58 = .sdata2:0x800BBD58; // type:object size:0x4 data:float
lbl_800BBD5C = .sdata2:0x800BBD5C; // type:object size:0x4 data:float
lbl_800BBD60 = .sdata2:0x800BBD60; // type:object size:0x4 data:float
lbl_800BBD64 = .sdata2:0x800BBD64; // type:object size:0x4 data:float
lbl_800BBD68 = .sdata2:0x800BBD68; // type:object size:0x4 data:float
lbl_800BBD6C = .sdata2:0x800BBD6C; // type:object size:0x4 data:float
lbl_800BBD70 = .sdata2:0x800BBD70; // type:object size:0x8 data:double
lbl_800BBD78 = .sdata2:0x800BBD78; // type:object size:0x4 data:float
lbl_800BBD80 = .sdata2:0x800BBD80; // type:object size:0x8 data:double
lbl_800BBD88 = .sdata2:0x800BBD88; // type:object size:0x8 data:double
lbl_800BBD90 = .sdata2:0x800BBD90; // type:object size:0x4 data:float
lbl_800BBD98 = .sdata2:0x800BBD98; // type:object size:0x8 data:double
lbl_800BBDA0 = .sdata2:0x800BBDA0; // type:object size:0x8 data:double
lbl_800BBDA8 = .sdata2:0x800BBDA8; // type:object size:0x4 data:float
lbl_800BBDAC = .sdata2:0x800BBDAC; // type:object size:0x4 data:float
lbl_800BBDB0 = .sdata2:0x800BBDB0; // type:object size:0x4 data:float
lbl_800BBDB4 = .sdata2:0x800BBDB4; // type:object size:0x4 data:float
lbl_800BBDB8 = .sdata2:0x800BBDB8; // type:object size:0x4 data:float
lbl_800BBDBC = .sdata2:0x800BBDBC; // type:object size:0x4 data:float
lbl_800BBDC0 = .sdata2:0x800BBDC0; // type:object size:0x4 data:float
lbl_800BBDC8 = .sdata2:0x800BBDC8; // type:object size:0x8 data:double
lbl_800BBDD0 = .sdata2:0x800BBDD0; // type:object size:0x8 data:double
lbl_800BBDD8 = .sdata2:0x800BBDD8; // type:object size:0x4 data:float
lbl_800BBDDC = .sdata2:0x800BBDDC; // type:object size:0x4 data:float
lbl_800BBDE0 = .sdata2:0x800BBDE0; // type:object size:0x8 data:double
lbl_800BBDE8 = .sdata2:0x800BBDE8; // type:object size:0x4 data:float
lbl_800BBDEC = .sdata2:0x800BBDEC; // type:object size:0x4 data:float
lbl_800BBDF0 = .sdata2:0x800BBDF0; // type:object size:0x4 data:float
lbl_800BBDF8 = .sdata2:0x800BBDF8; // type:object size:0x8 data:double
lbl_800BBE00 = .sdata2:0x800BBE00; // type:object size:0x8 data:double
lbl_800BBE08 = .sdata2:0x800BBE08; // type:object size:0x8 data:double
lbl_800BBE10 = .sdata2:0x800BBE10; // type:object size:0x8 data:double
lbl_800BBE18 = .sdata2:0x800BBE18; // type:object size:0x8 data:double
lbl_800BBE20 = .sdata2:0x800BBE20; // type:object size:0x8 data:double
lbl_800BBE28 = .sdata2:0x800BBE28; // type:object size:0x8 data:double
lbl_800BBE30 = .sdata2:0x800BBE30; // type:object size:0x4 data:float
lbl_800BBE34 = .sdata2:0x800BBE34; // type:object size:0x4 data:float
lbl_800BBE38 = .sdata2:0x800BBE38; // type:object size:0x4 data:float
lbl_800BBE3C = .sdata2:0x800BBE3C; // type:object size:0x4 data:float
lbl_800BBE40 = .sdata2:0x800BBE40; // type:object size:0x4 data:float
lbl_800BBE48 = .sdata2:0x800BBE48; // type:object size:0x8 data:double
lbl_800BBE50 = .sdata2:0x800BBE50; // type:object size:0x4 data:float
lbl_800BBE54 = .sdata2:0x800BBE54; // type:object size:0x4 data:float
lbl_800BBE58 = .sdata2:0x800BBE58; // type:object size:0x4 data:float
lbl_800BBE5C = .sdata2:0x800BBE5C; // type:object size:0x4 data:float
lbl_800BBE60 = .sdata2:0x800BBE60; // type:object size:0x4 data:float
lbl_800BBE64 = .sdata2:0x800BBE64; // type:object size:0x4 data:float
lbl_800BBE68 = .sdata2:0x800BBE68; // type:object size:0x8 data:float
lbl_800BBE70 = .sdata2:0x800BBE70; // type:object size:0x4 data:float
lbl_800BBE74 = .sdata2:0x800BBE74; // type:object size:0x4 data:float
lbl_800BBE78 = .sdata2:0x800BBE78; // type:object size:0x8 data:float
lbl_800BBE80 = .sdata2:0x800BBE80; // type:object size:0x4 data:float
lbl_800BBE84 = .sdata2:0x800BBE84; // type:object size:0x4 data:float
lbl_800BBE88 = .sdata2:0x800BBE88; // type:object size:0x8 data:float
lbl_800BBE90 = .sdata2:0x800BBE90; // type:object size:0x8 data:float
lbl_800BBE98 = .sdata2:0x800BBE98; // type:object size:0x4 data:float
lbl_800BBE9C = .sdata2:0x800BBE9C; // type:object size:0x4 data:float
lbl_800BBEA0 = .sdata2:0x800BBEA0; // type:object size:0x8 data:double
lbl_800BBEA8 = .sdata2:0x800BBEA8; // type:object size:0x8 data:double
lbl_800BBEB0 = .sdata2:0x800BBEB0; // type:object size:0x8 data:float
lbl_800BBEB8 = .sdata2:0x800BBEB8; // type:object size:0x8 data:float
lbl_800BBEC0 = .sdata2:0x800BBEC0; // type:object size:0x4 data:float
lbl_800BBEC8 = .sdata2:0x800BBEC8; // type:object size:0x8 data:double
lbl_800BBED0 = .sdata2:0x800BBED0; // type:object size:0x8 data:float
lbl_800BBED8 = .sdata2:0x800BBED8; // type:object size:0x4 data:float
lbl_800BBEDC = .sdata2:0x800BBEDC; // type:object size:0x4 data:float
lbl_800BBEE0 = .sdata2:0x800BBEE0; // type:object size:0x8 data:double
lbl_800BBEE8 = .sdata2:0x800BBEE8; // type:object size:0x8 data:double
lbl_800BBEF0 = .sdata2:0x800BBEF0; // type:object size:0x4 data:float
lbl_800BBEF4 = .sdata2:0x800BBEF4; // type:object size:0x4 data:float
lbl_800BBEF8 = .sdata2:0x800BBEF8; // type:object size:0x8 data:double
lbl_800BBF00 = .sdata2:0x800BBF00; // type:object size:0x4 data:float
lbl_800BBF08 = .sdata2:0x800BBF08; // type:object size:0x8 data:double
lbl_800BBF10 = .sdata2:0x800BBF10; // type:object size:0x4 data:float
lbl_800BBF14 = .sdata2:0x800BBF14; // type:object size:0x4 data:float
lbl_800BBF18 = .sdata2:0x800BBF18; // type:object size:0x4 data:float
lbl_800BBF20 = .sdata2:0x800BBF20; // type:object size:0x8 data:double
lbl_800BBF28 = .sdata2:0x800BBF28; // type:object size:0x4 data:float
lbl_800BBF2C = .sdata2:0x800BBF2C; // type:object size:0x4 data:float
lbl_800BBF30 = .sdata2:0x800BBF30; // type:object size:0x4 data:float
lbl_800BBF34 = .sdata2:0x800BBF34; // type:object size:0x4 data:float
lbl_800BBF38 = .sdata2:0x800BBF38; // type:object size:0x8 data:float
lbl_800BBF40 = .sdata2:0x800BBF40; // type:object size:0x8 data:float
lbl_800BBF48 = .sdata2:0x800BBF48; // type:object size:0x8
lbl_800BBF50 = .sdata2:0x800BBF50; // type:object size:0x8
lbl_800BBF58 = .sdata2:0x800BBF58; // type:object size:0x8
lbl_800BBF60 = .sdata2:0x800BBF60; // type:object size:0x8
lbl_800BBF68 = .sdata2:0x800BBF68; // type:object size:0x8
lbl_800BBF70 = .sdata2:0x800BBF70; // type:object size:0x8
lbl_800BBF78 = .sdata2:0x800BBF78; // type:object size:0x8
lbl_800BBF80 = .sdata2:0x800BBF80; // type:object size:0x8
lbl_800BBF88 = .sdata2:0x800BBF88; // type:object size:0x8
lbl_800BBF90 = .sdata2:0x800BBF90; // type:object size:0x8
lbl_800BBF98 = .sdata2:0x800BBF98; // type:object size:0x8
lbl_800BBFA0 = .sdata2:0x800BBFA0; // type:object size:0x8 data:double
lbl_800BBFA8 = .sdata2:0x800BBFA8; // type:object size:0x8 data:double
lbl_800BBFB0 = .sdata2:0x800BBFB0; // type:object size:0x8 data:double
lbl_800BBFB8 = .sdata2:0x800BBFB8; // type:object size:0x8 data:double
lbl_800BBFC0 = .sdata2:0x800BBFC0; // type:object size:0x8 data:double
lbl_800BBFC8 = .sdata2:0x800BBFC8; // type:object size:0x4 data:float
lbl_800BBFD0 = .sdata2:0x800BBFD0; // type:object size:0x8 data:double
lbl_800BBFD8 = .sdata2:0x800BBFD8; // type:object size:0x8 data:double
lbl_800BBFE0 = .sdata2:0x800BBFE0; // type:object size:0x8
lbl_800BBFE8 = .sdata2:0x800BBFE8; // type:object size:0x8 data:4byte
lbl_800BBFF0 = .sdata2:0x800BBFF0; // type:object size:0x8
lbl_800BBFF8 = .sdata2:0x800BBFF8; // type:object size:0x8 data:double
lbl_800BC000 = .sdata2:0x800BC000; // type:object size:0x8 data:double
lbl_800BC008 = .sdata2:0x800BC008; // type:object size:0x8 data:double
lbl_800BC010 = .sdata2:0x800BC010; // type:object size:0x4 data:float
lbl_800BC014 = .sdata2:0x800BC014; // type:object size:0x4 data:float
lbl_800BC018 = .sdata2:0x800BC018; // type:object size:0x4 data:float
lbl_800BC01C = .sdata2:0x800BC01C; // type:object size:0x4 data:float
lbl_800BC020 = .sdata2:0x800BC020; // type:object size:0x8 data:double
lbl_800BC028 = .sdata2:0x800BC028; // type:object size:0x8 data:4byte
lbl_800BC030 = .sdata2:0x800BC030; // type:object size:0x4 data:string
lbl_800BC034 = .sdata2:0x800BC034; // type:object size:0x4 data:string
lbl_800BC038 = .sdata2:0x800BC038; // type:object size:0x8 data:4byte
lbl_800BC040 = .sdata2:0x800BC040; // type:object size:0x8
lbl_800BC048 = .sdata2:0x800BC048; // type:object size:0x4 data:4byte
lbl_800BC04C = .sdata2:0x800BC04C; // type:object size:0xC
lbl_800BC058 = .sdata2:0x800BC058; // type:object size:0x8 data:4byte
lbl_800BC060 = .sdata2:0x800BC060; // type:object size:0x8 data:4byte
lbl_800BC068 = .sdata2:0x800BC068; // type:object size:0x8 data:4byte
lbl_800BC070 = .sdata2:0x800BC070; // type:object size:0x8 data:4byte
lbl_800BC078 = .sdata2:0x800BC078; // type:object size:0x8 data:string
lbl_800BC080 = .sdata2:0x800BC080; // type:object size:0x4
lbl_800BC084 = .sdata2:0x800BC084; // type:object size:0x8 data:string
lbl_800BC08C = .sdata2:0x800BC08C; // type:object size:0x4 data:float
lbl_800BC090 = .sdata2:0x800BC090; // type:object size:0x8 data:double
lbl_800BC098 = .sdata2:0x800BC098; // type:object size:0x4 data:float
lbl_800BC09C = .sdata2:0x800BC09C; // type:object size:0x4 data:float
lbl_800BC0A0 = .sdata2:0x800BC0A0; // type:object size:0x8 data:float
lbl_800BC0A8 = .sdata2:0x800BC0A8; // type:object size:0x8 data:float
lbl_800BC0B0 = .sdata2:0x800BC0B0; // type:object size:0x4 data:float
lbl_800BC0B4 = .sdata2:0x800BC0B4; // type:object size:0x4 data:float
lbl_800BC0B8 = .sdata2:0x800BC0B8; // type:object size:0x4 data:float
lbl_800BC0BC = .sdata2:0x800BC0BC; // type:object size:0x4 data:float
lbl_800BC0C0 = .sdata2:0x800BC0C0; // type:object size:0x8 data:double
lbl_800BC0C8 = .sdata2:0x800BC0C8; // type:object size:0x8 data:double
lbl_800BC0D0 = .sdata2:0x800BC0D0; // type:object size:0x8 data:double
lbl_800BC0D8 = .sdata2:0x800BC0D8; // type:object size:0x8 data:double
lbl_800BC0E0 = .sdata2:0x800BC0E0; // type:object size:0x4 data:float
lbl_800BC0E4 = .sdata2:0x800BC0E4; // type:object size:0x4 data:float
lbl_800BC0E8 = .sdata2:0x800BC0E8; // type:object size:0x4 data:float
lbl_800BC0EC = .sdata2:0x800BC0EC; // type:object size:0x4 data:float
lbl_800BC0F0 = .sdata2:0x800BC0F0; // type:object size:0x4 data:float
lbl_800BC0F4 = .sdata2:0x800BC0F4; // type:object size:0x4 data:float
lbl_800BC0F8 = .sdata2:0x800BC0F8; // type:object size:0x4 data:float
lbl_800BC0FC = .sdata2:0x800BC0FC; // type:object size:0x4 data:float
lbl_800BC100 = .sdata2:0x800BC100; // type:object size:0x4 data:float
lbl_800BC104 = .sdata2:0x800BC104; // type:object size:0x4 data:float
lbl_800BC108 = .sdata2:0x800BC108; // type:object size:0x4 data:float
lbl_800BC10C = .sdata2:0x800BC10C; // type:object size:0x4 data:float
lbl_800BC110 = .sdata2:0x800BC110; // type:object size:0x4 data:float
lbl_800BC114 = .sdata2:0x800BC114; // type:object size:0x4 data:float
lbl_800BC118 = .sdata2:0x800BC118; // type:object size:0x4 data:float
lbl_800BC120 = .sdata2:0x800BC120; // type:object size:0x8 data:double
lbl_800BC128 = .sdata2:0x800BC128; // type:object size:0x4 data:float
lbl_800BC12C = .sdata2:0x800BC12C; // type:object size:0x4 data:float
lbl_800BC130 = .sdata2:0x800BC130; // type:object size:0x8 data:double
lbl_800BC138 = .sdata2:0x800BC138; // type:object size:0x8 data:double
lbl_800BC140 = .sdata2:0x800BC140; // type:object size:0x4 data:float
lbl_800BC148 = .sdata2:0x800BC148; // type:object size:0x8 data:double
lbl_800BC150 = .sdata2:0x800BC150; // type:object size:0x8 data:double
lbl_800BC158 = .sdata2:0x800BC158; // type:object size:0x8 data:double
lbl_800BC160 = .sdata2:0x800BC160; // type:object size:0x4 data:float
lbl_800BC164 = .sdata2:0x800BC164; // type:object size:0x4 data:float
lbl_800BC168 = .sdata2:0x800BC168; // type:object size:0x4 data:float
lbl_800BC16C = .sdata2:0x800BC16C; // type:object size:0x4 data:float
lbl_800BC170 = .sdata2:0x800BC170; // type:object size:0x8 data:float
lbl_800BC178 = .sdata2:0x800BC178; // type:object size:0x4 data:float
lbl_800BC17C = .sdata2:0x800BC17C; // type:object size:0x4 data:float
lbl_800BC180 = .sdata2:0x800BC180; // type:object size:0x4 data:float
lbl_800BC184 = .sdata2:0x800BC184; // type:object size:0x4 data:float
lbl_800BC188 = .sdata2:0x800BC188; // type:object size:0x4 data:float
lbl_800BC18C = .sdata2:0x800BC18C; // type:object size:0x4 data:float
lbl_800BC190 = .sdata2:0x800BC190; // type:object size:0x4 data:float
lbl_800BC198 = .sdata2:0x800BC198; // type:object size:0x8 data:double
lbl_800BC1A0 = .sdata2:0x800BC1A0; // type:object size:0x4 data:float
lbl_800BC1A4 = .sdata2:0x800BC1A4; // type:object size:0x4 data:float
lbl_800BC1A8 = .sdata2:0x800BC1A8; // type:object size:0x4 data:float
lbl_800BC1B0 = .sdata2:0x800BC1B0; // type:object size:0x8 data:double
lbl_800BC1B8 = .sdata2:0x800BC1B8; // type:object size:0x8 data:double
