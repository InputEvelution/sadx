memset = .init:0x80003100; // type:function size:0x30 scope:global
__fill_mem = .init:0x80003130; // type:function size:0xB8 scope:global
memcpy = .init:0x800031E8; // type:function size:0x50 scope:global
TRK_memset = .init:0x80003238; // type:function size:0x30
TRK_memcpy = .init:0x80003268; // type:function size:0x24
gTRKInterruptVectorTable = .init:0x8000328C; // type:label scope:global
__TRK_reset = .init:0x800051C0; // type:function size:0x104
gTRKInterruptVectorTableEnd = .init:0x800051C0; // type:label scope:global
__check_pad3 = .init:0x800052C4; // type:function size:0x40 scope:local
__set_debug_bba = .init:0x80005304; // type:function size:0xC scope:local
__get_debug_bba = .init:0x80005310; // type:function size:0x8 scope:local
__start = .init:0x80005318; // type:function size:0x15C scope:weak
__init_registers = .init:0x80005474; // type:function size:0x90 scope:local
__init_data = .init:0x80005504; // type:function size:0xC0 scope:local
__init_hardware = .init:0x800055C4; // type:function size:0x24 scope:global
__flush_cache = .init:0x800055E8; // type:function size:0x34 scope:global
_rom_copy_info = .init:0x8000561C; // type:object size:0x84 scope:global data:4byte
_bss_init_info = .init:0x800056A0; // type:object size:0x20 scope:global data:4byte
@etb_800056C0 = extab:0x800056C0; // type:object size:0x28 scope:local hidden
@etb_800056E8 = extab:0x800056E8; // type:object size:0x8 scope:local hidden
@etb_800056F0 = extab:0x800056F0; // type:object size:0x18 scope:local hidden
@etb_80005708 = extab:0x80005708; // type:object size:0x8 scope:local hidden
@etb_80005710 = extab:0x80005710; // type:object size:0x18 scope:local hidden
@etb_80005728 = extab:0x80005728; // type:object size:0x8 scope:local hidden
@etb_80005730 = extab:0x80005730; // type:object size:0x8 scope:local hidden
@etb_80005738 = extab:0x80005738; // type:object size:0x8 scope:local hidden
@etb_80005740 = extab:0x80005740; // type:object size:0x8 scope:local hidden
@etb_80005748 = extab:0x80005748; // type:object size:0x8 scope:local hidden
@etb_80005750 = extab:0x80005750; // type:object size:0x14 scope:local hidden
@etb_80005764 = extab:0x80005764; // type:object size:0x2C scope:local hidden
@etb_80005790 = extab:0x80005790; // type:object size:0x8 scope:local hidden
@etb_80005798 = extab:0x80005798; // type:object size:0x14 scope:local hidden
@etb_800057AC = extab:0x800057AC; // type:object size:0x8 scope:local hidden
@etb_800057B4 = extab:0x800057B4; // type:object size:0x8 scope:local hidden
@eti_800057C0 = extabindex:0x800057C0; // type:object size:0xC scope:local hidden
@eti_800057CC = extabindex:0x800057CC; // type:object size:0xC scope:local hidden
@eti_800057D8 = extabindex:0x800057D8; // type:object size:0xC scope:local hidden
@eti_800057E4 = extabindex:0x800057E4; // type:object size:0xC scope:local hidden
@eti_800057F0 = extabindex:0x800057F0; // type:object size:0xC scope:local hidden
@eti_800057FC = extabindex:0x800057FC; // type:object size:0xC scope:local hidden
@eti_80005808 = extabindex:0x80005808; // type:object size:0xC scope:local hidden
@eti_80005814 = extabindex:0x80005814; // type:object size:0xC scope:local hidden
@eti_80005820 = extabindex:0x80005820; // type:object size:0xC scope:local hidden
@eti_8000582C = extabindex:0x8000582C; // type:object size:0xC scope:local hidden
@eti_80005838 = extabindex:0x80005838; // type:object size:0xC scope:local hidden
@eti_80005844 = extabindex:0x80005844; // type:object size:0xC scope:local hidden
@eti_80005850 = extabindex:0x80005850; // type:object size:0xC scope:local hidden
@eti_8000585C = extabindex:0x8000585C; // type:object size:0xC scope:local hidden
@eti_80005868 = extabindex:0x80005868; // type:object size:0xC scope:local hidden
@eti_80005874 = extabindex:0x80005874; // type:object size:0xC scope:local hidden
_eti_init_info = extabindex:0x80005880; // type:object size:0x20 scope:global
main = .text:0x800058A0; // type:function size:0x4BC scope:global
fn_80005D5C = .text:0x80005D5C; // type:function size:0x3E0
fn_8000613C = .text:0x8000613C; // type:function size:0x350
fn_8000648C = .text:0x8000648C; // type:function size:0x194
fn_80006620 = .text:0x80006620; // type:function size:0xF4
__va_arg = .text:0x80006714; // type:function size:0xC8 scope:global
__destroy_global_chain = .text:0x800067DC; // type:function size:0x48 scope:global
__register_global_object = .text:0x80006824; // type:function size:0x18 scope:global
__dl__FPv = .text:0x8000683C; // type:function size:0x4C
__dt__Q23std13exceptionFv = .text:0x80006888; // type:function size:0x48
what__Q23std13exceptionCFv = .text:0x800068D0; // type:function size:0xC
__construct_array = .text:0x800068DC; // type:function size:0xF8
__dt__26__partial_array_destructorFv = .text:0x800069D4; // type:function size:0xB8
__construct_new_array = .text:0x80006A8C; // type:function size:0x100
__throw_catch_compare = .text:0x80006B8C; // type:function size:0x22C
unexpected__3stdFv = .text:0x80006DB8; // type:function size:0x28
terminate__3stdFv = .text:0x80006DE0; // type:function size:0x28
duhandler__3stdFv = .text:0x80006E08; // type:function size:0x28
dthandler__3stdFv = .text:0x80006E30; // type:function size:0x20
__cvt_fp2unsigned = .text:0x80006E50; // type:function size:0x5C
__save_fpr = .text:0x80006EAC; // type:function size:0x4C scope:global
_savefpr_14 = .text:0x80006EAC; // type:label scope:global
_savefpr_15 = .text:0x80006EB0; // type:label scope:global
_savefpr_16 = .text:0x80006EB4; // type:label scope:global
_savefpr_17 = .text:0x80006EB8; // type:label scope:global
_savefpr_18 = .text:0x80006EBC; // type:label scope:global
_savefpr_19 = .text:0x80006EC0; // type:label scope:global
_savefpr_20 = .text:0x80006EC4; // type:label scope:global
_savefpr_21 = .text:0x80006EC8; // type:label scope:global
_savefpr_22 = .text:0x80006ECC; // type:label scope:global
_savefpr_23 = .text:0x80006ED0; // type:label scope:global
_savefpr_24 = .text:0x80006ED4; // type:label scope:global
_savefpr_25 = .text:0x80006ED8; // type:label scope:global
_savefpr_26 = .text:0x80006EDC; // type:label scope:global
_savefpr_27 = .text:0x80006EE0; // type:label scope:global
_savefpr_28 = .text:0x80006EE4; // type:label scope:global
_savefpr_29 = .text:0x80006EE8; // type:label scope:global
_savefpr_30 = .text:0x80006EEC; // type:label scope:global
_savefpr_31 = .text:0x80006EF0; // type:label scope:global
__restore_fpr = .text:0x80006EF8; // type:function size:0x4C scope:global
_restfpr_14 = .text:0x80006EF8; // type:label scope:global
_restfpr_15 = .text:0x80006EFC; // type:label scope:global
_restfpr_16 = .text:0x80006F00; // type:label scope:global
_restfpr_17 = .text:0x80006F04; // type:label scope:global
_restfpr_18 = .text:0x80006F08; // type:label scope:global
_restfpr_19 = .text:0x80006F0C; // type:label scope:global
_restfpr_20 = .text:0x80006F10; // type:label scope:global
_restfpr_21 = .text:0x80006F14; // type:label scope:global
_restfpr_22 = .text:0x80006F18; // type:label scope:global
_restfpr_23 = .text:0x80006F1C; // type:label scope:global
_restfpr_24 = .text:0x80006F20; // type:label scope:global
_restfpr_25 = .text:0x80006F24; // type:label scope:global
_restfpr_26 = .text:0x80006F28; // type:label scope:global
_restfpr_27 = .text:0x80006F2C; // type:label scope:global
_restfpr_28 = .text:0x80006F30; // type:label scope:global
_restfpr_29 = .text:0x80006F34; // type:label scope:global
_restfpr_30 = .text:0x80006F38; // type:label scope:global
_restfpr_31 = .text:0x80006F3C; // type:label scope:global
__save_gpr = .text:0x80006F44; // type:function size:0x4C scope:global
_savegpr_14 = .text:0x80006F44; // type:label scope:global
_savegpr_15 = .text:0x80006F48; // type:label scope:global
_savegpr_16 = .text:0x80006F4C; // type:label scope:global
_savegpr_17 = .text:0x80006F50; // type:label scope:global
_savegpr_18 = .text:0x80006F54; // type:label scope:global
_savegpr_19 = .text:0x80006F58; // type:label scope:global
_savegpr_20 = .text:0x80006F5C; // type:label scope:global
_savegpr_21 = .text:0x80006F60; // type:label scope:global
_savegpr_22 = .text:0x80006F64; // type:label scope:global
_savegpr_23 = .text:0x80006F68; // type:label scope:global
_savegpr_24 = .text:0x80006F6C; // type:label scope:global
_savegpr_25 = .text:0x80006F70; // type:label scope:global
_savegpr_26 = .text:0x80006F74; // type:label scope:global
_savegpr_27 = .text:0x80006F78; // type:label scope:global
_savegpr_28 = .text:0x80006F7C; // type:label scope:global
_savegpr_29 = .text:0x80006F80; // type:label scope:global
_savegpr_30 = .text:0x80006F84; // type:label scope:global
_savegpr_31 = .text:0x80006F88; // type:label scope:global
__restore_gpr = .text:0x80006F90; // type:function size:0x4C scope:global
_restgpr_14 = .text:0x80006F90; // type:label scope:global
_restgpr_15 = .text:0x80006F94; // type:label scope:global
_restgpr_16 = .text:0x80006F98; // type:label scope:global
_restgpr_17 = .text:0x80006F9C; // type:label scope:global
_restgpr_18 = .text:0x80006FA0; // type:label scope:global
_restgpr_19 = .text:0x80006FA4; // type:label scope:global
_restgpr_20 = .text:0x80006FA8; // type:label scope:global
_restgpr_21 = .text:0x80006FAC; // type:label scope:global
_restgpr_22 = .text:0x80006FB0; // type:label scope:global
_restgpr_23 = .text:0x80006FB4; // type:label scope:global
_restgpr_24 = .text:0x80006FB8; // type:label scope:global
_restgpr_25 = .text:0x80006FBC; // type:label scope:global
_restgpr_26 = .text:0x80006FC0; // type:label scope:global
_restgpr_27 = .text:0x80006FC4; // type:label scope:global
_restgpr_28 = .text:0x80006FC8; // type:label scope:global
_restgpr_29 = .text:0x80006FCC; // type:label scope:global
_restgpr_30 = .text:0x80006FD0; // type:label scope:global
_restgpr_31 = .text:0x80006FD4; // type:label scope:global
__div2u = .text:0x80006FDC; // type:function size:0xEC scope:global
__div2i = .text:0x800070C8; // type:function size:0x138
__mod2u = .text:0x80007200; // type:function size:0xE4 scope:global
__shl2i = .text:0x800072E4; // type:function size:0x24
__shr2u = .text:0x80007308; // type:function size:0x24
__shr2i = .text:0x8000732C; // type:function size:0x28
__cvt_sll_dbl = .text:0x80007354; // type:function size:0xB0
__cvt_dbl_usll = .text:0x80007404; // type:function size:0xCC
GetR2__Fv = .text:0x800074D0; // type:function size:0x8 scope:local
__fini_cpp_exceptions = .text:0x800074D8; // type:function size:0x34 scope:global
__init_cpp_exceptions = .text:0x8000750C; // type:function size:0x40 scope:global
ExPPC_LongJump__FP12ThrowContextPvPv = .text:0x8000754C; // type:function size:0x104
__throw = .text:0x80007650; // type:function size:0x144
__end__catch = .text:0x80007794; // type:function size:0x44
ExPPC_ThrowHandler__FP12ThrowContext = .text:0x800077D8; // type:function size:0x410
__unexpected = .text:0x80007BE8; // type:function size:0x1B4
__dt__Q23std13bad_exceptionFv = .text:0x80007D9C; // type:function size:0x5C
ExPPC_UnwindStack__FP12ThrowContextP15MWExceptionInfoPv = .text:0x80007DF8; // type:function size:0x50C
ExPPC_PopStackFrame__FP12ThrowContextP15MWExceptionInfo = .text:0x80008304; // type:function size:0x248
ExPPC_NextAction__FP14ActionIterator = .text:0x8000854C; // type:function size:0x1C0
ExPPC_FindExceptionRecord__FPcP15MWExceptionInfo = .text:0x8000870C; // type:function size:0x204
__unregister_fragment = .text:0x80008910; // type:function size:0x34 scope:global
__register_fragment = .text:0x80008944; // type:function size:0x34 scope:global
what__Q23std13bad_exceptionCFv = .text:0x80008978; // type:function size:0xC
__sys_free = .text:0x80008984; // type:function size:0xB8
exit = .text:0x80008A3C; // type:function size:0xCC scope:global
abort = .text:0x80008B08; // type:function size:0x88
free = .text:0x80008B90; // type:function size:0x134
deallocate_from_fixed_pools = .text:0x80008CC4; // type:function size:0x1FC
SubBlock_merge_next = .text:0x80008EC0; // type:function size:0xBC
Block_link = .text:0x80008F7C; // type:function size:0x17C
__flush_all = .text:0x800090F8; // type:function size:0x70
__close_all = .text:0x80009168; // type:function size:0x98 scope:global
__dec2num = .text:0x80009200; // type:function size:0x954
__num2dec = .text:0x80009B54; // type:function size:0x1A4
__num2dec_internal = .text:0x80009CF8; // type:function size:0x23C
__minus_dec = .text:0x80009F34; // type:function size:0x4FC
__less_dec = .text:0x8000A430; // type:function size:0xF8
__equals_dec = .text:0x8000A528; // type:function size:0x10C
__two_exp = .text:0x8000A634; // type:function size:0x340
__str2dec = .text:0x8000A974; // type:function size:0xEC
__timesdec = .text:0x8000AA60; // type:function size:0x28C
__ull2dec = .text:0x8000ACEC; // type:function size:0x110
__count_trailing_zerol = .text:0x8000ADFC; // type:function size:0x70
__flush_buffer = .text:0x8000AE6C; // type:function size:0xC4 scope:global
__prep_buffer = .text:0x8000AF30; // type:function size:0x34 scope:global
toupper = .text:0x8000AF64; // type:function size:0x24
tolower = .text:0x8000AF88; // type:function size:0x24
__fwrite = .text:0x8000AFAC; // type:function size:0x30C scope:global
fwrite = .text:0x8000B2B8; // type:function size:0x20 scope:global
fflush = .text:0x8000B2D8; // type:function size:0x138
fclose = .text:0x8000B410; // type:function size:0xC0
fseek = .text:0x8000B4D0; // type:function size:0x20 scope:global
_fseek = .text:0x8000B4F0; // type:function size:0x23C
ftell = .text:0x8000B72C; // type:function size:0x70
wcstombs = .text:0x8000B79C; // type:function size:0xA0 scope:global
unicode_to_UTF8 = .text:0x8000B83C; // type:function size:0xA4
mbtowc = .text:0x8000B8E0; // type:function size:0x20
utf8_to_unicode = .text:0x8000B900; // type:function size:0x120
is_utf8_complete = .text:0x8000BA20; // type:function size:0xEC
memcmp = .text:0x8000BB0C; // type:function size:0x4C
__memrchr = .text:0x8000BB58; // type:function size:0x2C scope:global
memchr = .text:0x8000BB84; // type:function size:0x2C scope:global
memmove = .text:0x8000BBB0; // type:function size:0xCC scope:global
__copy_longs_rev_unaligned = .text:0x8000BC7C; // type:function size:0xB0
__copy_longs_unaligned = .text:0x8000BD2C; // type:function size:0xC4
__copy_longs_rev_aligned = .text:0x8000BDF0; // type:function size:0xAC
__copy_longs_aligned = .text:0x8000BE9C; // type:function size:0xC0
__stdio_atexit = .text:0x8000BF5C; // type:function size:0x10 scope:global
sprintf = .text:0x8000BF6C; // type:function size:0xE0
vsprintf = .text:0x8000C04C; // type:function size:0x78
vprintf = .text:0x8000C0C4; // type:function size:0x7C scope:global
__StringWrite = .text:0x8000C140; // type:function size:0x6C
__FileWrite = .text:0x8000C1AC; // type:function size:0x58 scope:global
__pformatter = .text:0x8000C204; // type:function size:0x774 scope:local
float2str = .text:0x8000C978; // type:function size:0x6EC scope:local
round_decimal = .text:0x8000D064; // type:function size:0x12C
double2hex = .text:0x8000D190; // type:function size:0x338 scope:local
longlong2str = .text:0x8000D4C8; // type:function size:0x2DC scope:local
long2str = .text:0x8000D7A4; // type:function size:0x220 scope:local
parse_format = .text:0x8000D9C4; // type:function size:0x504 scope:local
srand = .text:0x8000DEC8; // type:function size:0x8
rand = .text:0x8000DED0; // type:function size:0x20
sscanf = .text:0x8000DEF0; // type:function size:0xC4
__StringRead = .text:0x8000DFB4; // type:function size:0x90
__sformatter = .text:0x8000E044; // type:function size:0x9AC
parse_format = .text:0x8000E9F0; // type:function size:0x548 scope:local
raise = .text:0x8000EF38; // type:function size:0xB0
strstr = .text:0x8000EFE8; // type:function size:0x68
strchr = .text:0x8000F050; // type:function size:0x30 scope:global
strncmp = .text:0x8000F080; // type:function size:0x40
strcmp = .text:0x8000F0C0; // type:function size:0x128
strncat = .text:0x8000F1E8; // type:function size:0x4C
strcat = .text:0x8000F234; // type:function size:0x2C
strncpy = .text:0x8000F260; // type:function size:0x44
strcpy = .text:0x8000F2A4; // type:function size:0xB8
strlen = .text:0x8000F35C; // type:function size:0x1C scope:global
__strtold = .text:0x8000F378; // type:function size:0x100C
atoi = .text:0x80010384; // type:function size:0xC0
strtoul = .text:0x80010444; // type:function size:0xAC
__strtoull = .text:0x800104F0; // type:function size:0x40C
__strtoul = .text:0x800108FC; // type:function size:0x378
__close_console = .text:0x80010C74; // type:function size:0x8
__write_console = .text:0x80010C7C; // type:function size:0xC4
fwide = .text:0x80010D40; // type:function size:0x88 scope:global
__ieee754_acos = .text:0x80010DC8; // type:function size:0x310
__ieee754_asin = .text:0x800110D8; // type:function size:0x264
__ieee754_atan2 = .text:0x8001133C; // type:function size:0x290
__ieee754_log = .text:0x800115CC; // type:function size:0x27C
__ieee754_log10 = .text:0x80011848; // type:function size:0x110
__ieee754_pow = .text:0x80011958; // type:function size:0x88C
__ieee754_rem_pio2 = .text:0x800121E4; // type:function size:0x3A0
__kernel_cos = .text:0x80012584; // type:function size:0xF4
__kernel_rem_pio2 = .text:0x80012678; // type:function size:0xE54
__kernel_sin = .text:0x800134CC; // type:function size:0xA0
__kernel_tan = .text:0x8001356C; // type:function size:0x214
atan = .text:0x80013780; // type:function size:0x200
ceil = .text:0x80013980; // type:function size:0x144
copysign = .text:0x80013AC4; // type:function size:0x28
cos = .text:0x80013AEC; // type:function size:0xD4
floor = .text:0x80013BC0; // type:function size:0x148
frexp = .text:0x80013D08; // type:function size:0x8C
ldexp = .text:0x80013D94; // type:function size:0x1C4
modf = .text:0x80013F58; // type:function size:0xFC
nextafter = .text:0x80014054; // type:function size:0x184
sin = .text:0x800141D8; // type:function size:0xD8
tan = .text:0x800142B0; // type:function size:0x78
acos = .text:0x80014328; // type:function size:0x20
asin = .text:0x80014348; // type:function size:0x20
atan2 = .text:0x80014368; // type:function size:0x20
log = .text:0x80014388; // type:function size:0x20
log10 = .text:0x800143A8; // type:function size:0x20
pow = .text:0x800143C8; // type:function size:0x20
modff__FfPf = .text:0x800143E8; // type:function size:0x130
sqrtf__Ff = .text:0x80014518; // type:function size:0x64
floorf = .text:0x8001457C; // type:function size:0x24
powf = .text:0x800145A0; // type:function size:0x24
fabsf = .text:0x800145C4; // type:function size:0xC
tanf = .text:0x800145D0; // type:function size:0x24
sinf = .text:0x800145F4; // type:function size:0x24
cosf = .text:0x80014618; // type:function size:0x24
atanf = .text:0x8001463C; // type:function size:0x24
acosf = .text:0x80014660; // type:function size:0x24
TRKNubMainLoop = .text:0x80014684; // type:function size:0xF8 scope:global
TRKDestructEvent = .text:0x8001477C; // type:function size:0x24 scope:global
TRKConstructEvent = .text:0x800147A0; // type:function size:0x18
TRKPostEvent = .text:0x800147B8; // type:function size:0xE0
TRKGetNextEvent = .text:0x80014898; // type:function size:0xB4 scope:global
TRKInitializeEventQueue = .text:0x8001494C; // type:function size:0x58 scope:global
TRKNubWelcome = .text:0x800149A4; // type:function size:0x28 scope:global
TRKTerminateNub = .text:0x800149CC; // type:function size:0x24 scope:global
TRKInitializeNub = .text:0x800149F0; // type:function size:0x134 scope:global
TRKMessageSend = .text:0x80014B24; // type:function size:0x1DC
TRKReadBuffer_ui32 = .text:0x80014D00; // type:function size:0xF0
TRKReadBuffer_ui8 = .text:0x80014DF0; // type:function size:0x98
TRKReadBuffer1_ui64 = .text:0x80014E88; // type:function size:0xE8
TRKReadBuffer1_ui32 = .text:0x80014F70; // type:function size:0xC8
TRKReadBuffer1_ui16 = .text:0x80015038; // type:function size:0xB8
TRKReadBuffer1_ui8 = .text:0x800150F0; // type:function size:0x80
TRKAppendBuffer_ui32 = .text:0x80015170; // type:function size:0xA8
TRKAppendBuffer_ui8 = .text:0x80015218; // type:function size:0x68
TRKAppendBuffer1_ui64 = .text:0x80015280; // type:function size:0x88
TRKAppendBuffer1_ui32 = .text:0x80015308; // type:function size:0x64
TRKAppendBuffer1_ui16 = .text:0x8001536C; // type:function size:0x54
TRKReadBuffer = .text:0x800153C0; // type:function size:0x8C
TRKAppendBuffer = .text:0x8001544C; // type:function size:0xA4
TRKSetBufferPosition = .text:0x800154F0; // type:function size:0x30
TRKResetBuffer = .text:0x80015520; // type:function size:0x40
TRKReleaseBuffer = .text:0x80015560; // type:function size:0x64
TRKGetBuffer = .text:0x800155C4; // type:function size:0x2C scope:global
TRKGetFreeBuffer = .text:0x800155F0; // type:function size:0xC8
TRKInitializeMessageBuffers = .text:0x800156B8; // type:function size:0x74 scope:global
TRKTerminateSerialHandler = .text:0x8001572C; // type:function size:0x8
TRKInitializeSerialHandler = .text:0x80015734; // type:function size:0x24 scope:global
TRKProcessInput = .text:0x80015758; // type:function size:0x50
TRKGetInput = .text:0x800157A8; // type:function size:0x98 scope:global
TRKTestForPacket = .text:0x80015840; // type:function size:0x2B8
usr_put_initialize = .text:0x80015AF8; // type:function size:0x4 scope:global
usr_puts_serial = .text:0x80015AFC; // type:function size:0x88
TRKDispatchMessage = .text:0x80015B84; // type:function size:0x84 scope:global
TRKInitializeDispatcher = .text:0x80015C08; // type:function size:0x18 scope:global
TRKDoSetOption = .text:0x80015C20; // type:function size:0x1A4
TRKDoStop = .text:0x80015DC4; // type:function size:0x100
TRKDoStep = .text:0x80015EC4; // type:function size:0x530
TRKDoContinue = .text:0x800163F4; // type:function size:0x154
TRKDoFlushCache = .text:0x80016548; // type:function size:0x2F8
TRKDoWriteRegisters = .text:0x80016840; // type:function size:0x3C8
TRKDoReadRegisters = .text:0x80016C08; // type:function size:0x3CC
TRKDoWriteMemory = .text:0x80016FD4; // type:function size:0x420
TRKDoReadMemory = .text:0x800173F4; // type:function size:0x410
TRKDoCPUType = .text:0x80017804; // type:function size:0x398
TRKDoSupportMask = .text:0x80017B9C; // type:function size:0x230
TRKDoVersions = .text:0x80017DCC; // type:function size:0x2D8
TRKDoReset = .text:0x800180A4; // type:function size:0xB8
TRKDoDisconnect = .text:0x8001815C; // type:function size:0xE4
TRKDoConnect = .text:0x80018240; // type:function size:0xBC
TRKDoUnsupported = .text:0x800182FC; // type:function size:0xB0
TRKStandardACK = .text:0x800183AC; // type:function size:0xB8
SetTRKConnected = .text:0x80018464; // type:function size:0xC
GetTRKConnected = .text:0x80018470; // type:function size:0x10
HandlePositionFileSupportRequest = .text:0x80018480; // type:function size:0x190
HandleCloseFileSupportRequest = .text:0x80018610; // type:function size:0x120
HandleOpenFileSupportRequest = .text:0x80018730; // type:function size:0x1A8
TRKRequestSend = .text:0x800188D8; // type:function size:0x1A4
TRKSuppAccessFile = .text:0x80018A7C; // type:function size:0x2C4
TRKReleaseMutex = .text:0x80018D40; // type:function size:0x8
TRKAcquireMutex = .text:0x80018D48; // type:function size:0x8
TRKInitializeMutex = .text:0x80018D50; // type:function size:0x8
TRKDoNotifyStopped = .text:0x80018D58; // type:function size:0xD8
TRK_flush_cache = .text:0x80018E30; // type:function size:0x38
TRK_fill_mem = .text:0x80018E68; // type:function size:0xBC
__TRK_get_MSR = .text:0x80018F24; // type:function size:0x8
__TRK_set_MSR = .text:0x80018F2C; // type:function size:0x8
TRK_ppc_memcpy = .text:0x80018F34; // type:function size:0x3C
TRKInterruptHandler = .text:0x80018F70; // type:function size:0x194 scope:global
TRKExceptionHandler = .text:0x80019104; // type:function size:0x9C scope:global
TRKSwapAndGo = .text:0x800191A0; // type:function size:0xC4 scope:global
TRKInterruptHandlerEnableInterrupts = .text:0x80019264; // type:function size:0x54 scope:global
TRKTargetSetInputPendingPtr = .text:0x800192B8; // type:function size:0x10 scope:global
TRKPPCAccessFPRegister = .text:0x800192C8; // type:function size:0x21C
TRKTargetStop = .text:0x800194E4; // type:function size:0x18
TRKTargetSetStopped = .text:0x800194FC; // type:function size:0x10 scope:global
TRKTargetStopped = .text:0x8001950C; // type:function size:0x10 scope:global
TRKTargetFlushCache = .text:0x8001951C; // type:function size:0x3C
TRKTargetSupportRequest = .text:0x80019558; // type:function size:0x208 scope:global
TRKTargetGetPC = .text:0x80019760; // type:function size:0x10
TRKTargetStepOutOfRange = .text:0x80019770; // type:function size:0x7C
TRKTargetSingleStep = .text:0x800197EC; // type:function size:0x6C
TRKTargetAddExceptionInfo = .text:0x80019858; // type:function size:0xAC
TRKTargetAddStopInfo = .text:0x80019904; // type:function size:0x124
TRKTargetInterrupt = .text:0x80019A28; // type:function size:0x15C scope:global
TRKPostInterruptEvent = .text:0x80019B84; // type:function size:0xC0 scope:global
TRKTargetCPUType = .text:0x80019C44; // type:function size:0x60
TRKTargetSupportMask = .text:0x80019CA4; // type:function size:0xA4
TRKTargetVersions = .text:0x80019D48; // type:function size:0x24
TRKTargetAccessExtended2 = .text:0x80019D6C; // type:function size:0x438
TRKTargetAccessExtended1 = .text:0x8001A1A4; // type:function size:0x170
TRKTargetAccessFP = .text:0x8001A314; // type:function size:0x13C
TRKTargetAccessDefault = .text:0x8001A450; // type:function size:0xF4
TRKTargetAccessMemory = .text:0x8001A544; // type:function size:0x14C
TRKValidMemory32 = .text:0x8001A690; // type:function size:0x124
TRKAccessFile = .text:0x8001A7C0; // type:function size:0x8
TRKOpenFile = .text:0x8001A7C8; // type:function size:0x8
TRKCloseFile = .text:0x8001A7D0; // type:function size:0x8
TRKPositionFile = .text:0x8001A7D8; // type:function size:0x8
InitMetroTRK = .text:0x8001A7E0; // type:function size:0x94 scope:global
TRKInitializeTarget = .text:0x8001A874; // type:function size:0x4C scope:global
TRKTargetTranslate = .text:0x8001A8C0; // type:function size:0x40
EnableMetroTRKInterrupts = .text:0x8001A900; // type:function size:0x20 scope:global
TRKSaveExtended1Block = .text:0x8001A920; // type:function size:0x1B8 scope:global
TRKRestoreExtended1Block = .text:0x8001AAD8; // type:function size:0x1B8 scope:global
TRKTargetCPUMinorType = .text:0x8001AC90; // type:function size:0x8
TRK_main = .text:0x8001AC98; // type:function size:0x44 scope:global
TRKLoadContext = .text:0x8001ACDC; // type:function size:0x88 scope:global
TRKUARTInterruptHandler = .text:0x8001AD64; // type:function size:0x4 scope:global
TRK_board_display = .text:0x8001AD68; // type:function size:0x24 scope:global
UnreserveEXI2Port = .text:0x8001AD8C; // type:function size:0x30 scope:global
ReserveEXI2Port = .text:0x8001ADBC; // type:function size:0x30 scope:global
TRKReadUARTPoll = .text:0x8001ADEC; // type:function size:0xF0
WriteUART1 = .text:0x8001AEDC; // type:function size:0x28
WriteUARTFlush = .text:0x8001AF04; // type:function size:0xE0
EnableEXI2Interrupts = .text:0x8001AFE4; // type:function size:0x30
TRKInitializeIntDrivenUART = .text:0x8001B014; // type:function size:0x3C scope:global
InitMetroTRKCommTable = .text:0x8001B050; // type:function size:0x100 scope:global
TRKEXICallBack = .text:0x8001B150; // type:function size:0x38 scope:global
TRKTargetContinue = .text:0x8001B188; // type:function size:0x34 scope:global
GetUseSerialIO = .text:0x8001B1BC; // type:function size:0x10
SetUseSerialIO = .text:0x8001B1CC; // type:function size:0xC
__TRK_write_console = .text:0x8001B1D8; // type:function size:0xBC
__read_console = .text:0x8001B294; // type:function size:0xBC
AIRegisterDMACallback = .text:0x8001B350; // type:function size:0x44
AIInitDMA = .text:0x8001B394; // type:function size:0x88
AIStartDMA = .text:0x8001B41C; // type:function size:0x18
AISetStreamPlayState = .text:0x8001B434; // type:function size:0xD8
AIGetStreamPlayState = .text:0x8001B50C; // type:function size:0x10
AISetDSPSampleRate = .text:0x8001B51C; // type:function size:0xE0
AIGetDSPSampleRate = .text:0x8001B5FC; // type:function size:0x14
__AI_set_stream_sample_rate = .text:0x8001B610; // type:function size:0xD4
AIGetStreamSampleRate = .text:0x8001B6E4; // type:function size:0x10
AISetStreamVolLeft = .text:0x8001B6F4; // type:function size:0x1C
AIGetStreamVolLeft = .text:0x8001B710; // type:function size:0x10
AISetStreamVolRight = .text:0x8001B720; // type:function size:0x1C
AIGetStreamVolRight = .text:0x8001B73C; // type:function size:0x10
AIInit = .text:0x8001B74C; // type:function size:0x16C
__AISHandler = .text:0x8001B8B8; // type:function size:0x7C
__AIDHandler = .text:0x8001B934; // type:function size:0xAC
__AICallbackStackSwitch = .text:0x8001B9E0; // type:function size:0x58
__AI_SRC_INIT = .text:0x8001BA38; // type:function size:0x1E4
EXI2_Init = .text:0x8001BC1C; // type:function size:0x4 scope:global
EXI2_EnableInterrupts = .text:0x8001BC20; // type:function size:0x4 scope:global
EXI2_Poll = .text:0x8001BC24; // type:function size:0x8 scope:global
EXI2_ReadN = .text:0x8001BC2C; // type:function size:0x8 scope:global
EXI2_WriteN = .text:0x8001BC34; // type:function size:0x8 scope:global
EXI2_Reserve = .text:0x8001BC3C; // type:function size:0x4 scope:global
EXI2_Unreserve = .text:0x8001BC40; // type:function size:0x4 scope:global
AMC_IsStub = .text:0x8001BC44; // type:function size:0x8 scope:global
ARRegisterDMACallback = .text:0x8001BC4C; // type:function size:0x44
ARStartDMA = .text:0x8001BC90; // type:function size:0xF0
ARAlloc = .text:0x8001BD80; // type:function size:0x68
ARFree = .text:0x8001BDE8; // type:function size:0x74
ARInit = .text:0x8001BE5C; // type:function size:0xC4
__ARHandler = .text:0x8001BF20; // type:function size:0x78
__ARChecksize = .text:0x8001BF98; // type:function size:0x17F4
__ARQServiceQueueLo = .text:0x8001D78C; // type:function size:0x100
__ARQCallbackHack = .text:0x8001D88C; // type:function size:0x4
__ARQInterruptServiceRoutine = .text:0x8001D890; // type:function size:0xCC
ARQInit = .text:0x8001D95C; // type:function size:0x70
ARQPostRequest = .text:0x8001D9CC; // type:function size:0x15C
AXInit = .text:0x8001DB28; // type:function size:0x3C
__AXGetStackHead = .text:0x8001DB64; // type:function size:0x18
__AXServiceCallbackStack = .text:0x8001DB7C; // type:function size:0x74
__AXAllocInit = .text:0x8001DBF0; // type:function size:0xB4
__AXPushFreeStack = .text:0x8001DCA4; // type:function size:0x20
__AXPushCallbackStack = .text:0x8001DCC4; // type:function size:0x10
__AXPopCallbackStack = .text:0x8001DCD4; // type:function size:0x1C
__AXRemoveFromStack = .text:0x8001DCF0; // type:function size:0x94
AXFreeVoice = .text:0x8001DD84; // type:function size:0x80
AXAcquireVoice = .text:0x8001DE04; // type:function size:0x174
__AXAuxInit = .text:0x8001DF78; // type:function size:0xE4
__AXGetAuxAInput = .text:0x8001E05C; // type:function size:0x34
__AXGetAuxAInputDpl2 = .text:0x8001E090; // type:function size:0x20
__AXGetAuxAOutput = .text:0x8001E0B0; // type:function size:0x1C
__AXGetAuxAOutputDpl2R = .text:0x8001E0CC; // type:function size:0x20
__AXGetAuxAOutputDpl2Ls = .text:0x8001E0EC; // type:function size:0x20
__AXGetAuxAOutputDpl2Rs = .text:0x8001E10C; // type:function size:0x20
__AXGetAuxBInput = .text:0x8001E12C; // type:function size:0x34
__AXGetAuxBOutput = .text:0x8001E160; // type:function size:0x1C
__AXGetAuxBForDPL2 = .text:0x8001E17C; // type:function size:0x1C
__AXGetAuxBOutputDPL2 = .text:0x8001E198; // type:function size:0x1C
__AXProcessAux = .text:0x8001E1B4; // type:function size:0x23C
AXRegisterAuxACallback = .text:0x8001E3F0; // type:function size:0xC
AXRegisterAuxBCallback = .text:0x8001E3FC; // type:function size:0xC
__AXGetCommandListCycles = .text:0x8001E408; // type:function size:0x8
__AXGetCommandListAddress = .text:0x8001E410; // type:function size:0x3C
__AXNextFrame = .text:0x8001E44C; // type:function size:0x6B0
__AXClInit = .text:0x8001EAFC; // type:function size:0x24
AXSetMode = .text:0x8001EB20; // type:function size:0x14
__AXOutNewFrame = .text:0x8001EB34; // type:function size:0x188
__AXOutAiCallback = .text:0x8001ECBC; // type:function size:0x68
__AXDSPInitCallback = .text:0x8001ED24; // type:function size:0xC
__AXDSPResumeCallback = .text:0x8001ED30; // type:function size:0x58
__AXDSPDoneCallback = .text:0x8001ED88; // type:function size:0x2C
__AXOutInitDSP = .text:0x8001EDB4; // type:function size:0xCC
__AXOutInit = .text:0x8001EE80; // type:function size:0x340
AXRegisterCallback = .text:0x8001F1C0; // type:function size:0x8
__AXGetStudio = .text:0x8001F1C8; // type:function size:0xC
__AXPrintStudio = .text:0x8001F1D4; // type:function size:0x3F8
__AXSPBInit = .text:0x8001F5CC; // type:function size:0x2C
__AXDepopVoice = .text:0x8001F5F8; // type:function size:0x94
__AXGetNumVoices = .text:0x8001F68C; // type:function size:0x8
__AXServiceVPB = .text:0x8001F694; // type:function size:0x708
__AXSyncPBs = .text:0x8001FD9C; // type:function size:0x268
__AXGetPBs = .text:0x80020004; // type:function size:0xC
__AXSetPBDefault = .text:0x80020010; // type:function size:0x3C
__AXVPBInit = .text:0x8002004C; // type:function size:0x1FC
AXSetVoiceSrcType = .text:0x80020248; // type:function size:0xC4
AXSetVoiceState = .text:0x8002030C; // type:function size:0x5C
AXSetVoiceMix = .text:0x80020368; // type:function size:0x254
AXSetVoiceAddr = .text:0x800205BC; // type:function size:0x110
AXSetVoiceAdpcm = .text:0x800206CC; // type:function size:0xA4
AXSetVoiceSrc = .text:0x80020770; // type:function size:0x98
AXSetVoiceSrcRatio = .text:0x80020808; // type:function size:0x98
AXSetVoiceAdpcmLoop = .text:0x800208A0; // type:function size:0x6C
__AXGetCurrentProfile = .text:0x8002090C; // type:function size:0x48
ReverbHICreate = .text:0x80020954; // type:function size:0x4EC
DoCrossTalk = .text:0x80020E40; // type:function size:0x190
HandleReverb = .text:0x80020FD0; // type:function size:0x50C scope:local
AXFXReverbHiInit = .text:0x800214DC; // type:function size:0x70
AXFXReverbHiCallback = .text:0x8002154C; // type:function size:0x104
ReverbSTDCreate = .text:0x80021650; // type:function size:0x40C
HandleReverb = .text:0x80021A5C; // type:function size:0x3B4 scope:local
AXFXReverbStdInit = .text:0x80021E10; // type:function size:0x6C
AXFXReverbStdCallback = .text:0x80021E7C; // type:function size:0x30
do_src1 = .text:0x80021EAC; // type:function size:0x198
do_src2 = .text:0x80022044; // type:function size:0x1EC
AXFXChorusInit = .text:0x80022230; // type:function size:0x200
AXFXChorusSettings = .text:0x80022430; // type:function size:0xC4
AXFXChorusCallback = .text:0x800224F4; // type:function size:0x350
AXFXDelayCallback = .text:0x80022844; // type:function size:0x1D0
AXFXDelaySettings = .text:0x80022A14; // type:function size:0x204
AXFXDelayInit = .text:0x80022C18; // type:function size:0x48
AXFXDelayShutdown = .text:0x80022C60; // type:function size:0x90
__AXFXAllocFunction = .text:0x80022CF0; // type:function size:0x28
__AXFXFreeFunction = .text:0x80022D18; // type:function size:0x28
AXFXSetHooks = .text:0x80022D40; // type:function size:0xC
PPCMfmsr = .text:0x80022D4C; // type:function size:0x8 scope:global
PPCMtmsr = .text:0x80022D54; // type:function size:0x8 scope:global
PPCMfhid0 = .text:0x80022D5C; // type:function size:0x8 scope:global
PPCMthid0 = .text:0x80022D64; // type:function size:0x8
PPCMfl2cr = .text:0x80022D6C; // type:function size:0x8 scope:global
PPCMtl2cr = .text:0x80022D74; // type:function size:0x8 scope:global
PPCMtdec = .text:0x80022D7C; // type:function size:0x8 scope:weak
PPCSync = .text:0x80022D84; // type:function size:0x8
PPCHalt = .text:0x80022D8C; // type:function size:0x14 scope:weak
PPCMtmmcr0 = .text:0x80022DA0; // type:function size:0x8 scope:global
PPCMtmmcr1 = .text:0x80022DA8; // type:function size:0x8 scope:global
PPCMtpmc1 = .text:0x80022DB0; // type:function size:0x8 scope:global
PPCMtpmc2 = .text:0x80022DB8; // type:function size:0x8 scope:global
PPCMtpmc3 = .text:0x80022DC0; // type:function size:0x8 scope:global
PPCMtpmc4 = .text:0x80022DC8; // type:function size:0x8 scope:global
PPCMffpscr = .text:0x80022DD0; // type:function size:0x20 scope:global
PPCMtfpscr = .text:0x80022DF0; // type:function size:0x28 scope:global
PPCMfhid2 = .text:0x80022E18; // type:function size:0x8 scope:global
PPCMthid2 = .text:0x80022E20; // type:function size:0x8 scope:global
PPCMtwpar = .text:0x80022E28; // type:function size:0x8 scope:global
PPCDisableSpeculation = .text:0x80022E30; // type:function size:0x28 scope:global
PPCSetFpNonIEEEMode = .text:0x80022E58; // type:function size:0x8 scope:global
__CARDDefaultApiCallback = .text:0x80022E60; // type:function size:0x4
__CARDSyncCallback = .text:0x80022E64; // type:function size:0x34
__CARDExtHandler = .text:0x80022E98; // type:function size:0xD8
__CARDExiHandler = .text:0x80022F70; // type:function size:0x118
__CARDTxHandler = .text:0x80023088; // type:function size:0xA8
__CARDUnlockedHandler = .text:0x80023130; // type:function size:0x84
__CARDEnableInterrupt = .text:0x800231B4; // type:function size:0xC0
__CARDReadStatus = .text:0x80023274; // type:function size:0xF0
__CARDClearStatus = .text:0x80023364; // type:function size:0xAC
TimeoutHandler = .text:0x80023410; // type:function size:0xA4
Retry = .text:0x800234B4; // type:function size:0x22C
UnlockedCallback = .text:0x800236E0; // type:function size:0x110
__CARDStart = .text:0x800237F0; // type:function size:0x1B4
__CARDReadSegment = .text:0x800239A4; // type:function size:0x134
__CARDWritePage = .text:0x80023AD8; // type:function size:0x11C
__CARDEraseSector = .text:0x80023BF4; // type:function size:0xE0
CARDInit = .text:0x80023CD4; // type:function size:0xAC
__CARDGetFontEncode = .text:0x80023D80; // type:function size:0x8
__CARDSetDiskID = .text:0x80023D88; // type:function size:0x38
__CARDGetControlBlock = .text:0x80023DC0; // type:function size:0xB8
__CARDPutControlBlock = .text:0x80023E78; // type:function size:0x64
CARDGetResultCode = .text:0x80023EDC; // type:function size:0x30
CARDFreeBlocks = .text:0x80023F0C; // type:function size:0x150
CARDGetEncoding = .text:0x8002405C; // type:function size:0x88
__CARDSync = .text:0x800240E4; // type:function size:0x98
OnReset = .text:0x8002417C; // type:function size:0x50
bitrev = .text:0x800241CC; // type:function size:0x16C
ReadArrayUnlock = .text:0x80024338; // type:function size:0x144
DummyLen = .text:0x8002447C; // type:function size:0xC4
__CARDUnlock = .text:0x80024540; // type:function size:0xB58
InitCallback = .text:0x80025098; // type:function size:0x70
DoneCallback = .text:0x80025108; // type:function size:0x324
BlockReadCallback = .text:0x8002542C; // type:function size:0xDC
__CARDRead = .text:0x80025508; // type:function size:0x64
BlockWriteCallback = .text:0x8002556C; // type:function size:0xDC
__CARDWrite = .text:0x80025648; // type:function size:0x64
__CARDGetFatBlock = .text:0x800256AC; // type:function size:0x8
WriteCallback = .text:0x800256B4; // type:function size:0xD4 scope:local
EraseCallback = .text:0x80025788; // type:function size:0xC8 scope:local
__CARDAllocBlock = .text:0x80025850; // type:function size:0x118
__CARDFreeBlock = .text:0x80025968; // type:function size:0x9C
__CARDUpdateFatBlock = .text:0x80025A04; // type:function size:0xAC
__CARDGetDirBlock = .text:0x80025AB0; // type:function size:0x8
WriteCallback = .text:0x80025AB8; // type:function size:0xD0 scope:local
EraseCallback = .text:0x80025B88; // type:function size:0xC8 scope:local
__CARDUpdateDir = .text:0x80025C50; // type:function size:0xC4
__CARDCheckSum = .text:0x80025D14; // type:function size:0x1B0
VerifyID = .text:0x80025EC4; // type:function size:0x284
VerifyDir = .text:0x80026148; // type:function size:0x240
VerifyFAT = .text:0x80026388; // type:function size:0x284
__CARDVerify = .text:0x8002660C; // type:function size:0x8C
CARDCheckExAsync = .text:0x80026698; // type:function size:0x590
CARDCheckAsync = .text:0x80026C28; // type:function size:0x28
CARDCheck = .text:0x80026C50; // type:function size:0x54
IsCard = .text:0x80026CA4; // type:function size:0xCC
CARDProbeEx = .text:0x80026D70; // type:function size:0x17C
DoMount = .text:0x80026EEC; // type:function size:0x410
__CARDMountCallback = .text:0x800272FC; // type:function size:0x138
CARDMountAsync = .text:0x80027434; // type:function size:0x1A0
CARDMount = .text:0x800275D4; // type:function size:0x48
DoUnmount = .text:0x8002761C; // type:function size:0x9C
CARDUnmount = .text:0x800276B8; // type:function size:0xAC
FormatCallback = .text:0x80027764; // type:function size:0x144
__CARDFormatRegionAsync = .text:0x800278A8; // type:function size:0x658
CARDFormatAsync = .text:0x80027F00; // type:function size:0x48
CARDFormat = .text:0x80027F48; // type:function size:0x54
__CARDCompareFileName = .text:0x80027F9C; // type:function size:0x68
__CARDAccess = .text:0x80028004; // type:function size:0x98
__CARDIsPublic = .text:0x8002809C; // type:function size:0x30
__CARDGetFileNo = .text:0x800280CC; // type:function size:0x150
CARDFastOpen = .text:0x8002821C; // type:function size:0x160
CARDOpen = .text:0x8002837C; // type:function size:0x178
CARDClose = .text:0x800284F4; // type:function size:0x54
__CARDIsOpened = .text:0x80028548; // type:function size:0x8
CreateCallbackFat = .text:0x80028550; // type:function size:0x130
CARDCreateAsync = .text:0x80028680; // type:function size:0x220
CARDCreate = .text:0x800288A0; // type:function size:0x48
__CARDSeek = .text:0x800288E8; // type:function size:0x1B8
ReadCallback = .text:0x80028AA0; // type:function size:0x130
CARDReadAsync = .text:0x80028BD0; // type:function size:0x148
CARDRead = .text:0x80028D18; // type:function size:0x48
WriteCallback = .text:0x80028D60; // type:function size:0x170 scope:local
EraseCallback = .text:0x80028ED0; // type:function size:0xB0 scope:local
CARDWriteAsync = .text:0x80028F80; // type:function size:0x114
DeleteCallback = .text:0x80029094; // type:function size:0xA4
CARDFastDeleteAsync = .text:0x80029138; // type:function size:0x12C
CARDDeleteAsync = .text:0x80029264; // type:function size:0x110
CARDDelete = .text:0x80029374; // type:function size:0x48
UpdateIconOffsets = .text:0x800293BC; // type:function size:0x1F8
CARDGetStatus = .text:0x800295B4; // type:function size:0x12C
CARDSetStatusAsync = .text:0x800296E0; // type:function size:0x174
CARDSetStatus = .text:0x80029854; // type:function size:0x48
__CARDGetStatusEx = .text:0x8002989C; // type:function size:0xBC
__CARDSetStatusExAsync = .text:0x80029958; // type:function size:0x254
CARDGetSerialNo = .text:0x80029BAC; // type:function size:0xC4
CARDSetAttributesAsync = .text:0x80029C70; // type:function size:0x78
DBInit = .text:0x80029CE8; // type:function size:0x28 scope:global
__DBExceptionDestinationAux = .text:0x80029D10; // type:function size:0x48
__DBExceptionDestination = .text:0x80029D58; // type:function size:0x10 scope:global
__DBIsExceptionMarked = .text:0x80029D68; // type:function size:0x1C scope:global
DBPrintf = .text:0x80029D84; // type:function size:0x50 scope:global
DSPCheckMailToDSP = .text:0x80029DD4; // type:function size:0x10
DSPCheckMailFromDSP = .text:0x80029DE4; // type:function size:0x10
DSPReadMailFromDSP = .text:0x80029DF4; // type:function size:0x18
DSPSendMailToDSP = .text:0x80029E0C; // type:function size:0x14
DSPInit = .text:0x80029E20; // type:function size:0xC4
DSPCheckInit = .text:0x80029EE4; // type:function size:0x8
DSPAddTask = .text:0x80029EEC; // type:function size:0x70
DSPAssertTask = .text:0x80029F5C; // type:function size:0xC8
__DSP_debug_printf = .text:0x8002A024; // type:function size:0x50
__DSPHandler = .text:0x8002A074; // type:function size:0x424
__DSP_exec_task = .text:0x8002A498; // type:function size:0x1A0
__DSP_boot_task = .text:0x8002A638; // type:function size:0x18C
__DSP_insert_task = .text:0x8002A7C4; // type:function size:0xA0
__DSP_remove_task = .text:0x8002A864; // type:function size:0x94
__DVDInitWA = .text:0x8002A8F8; // type:function size:0x40 scope:weak
__DVDInterruptHandler = .text:0x8002A938; // type:function size:0x2E0 scope:weak
AlarmHandler = .text:0x8002AC18; // type:function size:0x84
AlarmHandlerForTimeout = .text:0x8002AC9C; // type:function size:0x70 scope:local
Read = .text:0x8002AD0C; // type:function size:0x110
SeekTwiceBeforeRead = .text:0x8002AE1C; // type:function size:0x80
DVDLowRead = .text:0x8002AE9C; // type:function size:0x298
DVDLowSeek = .text:0x8002B134; // type:function size:0x94
DVDLowWaitCoverClose = .text:0x8002B1C8; // type:function size:0x2C scope:weak
DVDLowReadDiskID = .text:0x8002B1F4; // type:function size:0xA4
DVDLowStopMotor = .text:0x8002B298; // type:function size:0x8C scope:weak
DVDLowRequestError = .text:0x8002B324; // type:function size:0x8C
DVDLowInquiry = .text:0x8002B3B0; // type:function size:0x9C
DVDLowAudioStream = .text:0x8002B44C; // type:function size:0x98
DVDLowRequestAudioStatus = .text:0x8002B4E4; // type:function size:0x8C
DVDLowAudioBufferConfig = .text:0x8002B570; // type:function size:0x9C
DVDLowReset = .text:0x8002B60C; // type:function size:0xBC scope:global
DVDLowBreak = .text:0x8002B6C8; // type:function size:0x14
DVDLowClearCallback = .text:0x8002B6DC; // type:function size:0x18
__DVDLowSetWAType = .text:0x8002B6F4; // type:function size:0x44 scope:global
__DVDFSInit = .text:0x8002B738; // type:function size:0x38 scope:global
DVDConvertPathToEntrynum = .text:0x8002B770; // type:function size:0x2F4
DVDOpen = .text:0x8002BA64; // type:function size:0xC8
DVDClose = .text:0x8002BB2C; // type:function size:0x24
entryToPath = .text:0x8002BB50; // type:function size:0x160
DVDGetCurrentDir = .text:0x8002BCB0; // type:function size:0xC4
DVDReadAsyncPrio = .text:0x8002BD74; // type:function size:0xC0
cbForReadAsync = .text:0x8002BE34; // type:function size:0x30
DVDReadPrio = .text:0x8002BE64; // type:function size:0x118
cbForReadSync = .text:0x8002BF7C; // type:function size:0x24
DVDGetTransferredSize = .text:0x8002BFA0; // type:function size:0x6C
defaultOptionalCommandChecker = .text:0x8002C00C; // type:function size:0x4
DVDInit = .text:0x8002C010; // type:function size:0xCC scope:global
stateReadingFST = .text:0x8002C0DC; // type:function size:0x94
cbForStateReadingFST = .text:0x8002C170; // type:function size:0x8C
cbForStateError = .text:0x8002C1FC; // type:function size:0xAC scope:local
stateTimeout = .text:0x8002C2A8; // type:function size:0x34
stateGettingError = .text:0x8002C2DC; // type:function size:0x28
CategorizeError = .text:0x8002C304; // type:function size:0xB4
cbForStateGettingError = .text:0x8002C3B8; // type:function size:0x294
cbForUnrecoveredError = .text:0x8002C64C; // type:function size:0x68
cbForUnrecoveredErrorRetry = .text:0x8002C6B4; // type:function size:0x98
stateGoToRetry = .text:0x8002C74C; // type:function size:0x28
cbForStateGoToRetry = .text:0x8002C774; // type:function size:0x158
stateCheckID = .text:0x8002C8CC; // type:function size:0xE0
stateCheckID3 = .text:0x8002C9AC; // type:function size:0x34
stateCheckID2a = .text:0x8002C9E0; // type:function size:0x34
cbForStateCheckID2a = .text:0x8002CA14; // type:function size:0x74
stateCheckID2 = .text:0x8002CA88; // type:function size:0x38
cbForStateCheckID1 = .text:0x8002CAC0; // type:function size:0x114
cbForStateCheckID2 = .text:0x8002CBD4; // type:function size:0xE4
cbForStateCheckID3 = .text:0x8002CCB8; // type:function size:0xFC
AlarmHandler = .text:0x8002CDB4; // type:function size:0x44 scope:local
stateCoverClosed = .text:0x8002CDF8; // type:function size:0xCC
stateCoverClosed_CMD = .text:0x8002CEC4; // type:function size:0x30
cbForStateCoverClosed = .text:0x8002CEF4; // type:function size:0x70
stateMotorStopped = .text:0x8002CF64; // type:function size:0x28
cbForStateMotorStopped = .text:0x8002CF8C; // type:function size:0xE4 scope:local
stateReady = .text:0x8002D070; // type:function size:0x230 scope:local
stateBusy = .text:0x8002D2A0; // type:function size:0x320 scope:local
cbForStateBusy = .text:0x8002D5C0; // type:function size:0x638
DVDReadAbsAsyncPrio = .text:0x8002DBF8; // type:function size:0xDC
DVDReadAbsAsyncForBS = .text:0x8002DCD4; // type:function size:0xD0
DVDReadDiskID = .text:0x8002DDA4; // type:function size:0xD4 scope:global
DVDCancelStreamAsync = .text:0x8002DE78; // type:function size:0xBC
DVDInquiryAsync = .text:0x8002DF34; // type:function size:0xD0 scope:global
DVDReset = .text:0x8002E004; // type:function size:0x44 scope:global
DVDGetCommandBlockStatus = .text:0x8002E048; // type:function size:0x4C
DVDGetDriveStatus = .text:0x8002E094; // type:function size:0xAC scope:global
DVDSetAutoInvalidation = .text:0x8002E140; // type:function size:0x10
DVDResume = .text:0x8002E150; // type:function size:0x50
DVDCancelAsync = .text:0x8002E1A0; // type:function size:0x27C
DVDCancel = .text:0x8002E41C; // type:function size:0xAC
cbForCancelSync = .text:0x8002E4C8; // type:function size:0x24
DVDGetCurrentDiskID = .text:0x8002E4EC; // type:function size:0x8
DVDCheckDisk = .text:0x8002E4F4; // type:function size:0xF8
__DVDPrepareResetAsync = .text:0x8002E5EC; // type:function size:0x11C
__DVDClearWaitingQueue = .text:0x8002E708; // type:function size:0x38 scope:global
__DVDPushWaitingQueue = .text:0x8002E740; // type:function size:0x68 scope:global
__DVDPopWaitingQueue = .text:0x8002E7A8; // type:function size:0xA0 scope:global
__DVDCheckWaitingQueue = .text:0x8002E848; // type:function size:0x58 scope:global
__DVDDequeueWaitingQueue = .text:0x8002E8A0; // type:function size:0x60
ErrorCode2Num = .text:0x8002E900; // type:function size:0x11C scope:local
__DVDStoreErrorCode = .text:0x8002EA1C; // type:function size:0x7C scope:global
DVDCompareDiskID = .text:0x8002EA98; // type:function size:0xF8
__DVDPrintFatalMessage = .text:0x8002EB90; // type:function size:0x30
cb = .text:0x8002EBC0; // type:function size:0xD8 scope:local
__fstLoad = .text:0x8002EC98; // type:function size:0x168 scope:global
SetExiInterruptMask = .text:0x8002EE00; // type:function size:0xF4 scope:local
EXIImm = .text:0x8002EEF4; // type:function size:0x25C scope:global
fn_8002F150 = .text:0x8002F150; // type:function size:0xA0
EXIDma = .text:0x8002F1F0; // type:function size:0xEC scope:global
EXISync = .text:0x8002F2DC; // type:function size:0x24C scope:global
EXIClearInterrupts = .text:0x8002F528; // type:function size:0x48 scope:global
fn_8002F570 = .text:0x8002F570; // type:function size:0x7C
__EXIProbe = .text:0x8002F5EC; // type:function size:0x174 scope:local
fn_8002F760 = .text:0x8002F760; // type:function size:0x80
fn_8002F7E0 = .text:0x8002F7E0; // type:function size:0xB4
fn_8002F894 = .text:0x8002F894; // type:function size:0x10C
fn_8002F9A0 = .text:0x8002F9A0; // type:function size:0xBC
EXISelect = .text:0x8002FA5C; // type:function size:0x12C scope:global
EXIDeselect = .text:0x8002FB88; // type:function size:0x110 scope:global
EXIIntrruptHandler = .text:0x8002FC98; // type:function size:0xC8 scope:local
TCIntrruptHandler = .text:0x8002FD60; // type:function size:0x218 scope:local
EXTIntrruptHandler = .text:0x8002FF78; // type:function size:0xD0 scope:local
EXIInit = .text:0x80030048; // type:function size:0x1D4 scope:global
EXILock = .text:0x8003021C; // type:function size:0xF4 scope:global
EXIUnlock = .text:0x80030310; // type:function size:0xDC scope:global
fn_800303EC = .text:0x800303EC; // type:function size:0x18
UnlockedHandler = .text:0x80030404; // type:function size:0x28 scope:local
EXIGetID = .text:0x8003042C; // type:function size:0x3B0 scope:global
fn_800307DC = .text:0x800307DC; // type:function size:0x18C
__OSEnableBarnacle = .text:0x80030968; // type:function size:0x1BC scope:global
fn_80030B24 = .text:0x80030B24; // type:function size:0x70
fn_80030B94 = .text:0x80030B94; // type:function size:0x21C
fn_80030DB0 = .text:0x80030DB0; // type:function size:0x7C
fn_80030E2C = .text:0x80030E2C; // type:function size:0x24
fn_80030E50 = .text:0x80030E50; // type:function size:0x190
GXInit = .text:0x80030FE0; // type:function size:0x890 scope:global
__GXInitGX = .text:0x80031870; // type:function size:0x8C4 scope:global
fn_80032134 = .text:0x80032134; // type:function size:0x134
GXInitFifoBase = .text:0x80032268; // type:function size:0x6C scope:global
fn_800322D4 = .text:0x800322D4; // type:function size:0x70
fn_80032344 = .text:0x80032344; // type:function size:0xC
GXSetCPUFifo = .text:0x80032350; // type:function size:0x110 scope:global
GXSetGPFifo = .text:0x80032460; // type:function size:0x178 scope:global
fn_800325D8 = .text:0x800325D8; // type:function size:0x44
__GXFifoInit = .text:0x8003261C; // type:function size:0x4C scope:global
fn_80032668 = .text:0x80032668; // type:function size:0x24
fn_8003268C = .text:0x8003268C; // type:function size:0x20
fn_800326AC = .text:0x800326AC; // type:function size:0x3C
fn_800326E8 = .text:0x800326E8; // type:function size:0x3C
fn_80032724 = .text:0x80032724; // type:function size:0x3C
fn_80032760 = .text:0x80032760; // type:function size:0x8
fn_80032768 = .text:0x80032768; // type:function size:0x158
fn_800328C0 = .text:0x800328C0; // type:function size:0x350
fn_80032C10 = .text:0x80032C10; // type:function size:0x54
fn_80032C64 = .text:0x80032C64; // type:function size:0x124
fn_80032D88 = .text:0x80032D88; // type:function size:0x38
fn_80032DC0 = .text:0x80032DC0; // type:function size:0x358
fn_80033118 = .text:0x80033118; // type:function size:0x378
fn_80033490 = .text:0x80033490; // type:function size:0x9C
fn_8003352C = .text:0x8003352C; // type:function size:0x8C
fn_800335B8 = .text:0x800335B8; // type:function size:0x10
fn_800335C8 = .text:0x800335C8; // type:function size:0x2D0
fn_80033898 = .text:0x80033898; // type:function size:0x40
GXSetMisc = .text:0x800338D8; // type:function size:0x94 scope:global
fn_8003396C = .text:0x8003396C; // type:function size:0x5C
fn_800339C8 = .text:0x800339C8; // type:function size:0x16C
fn_80033B34 = .text:0x80033B34; // type:function size:0x80
fn_80033BB4 = .text:0x80033BB4; // type:function size:0x14
fn_80033BC8 = .text:0x80033BC8; // type:function size:0x14
fn_80033BDC = .text:0x80033BDC; // type:function size:0x1C
fn_80033BF8 = .text:0x80033BF8; // type:function size:0x88
fn_80033C80 = .text:0x80033C80; // type:function size:0x1C
fn_80033C9C = .text:0x80033C9C; // type:function size:0x14
fn_80033CB0 = .text:0x80033CB0; // type:function size:0x1C
fn_80033CCC = .text:0x80033CCC; // type:function size:0x28
fn_80033CF4 = .text:0x80033CF4; // type:function size:0x44
fn_80033D38 = .text:0x80033D38; // type:function size:0x88
fn_80033DC0 = .text:0x80033DC0; // type:function size:0x44
fn_80033E04 = .text:0x80033E04; // type:function size:0x84
__GXPEInit = .text:0x80033E88; // type:function size:0x80 scope:global
fn_80033F08 = .text:0x80033F08; // type:function size:0xA0
fn_80033FA8 = .text:0x80033FA8; // type:function size:0xF0
fn_80034098 = .text:0x80034098; // type:function size:0x88
fn_80034120 = .text:0x80034120; // type:function size:0x48
fn_80034168 = .text:0x80034168; // type:function size:0x48
fn_800341B0 = .text:0x800341B0; // type:function size:0x5C
fn_8003420C = .text:0x8003420C; // type:function size:0x4C
fn_80034258 = .text:0x80034258; // type:function size:0x44
fn_8003429C = .text:0x8003429C; // type:function size:0x3C
fn_800342D8 = .text:0x800342D8; // type:function size:0x24
fn_800342FC = .text:0x800342FC; // type:function size:0x120
fn_8003441C = .text:0x8003441C; // type:function size:0x90
fn_800344AC = .text:0x800344AC; // type:function size:0x90
fn_8003453C = .text:0x8003453C; // type:function size:0x3C
fn_80034578 = .text:0x80034578; // type:function size:0x154
fn_800346CC = .text:0x800346CC; // type:function size:0x28
fn_800346F4 = .text:0x800346F4; // type:function size:0x68
fn_8003475C = .text:0x8003475C; // type:function size:0xC8
fn_80034824 = .text:0x80034824; // type:function size:0x68
fn_8003488C = .text:0x8003488C; // type:function size:0x228
fn_80034AB4 = .text:0x80034AB4; // type:function size:0x1C
fn_80034AD0 = .text:0x80034AD0; // type:function size:0x15C
fn_80034C2C = .text:0x80034C2C; // type:function size:0x17C
fn_80034DA8 = .text:0x80034DA8; // type:function size:0x38
fn_80034DE0 = .text:0x80034DE0; // type:function size:0x10
fn_80034DF0 = .text:0x80034DF0; // type:function size:0xC
fn_80034DFC = .text:0x80034DFC; // type:function size:0x7C
fn_80034E78 = .text:0x80034E78; // type:function size:0xF4
fn_80034F6C = .text:0x80034F6C; // type:function size:0xF4
fn_80035060 = .text:0x80035060; // type:function size:0x44
fn_800350A4 = .text:0x800350A4; // type:function size:0xCC
fn_80035170 = .text:0x80035170; // type:function size:0x15C
fn_800352CC = .text:0x800352CC; // type:function size:0xC8
fn_80035394 = .text:0x80035394; // type:function size:0x274
fn_80035608 = .text:0x80035608; // type:function size:0x48
fn_80035650 = .text:0x80035650; // type:function size:0x194
fn_800357E4 = .text:0x800357E4; // type:function size:0x8
fn_800357EC = .text:0x800357EC; // type:function size:0x198
fn_80035984 = .text:0x80035984; // type:function size:0x54
fn_800359D8 = .text:0x800359D8; // type:function size:0x48
fn_80035A20 = .text:0x80035A20; // type:function size:0x9C
GXInitTexCacheRegion = .text:0x80035ABC; // type:function size:0x120 scope:global
GXInitTlutRegion = .text:0x80035BDC; // type:function size:0x48 scope:global
fn_80035C24 = .text:0x80035C24; // type:function size:0x48
fn_80035C6C = .text:0x80035C6C; // type:function size:0x14
fn_80035C80 = .text:0x80035C80; // type:function size:0x14
fn_80035C94 = .text:0x80035C94; // type:function size:0xB8
fn_80035D4C = .text:0x80035D4C; // type:function size:0x17C
__GXSetTmemConfig = .text:0x80035EC8; // type:function size:0x240 scope:global
fn_80036108 = .text:0x80036108; // type:function size:0x9C
fn_800361A4 = .text:0x800361A4; // type:function size:0x160
fn_80036304 = .text:0x80036304; // type:function size:0x17C
fn_80036480 = .text:0x80036480; // type:function size:0x114
fn_80036594 = .text:0x80036594; // type:function size:0x28
fn_800365BC = .text:0x800365BC; // type:function size:0x48
fn_80036604 = .text:0x80036604; // type:function size:0x64
fn_80036668 = .text:0x80036668; // type:function size:0xCC
__GXFlushTextureState = .text:0x80036734; // type:function size:0x24 scope:global
fn_80036758 = .text:0x80036758; // type:function size:0x8C
fn_800367E4 = .text:0x800367E4; // type:function size:0x44
fn_80036828 = .text:0x80036828; // type:function size:0x44
fn_8003686C = .text:0x8003686C; // type:function size:0x68
fn_800368D4 = .text:0x800368D4; // type:function size:0x68
fn_8003693C = .text:0x8003693C; // type:function size:0x6C
fn_800369A8 = .text:0x800369A8; // type:function size:0x6C
fn_80036A14 = .text:0x80036A14; // type:function size:0x54
fn_80036A68 = .text:0x80036A68; // type:function size:0x98
fn_80036B00 = .text:0x80036B00; // type:function size:0x54
fn_80036B54 = .text:0x80036B54; // type:function size:0x84
fn_80036BD8 = .text:0x80036BD8; // type:function size:0x1D8
fn_80036DB0 = .text:0x80036DB0; // type:function size:0x30
fn_80036DE0 = .text:0x80036DE0; // type:function size:0x21C
fn_80036FFC = .text:0x80036FFC; // type:function size:0x100
fn_800370FC = .text:0x800370FC; // type:function size:0x54
fn_80037150 = .text:0x80037150; // type:function size:0x2C
fn_8003717C = .text:0x8003717C; // type:function size:0x2C
fn_800371A8 = .text:0x800371A8; // type:function size:0x34
fn_800371DC = .text:0x800371DC; // type:function size:0x38
fn_80037214 = .text:0x80037214; // type:function size:0xE8
fn_800372FC = .text:0x800372FC; // type:function size:0x2C
fn_80037328 = .text:0x80037328; // type:function size:0x3C
fn_80037364 = .text:0x80037364; // type:function size:0x38
fn_8003739C = .text:0x8003739C; // type:function size:0x7C
fn_80037418 = .text:0x80037418; // type:function size:0x4
fn_8003741C = .text:0x8003741C; // type:function size:0x174
fn_80037590 = .text:0x80037590; // type:function size:0xB4
fn_80037644 = .text:0x80037644; // type:function size:0xC0
fn_80037704 = .text:0x80037704; // type:function size:0x60
fn_80037764 = .text:0x80037764; // type:function size:0x50
fn_800377B4 = .text:0x800377B4; // type:function size:0x50
fn_80037804 = .text:0x80037804; // type:function size:0x38
fn_8003783C = .text:0x8003783C; // type:function size:0xB4
fn_800378F0 = .text:0x800378F0; // type:function size:0x104
fn_800379F4 = .text:0x800379F4; // type:function size:0x24
fn_80037A18 = .text:0x80037A18; // type:function size:0x38
fn_80037A50 = .text:0x80037A50; // type:function size:0x90
fn_80037AE0 = .text:0x80037AE0; // type:function size:0x40
fn_80037B20 = .text:0x80037B20; // type:function size:0x28
fn_80037B48 = .text:0x80037B48; // type:function size:0x84
fn_80037BCC = .text:0x80037BCC; // type:function size:0x848
fn_80038414 = .text:0x80038414; // type:function size:0x10
fn_80038424 = .text:0x80038424; // type:function size:0xBC
fn_800384E0 = .text:0x800384E0; // type:function size:0xC8
fn_800385A8 = .text:0x800385A8; // type:function size:0x8
fn_800385B0 = .text:0x800385B0; // type:function size:0xE7C
fn_8003942C = .text:0x8003942C; // type:function size:0x20
fn_8003944C = .text:0x8003944C; // type:function size:0x28
fn_80039474 = .text:0x80039474; // type:function size:0x6C
fn_800394E0 = .text:0x800394E0; // type:function size:0x28
fn_80039508 = .text:0x80039508; // type:function size:0x107C
fn_8003A584 = .text:0x8003A584; // type:function size:0x2C
fn_8003A5B0 = .text:0x8003A5B0; // type:function size:0x34
fn_8003A5E4 = .text:0x8003A5E4; // type:function size:0xCC
fn_8003A6B0 = .text:0x8003A6B0; // type:function size:0x50
fn_8003A700 = .text:0x8003A700; // type:function size:0xF8
fn_8003A7F8 = .text:0x8003A7F8; // type:function size:0x70
fn_8003A868 = .text:0x8003A868; // type:function size:0xB0
fn_8003A918 = .text:0x8003A918; // type:function size:0xB0
fn_8003A9C8 = .text:0x8003A9C8; // type:function size:0x70
fn_8003AA38 = .text:0x8003AA38; // type:function size:0x34
fn_8003AA6C = .text:0x8003AA6C; // type:function size:0x28
fn_8003AA94 = .text:0x8003AA94; // type:function size:0xA4
fn_8003AB38 = .text:0x8003AB38; // type:function size:0x18C
fn_8003ACC4 = .text:0x8003ACC4; // type:function size:0xCC
fn_8003AD90 = .text:0x8003AD90; // type:function size:0x54
fn_8003ADE4 = .text:0x8003ADE4; // type:function size:0x8C
fn_8003AE70 = .text:0x8003AE70; // type:function size:0x54
fn_8003AEC4 = .text:0x8003AEC4; // type:function size:0xD0
fn_8003AF94 = .text:0x8003AF94; // type:function size:0x98
fn_8003B02C = .text:0x8003B02C; // type:function size:0x44
fn_8003B070 = .text:0x8003B070; // type:function size:0x3C
fn_8003B0AC = .text:0x8003B0AC; // type:function size:0x54
Hu_IsStub = .text:0x8003B100; // type:function size:0x8 scope:weak
__OSFPRInit = .text:0x8003B108; // type:function size:0x128 scope:global
fn_8003B230 = .text:0x8003B230; // type:function size:0x28
ClearArena = .text:0x8003B258; // type:function size:0x128 scope:local
InquiryCallback = .text:0x8003B380; // type:function size:0x3C scope:local
OSInit = .text:0x8003B3BC; // type:function size:0x3D8 scope:global
OSExceptionInit = .text:0x8003B794; // type:function size:0x280 scope:local
__OSDBINTSTART = .text:0x8003BA14; // type:label scope:global
__OSDBIntegrator = .text:0x8003BA14; // type:function size:0x24 scope:local
__OSDBINTEND = .text:0x8003BA38; // type:label scope:global
fn_8003BA38 = .text:0x8003BA38; // type:function size:0x4
__OSDBJUMPEND = .text:0x8003BA3C; // type:label scope:global
__OSSetExceptionHandler = .text:0x8003BA3C; // type:function size:0x1C scope:global
__OSGetExceptionHandler = .text:0x8003BA58; // type:function size:0x14 scope:global
__OSEVStart = .text:0x8003BA6C; // type:label scope:global
OSExceptionVector = .text:0x8003BA6C; // type:function size:0x9C scope:local
__DBVECTOR = .text:0x8003BAC4; // type:label scope:global data:4byte
__OSEVSetNumber = .text:0x8003BAD4; // type:label scope:global data:4byte
__OSEVEnd = .text:0x8003BB04; // type:label scope:global
OSDefaultExceptionHandler = .text:0x8003BB08; // type:function size:0x58 scope:global
__OSPSInit = .text:0x8003BB60; // type:function size:0x54 scope:global
fn_8003BBB4 = .text:0x8003BBB4; // type:function size:0x14
OSRegisterVersion = .text:0x8003BBC8; // type:function size:0x2C scope:global
OSInitAlarm = .text:0x8003BBF4; // type:function size:0x4C scope:global
OSCreateAlarm = .text:0x8003BC40; // type:function size:0x10 scope:global
InsertAlarm = .text:0x8003BC50; // type:function size:0x250 scope:local
OSSetAlarm = .text:0x8003BEA0; // type:function size:0x68 scope:global
fn_8003BF08 = .text:0x8003BF08; // type:function size:0x7C
fn_8003BF84 = .text:0x8003BF84; // type:function size:0x11C
DecrementerExceptionCallback = .text:0x8003C0A0; // type:function size:0x230 scope:local
DecrementerExceptionHandler = .text:0x8003C2D0; // type:function size:0x50 scope:local
fn_8003C320 = .text:0x8003C320; // type:function size:0xAC
fn_8003C3CC = .text:0x8003C3CC; // type:function size:0xFC
fn_8003C4C8 = .text:0x8003C4C8; // type:function size:0x7C
fn_8003C544 = .text:0x8003C544; // type:function size:0x10
fn_8003C554 = .text:0x8003C554; // type:function size:0x70
fn_8003C5C4 = .text:0x8003C5C4; // type:function size:0x6C
fn_8003C630 = .text:0x8003C630; // type:function size:0x360
OSGetArenaHi = .text:0x8003C990; // type:function size:0x8 scope:global
OSGetArenaLo = .text:0x8003C998; // type:function size:0x8 scope:global
OSSetArenaHi = .text:0x8003C9A0; // type:function size:0x8 scope:global
OSSetArenaLo = .text:0x8003C9A8; // type:function size:0x8 scope:global
fn_8003C9B0 = .text:0x8003C9B0; // type:function size:0x2C
fn_8003C9DC = .text:0x8003C9DC; // type:function size:0x20
__OSInitAudioSystem = .text:0x8003C9FC; // type:function size:0x1BC scope:global
__OSStopAudioSystem = .text:0x8003CBB8; // type:function size:0xD8 scope:global
DCEnable = .text:0x8003CC90; // type:function size:0x14 scope:global
DCInvalidateRange = .text:0x8003CCA4; // type:function size:0x2C scope:global
DCFlushRange = .text:0x8003CCD0; // type:function size:0x30 scope:global
fn_8003CD00 = .text:0x8003CD00; // type:function size:0x30
DCFlushRangeNoSync = .text:0x8003CD30; // type:function size:0x2C scope:global
fn_8003CD5C = .text:0x8003CD5C; // type:function size:0x2C
ICInvalidateRange = .text:0x8003CD88; // type:function size:0x34 scope:global
ICFlashInvalidate = .text:0x8003CDBC; // type:function size:0x10 scope:global
ICEnable = .text:0x8003CDCC; // type:function size:0x14 scope:global
fn_8003CDE0 = .text:0x8003CDE0; // type:function size:0xCC
fn_8003CEAC = .text:0x8003CEAC; // type:function size:0x38
LCDisable = .text:0x8003CEE4; // type:function size:0x28 scope:global
L2GlobalInvalidate = .text:0x8003CF0C; // type:function size:0x98 scope:global
DMAErrorHandler = .text:0x8003CFA4; // type:function size:0x160 scope:global
__OSCacheInit = .text:0x8003D104; // type:function size:0xF4 scope:global
__OSLoadFPUContext = .text:0x8003D1F8; // type:function size:0x124 scope:local
__OSSaveFPUContext = .text:0x8003D31C; // type:function size:0x128 scope:local
OSSaveFPUContext = .text:0x8003D444; // type:function size:0x8 scope:global
OSSetCurrentContext = .text:0x8003D44C; // type:function size:0x5C scope:global
fn_8003D4A8 = .text:0x8003D4A8; // type:function size:0xC
fn_8003D4B4 = .text:0x8003D4B4; // type:function size:0x80
OSLoadContext = .text:0x8003D534; // type:function size:0xD8 scope:global
fn_8003D60C = .text:0x8003D60C; // type:function size:0x8
OSClearContext = .text:0x8003D614; // type:function size:0x24 scope:global
fn_8003D638 = .text:0x8003D638; // type:function size:0xBC
OSDumpContext = .text:0x8003D6F4; // type:function size:0x2A8 scope:global
OSSwitchFPUContext = .text:0x8003D99C; // type:function size:0x84 scope:local
__OSContextInit = .text:0x8003DA20; // type:function size:0x48 scope:global
OSReport = .text:0x8003DA68; // type:function size:0x80 scope:global
fn_8003DAE8 = .text:0x8003DAE8; // type:function size:0x12C
OSSetErrorHandler = .text:0x8003DC14; // type:function size:0x218 scope:global
__OSUnhandledException = .text:0x8003DE2C; // type:function size:0x2E8 scope:global
fn_8003E114 = .text:0x8003E114; // type:function size:0x19C
fn_8003E2B0 = .text:0x8003E2B0; // type:function size:0x174
fn_8003E424 = .text:0x8003E424; // type:function size:0x58
fn_8003E47C = .text:0x8003E47C; // type:function size:0x8C
fn_8003E508 = .text:0x8003E508; // type:function size:0x334
fn_8003E83C = .text:0x8003E83C; // type:function size:0x3B0
fn_8003EBEC = .text:0x8003EBEC; // type:function size:0xE0
fn_8003ECCC = .text:0x8003ECCC; // type:function size:0x1A8
OSDisableInterrupts = .text:0x8003EE74; // type:function size:0x14 scope:global
OSEnableInterrupts = .text:0x8003EE88; // type:function size:0x14 scope:global
OSRestoreInterrupts = .text:0x8003EE9C; // type:function size:0x24 scope:global
__OSSetInterruptHandler = .text:0x8003EEC0; // type:function size:0x1C scope:global
fn_8003EEDC = .text:0x8003EEDC; // type:function size:0x14
__OSInterruptInit = .text:0x8003EEF0; // type:function size:0x74 scope:global
fn_8003EF64 = .text:0x8003EF64; // type:function size:0x2D8
__OSMaskInterrupts = .text:0x8003F23C; // type:function size:0x88 scope:global
__OSUnmaskInterrupts = .text:0x8003F2C4; // type:function size:0x88 scope:global
fn_8003F34C = .text:0x8003F34C; // type:function size:0x344
ExternalInterruptHandler = .text:0x8003F690; // type:function size:0x50 scope:local
fn_8003F6E0 = .text:0x8003F6E0; // type:function size:0x4
fn_8003F6E4 = .text:0x8003F6E4; // type:function size:0x4
fn_8003F6E8 = .text:0x8003F6E8; // type:function size:0xC
fn_8003F6F4 = .text:0x8003F6F4; // type:function size:0x2BC
fn_8003F9B0 = .text:0x8003F9B0; // type:function size:0x2E0
fn_8003FC90 = .text:0x8003FC90; // type:function size:0x24
fn_8003FCB4 = .text:0x8003FCB4; // type:function size:0x3C
fn_8003FCF0 = .text:0x8003FCF0; // type:function size:0x238
fn_8003FF28 = .text:0x8003FF28; // type:function size:0x1D4
__OSModuleInit = .text:0x800400FC; // type:function size:0x18 scope:global
fn_80040114 = .text:0x80040114; // type:function size:0x3C
MEMIntrruptHandler = .text:0x80040150; // type:function size:0x6C scope:local
Config24MB = .text:0x800401BC; // type:function size:0x80 scope:local
Config48MB = .text:0x8004023C; // type:function size:0x80 scope:local
RealMode = .text:0x800402BC; // type:function size:0x18 scope:local
__OSInitMemoryProtection = .text:0x800402D4; // type:function size:0x118 scope:global
fn_800403EC = .text:0x800403EC; // type:function size:0x70
fn_8004045C = .text:0x8004045C; // type:function size:0x10
fn_8004046C = .text:0x8004046C; // type:function size:0xC
__OSReboot = .text:0x80040478; // type:function size:0x340 scope:global
OSRegisterResetFunction = .text:0x800407B8; // type:function size:0x84 scope:global
Reset = .text:0x8004083C; // type:function size:0x70 scope:local
fn_800408AC = .text:0x800408AC; // type:function size:0x48
OSResetSystem = .text:0x800408F4; // type:function size:0x288 scope:global
OSGetResetCode = .text:0x80040B7C; // type:function size:0x30 scope:global
__OSResetSWInterruptHandler = .text:0x80040BAC; // type:function size:0xF4 scope:global
fn_80040CA0 = .text:0x80040CA0; // type:function size:0x298
fn_80040F38 = .text:0x80040F38; // type:function size:0x60
fn_80040F98 = .text:0x80040F98; // type:function size:0x118
__OSInitSram = .text:0x800410B0; // type:function size:0x134 scope:global
__OSLockSram = .text:0x800411E4; // type:function size:0x5C scope:global
__OSLockSramEx = .text:0x80041240; // type:function size:0x5C scope:global
fn_8004129C = .text:0x8004129C; // type:function size:0x308
__OSUnlockSram = .text:0x800415A4; // type:function size:0x24 scope:global
__OSUnlockSramEx = .text:0x800415C8; // type:function size:0x24 scope:global
__OSSyncSram = .text:0x800415EC; // type:function size:0x10 scope:global
fn_800415FC = .text:0x800415FC; // type:function size:0x124
fn_80041720 = .text:0x80041720; // type:function size:0x80
fn_800417A0 = .text:0x800417A0; // type:function size:0xA4
fn_80041844 = .text:0x80041844; // type:function size:0x6C
fn_800418B0 = .text:0x800418B0; // type:function size:0x70
fn_80041920 = .text:0x80041920; // type:function size:0xA4
fn_800419C4 = .text:0x800419C4; // type:function size:0x84
fn_80041A48 = .text:0x80041A48; // type:function size:0xAC
__OSSystemCallVectorStart = .text:0x80041AF4; // type:label scope:global
fn_80041AF4 = .text:0x80041AF4; // type:function size:0x20
__OSSystemCallVectorEnd = .text:0x80041B10; // type:label scope:global
__OSInitSystemCall = .text:0x80041B14; // type:function size:0x64 scope:global
fn_80041B78 = .text:0x80041B78; // type:function size:0x4
__OSThreadInit = .text:0x80041B7C; // type:function size:0x158 scope:global
OSInitThreadQueue = .text:0x80041CD4; // type:function size:0x10 scope:global
fn_80041CE4 = .text:0x80041CE4; // type:function size:0xC
OSDisableScheduler = .text:0x80041CF0; // type:function size:0x40 scope:global
OSEnableScheduler = .text:0x80041D30; // type:function size:0x40 scope:global
fn_80041D70 = .text:0x80041D70; // type:function size:0x68
fn_80041DD8 = .text:0x80041DD8; // type:function size:0x3C
fn_80041E14 = .text:0x80041E14; // type:function size:0x1C0
SelectThread = .text:0x80041FD4; // type:function size:0x228 scope:local
__OSReschedule = .text:0x800421FC; // type:function size:0x30 scope:global
fn_8004222C = .text:0x8004222C; // type:function size:0x1E8
fn_80042414 = .text:0x80042414; // type:function size:0xE4
OSCancelThread = .text:0x800424F8; // type:function size:0x1BC scope:global
fn_800426B4 = .text:0x800426B4; // type:function size:0x288
fn_8004293C = .text:0x8004293C; // type:function size:0x170
fn_80042AAC = .text:0x80042AAC; // type:function size:0xEC
fn_80042B98 = .text:0x80042B98; // type:function size:0x104
fn_80042C9C = .text:0x80042C9C; // type:function size:0xC0
fn_80042D5C = .text:0x80042D5C; // type:function size:0x8
OSClearStack = .text:0x80042D64; // type:function size:0xAC scope:global
OSGetTime = .text:0x80042E10; // type:function size:0x18 scope:global
OSGetTick = .text:0x80042E28; // type:function size:0x8 scope:global
__OSGetSystemTime = .text:0x80042E30; // type:function size:0x64 scope:global
fn_80042E94 = .text:0x80042E94; // type:function size:0x58
InitMetroTRK_BBA = .text:0x80042EEC; // type:function size:0x4 scope:weak
__init_user = .text:0x80042EF0; // type:function size:0x20 scope:global
__init_cpp = .text:0x80042F10; // type:function size:0x54 scope:local
_ExitProcess = .text:0x80042F64; // type:function size:0x20 scope:global
fn_80042F84 = .text:0x80042F84; // type:function size:0x1A4
fn_80043128 = .text:0x80043128; // type:function size:0xC4
fn_800431EC = .text:0x800431EC; // type:function size:0xC0
fn_800432AC = .text:0x800432AC; // type:function size:0xD8
fn_80043384 = .text:0x80043384; // type:function size:0x32C
fn_800436B0 = .text:0x800436B0; // type:function size:0x134
fn_800437E4 = .text:0x800437E4; // type:function size:0x100
fn_800438E4 = .text:0x800438E4; // type:function size:0x104
fn_800439E8 = .text:0x800439E8; // type:function size:0x218
fn_80043C00 = .text:0x80043C00; // type:function size:0x3AC
fn_80043FAC = .text:0x80043FAC; // type:function size:0xA4
fn_80044050 = .text:0x80044050; // type:function size:0x60
fn_800440B0 = .text:0x800440B0; // type:function size:0x174
fn_80044224 = .text:0x80044224; // type:function size:0x174
fn_80044398 = .text:0x80044398; // type:function size:0x3F8
fn_80044790 = .text:0x80044790; // type:function size:0x194
fn_80044924 = .text:0x80044924; // type:function size:0x60
fn_80044984 = .text:0x80044984; // type:function size:0x54
__PADDisableRecalibration = .text:0x800449D8; // type:function size:0x7C scope:global
fn_80044A54 = .text:0x80044A54; // type:function size:0x20
fn_80044A74 = .text:0x80044A74; // type:function size:0x3C
fn_80044AB0 = .text:0x80044AB0; // type:function size:0x2FC
SIInterruptHandler = .text:0x80044DAC; // type:function size:0x344 scope:local
fn_800450F0 = .text:0x800450F0; // type:function size:0x98
fn_80045188 = .text:0x80045188; // type:function size:0xCC
fn_80045254 = .text:0x80045254; // type:function size:0xF4
SIInit = .text:0x80045348; // type:function size:0xB4 scope:global
fn_800453FC = .text:0x800453FC; // type:function size:0x20C
fn_80045608 = .text:0x80045608; // type:function size:0x7C
fn_80045684 = .text:0x80045684; // type:function size:0x14
fn_80045698 = .text:0x80045698; // type:function size:0x10
SISetXY = .text:0x800456A8; // type:function size:0x6C scope:global
fn_80045714 = .text:0x80045714; // type:function size:0x9C
fn_800457B0 = .text:0x800457B0; // type:function size:0x6C
fn_8004581C = .text:0x8004581C; // type:function size:0xD4
fn_800458F0 = .text:0x800458F0; // type:function size:0xC4
fn_800459B4 = .text:0x800459B4; // type:function size:0x8C
SITransfer = .text:0x80045A40; // type:function size:0x16C scope:global
GetTypeCallback = .text:0x80045BAC; // type:function size:0x298 scope:local
SIGetType = .text:0x80045E44; // type:function size:0x1C4 scope:global
fn_80046008 = .text:0x80046008; // type:function size:0x13C
fn_80046144 = .text:0x80046144; // type:function size:0x14C
fn_80046290 = .text:0x80046290; // type:function size:0x24
SISetSamplingRate = .text:0x800462B4; // type:function size:0xE4 scope:global
fn_80046398 = .text:0x80046398; // type:function size:0x24
fn_800463BC = .text:0x800463BC; // type:function size:0x230
fn_800465EC = .text:0x800465EC; // type:function size:0x44
fn_80046630 = .text:0x80046630; // type:function size:0xA0
fn_800466D0 = .text:0x800466D0; // type:function size:0x200
fn_800468D0 = .text:0x800468D0; // type:function size:0x4B0
fn_80046D80 = .text:0x80046D80; // type:function size:0x54
fn_80046DD4 = .text:0x80046DD4; // type:function size:0x2D4
fn_800470A8 = .text:0x800470A8; // type:function size:0x1A0
fn_80047248 = .text:0x80047248; // type:function size:0x828
fn_80047A70 = .text:0x80047A70; // type:function size:0x130
fn_80047BA0 = .text:0x80047BA0; // type:function size:0x6C
fn_80047C0C = .text:0x80047C0C; // type:function size:0x7C
fn_80047C88 = .text:0x80047C88; // type:function size:0x8
fn_80047C90 = .text:0x80047C90; // type:function size:0x68
fn_80047CF8 = .text:0x80047CF8; // type:function size:0x98
VIGetTvFormat = .text:0x80047D90; // type:function size:0x68 scope:global
fn_80047DF8 = .text:0x80047DF8; // type:function size:0x54
fn_80047E4C = .text:0x80047E4C; // type:function size:0x24
fn_80047E70 = .text:0x80047E70; // type:function size:0x3C
fn_80047EAC = .text:0x80047EAC; // type:function size:0x1C
fn_80047EC8 = .text:0x80047EC8; // type:function size:0x1C
fn_80047EE4 = .text:0x80047EE4; // type:function size:0x28
fn_80047F0C = .text:0x80047F0C; // type:function size:0x40
fn_80047F4C = .text:0x80047F4C; // type:function size:0x78
fn_80047FC4 = .text:0x80047FC4; // type:function size:0x24
fn_80047FE8 = .text:0x80047FE8; // type:function size:0x20
fn_80048008 = .text:0x80048008; // type:function size:0x68
fn_80048070 = .text:0x80048070; // type:function size:0x68
fn_800480D8 = .text:0x800480D8; // type:function size:0x68
fn_80048140 = .text:0x80048140; // type:function size:0x2C
fn_8004816C = .text:0x8004816C; // type:function size:0x30
fn_8004819C = .text:0x8004819C; // type:function size:0x30
fn_800481CC = .text:0x800481CC; // type:function size:0x78
fn_80048244 = .text:0x80048244; // type:function size:0x70
fn_800482B4 = .text:0x800482B4; // type:function size:0xAC
fn_80048360 = .text:0x80048360; // type:function size:0xAC
fn_8004840C = .text:0x8004840C; // type:function size:0x5C
fn_80048468 = .text:0x80048468; // type:function size:0xE4
fn_8004854C = .text:0x8004854C; // type:function size:0x244
fn_80048790 = .text:0x80048790; // type:function size:0x4C
fn_800487DC = .text:0x800487DC; // type:function size:0x2C
fn_80048808 = .text:0x80048808; // type:function size:0x78
fn_80048880 = .text:0x80048880; // type:function size:0x78
fn_800488F8 = .text:0x800488F8; // type:function size:0x78
fn_80048970 = .text:0x80048970; // type:function size:0x70
fn_800489E0 = .text:0x800489E0; // type:function size:0x60
fn_80048A40 = .text:0x80048A40; // type:function size:0xB0
fn_80048AF0 = .text:0x80048AF0; // type:function size:0x94
fn_80048B84 = .text:0x80048B84; // type:function size:0xA8
fn_80048C2C = .text:0x80048C2C; // type:function size:0x160
fn_80048D8C = .text:0x80048D8C; // type:function size:0x214
fn_80048FA0 = .text:0x80048FA0; // type:function size:0x68
fn_80049008 = .text:0x80049008; // type:function size:0x1B0
fn_800491B8 = .text:0x800491B8; // type:function size:0x8C
fn_80049244 = .text:0x80049244; // type:function size:0x30
fn_80049274 = .text:0x80049274; // type:function size:0x5C
fn_800492D0 = .text:0x800492D0; // type:function size:0xE4
fn_800493B4 = .text:0x800493B4; // type:function size:0x44
fn_800493F8 = .text:0x800493F8; // type:function size:0x3C
fn_80049434 = .text:0x80049434; // type:function size:0xC4
fn_800494F8 = .text:0x800494F8; // type:function size:0x18
fn_80049510 = .text:0x80049510; // type:function size:0x40
fn_80049550 = .text:0x80049550; // type:function size:0x114
fn_80049664 = .text:0x80049664; // type:function size:0x8
fn_8004966C = .text:0x8004966C; // type:function size:0x48
fn_800496B4 = .text:0x800496B4; // type:function size:0xF4
fn_800497A8 = .text:0x800497A8; // type:function size:0x8C
fn_80049834 = .text:0x80049834; // type:function size:0x2A0
fn_80049AD4 = .text:0x80049AD4; // type:function size:0x8
fn_80049ADC = .text:0x80049ADC; // type:function size:0x8
fn_80049AE4 = .text:0x80049AE4; // type:function size:0x34
fn_80049B18 = .text:0x80049B18; // type:function size:0x4
fn_80049B1C = .text:0x80049B1C; // type:function size:0x2C
fn_80049B48 = .text:0x80049B48; // type:function size:0x1C
fn_80049B64 = .text:0x80049B64; // type:function size:0x138
fn_80049C9C = .text:0x80049C9C; // type:function size:0x2F4
fn_80049F90 = .text:0x80049F90; // type:function size:0x1C4
fn_8004A154 = .text:0x8004A154; // type:function size:0x1BC
fn_8004A310 = .text:0x8004A310; // type:function size:0x394
fn_8004A6A4 = .text:0x8004A6A4; // type:function size:0x9C
fn_8004A740 = .text:0x8004A740; // type:function size:0x24
fn_8004A764 = .text:0x8004A764; // type:function size:0x2C
fn_8004A790 = .text:0x8004A790; // type:function size:0x2C
fn_8004A7BC = .text:0x8004A7BC; // type:function size:0x34
fn_8004A7F0 = .text:0x8004A7F0; // type:function size:0x28
fn_8004A818 = .text:0x8004A818; // type:function size:0x64
fn_8004A87C = .text:0x8004A87C; // type:function size:0x28
fn_8004A8A4 = .text:0x8004A8A4; // type:function size:0x30
fn_8004A8D4 = .text:0x8004A8D4; // type:function size:0x54
fn_8004A928 = .text:0x8004A928; // type:function size:0x78
fn_8004A9A0 = .text:0x8004A9A0; // type:function size:0x78
fn_8004AA18 = .text:0x8004AA18; // type:function size:0x50
fn_8004AA68 = .text:0x8004AA68; // type:function size:0x2C
fn_8004AA94 = .text:0x8004AA94; // type:function size:0x24
fn_8004AAB8 = .text:0x8004AAB8; // type:function size:0x78
fn_8004AB30 = .text:0x8004AB30; // type:function size:0xDC
fn_8004AC0C = .text:0x8004AC0C; // type:function size:0x2C
fn_8004AC38 = .text:0x8004AC38; // type:function size:0x2C
fn_8004AC64 = .text:0x8004AC64; // type:function size:0x2C
fn_8004AC90 = .text:0x8004AC90; // type:function size:0x20
fn_8004ACB0 = .text:0x8004ACB0; // type:function size:0x1C
fn_8004ACCC = .text:0x8004ACCC; // type:function size:0x98
fn_8004AD64 = .text:0x8004AD64; // type:function size:0x2C
fn_8004AD90 = .text:0x8004AD90; // type:function size:0x164
fn_8004AEF4 = .text:0x8004AEF4; // type:function size:0x1D8
fn_8004B0CC = .text:0x8004B0CC; // type:function size:0x80
fn_8004B14C = .text:0x8004B14C; // type:function size:0x80
fn_8004B1CC = .text:0x8004B1CC; // type:function size:0x4C
fn_8004B218 = .text:0x8004B218; // type:function size:0x24
fn_8004B23C = .text:0x8004B23C; // type:function size:0x148
fn_8004B384 = .text:0x8004B384; // type:function size:0x148
fn_8004B4CC = .text:0x8004B4CC; // type:function size:0x2C
fn_8004B4F8 = .text:0x8004B4F8; // type:function size:0x58
fn_8004B550 = .text:0x8004B550; // type:function size:0x80
fn_8004B5D0 = .text:0x8004B5D0; // type:function size:0x3C
fn_8004B60C = .text:0x8004B60C; // type:function size:0x68
fn_8004B674 = .text:0x8004B674; // type:function size:0x2C
fn_8004B6A0 = .text:0x8004B6A0; // type:function size:0x60
fn_8004B700 = .text:0x8004B700; // type:function size:0x58
fn_8004B758 = .text:0x8004B758; // type:function size:0x54
fn_8004B7AC = .text:0x8004B7AC; // type:function size:0x68
fn_8004B814 = .text:0x8004B814; // type:function size:0x134
fn_8004B948 = .text:0x8004B948; // type:function size:0x4C
fn_8004B994 = .text:0x8004B994; // type:function size:0x28
fn_8004B9BC = .text:0x8004B9BC; // type:function size:0x60
fn_8004BA1C = .text:0x8004BA1C; // type:function size:0x60
fn_8004BA7C = .text:0x8004BA7C; // type:function size:0x38
fn_8004BAB4 = .text:0x8004BAB4; // type:function size:0x110
fn_8004BBC4 = .text:0x8004BBC4; // type:function size:0x5C
fn_8004BC20 = .text:0x8004BC20; // type:function size:0x34
fn_8004BC54 = .text:0x8004BC54; // type:function size:0x1B8
fn_8004BE0C = .text:0x8004BE0C; // type:function size:0x50
fn_8004BE5C = .text:0x8004BE5C; // type:function size:0xCC
fn_8004BF28 = .text:0x8004BF28; // type:function size:0x28
fn_8004BF50 = .text:0x8004BF50; // type:function size:0x40
fn_8004BF90 = .text:0x8004BF90; // type:function size:0xC4
fn_8004C054 = .text:0x8004C054; // type:function size:0x9C
fn_8004C0F0 = .text:0x8004C0F0; // type:function size:0x14
fn_8004C104 = .text:0x8004C104; // type:function size:0x2C
fn_8004C130 = .text:0x8004C130; // type:function size:0x144
fn_8004C274 = .text:0x8004C274; // type:function size:0x1D4
fn_8004C448 = .text:0x8004C448; // type:function size:0x4C
fn_8004C494 = .text:0x8004C494; // type:function size:0xE0
fn_8004C574 = .text:0x8004C574; // type:function size:0x58
fn_8004C5CC = .text:0x8004C5CC; // type:function size:0x74
fn_8004C640 = .text:0x8004C640; // type:function size:0x44
fn_8004C684 = .text:0x8004C684; // type:function size:0x20
fn_8004C6A4 = .text:0x8004C6A4; // type:function size:0x10
fn_8004C6B4 = .text:0x8004C6B4; // type:function size:0xC
fn_8004C6C0 = .text:0x8004C6C0; // type:function size:0x38
fn_8004C6F8 = .text:0x8004C6F8; // type:function size:0x28
fn_8004C720 = .text:0x8004C720; // type:function size:0x44
fn_8004C764 = .text:0x8004C764; // type:function size:0x68
fn_8004C7CC = .text:0x8004C7CC; // type:function size:0x30
fn_8004C7FC = .text:0x8004C7FC; // type:function size:0x18C
fn_8004C988 = .text:0x8004C988; // type:function size:0x10C
fn_8004CA94 = .text:0x8004CA94; // type:function size:0x34
fn_8004CAC8 = .text:0x8004CAC8; // type:function size:0x80
fn_8004CB48 = .text:0x8004CB48; // type:function size:0x2C
fn_8004CB74 = .text:0x8004CB74; // type:function size:0xDC
fn_8004CC50 = .text:0x8004CC50; // type:function size:0x4
fn_8004CC54 = .text:0x8004CC54; // type:function size:0x70
fn_8004CCC4 = .text:0x8004CCC4; // type:function size:0x98
fn_8004CD5C = .text:0x8004CD5C; // type:function size:0x98
fn_8004CDF4 = .text:0x8004CDF4; // type:function size:0x104
fn_8004CEF8 = .text:0x8004CEF8; // type:function size:0x38
fn_8004CF30 = .text:0x8004CF30; // type:function size:0x8
fn_8004CF38 = .text:0x8004CF38; // type:function size:0x38
fn_8004CF70 = .text:0x8004CF70; // type:function size:0x8
fn_8004CF78 = .text:0x8004CF78; // type:function size:0xB4
fn_8004D02C = .text:0x8004D02C; // type:function size:0xB0
fn_8004D0DC = .text:0x8004D0DC; // type:function size:0x58
fn_8004D134 = .text:0x8004D134; // type:function size:0x58
fn_8004D18C = .text:0x8004D18C; // type:function size:0x30
fn_8004D1BC = .text:0x8004D1BC; // type:function size:0x8
fn_8004D1C4 = .text:0x8004D1C4; // type:function size:0x8
fn_8004D1CC = .text:0x8004D1CC; // type:function size:0x18
fn_8004D1E4 = .text:0x8004D1E4; // type:function size:0x4C
fn_8004D230 = .text:0x8004D230; // type:function size:0x104
fn_8004D334 = .text:0x8004D334; // type:function size:0x70
fn_8004D3A4 = .text:0x8004D3A4; // type:function size:0x18
fn_8004D3BC = .text:0x8004D3BC; // type:function size:0x18
fn_8004D3D4 = .text:0x8004D3D4; // type:function size:0x18
fn_8004D3EC = .text:0x8004D3EC; // type:function size:0x18
fn_8004D404 = .text:0x8004D404; // type:function size:0x68
fn_8004D46C = .text:0x8004D46C; // type:function size:0x68
fn_8004D4D4 = .text:0x8004D4D4; // type:function size:0x18
fn_8004D4EC = .text:0x8004D4EC; // type:function size:0x18
fn_8004D504 = .text:0x8004D504; // type:function size:0x34
fn_8004D538 = .text:0x8004D538; // type:function size:0x28
fn_8004D560 = .text:0x8004D560; // type:function size:0x7C
fn_8004D5DC = .text:0x8004D5DC; // type:function size:0x24
fn_8004D600 = .text:0x8004D600; // type:function size:0x4
fn_8004D604 = .text:0x8004D604; // type:function size:0xBC
fn_8004D6C0 = .text:0x8004D6C0; // type:function size:0xC8
fn_8004D788 = .text:0x8004D788; // type:function size:0x14
fn_8004D79C = .text:0x8004D79C; // type:function size:0xF4
fn_8004D890 = .text:0x8004D890; // type:function size:0x208
fn_8004DA98 = .text:0x8004DA98; // type:function size:0x4
fn_8004DA9C = .text:0x8004DA9C; // type:function size:0xC
fn_8004DAA8 = .text:0x8004DAA8; // type:function size:0x18
fn_8004DAC0 = .text:0x8004DAC0; // type:function size:0xF4
fn_8004DBB4 = .text:0x8004DBB4; // type:function size:0xA8
fn_8004DC5C = .text:0x8004DC5C; // type:function size:0x198
fn_8004DDF4 = .text:0x8004DDF4; // type:function size:0x14C
fn_8004DF40 = .text:0x8004DF40; // type:function size:0xCC
fn_8004E00C = .text:0x8004E00C; // type:function size:0x11C
fn_8004E128 = .text:0x8004E128; // type:function size:0x98
fn_8004E1C0 = .text:0x8004E1C0; // type:function size:0x38
fn_8004E1F8 = .text:0x8004E1F8; // type:function size:0xC
fn_8004E204 = .text:0x8004E204; // type:function size:0x14
fn_8004E218 = .text:0x8004E218; // type:function size:0x38
fn_8004E250 = .text:0x8004E250; // type:function size:0x1C
fn_8004E26C = .text:0x8004E26C; // type:function size:0x34
fn_8004E2A0 = .text:0x8004E2A0; // type:function size:0x134
fn_8004E3D4 = .text:0x8004E3D4; // type:function size:0x50
fn_8004E424 = .text:0x8004E424; // type:function size:0x138
fn_8004E55C = .text:0x8004E55C; // type:function size:0x23C
fn_8004E798 = .text:0x8004E798; // type:function size:0x24
fn_8004E7BC = .text:0x8004E7BC; // type:function size:0x24
fn_8004E7E0 = .text:0x8004E7E0; // type:function size:0x24
fn_8004E804 = .text:0x8004E804; // type:function size:0x24
fn_8004E828 = .text:0x8004E828; // type:function size:0x14
fn_8004E83C = .text:0x8004E83C; // type:function size:0xC
fn_8004E848 = .text:0x8004E848; // type:function size:0x2C
fn_8004E874 = .text:0x8004E874; // type:function size:0x2C
fn_8004E8A0 = .text:0x8004E8A0; // type:function size:0x2C
fn_8004E8CC = .text:0x8004E8CC; // type:function size:0x48
fn_8004E914 = .text:0x8004E914; // type:function size:0x28
fn_8004E93C = .text:0x8004E93C; // type:function size:0x28
fn_8004E964 = .text:0x8004E964; // type:function size:0x54
fn_8004E9B8 = .text:0x8004E9B8; // type:function size:0x64
fn_8004EA1C = .text:0x8004EA1C; // type:function size:0x54
fn_8004EA70 = .text:0x8004EA70; // type:function size:0x38
fn_8004EAA8 = .text:0x8004EAA8; // type:function size:0x8
fn_8004EAB0 = .text:0x8004EAB0; // type:function size:0xC
fn_8004EABC = .text:0x8004EABC; // type:function size:0x2C
fn_8004EAE8 = .text:0x8004EAE8; // type:function size:0x8
fn_8004EAF0 = .text:0x8004EAF0; // type:function size:0x54
fn_8004EB44 = .text:0x8004EB44; // type:function size:0x7C
fn_8004EBC0 = .text:0x8004EBC0; // type:function size:0x5C
fn_8004EC1C = .text:0x8004EC1C; // type:function size:0x134
fn_8004ED50 = .text:0x8004ED50; // type:function size:0x140
fn_8004EE90 = .text:0x8004EE90; // type:function size:0x58
fn_8004EEE8 = .text:0x8004EEE8; // type:function size:0x100
fn_8004EFE8 = .text:0x8004EFE8; // type:function size:0x2FC
fn_8004F2E4 = .text:0x8004F2E4; // type:function size:0xD8
fn_8004F3BC = .text:0x8004F3BC; // type:function size:0xD8
fn_8004F494 = .text:0x8004F494; // type:function size:0x3C
fn_8004F4D0 = .text:0x8004F4D0; // type:function size:0xE4
fn_8004F5B4 = .text:0x8004F5B4; // type:function size:0x5C
fn_8004F610 = .text:0x8004F610; // type:function size:0x18
fn_8004F628 = .text:0x8004F628; // type:function size:0x78
fn_8004F6A0 = .text:0x8004F6A0; // type:function size:0xEC
fn_8004F78C = .text:0x8004F78C; // type:function size:0x28
fn_8004F7B4 = .text:0x8004F7B4; // type:function size:0x28
fn_8004F7DC = .text:0x8004F7DC; // type:function size:0x28
fn_8004F804 = .text:0x8004F804; // type:function size:0x28
fn_8004F82C = .text:0x8004F82C; // type:function size:0x28
fn_8004F854 = .text:0x8004F854; // type:function size:0x4
fn_8004F858 = .text:0x8004F858; // type:function size:0x104
fn_8004F95C = .text:0x8004F95C; // type:function size:0x168
fn_8004FAC4 = .text:0x8004FAC4; // type:function size:0x194
fn_8004FC58 = .text:0x8004FC58; // type:function size:0x78
fn_8004FCD0 = .text:0x8004FCD0; // type:function size:0xA0
fn_8004FD70 = .text:0x8004FD70; // type:function size:0x78
fn_8004FDE8 = .text:0x8004FDE8; // type:function size:0x34
fn_8004FE1C = .text:0x8004FE1C; // type:function size:0x94
fn_8004FEB0 = .text:0x8004FEB0; // type:function size:0x44
fn_8004FEF4 = .text:0x8004FEF4; // type:function size:0x108
fn_8004FFFC = .text:0x8004FFFC; // type:function size:0x24
fn_80050020 = .text:0x80050020; // type:function size:0x38
fn_80050058 = .text:0x80050058; // type:function size:0x28
fn_80050080 = .text:0x80050080; // type:function size:0xD0
fn_80050150 = .text:0x80050150; // type:function size:0x4
fn_80050154 = .text:0x80050154; // type:function size:0xC
fn_80050160 = .text:0x80050160; // type:function size:0x14
fn_80050174 = .text:0x80050174; // type:function size:0x4C
fn_800501C0 = .text:0x800501C0; // type:function size:0x20
fn_800501E0 = .text:0x800501E0; // type:function size:0x94
fn_80050274 = .text:0x80050274; // type:function size:0x44
fn_800502B8 = .text:0x800502B8; // type:function size:0x4
fn_800502BC = .text:0x800502BC; // type:function size:0x10
fn_800502CC = .text:0x800502CC; // type:function size:0xC
fn_800502D8 = .text:0x800502D8; // type:function size:0x14
fn_800502EC = .text:0x800502EC; // type:function size:0x20
fn_8005030C = .text:0x8005030C; // type:function size:0xB4
fn_800503C0 = .text:0x800503C0; // type:function size:0x44
fn_80050404 = .text:0x80050404; // type:function size:0x4
fn_80050408 = .text:0x80050408; // type:function size:0x10
fn_80050418 = .text:0x80050418; // type:function size:0xC
fn_80050424 = .text:0x80050424; // type:function size:0x14
fn_80050438 = .text:0x80050438; // type:function size:0x54
fn_8005048C = .text:0x8005048C; // type:function size:0xB4
fn_80050540 = .text:0x80050540; // type:function size:0x40
fn_80050580 = .text:0x80050580; // type:function size:0x4C
fn_800505CC = .text:0x800505CC; // type:function size:0x58
fn_80050624 = .text:0x80050624; // type:function size:0xB8
fn_800506DC = .text:0x800506DC; // type:function size:0x40
fn_8005071C = .text:0x8005071C; // type:function size:0x4C
fn_80050768 = .text:0x80050768; // type:function size:0x128
fn_80050890 = .text:0x80050890; // type:function size:0x274
fn_80050B04 = .text:0x80050B04; // type:function size:0x11C
fn_80050C20 = .text:0x80050C20; // type:function size:0x248
fn_80050E68 = .text:0x80050E68; // type:function size:0x4EC
fn_80051354 = .text:0x80051354; // type:function size:0xF0
fn_80051444 = .text:0x80051444; // type:function size:0xF0
fn_80051534 = .text:0x80051534; // type:function size:0x138
fn_8005166C = .text:0x8005166C; // type:function size:0xC
fn_80051678 = .text:0x80051678; // type:function size:0x14
fn_8005168C = .text:0x8005168C; // type:function size:0x10
fn_8005169C = .text:0x8005169C; // type:function size:0x4
fn_800516A0 = .text:0x800516A0; // type:function size:0x534
fn_80051BD4 = .text:0x80051BD4; // type:function size:0x5C0
fn_80052194 = .text:0x80052194; // type:function size:0x4
fn_80052198 = .text:0x80052198; // type:function size:0x10
fn_800521A8 = .text:0x800521A8; // type:function size:0xC
fn_800521B4 = .text:0x800521B4; // type:function size:0x14
fn_800521C8 = .text:0x800521C8; // type:function size:0x28
fn_800521F0 = .text:0x800521F0; // type:function size:0x28
fn_80052218 = .text:0x80052218; // type:function size:0x60
fn_80052278 = .text:0x80052278; // type:function size:0xDC
fn_80052354 = .text:0x80052354; // type:function size:0x60
fn_800523B4 = .text:0x800523B4; // type:function size:0x4B4
fn_80052868 = .text:0x80052868; // type:function size:0x3AC
fn_80052C14 = .text:0x80052C14; // type:function size:0x8C
fn_80052CA0 = .text:0x80052CA0; // type:function size:0x38
fn_80052CD8 = .text:0x80052CD8; // type:function size:0x98
fn_80052D70 = .text:0x80052D70; // type:function size:0x4
fn_80052D74 = .text:0x80052D74; // type:function size:0x8C
fn_80052E00 = .text:0x80052E00; // type:function size:0xB4
fn_80052EB4 = .text:0x80052EB4; // type:function size:0x8C
fn_80052F40 = .text:0x80052F40; // type:function size:0xC8
fn_80053008 = .text:0x80053008; // type:function size:0x4
fn_8005300C = .text:0x8005300C; // type:function size:0xA4
fn_800530B0 = .text:0x800530B0; // type:function size:0xB0
fn_80053160 = .text:0x80053160; // type:function size:0x4C
fn_800531AC = .text:0x800531AC; // type:function size:0xC4
fn_80053270 = .text:0x80053270; // type:function size:0x4
fn_80053274 = .text:0x80053274; // type:function size:0xA0
fn_80053314 = .text:0x80053314; // type:function size:0xD8
fn_800533EC = .text:0x800533EC; // type:function size:0xA0
fn_8005348C = .text:0x8005348C; // type:function size:0xE8
fn_80053574 = .text:0x80053574; // type:function size:0x4
fn_80053578 = .text:0x80053578; // type:function size:0xA0
fn_80053618 = .text:0x80053618; // type:function size:0x1FC
fn_80053814 = .text:0x80053814; // type:function size:0x4
fn_80053818 = .text:0x80053818; // type:function size:0x54
fn_8005386C = .text:0x8005386C; // type:function size:0xA8
fn_80053914 = .text:0x80053914; // type:function size:0x70
fn_80053984 = .text:0x80053984; // type:function size:0xC8
fn_80053A4C = .text:0x80053A4C; // type:function size:0x8
fn_80053A54 = .text:0x80053A54; // type:function size:0x84
fn_80053AD8 = .text:0x80053AD8; // type:function size:0x88
fn_80053B60 = .text:0x80053B60; // type:function size:0x1CC
fn_80053D2C = .text:0x80053D2C; // type:function size:0x4
fn_80053D30 = .text:0x80053D30; // type:function size:0x54
fn_80053D84 = .text:0x80053D84; // type:function size:0x4B4
fn_80054238 = .text:0x80054238; // type:function size:0x458
fn_80054690 = .text:0x80054690; // type:function size:0x4C
fn_800546DC = .text:0x800546DC; // type:function size:0x74
fn_80054750 = .text:0x80054750; // type:function size:0x5C
fn_800547AC = .text:0x800547AC; // type:function size:0x5C
fn_80054808 = .text:0x80054808; // type:function size:0x38
fn_80054840 = .text:0x80054840; // type:function size:0x34
fn_80054874 = .text:0x80054874; // type:function size:0xA0
fn_80054914 = .text:0x80054914; // type:function size:0x48
fn_8005495C = .text:0x8005495C; // type:function size:0x9C
fn_800549F8 = .text:0x800549F8; // type:function size:0x64
fn_80054A5C = .text:0x80054A5C; // type:function size:0x6C
fn_80054AC8 = .text:0x80054AC8; // type:function size:0x144
fn_80054C0C = .text:0x80054C0C; // type:function size:0x4
fn_80054C10 = .text:0x80054C10; // type:function size:0x28
fn_80054C38 = .text:0x80054C38; // type:function size:0x10
fn_80054C48 = .text:0x80054C48; // type:function size:0x10
fn_80054C58 = .text:0x80054C58; // type:function size:0x10
fn_80054C68 = .text:0x80054C68; // type:function size:0x10
fn_80054C78 = .text:0x80054C78; // type:function size:0x30
fn_80054CA8 = .text:0x80054CA8; // type:function size:0x8
fn_80054CB0 = .text:0x80054CB0; // type:function size:0x34
fn_80054CE4 = .text:0x80054CE4; // type:function size:0x10
fn_80054CF4 = .text:0x80054CF4; // type:function size:0xA4
fn_80054D98 = .text:0x80054D98; // type:function size:0x2C
fn_80054DC4 = .text:0x80054DC4; // type:function size:0x84
fn_80054E48 = .text:0x80054E48; // type:function size:0x40
fn_80054E88 = .text:0x80054E88; // type:function size:0x8
fn_80054E90 = .text:0x80054E90; // type:function size:0x98
fn_80054F28 = .text:0x80054F28; // type:function size:0x28
fn_80054F50 = .text:0x80054F50; // type:function size:0x28
fn_80054F78 = .text:0x80054F78; // type:function size:0xC
fn_80054F84 = .text:0x80054F84; // type:function size:0x114
fn_80055098 = .text:0x80055098; // type:function size:0x50
fn_800550E8 = .text:0x800550E8; // type:function size:0x198
fn_80055280 = .text:0x80055280; // type:function size:0x128
fn_800553A8 = .text:0x800553A8; // type:function size:0x18
fn_800553C0 = .text:0x800553C0; // type:function size:0xE4
fn_800554A4 = .text:0x800554A4; // type:function size:0x100
fn_800555A4 = .text:0x800555A4; // type:function size:0x4C
fn_800555F0 = .text:0x800555F0; // type:function size:0x4C
fn_8005563C = .text:0x8005563C; // type:function size:0xB4
fn_800556F0 = .text:0x800556F0; // type:function size:0x158
fn_80055848 = .text:0x80055848; // type:function size:0x184
fn_800559CC = .text:0x800559CC; // type:function size:0x49C
fn_80055E68 = .text:0x80055E68; // type:function size:0x114
fn_80055F7C = .text:0x80055F7C; // type:function size:0x118
fn_80056094 = .text:0x80056094; // type:function size:0x4
fn_80056098 = .text:0x80056098; // type:function size:0x68
fn_80056100 = .text:0x80056100; // type:function size:0x64
fn_80056164 = .text:0x80056164; // type:function size:0x40
fn_800561A4 = .text:0x800561A4; // type:function size:0x28
fn_800561CC = .text:0x800561CC; // type:function size:0xD4
fn_800562A0 = .text:0x800562A0; // type:function size:0x4
fn_800562A4 = .text:0x800562A4; // type:function size:0x14
fn_800562B8 = .text:0x800562B8; // type:function size:0x14
fn_800562CC = .text:0x800562CC; // type:function size:0xD4
fn_800563A0 = .text:0x800563A0; // type:function size:0x4
fn_800563A4 = .text:0x800563A4; // type:function size:0x14
fn_800563B8 = .text:0x800563B8; // type:function size:0x14
fn_800563CC = .text:0x800563CC; // type:function size:0xCC
fn_80056498 = .text:0x80056498; // type:function size:0x4
fn_8005649C = .text:0x8005649C; // type:function size:0xC
fn_800564A8 = .text:0x800564A8; // type:function size:0x14
fn_800564BC = .text:0x800564BC; // type:function size:0x118
fn_800565D4 = .text:0x800565D4; // type:function size:0x4
fn_800565D8 = .text:0x800565D8; // type:function size:0x18
fn_800565F0 = .text:0x800565F0; // type:function size:0x14
fn_80056604 = .text:0x80056604; // type:function size:0x14
fn_80056618 = .text:0x80056618; // type:function size:0xD4
fn_800566EC = .text:0x800566EC; // type:function size:0x4
fn_800566F0 = .text:0x800566F0; // type:function size:0x14
fn_80056704 = .text:0x80056704; // type:function size:0x14
fn_80056718 = .text:0x80056718; // type:function size:0x11C
fn_80056834 = .text:0x80056834; // type:function size:0x260
fn_80056A94 = .text:0x80056A94; // type:function size:0x4
fn_80056A98 = .text:0x80056A98; // type:function size:0x18
fn_80056AB0 = .text:0x80056AB0; // type:function size:0xC
fn_80056ABC = .text:0x80056ABC; // type:function size:0x14
fn_80056AD0 = .text:0x80056AD0; // type:function size:0xC0
fn_80056B90 = .text:0x80056B90; // type:function size:0x120
fn_80056CB0 = .text:0x80056CB0; // type:function size:0x7C
fn_80056D2C = .text:0x80056D2C; // type:function size:0x280
fn_80056FAC = .text:0x80056FAC; // type:function size:0x80
fn_8005702C = .text:0x8005702C; // type:function size:0x4C
fn_80057078 = .text:0x80057078; // type:function size:0x98
DBClose = .text:0x80057110; // type:function size:0x4 scope:global
DBOpen = .text:0x80057114; // type:function size:0x4 scope:global
DBWrite = .text:0x80057118; // type:function size:0x260 scope:global
DBRead = .text:0x80057378; // type:function size:0x8C scope:global
DBQueryData = .text:0x80057404; // type:function size:0x9C scope:global
DBInitInterrupts = .text:0x800574A0; // type:function size:0x54 scope:global
DBInitComm = .text:0x800574F4; // type:function size:0x78 scope:global
fn_8005756C = .text:0x8005756C; // type:function size:0x40
fn_800575AC = .text:0x800575AC; // type:function size:0x3C
fn_800575E8 = .text:0x800575E8; // type:function size:0xAC
fn_80057694 = .text:0x80057694; // type:function size:0xDC
fn_80057770 = .text:0x80057770; // type:function size:0xDC
fn_8005784C = .text:0x8005784C; // type:function size:0xAC
fn_800578F8 = .text:0x800578F8; // type:function size:0x298
fn_80057B90 = .text:0x80057B90; // type:function size:0x90
fn_80057C20 = .text:0x80057C20; // type:function size:0x13C
fn_80057D5C = .text:0x80057D5C; // type:function size:0x24
fn_80057D80 = .text:0x80057D80; // type:function size:0x24
fn_80057DA4 = .text:0x80057DA4; // type:function size:0x2C
fn_80057DD0 = .text:0x80057DD0; // type:function size:0x24
fn_80057DF4 = .text:0x80057DF4; // type:function size:0x24
fn_80057E18 = .text:0x80057E18; // type:function size:0x24
fn_80057E3C = .text:0x80057E3C; // type:function size:0x24
fn_80057E60 = .text:0x80057E60; // type:function size:0x24
fn_80057E84 = .text:0x80057E84; // type:function size:0x8
fn_80057E8C = .text:0x80057E8C; // type:function size:0x24
fn_80057EB0 = .text:0x80057EB0; // type:function size:0x24
fn_80057ED4 = .text:0x80057ED4; // type:function size:0x24
fn_80057EF8 = .text:0x80057EF8; // type:function size:0x24
fn_80057F1C = .text:0x80057F1C; // type:function size:0x24
fn_80057F40 = .text:0x80057F40; // type:function size:0x24
fn_80057F64 = .text:0x80057F64; // type:function size:0x24
fn_80057F88 = .text:0x80057F88; // type:function size:0x24
fn_80057FAC = .text:0x80057FAC; // type:function size:0x24
fn_80057FD0 = .text:0x80057FD0; // type:function size:0x24
fn_80057FF4 = .text:0x80057FF4; // type:function size:0x24
fn_80058018 = .text:0x80058018; // type:function size:0x8
fn_80058020 = .text:0x80058020; // type:function size:0x8
fn_80058028 = .text:0x80058028; // type:function size:0x8
fn_80058030 = .text:0x80058030; // type:function size:0xC
fn_8005803C = .text:0x8005803C; // type:function size:0x8
fn_80058044 = .text:0x80058044; // type:function size:0x8
fn_8005804C = .text:0x8005804C; // type:function size:0x280
fn_800582CC = .text:0x800582CC; // type:function size:0x258
fn_80058524 = .text:0x80058524; // type:function size:0x234
fn_80058758 = .text:0x80058758; // type:function size:0xF8
fn_80058850 = .text:0x80058850; // type:function size:0x1F4
fn_80058A44 = .text:0x80058A44; // type:function size:0x38
fn_80058A7C = .text:0x80058A7C; // type:function size:0x40
fn_80058ABC = .text:0x80058ABC; // type:function size:0x24
fn_80058AE0 = .text:0x80058AE0; // type:function size:0x4C
fn_80058B2C = .text:0x80058B2C; // type:function size:0x4C
fn_80058B78 = .text:0x80058B78; // type:function size:0xC
fn_80058B84 = .text:0x80058B84; // type:function size:0x54
fn_80058BD8 = .text:0x80058BD8; // type:function size:0x290
fn_80058E68 = .text:0x80058E68; // type:function size:0x30
fn_80058E98 = .text:0x80058E98; // type:function size:0x34
fn_80058ECC = .text:0x80058ECC; // type:function size:0x4C
fn_80058F18 = .text:0x80058F18; // type:function size:0x68
fn_80058F80 = .text:0x80058F80; // type:function size:0x3B0
fn_80059330 = .text:0x80059330; // type:function size:0x3A4
fn_800596D4 = .text:0x800596D4; // type:function size:0x32C
fn_80059A00 = .text:0x80059A00; // type:function size:0xEC
fn_80059AEC = .text:0x80059AEC; // type:function size:0x268
fn_80059D54 = .text:0x80059D54; // type:function size:0x2C
fn_80059D80 = .text:0x80059D80; // type:function size:0x24
fn_80059DA4 = .text:0x80059DA4; // type:function size:0x38
fn_80059DDC = .text:0x80059DDC; // type:function size:0x34
fn_80059E10 = .text:0x80059E10; // type:function size:0x338
fn_8005A148 = .text:0x8005A148; // type:function size:0x3B0
fn_8005A4F8 = .text:0x8005A4F8; // type:function size:0x184
fn_8005A67C = .text:0x8005A67C; // type:function size:0x68
fn_8005A6E4 = .text:0x8005A6E4; // type:function size:0x270
fn_8005A954 = .text:0x8005A954; // type:function size:0x44
fn_8005A998 = .text:0x8005A998; // type:function size:0x3C4
fn_8005AD5C = .text:0x8005AD5C; // type:function size:0x338
fn_8005B094 = .text:0x8005B094; // type:function size:0x3B0
fn_8005B444 = .text:0x8005B444; // type:function size:0x178
fn_8005B5BC = .text:0x8005B5BC; // type:function size:0x68
fn_8005B624 = .text:0x8005B624; // type:function size:0x208
fn_8005B82C = .text:0x8005B82C; // type:function size:0x8C
fn_8005B8B8 = .text:0x8005B8B8; // type:function size:0x404
fn_8005BCBC = .text:0x8005BCBC; // type:function size:0x8
fn_8005BCC4 = .text:0x8005BCC4; // type:function size:0x8
fn_8005BCCC = .text:0x8005BCCC; // type:function size:0x48
fn_8005BD14 = .text:0x8005BD14; // type:function size:0x38
fn_8005BD4C = .text:0x8005BD4C; // type:function size:0x18
fn_8005BD64 = .text:0x8005BD64; // type:function size:0x70
fn_8005BDD4 = .text:0x8005BDD4; // type:function size:0x8
fn_8005BDDC = .text:0x8005BDDC; // type:function size:0x4C
fn_8005BE28 = .text:0x8005BE28; // type:function size:0x4C
fn_8005BE74 = .text:0x8005BE74; // type:function size:0x8
fn_8005BE7C = .text:0x8005BE7C; // type:function size:0x8
fn_8005BE84 = .text:0x8005BE84; // type:function size:0x8
fn_8005BE8C = .text:0x8005BE8C; // type:function size:0x8
fn_8005BE94 = .text:0x8005BE94; // type:function size:0x8
fn_8005BE9C = .text:0x8005BE9C; // type:function size:0x8
fn_8005BEA4 = .text:0x8005BEA4; // type:function size:0x8
fn_8005BEAC = .text:0x8005BEAC; // type:function size:0x6C
fn_8005BF18 = .text:0x8005BF18; // type:function size:0xC
fn_8005BF24 = .text:0x8005BF24; // type:function size:0x8
fn_8005BF2C = .text:0x8005BF2C; // type:function size:0x8
fn_8005BF34 = .text:0x8005BF34; // type:function size:0x8
fn_8005BF3C = .text:0x8005BF3C; // type:function size:0xC
fn_8005BF48 = .text:0x8005BF48; // type:function size:0x10C
fn_8005C054 = .text:0x8005C054; // type:function size:0x680
fn_8005C6D4 = .text:0x8005C6D4; // type:function size:0x4C
fn_8005C720 = .text:0x8005C720; // type:function size:0x198
fn_8005C8B8 = .text:0x8005C8B8; // type:function size:0x1C
fn_8005C8D4 = .text:0x8005C8D4; // type:function size:0x30
fn_8005C904 = .text:0x8005C904; // type:function size:0x48
fn_8005C94C = .text:0x8005C94C; // type:function size:0x34
fn_8005C980 = .text:0x8005C980; // type:function size:0x2D8
fn_8005CC58 = .text:0x8005CC58; // type:function size:0xEC
fn_8005CD44 = .text:0x8005CD44; // type:function size:0x124
fn_8005CE68 = .text:0x8005CE68; // type:function size:0x8
fn_8005CE70 = .text:0x8005CE70; // type:function size:0xC
fn_8005CE7C = .text:0x8005CE7C; // type:function size:0x1B8
fn_8005D034 = .text:0x8005D034; // type:function size:0x44
fn_8005D078 = .text:0x8005D078; // type:function size:0x38
fn_8005D0B0 = .text:0x8005D0B0; // type:function size:0x44
fn_8005D0F4 = .text:0x8005D0F4; // type:function size:0x10
fn_8005D104 = .text:0x8005D104; // type:function size:0x9C
fn_8005D1A0 = .text:0x8005D1A0; // type:function size:0x38
fn_8005D1D8 = .text:0x8005D1D8; // type:function size:0x11C
fn_8005D2F4 = .text:0x8005D2F4; // type:function size:0xD0
fn_8005D3C4 = .text:0x8005D3C4; // type:function size:0x50
fn_8005D414 = .text:0x8005D414; // type:function size:0x48
fn_8005D45C = .text:0x8005D45C; // type:function size:0xF0
fn_8005D54C = .text:0x8005D54C; // type:function size:0x7C
fn_8005D5C8 = .text:0x8005D5C8; // type:function size:0x1E8
fn_8005D7B0 = .text:0x8005D7B0; // type:function size:0x4DC
fn_8005DC8C = .text:0x8005DC8C; // type:function size:0x80
fn_8005DD0C = .text:0x8005DD0C; // type:function size:0x64
fn_8005DD70 = .text:0x8005DD70; // type:function size:0x30
fn_8005DDA0 = .text:0x8005DDA0; // type:function size:0x48
fn_8005DDE8 = .text:0x8005DDE8; // type:function size:0x48
fn_8005DE30 = .text:0x8005DE30; // type:function size:0x8C
fn_8005DEBC = .text:0x8005DEBC; // type:function size:0x1A8
fn_8005E064 = .text:0x8005E064; // type:function size:0x18
fn_8005E07C = .text:0x8005E07C; // type:function size:0x18
fn_8005E094 = .text:0x8005E094; // type:function size:0x5C
fn_8005E0F0 = .text:0x8005E0F0; // type:function size:0x190
fn_8005E280 = .text:0x8005E280; // type:function size:0x8C
fn_8005E30C = .text:0x8005E30C; // type:function size:0x1C
fn_8005E328 = .text:0x8005E328; // type:function size:0xC
fn_8005E334 = .text:0x8005E334; // type:function size:0x100
fn_8005E434 = .text:0x8005E434; // type:function size:0x8C
fn_8005E4C0 = .text:0x8005E4C0; // type:function size:0x600
fn_8005EAC0 = .text:0x8005EAC0; // type:function size:0x44
fn_8005EB04 = .text:0x8005EB04; // type:function size:0x44
fn_8005EB48 = .text:0x8005EB48; // type:function size:0xF0C
fn_8005FA54 = .text:0x8005FA54; // type:function size:0x230
fn_8005FC84 = .text:0x8005FC84; // type:function size:0x29C
fn_8005FF20 = .text:0x8005FF20; // type:function size:0x240
fn_80060160 = .text:0x80060160; // type:function size:0x234
fn_80060394 = .text:0x80060394; // type:function size:0x4C8
fn_8006085C = .text:0x8006085C; // type:function size:0xC
fn_80060868 = .text:0x80060868; // type:function size:0x90
fn_800608F8 = .text:0x800608F8; // type:function size:0x8
fn_80060900 = .text:0x80060900; // type:function size:0x8
fn_80060908 = .text:0x80060908; // type:function size:0xC
fn_80060914 = .text:0x80060914; // type:function size:0x10
fn_80060924 = .text:0x80060924; // type:function size:0x18
fn_8006093C = .text:0x8006093C; // type:function size:0x7C
fn_800609B8 = .text:0x800609B8; // type:function size:0x218
fn_80060BD0 = .text:0x80060BD0; // type:function size:0x3CC
fn_80060F9C = .text:0x80060F9C; // type:function size:0x48
fn_80060FE4 = .text:0x80060FE4; // type:function size:0xC
fn_80060FF0 = .text:0x80060FF0; // type:function size:0xF4
fn_800610E4 = .text:0x800610E4; // type:function size:0x70
fn_80061154 = .text:0x80061154; // type:function size:0x50
fn_800611A4 = .text:0x800611A4; // type:function size:0x58
fn_800611FC = .text:0x800611FC; // type:function size:0x1C
fn_80061218 = .text:0x80061218; // type:function size:0x50
fn_80061268 = .text:0x80061268; // type:function size:0xC
fn_80061274 = .text:0x80061274; // type:function size:0x1C4
fn_80061438 = .text:0x80061438; // type:function size:0x94
fn_800614CC = .text:0x800614CC; // type:function size:0xBC
fn_80061588 = .text:0x80061588; // type:function size:0x5C
fn_800615E4 = .text:0x800615E4; // type:function size:0x294
fn_80061878 = .text:0x80061878; // type:function size:0x2BC
fn_80061B34 = .text:0x80061B34; // type:function size:0x4
fn_80061B38 = .text:0x80061B38; // type:function size:0x34
fn_80061B6C = .text:0x80061B6C; // type:function size:0x180
fn_80061CEC = .text:0x80061CEC; // type:function size:0x30
fn_80061D1C = .text:0x80061D1C; // type:function size:0x94
fn_80061DB0 = .text:0x80061DB0; // type:function size:0x8
fn_80061DB8 = .text:0x80061DB8; // type:function size:0x164
fn_80061F1C = .text:0x80061F1C; // type:function size:0x20
fn_80061F3C = .text:0x80061F3C; // type:function size:0x4
fn_80061F40 = .text:0x80061F40; // type:function size:0x4
fn_80061F44 = .text:0x80061F44; // type:function size:0x150
fn_80062094 = .text:0x80062094; // type:function size:0x48
fn_800620DC = .text:0x800620DC; // type:function size:0x3C
fn_80062118 = .text:0x80062118; // type:function size:0xBC
fn_800621D4 = .text:0x800621D4; // type:function size:0x8
fn_800621DC = .text:0x800621DC; // type:function size:0x38
fn_80062214 = .text:0x80062214; // type:function size:0x38
fn_8006224C = .text:0x8006224C; // type:function size:0x3C
fn_80062288 = .text:0x80062288; // type:function size:0x40
fn_800622C8 = .text:0x800622C8; // type:function size:0x44
fn_8006230C = .text:0x8006230C; // type:function size:0x68
fn_80062374 = .text:0x80062374; // type:function size:0x58
fn_800623CC = .text:0x800623CC; // type:function size:0x58
fn_80062424 = .text:0x80062424; // type:function size:0x58
fn_8006247C = .text:0x8006247C; // type:function size:0x4F4
fn_80062970 = .text:0x80062970; // type:function size:0x40
fn_800629B0 = .text:0x800629B0; // type:function size:0x120
fn_80062AD0 = .text:0x80062AD0; // type:function size:0x210
fn_80062CE0 = .text:0x80062CE0; // type:function size:0x148
fn_80062E28 = .text:0x80062E28; // type:function size:0x284
fn_800630AC = .text:0x800630AC; // type:function size:0x418
fn_800634C4 = .text:0x800634C4; // type:function size:0x94
fn_80063558 = .text:0x80063558; // type:function size:0xF8
fn_80063650 = .text:0x80063650; // type:function size:0x308
fn_80063958 = .text:0x80063958; // type:function size:0x434
fn_80063D8C = .text:0x80063D8C; // type:function size:0x2E0
fn_8006406C = .text:0x8006406C; // type:function size:0x78
fn_800640E4 = .text:0x800640E4; // type:function size:0x180
fn_80064264 = .text:0x80064264; // type:function size:0xA8
fn_8006430C = .text:0x8006430C; // type:function size:0xF8
fn_80064404 = .text:0x80064404; // type:function size:0x8
fn_8006440C = .text:0x8006440C; // type:function size:0x18
fn_80064424 = .text:0x80064424; // type:function size:0x34
fn_80064458 = .text:0x80064458; // type:function size:0x20
fn_80064478 = .text:0x80064478; // type:function size:0x34
fn_800644AC = .text:0x800644AC; // type:function size:0x38
fn_800644E4 = .text:0x800644E4; // type:function size:0x8
fn_800644EC = .text:0x800644EC; // type:function size:0x38
fn_80064524 = .text:0x80064524; // type:function size:0x1C
fn_80064540 = .text:0x80064540; // type:function size:0x10
fn_80064550 = .text:0x80064550; // type:function size:0x24
fn_80064574 = .text:0x80064574; // type:function size:0x24
fn_80064598 = .text:0x80064598; // type:function size:0x30
fn_800645C8 = .text:0x800645C8; // type:function size:0x158
fn_80064720 = .text:0x80064720; // type:function size:0x30
fn_80064750 = .text:0x80064750; // type:function size:0x1C
fn_8006476C = .text:0x8006476C; // type:function size:0x218
fn_80064984 = .text:0x80064984; // type:function size:0x20
fn_800649A4 = .text:0x800649A4; // type:function size:0xCC
fn_80064A70 = .text:0x80064A70; // type:function size:0x58
fn_80064AC8 = .text:0x80064AC8; // type:function size:0xB0
fn_80064B78 = .text:0x80064B78; // type:function size:0x30
fn_80064BA8 = .text:0x80064BA8; // type:function size:0xBC
fn_80064C64 = .text:0x80064C64; // type:function size:0x64
fn_80064CC8 = .text:0x80064CC8; // type:function size:0xB4
fn_80064D7C = .text:0x80064D7C; // type:function size:0x20
fn_80064D9C = .text:0x80064D9C; // type:function size:0x20
fn_80064DBC = .text:0x80064DBC; // type:function size:0x20
fn_80064DDC = .text:0x80064DDC; // type:function size:0x20
fn_80064DFC = .text:0x80064DFC; // type:function size:0xC0
fn_80064EBC = .text:0x80064EBC; // type:function size:0x24
fn_80064EE0 = .text:0x80064EE0; // type:function size:0x24
fn_80064F04 = .text:0x80064F04; // type:function size:0x20
fn_80064F24 = .text:0x80064F24; // type:function size:0x24
fn_80064F48 = .text:0x80064F48; // type:function size:0x4
fn_80064F4C = .text:0x80064F4C; // type:function size:0x20
fn_80064F6C = .text:0x80064F6C; // type:function size:0x20
fn_80064F8C = .text:0x80064F8C; // type:function size:0x20
fn_80064FAC = .text:0x80064FAC; // type:function size:0x20
fn_80064FCC = .text:0x80064FCC; // type:function size:0x20
fn_80064FEC = .text:0x80064FEC; // type:function size:0x20
fn_8006500C = .text:0x8006500C; // type:function size:0x20
fn_8006502C = .text:0x8006502C; // type:function size:0x20
fn_8006504C = .text:0x8006504C; // type:function size:0x20
fn_8006506C = .text:0x8006506C; // type:function size:0x20
fn_8006508C = .text:0x8006508C; // type:function size:0x20
fn_800650AC = .text:0x800650AC; // type:function size:0x44
fn_800650F0 = .text:0x800650F0; // type:function size:0x20
fn_80065110 = .text:0x80065110; // type:function size:0x20
fn_80065130 = .text:0x80065130; // type:function size:0x20
fn_80065150 = .text:0x80065150; // type:function size:0x20
fn_80065170 = .text:0x80065170; // type:function size:0x64
fn_800651D4 = .text:0x800651D4; // type:function size:0x260
fn_80065434 = .text:0x80065434; // type:function size:0x2F0
fn_80065724 = .text:0x80065724; // type:function size:0x154
fn_80065878 = .text:0x80065878; // type:function size:0x38
fn_800658B0 = .text:0x800658B0; // type:function size:0xFC
fn_800659AC = .text:0x800659AC; // type:function size:0x38
fn_800659E4 = .text:0x800659E4; // type:function size:0x38
fn_80065A1C = .text:0x80065A1C; // type:function size:0x24
fn_80065A40 = .text:0x80065A40; // type:function size:0x38
fn_80065A78 = .text:0x80065A78; // type:function size:0x9C
fn_80065B14 = .text:0x80065B14; // type:function size:0xAC
fn_80065BC0 = .text:0x80065BC0; // type:function size:0x20
fn_80065BE0 = .text:0x80065BE0; // type:function size:0x290
fn_80065E70 = .text:0x80065E70; // type:function size:0x190
fn_80066000 = .text:0x80066000; // type:function size:0x2C4
fn_800662C4 = .text:0x800662C4; // type:function size:0x5C
fn_80066320 = .text:0x80066320; // type:function size:0x2C0
fn_800665E0 = .text:0x800665E0; // type:function size:0x29C
fn_8006687C = .text:0x8006687C; // type:function size:0x278
fn_80066AF4 = .text:0x80066AF4; // type:function size:0x3D0
fn_80066EC4 = .text:0x80066EC4; // type:function size:0x20
fn_80066EE4 = .text:0x80066EE4; // type:function size:0x230
fn_80067114 = .text:0x80067114; // type:function size:0x54
fn_80067168 = .text:0x80067168; // type:function size:0x250
fn_800673B8 = .text:0x800673B8; // type:function size:0x50
fn_80067408 = .text:0x80067408; // type:function size:0x34
fn_8006743C = .text:0x8006743C; // type:function size:0xC0
fn_800674FC = .text:0x800674FC; // type:function size:0x68
fn_80067564 = .text:0x80067564; // type:function size:0xC0
fn_80067624 = .text:0x80067624; // type:function size:0xC0
fn_800676E4 = .text:0x800676E4; // type:function size:0xC0
fn_800677A4 = .text:0x800677A4; // type:function size:0xBC
fn_80067860 = .text:0x80067860; // type:function size:0x664
fn_80067EC4 = .text:0x80067EC4; // type:function size:0x134
fn_80067FF8 = .text:0x80067FF8; // type:function size:0x27C
fn_80068274 = .text:0x80068274; // type:function size:0x40
fn_800682B4 = .text:0x800682B4; // type:function size:0x4
fn_800682B8 = .text:0x800682B8; // type:function size:0x60
fn_80068318 = .text:0x80068318; // type:function size:0xE4
fn_800683FC = .text:0x800683FC; // type:function size:0x60
fn_8006845C = .text:0x8006845C; // type:function size:0x64
fn_800684C0 = .text:0x800684C0; // type:function size:0x1A0
fn_80068660 = .text:0x80068660; // type:function size:0x428
fn_80068A88 = .text:0x80068A88; // type:function size:0x60
fn_80068AE8 = .text:0x80068AE8; // type:function size:0xCC
fn_80068BB4 = .text:0x80068BB4; // type:function size:0x1C4
fn_80068D78 = .text:0x80068D78; // type:function size:0x210
fn_80068F88 = .text:0x80068F88; // type:function size:0x164
fn_800690EC = .text:0x800690EC; // type:function size:0x14
fn_80069100 = .text:0x80069100; // type:function size:0x178
fn_80069278 = .text:0x80069278; // type:function size:0x6C
fn_800692E4 = .text:0x800692E4; // type:function size:0xC
fn_800692F0 = .text:0x800692F0; // type:function size:0xC0
fn_800693B0 = .text:0x800693B0; // type:function size:0x34
fn_800693E4 = .text:0x800693E4; // type:function size:0x20
fn_80069404 = .text:0x80069404; // type:function size:0x20
fn_80069424 = .text:0x80069424; // type:function size:0x3C
fn_80069460 = .text:0x80069460; // type:function size:0x40
fn_800694A0 = .text:0x800694A0; // type:function size:0x40
fn_800694E0 = .text:0x800694E0; // type:function size:0x64
fn_80069544 = .text:0x80069544; // type:function size:0x100
fn_80069644 = .text:0x80069644; // type:function size:0x100
fn_80069744 = .text:0x80069744; // type:function size:0x100
fn_80069844 = .text:0x80069844; // type:function size:0x90
fn_800698D4 = .text:0x800698D4; // type:function size:0x40
fn_80069914 = .text:0x80069914; // type:function size:0x44
fn_80069958 = .text:0x80069958; // type:function size:0x6C
fn_800699C4 = .text:0x800699C4; // type:function size:0xBC
fn_80069A80 = .text:0x80069A80; // type:function size:0x110
fn_80069B90 = .text:0x80069B90; // type:function size:0x240
fn_80069DD0 = .text:0x80069DD0; // type:function size:0x30
fn_80069E00 = .text:0x80069E00; // type:function size:0x8
fn_80069E08 = .text:0x80069E08; // type:function size:0xD8
fn_80069EE0 = .text:0x80069EE0; // type:function size:0x18C
fn_8006A06C = .text:0x8006A06C; // type:function size:0xA4
fn_8006A110 = .text:0x8006A110; // type:function size:0x78
fn_8006A188 = .text:0x8006A188; // type:function size:0x248
fn_8006A3D0 = .text:0x8006A3D0; // type:function size:0x4C
fn_8006A41C = .text:0x8006A41C; // type:function size:0x4C
fn_8006A468 = .text:0x8006A468; // type:function size:0xB8
fn_8006A520 = .text:0x8006A520; // type:function size:0x130
fn_8006A650 = .text:0x8006A650; // type:function size:0x94
fn_8006A6E4 = .text:0x8006A6E4; // type:function size:0xE8
fn_8006A7CC = .text:0x8006A7CC; // type:function size:0x5C
fn_8006A828 = .text:0x8006A828; // type:function size:0x14
fn_8006A83C = .text:0x8006A83C; // type:function size:0xC
fn_8006A848 = .text:0x8006A848; // type:function size:0x8
fn_8006A850 = .text:0x8006A850; // type:function size:0x40
fn_8006A890 = .text:0x8006A890; // type:function size:0x128
fn_8006A9B8 = .text:0x8006A9B8; // type:function size:0x48
fn_8006AA00 = .text:0x8006AA00; // type:function size:0x54
fn_8006AA54 = .text:0x8006AA54; // type:function size:0x4
fn_8006AA58 = .text:0x8006AA58; // type:function size:0x18
fn_8006AA70 = .text:0x8006AA70; // type:function size:0x8
fn_8006AA78 = .text:0x8006AA78; // type:function size:0x8
fn_8006AA80 = .text:0x8006AA80; // type:function size:0x8
fn_8006AA88 = .text:0x8006AA88; // type:function size:0x10C
fn_8006AB94 = .text:0x8006AB94; // type:function size:0x1AC
fn_8006AD40 = .text:0x8006AD40; // type:function size:0x15C
fn_8006AE9C = .text:0x8006AE9C; // type:function size:0x1B4
fn_8006B050 = .text:0x8006B050; // type:function size:0x5C
fn_8006B0AC = .text:0x8006B0AC; // type:function size:0x2C
fn_8006B0D8 = .text:0x8006B0D8; // type:function size:0xC
fn_8006B0E4 = .text:0x8006B0E4; // type:function size:0x8
fn_8006B0EC = .text:0x8006B0EC; // type:function size:0x50
fn_8006B13C = .text:0x8006B13C; // type:function size:0x190
fn_8006B2CC = .text:0x8006B2CC; // type:function size:0x48
fn_8006B314 = .text:0x8006B314; // type:function size:0x60
fn_8006B374 = .text:0x8006B374; // type:function size:0x4
fn_8006B378 = .text:0x8006B378; // type:function size:0x48
fn_8006B3C0 = .text:0x8006B3C0; // type:function size:0x54
fn_8006B414 = .text:0x8006B414; // type:function size:0x214
fn_8006B628 = .text:0x8006B628; // type:function size:0x64
fn_8006B68C = .text:0x8006B68C; // type:function size:0x114
fn_8006B7A0 = .text:0x8006B7A0; // type:function size:0xA8
fn_8006B848 = .text:0x8006B848; // type:function size:0x98
fn_8006B8E0 = .text:0x8006B8E0; // type:function size:0x90
fn_8006B970 = .text:0x8006B970; // type:function size:0x90
fn_8006BA00 = .text:0x8006BA00; // type:function size:0x90
fn_8006BA90 = .text:0x8006BA90; // type:function size:0x90
fn_8006BB20 = .text:0x8006BB20; // type:function size:0x10
fn_8006BB30 = .text:0x8006BB30; // type:function size:0x10
fn_8006BB40 = .text:0x8006BB40; // type:function size:0xF0
fn_8006BC30 = .text:0x8006BC30; // type:function size:0x44
fn_8006BC74 = .text:0x8006BC74; // type:function size:0x104
fn_8006BD78 = .text:0x8006BD78; // type:function size:0x1B4
fn_8006BF2C = .text:0x8006BF2C; // type:function size:0x148
fn_8006C074 = .text:0x8006C074; // type:function size:0x17C
fn_8006C1F0 = .text:0x8006C1F0; // type:function size:0x58
fn_8006C248 = .text:0x8006C248; // type:function size:0xD8
fn_8006C320 = .text:0x8006C320; // type:function size:0x90
fn_8006C3B0 = .text:0x8006C3B0; // type:function size:0x90
fn_8006C440 = .text:0x8006C440; // type:function size:0x90
fn_8006C4D0 = .text:0x8006C4D0; // type:function size:0x90
fn_8006C560 = .text:0x8006C560; // type:function size:0x68
fn_8006C5C8 = .text:0x8006C5C8; // type:function size:0x68
fn_8006C630 = .text:0x8006C630; // type:function size:0x68
fn_8006C698 = .text:0x8006C698; // type:function size:0x68
fn_8006C700 = .text:0x8006C700; // type:function size:0x90
fn_8006C790 = .text:0x8006C790; // type:function size:0x68
fn_8006C7F8 = .text:0x8006C7F8; // type:function size:0x60
fn_8006C858 = .text:0x8006C858; // type:function size:0x98
fn_8006C8F0 = .text:0x8006C8F0; // type:function size:0x60
fn_8006C950 = .text:0x8006C950; // type:function size:0x64
fn_8006C9B4 = .text:0x8006C9B4; // type:function size:0x70
fn_8006CA24 = .text:0x8006CA24; // type:function size:0x288
fn_8006CCAC = .text:0x8006CCAC; // type:function size:0x60
fn_8006CD0C = .text:0x8006CD0C; // type:function size:0xF4
fn_8006CE00 = .text:0x8006CE00; // type:function size:0x98
fn_8006CE98 = .text:0x8006CE98; // type:function size:0x230
fn_8006D0C8 = .text:0x8006D0C8; // type:function size:0x10C
fn_8006D1D4 = .text:0x8006D1D4; // type:function size:0x14
fn_8006D1E8 = .text:0x8006D1E8; // type:function size:0xC
fn_8006D1F4 = .text:0x8006D1F4; // type:function size:0x14
fn_8006D208 = .text:0x8006D208; // type:function size:0x58
fn_8006D260 = .text:0x8006D260; // type:function size:0x14
fn_8006D274 = .text:0x8006D274; // type:function size:0x20
fn_8006D294 = .text:0x8006D294; // type:function size:0x20
fn_8006D2B4 = .text:0x8006D2B4; // type:function size:0x10
fn_8006D2C4 = .text:0x8006D2C4; // type:function size:0x8
fn_8006D2CC = .text:0x8006D2CC; // type:function size:0x8
fn_8006D2D4 = .text:0x8006D2D4; // type:function size:0x10
fn_8006D2E4 = .text:0x8006D2E4; // type:function size:0xB4
fn_8006D398 = .text:0x8006D398; // type:function size:0xAC
fn_8006D444 = .text:0x8006D444; // type:function size:0x154
fn_8006D598 = .text:0x8006D598; // type:function size:0x10
fn_8006D5A8 = .text:0x8006D5A8; // type:function size:0x5C
fn_8006D604 = .text:0x8006D604; // type:function size:0x338
fn_8006D93C = .text:0x8006D93C; // type:function size:0xCC
fn_8006DA08 = .text:0x8006DA08; // type:function size:0xDC
fn_8006DAE4 = .text:0x8006DAE4; // type:function size:0x178
fn_8006DC5C = .text:0x8006DC5C; // type:function size:0x58
fn_8006DCB4 = .text:0x8006DCB4; // type:function size:0x5C
fn_8006DD10 = .text:0x8006DD10; // type:function size:0x1A0
fn_8006DEB0 = .text:0x8006DEB0; // type:function size:0x200
fn_8006E0B0 = .text:0x8006E0B0; // type:function size:0xD0
fn_8006E180 = .text:0x8006E180; // type:function size:0x6EC
fn_8006E86C = .text:0x8006E86C; // type:function size:0x94
fn_8006E900 = .text:0x8006E900; // type:function size:0x120
fn_8006EA20 = .text:0x8006EA20; // type:function size:0x74
fn_8006EA94 = .text:0x8006EA94; // type:function size:0x20
fn_8006EAB4 = .text:0x8006EAB4; // type:function size:0x18
fn_8006EACC = .text:0x8006EACC; // type:function size:0x18
fn_8006EAE4 = .text:0x8006EAE4; // type:function size:0x14
fn_8006EAF8 = .text:0x8006EAF8; // type:function size:0x108
fn_8006EC00 = .text:0x8006EC00; // type:function size:0x16C
fn_8006ED6C = .text:0x8006ED6C; // type:function size:0x178
fn_8006EEE4 = .text:0x8006EEE4; // type:function size:0x16C
fn_8006F050 = .text:0x8006F050; // type:function size:0x154
fn_8006F1A4 = .text:0x8006F1A4; // type:function size:0x108
fn_8006F2AC = .text:0x8006F2AC; // type:function size:0xAC
fn_8006F358 = .text:0x8006F358; // type:function size:0x138
fn_8006F490 = .text:0x8006F490; // type:function size:0xB0
fn_8006F540 = .text:0x8006F540; // type:function size:0xF8
fn_8006F638 = .text:0x8006F638; // type:function size:0x168
fn_8006F7A0 = .text:0x8006F7A0; // type:function size:0xB0
fn_8006F850 = .text:0x8006F850; // type:function size:0x134
fn_8006F984 = .text:0x8006F984; // type:function size:0x48
fn_8006F9CC = .text:0x8006F9CC; // type:function size:0x18
fn_8006F9E4 = .text:0x8006F9E4; // type:function size:0x60
fn_8006FA44 = .text:0x8006FA44; // type:function size:0x7C
fn_8006FAC0 = .text:0x8006FAC0; // type:function size:0xC0
fn_8006FB80 = .text:0x8006FB80; // type:function size:0x9C
fn_8006FC1C = .text:0x8006FC1C; // type:function size:0x134
fn_8006FD50 = .text:0x8006FD50; // type:function size:0x30
fn_8006FD80 = .text:0x8006FD80; // type:function size:0x28
fn_8006FDA8 = .text:0x8006FDA8; // type:function size:0x34
fn_8006FDDC = .text:0x8006FDDC; // type:function size:0x54
fn_8006FE30 = .text:0x8006FE30; // type:function size:0x20
fn_8006FE50 = .text:0x8006FE50; // type:function size:0x44
fn_8006FE94 = .text:0x8006FE94; // type:function size:0x5BC
fn_80070450 = .text:0x80070450; // type:function size:0xAC
fn_800704FC = .text:0x800704FC; // type:function size:0x1F0
fn_800706EC = .text:0x800706EC; // type:function size:0x28
fn_80070714 = .text:0x80070714; // type:function size:0x88
fn_8007079C = .text:0x8007079C; // type:function size:0x20
fn_800707BC = .text:0x800707BC; // type:function size:0x44
fn_80070800 = .text:0x80070800; // type:function size:0x2A8
fn_80070AA8 = .text:0x80070AA8; // type:function size:0x610
fn_800710B8 = .text:0x800710B8; // type:function size:0x124
fn_800711DC = .text:0x800711DC; // type:function size:0xA0
fn_8007127C = .text:0x8007127C; // type:function size:0x790
fn_80071A0C = .text:0x80071A0C; // type:function size:0x2B4
fn_80071CC0 = .text:0x80071CC0; // type:function size:0x240
fn_80071F00 = .text:0x80071F00; // type:function size:0xAC
fn_80071FAC = .text:0x80071FAC; // type:function size:0x144
fn_800720F0 = .text:0x800720F0; // type:function size:0x1D0
fn_800722C0 = .text:0x800722C0; // type:function size:0xC0
fn_80072380 = .text:0x80072380; // type:function size:0x28
fn_800723A8 = .text:0x800723A8; // type:function size:0x70
fn_80072418 = .text:0x80072418; // type:function size:0xBC
fn_800724D4 = .text:0x800724D4; // type:function size:0x70
fn_80072544 = .text:0x80072544; // type:function size:0xBC
fn_80072600 = .text:0x80072600; // type:function size:0xD0
fn_800726D0 = .text:0x800726D0; // type:function size:0x20C
fn_800728DC = .text:0x800728DC; // type:function size:0x300
fn_80072BDC = .text:0x80072BDC; // type:function size:0x8C
fn_80072C68 = .text:0x80072C68; // type:function size:0x1A4
fn_80072E0C = .text:0x80072E0C; // type:function size:0xE0
fn_80072EEC = .text:0x80072EEC; // type:function size:0x9C
fn_80072F88 = .text:0x80072F88; // type:function size:0x50
fn_80072FD8 = .text:0x80072FD8; // type:function size:0x1C
fn_80072FF4 = .text:0x80072FF4; // type:function size:0x198
fn_8007318C = .text:0x8007318C; // type:function size:0x2C0
fn_8007344C = .text:0x8007344C; // type:function size:0x240
fn_8007368C = .text:0x8007368C; // type:function size:0xDC
fn_80073768 = .text:0x80073768; // type:function size:0xF0
fn_80073858 = .text:0x80073858; // type:function size:0x98
fn_800738F0 = .text:0x800738F0; // type:function size:0xDC
fn_800739CC = .text:0x800739CC; // type:function size:0x44
fn_80073A10 = .text:0x80073A10; // type:function size:0x6C
fn_80073A7C = .text:0x80073A7C; // type:function size:0x6C
fn_80073AE8 = .text:0x80073AE8; // type:function size:0xB8
fn_80073BA0 = .text:0x80073BA0; // type:function size:0x190
fn_80073D30 = .text:0x80073D30; // type:function size:0x60
fn_80073D90 = .text:0x80073D90; // type:function size:0x1B0
fn_80073F40 = .text:0x80073F40; // type:function size:0x1B8
fn_800740F8 = .text:0x800740F8; // type:function size:0xB8
fn_800741B0 = .text:0x800741B0; // type:function size:0x28
fn_800741D8 = .text:0x800741D8; // type:function size:0x98
fn_80074270 = .text:0x80074270; // type:function size:0xF4
fn_80074364 = .text:0x80074364; // type:function size:0x74
fn_800743D8 = .text:0x800743D8; // type:function size:0x1C
fn_800743F4 = .text:0x800743F4; // type:function size:0x90
fn_80074484 = .text:0x80074484; // type:function size:0x164
fn_800745E8 = .text:0x800745E8; // type:function size:0x598
fn_80074B80 = .text:0x80074B80; // type:function size:0x54
fn_80074BD4 = .text:0x80074BD4; // type:function size:0xA4
fn_80074C78 = .text:0x80074C78; // type:function size:0x64
fn_80074CDC = .text:0x80074CDC; // type:function size:0x64
fn_80074D40 = .text:0x80074D40; // type:function size:0x10
fn_80074D50 = .text:0x80074D50; // type:function size:0x168
fn_80074EB8 = .text:0x80074EB8; // type:function size:0x13C
fn_80074FF4 = .text:0x80074FF4; // type:function size:0xA8
fn_8007509C = .text:0x8007509C; // type:function size:0xD0
fn_8007516C = .text:0x8007516C; // type:function size:0xD0
fn_8007523C = .text:0x8007523C; // type:function size:0x80
fn_800752BC = .text:0x800752BC; // type:function size:0x1DC
fn_80075498 = .text:0x80075498; // type:function size:0x498
fn_80075930 = .text:0x80075930; // type:function size:0x174
fn_80075AA4 = .text:0x80075AA4; // type:function size:0x15C
fn_80075C00 = .text:0x80075C00; // type:function size:0xFC
fn_80075CFC = .text:0x80075CFC; // type:function size:0x80
fn_80075D7C = .text:0x80075D7C; // type:function size:0x60
fn_80075DDC = .text:0x80075DDC; // type:function size:0x6C
fn_80075E48 = .text:0x80075E48; // type:function size:0x94
fn_80075EDC = .text:0x80075EDC; // type:function size:0x30
fn_80075F0C = .text:0x80075F0C; // type:function size:0x94
fn_80075FA0 = .text:0x80075FA0; // type:function size:0xC4
fn_80076064 = .text:0x80076064; // type:function size:0xDC
fn_80076140 = .text:0x80076140; // type:function size:0x34
fn_80076174 = .text:0x80076174; // type:function size:0x6C
fn_800761E0 = .text:0x800761E0; // type:function size:0x118
fn_800762F8 = .text:0x800762F8; // type:function size:0x74
fn_8007636C = .text:0x8007636C; // type:function size:0x24
fn_80076390 = .text:0x80076390; // type:function size:0xDC
fn_8007646C = .text:0x8007646C; // type:function size:0xA8
fn_80076514 = .text:0x80076514; // type:function size:0xE4
_ctors = .ctors:0x80076600; // type:label scope:global data:4byte
__init_cpp_exceptions_reference = .ctors:0x80076600; // type:object size:0x4 scope:global
_dtors = .dtors:0x80076620; // type:label scope:global data:4byte
__destroy_global_chain_reference = .dtors:0x80076620; // type:object size:0x4 scope:global
__fini_cpp_exceptions_reference = .dtors:0x80076624; // type:object size:0x4 scope:global
lbl_80076640 = .rodata:0x80076640; // type:object size:0xF data:string
lbl_80076650 = .rodata:0x80076650; // type:object size:0xA data:string
__constants = .rodata:0x80076660; // type:object size:0x18 data:double
lbl_80076678 = .rodata:0x80076678; // type:object size:0x52 data:string_table
lbl_800766CC = .rodata:0x800766CC; // type:object size:0x13 data:string
lbl_800766E0 = .rodata:0x800766E0; // type:object size:0xF data:string
lbl_800766F0 = .rodata:0x800766F0; // type:object size:0x1A data:string_table
lbl_80076710 = .rodata:0x80076710; // type:object size:0x36 data:string
lbl_80076748 = .rodata:0x80076748; // type:object size:0x39 data:string
fix_pool_sizes = .rodata:0x80076788; // type:object size:0x18 data:4byte
@stringBase0 = .rodata:0x800767A0; // type:object size:0xDD scope:local data:string_table
@stringBase0 = .rodata:0x80076880; // type:object size:0x5 scope:local data:string_table
@stringBase0 = .rodata:0x80076888; // type:object size:0x25 scope:local data:string_table
lbl_800768B0 = .rodata:0x800768B0; // type:object size:0x28 data:4byte
lbl_800768D8 = .rodata:0x800768D8; // type:object size:0x2A
lbl_80076904 = .rodata:0x80076904; // type:object size:0x9 data:string
bp = .rodata:0x80076910; // type:object size:0x10 data:double
dp_h = .rodata:0x80076920; // type:object size:0x10 data:double
dp_l = .rodata:0x80076930; // type:object size:0x10 data:double
two_over_pi = .rodata:0x80076940; // type:object size:0x108
npio2_hw = .rodata:0x80076A48; // type:object size:0x80 data:float
init_jk = .rodata:0x80076AC8; // type:object size:0x10
PIo2 = .rodata:0x80076AD8; // type:object size:0x40 data:double
T = .rodata:0x80076B18; // type:object size:0x68 data:double
atanhi = .rodata:0x80076B80; // type:object size:0x20 data:double
atanlo = .rodata:0x80076BA0; // type:object size:0x20 data:double
aT = .rodata:0x80076BC0; // type:object size:0x58 data:double
@62 = .rodata:0x80076C18; // type:object size:0x1C scope:local data:string
lbl_80076C38 = .rodata:0x80076C38; // type:object size:0x1D data:string
gTRKMemMap = .rodata:0x80076C58; // type:object size:0x10 data:4byte
lbl_80076C68 = .rodata:0x80076C68; // type:object size:0x28 data:4byte
lbl_80076C90 = .rodata:0x80076C90; // type:object size:0x28 data:4byte
lbl_80076CB8 = .rodata:0x80076CB8; // type:object size:0x28 data:4byte
@154 = .rodata:0x80076CE0; // type:object size:0x21 scope:local data:string
@155 = .rodata:0x80076D04; // type:object size:0x24 scope:local data:string
lbl_80076D28 = .rodata:0x80076D28; // type:object size:0x10
lbl_80076D38 = .rodata:0x80076D38; // type:object size:0x10 data:4byte
lbl_80076D48 = .rodata:0x80076D48; // type:object size:0x30 data:4byte
lbl_80076D78 = .rodata:0x80076D78; // type:object size:0x20
lbl_80076D98 = .rodata:0x80076D98; // type:object size:0x10
lbl_80076DA8 = .rodata:0x80076DA8; // type:object size:0x10
lbl_80076DB8 = .rodata:0x80076DB8; // type:object size:0x20
lbl_80076DD8 = .rodata:0x80076DD8; // type:object size:0x30
lbl_80076E08 = .rodata:0x80076E08; // type:object size:0x8 data:4byte
lbl_80076E10 = .rodata:0x80076E10; // type:object size:0x20
lbl_80076E30 = .rodata:0x80076E30; // type:object size:0x28
lbl_80076E58 = .rodata:0x80076E58; // type:object size:0x8
lbl_80076E60 = .rodata:0x80076E60; // type:object size:0x8
lbl_80076E68 = .rodata:0x80076E68; // type:object size:0x8
lbl_80076E70 = .rodata:0x80076E70; // type:object size:0x8
lbl_80076E78 = .rodata:0x80076E78; // type:object size:0x8
lbl_80076E80 = .rodata:0x80076E80; // type:object size:0x8
lbl_80076E88 = .rodata:0x80076E88; // type:object size:0x8
lbl_80076E90 = .rodata:0x80076E90; // type:object size:0x8
lbl_80076E98 = .rodata:0x80076E98; // type:object size:0x888
lbl_80077720 = .rodata:0x80077720; // type:object size:0x8
lbl_80077728 = .rodata:0x80077728; // type:object size:0x8
lbl_80077730 = .rodata:0x80077730; // type:object size:0x4 data:float
lbl_80077738 = .rodata:0x80077738; // type:object size:0x8 data:double
lbl_80077740 = .rodata:0x80077740; // type:object size:0x8 data:double
lbl_80077748 = .rodata:0x80077748; // type:object size:0x8 data:double
lbl_80077750 = .rodata:0x80077750; // type:object size:0x4 data:float
lbl_80077754 = .rodata:0x80077754; // type:object size:0x4 data:float
lbl_80077758 = .rodata:0x80077758; // type:object size:0x4 data:float
lbl_8007775C = .rodata:0x8007775C; // type:object size:0x4 data:float
lbl_80077760 = .rodata:0x80077760; // type:object size:0x8 data:double
lbl_80077768 = .rodata:0x80077768; // type:object size:0x8
lbl_80077770 = .rodata:0x80077770; // type:object size:0x8
lbl_80077778 = .rodata:0x80077778; // type:object size:0x8 data:double
lbl_80077780 = .rodata:0x80077780; // type:object size:0x8 data:double
lbl_80077788 = .rodata:0x80077788; // type:object size:0x30
lbl_800777B8 = .rodata:0x800777B8; // type:object size:0x60
lbl_80077818 = .rodata:0x80077818; // type:object size:0x38 data:double
lbl_80077850 = .rodata:0x80077850; // type:object size:0x114
lbl_80077964 = .rodata:0x80077964; // type:object size:0x30
lbl_80077994 = .rodata:0x80077994; // type:object size:0xC4
lbl_80077A58 = .rodata:0x80077A58; // type:object size:0x28 data:string
lbl_80077A80 = .rodata:0x80077A80; // type:object size:0x2C
lbl_80077AAC = .rodata:0x80077AAC; // type:object size:0x8C
lbl_80077B38 = .rodata:0x80077B38; // type:object size:0x60
lbl_80077B98 = .rodata:0x80077B98; // type:object size:0x2C
lbl_80077BC4 = .rodata:0x80077BC4; // type:object size:0x2C
lbl_80077BF0 = .rodata:0x80077BF0; // type:object size:0x2C
lbl_80077C1C = .rodata:0x80077C1C; // type:object size:0x2C
lbl_80077C48 = .rodata:0x80077C48; // type:object size:0x2C
lbl_80077C74 = .rodata:0x80077C74; // type:object size:0x84
lbl_80077CF8 = .rodata:0x80077CF8; // type:object size:0x64
lbl_80077D5C = .rodata:0x80077D5C; // type:object size:0x28
lbl_80077D84 = .rodata:0x80077D84; // type:object size:0x28 data:string
lbl_80077DAC = .rodata:0x80077DAC; // type:object size:0x28 data:string
lbl_80077DD4 = .rodata:0x80077DD4; // type:object size:0x28
lbl_80077DFC = .rodata:0x80077DFC; // type:object size:0x4 data:float
lbl_80077E00 = .rodata:0x80077E00; // type:object size:0x2C
lbl_80077E2C = .rodata:0x80077E2C; // type:object size:0x2C
lbl_80077E58 = .rodata:0x80077E58; // type:object size:0x28
lbl_80077E80 = .rodata:0x80077E80; // type:object size:0x2C
lbl_80077EAC = .rodata:0x80077EAC; // type:object size:0x40
lbl_80077EEC = .rodata:0x80077EEC; // type:object size:0x2C
lbl_80077F18 = .rodata:0x80077F18; // type:object size:0x2C data:string
lbl_80077F44 = .rodata:0x80077F44; // type:object size:0x4 data:4byte
lbl_80077F48 = .rodata:0x80077F48; // type:object size:0x38
lbl_80077F80 = .rodata:0x80077F80; // type:object size:0x48
lbl_80077FC8 = .rodata:0x80077FC8; // type:object size:0x40
lbl_80078008 = .rodata:0x80078008; // type:object size:0x10
lbl_80078018 = .rodata:0x80078018; // type:object size:0x30
lbl_80078048 = .rodata:0x80078048; // type:object size:0x8 data:4byte
lbl_80078050 = .rodata:0x80078050; // type:object size:0x2C data:string
lbl_8007807C = .rodata:0x8007807C; // type:object size:0x24
lbl_800780A0 = .rodata:0x800780A0; // type:object size:0x11C
lbl_800781BC = .rodata:0x800781BC; // type:object size:0x24 data:string
lbl_800781E0 = .rodata:0x800781E0; // type:object size:0x1FC
lbl_800783DC = .rodata:0x800783DC; // type:object size:0x38
lbl_80078414 = .rodata:0x80078414; // type:object size:0x1EC
lbl_80078600 = .rodata:0x80078600; // type:object size:0x8B8
lbl_80078EB8 = .rodata:0x80078EB8; // type:object size:0x1C data:string
lbl_80078ED4 = .rodata:0x80078ED4; // type:object size:0x88
lbl_80078F5C = .rodata:0x80078F5C; // type:object size:0x1C
lbl_80078F78 = .rodata:0x80078F78; // type:object size:0x18 data:string
lbl_80078F90 = .rodata:0x80078F90; // type:object size:0x1C
lbl_80078FAC = .rodata:0x80078FAC; // type:object size:0x18
lbl_80078FC4 = .rodata:0x80078FC4; // type:object size:0x1C
lbl_80078FE0 = .rodata:0x80078FE0; // type:object size:0x18
lbl_80078FF8 = .rodata:0x80078FF8; // type:object size:0x1C
lbl_80079014 = .rodata:0x80079014; // type:object size:0xCC
lbl_800790E0 = .rodata:0x800790E0; // type:object size:0x28
lbl_80079108 = .rodata:0x80079108; // type:object size:0xB8
lbl_800791C0 = .rodata:0x800791C0; // type:object size:0x2C
lbl_800791EC = .rodata:0x800791EC; // type:object size:0x18 data:string
lbl_80079204 = .rodata:0x80079204; // type:object size:0x18 data:string
lbl_8007921C = .rodata:0x8007921C; // type:object size:0x1C
lbl_80079238 = .rodata:0x80079238; // type:object size:0x1C0
lbl_800793F8 = .rodata:0x800793F8; // type:object size:0x24
lbl_8007941C = .rodata:0x8007941C; // type:object size:0x24
lbl_80079440 = .rodata:0x80079440; // type:object size:0x24
lbl_80079464 = .rodata:0x80079464; // type:object size:0x20 data:string
lbl_80079484 = .rodata:0x80079484; // type:object size:0x24
lbl_800794A8 = .rodata:0x800794A8; // type:object size:0x2C
lbl_800794D4 = .rodata:0x800794D4; // type:object size:0x2C
lbl_80079500 = .rodata:0x80079500; // type:object size:0x30
lbl_80079530 = .rodata:0x80079530; // type:object size:0x8 data:4byte
lbl_80079538 = .rodata:0x80079538; // type:object size:0x18
lbl_80079550 = .rodata:0x80079550; // type:object size:0x10
lbl_80079560 = .rodata:0x80079560; // type:object size:0x2C data:string
lbl_8007958C = .rodata:0x8007958C; // type:object size:0x4 data:4byte
lbl_80079590 = .rodata:0x80079590; // type:object size:0x10
lbl_800795A0 = .rodata:0x800795A0; // type:object size:0x34
lbl_800795D4 = .rodata:0x800795D4; // type:object size:0x120
lbl_800796F4 = .rodata:0x800796F4; // type:object size:0x20 data:string
lbl_80079714 = .rodata:0x80079714; // type:object size:0x34
lbl_80079748 = .rodata:0x80079748; // type:object size:0x30
lbl_80079778 = .rodata:0x80079778; // type:object size:0x90 data:4byte
lbl_80079808 = .rodata:0x80079808; // type:object size:0x40
lbl_80079848 = .rodata:0x80079848; // type:object size:0x3C
lbl_80079884 = .rodata:0x80079884; // type:object size:0x18 data:string
lbl_8007989C = .rodata:0x8007989C; // type:object size:0x18 data:string
lbl_800798B4 = .rodata:0x800798B4; // type:object size:0x78
lbl_8007992C = .rodata:0x8007992C; // type:object size:0x1C
lbl_80079948 = .rodata:0x80079948; // type:object size:0x98
lbl_800799E0 = .rodata:0x800799E0; // type:object size:0x2C data:string
lbl_80079A0C = .rodata:0x80079A0C; // type:object size:0x4 data:4byte
lbl_80079A10 = .rodata:0x80079A10; // type:object size:0x4 data:string
lbl_80079A14 = .rodata:0x80079A14; // type:object size:0xC
lbl_80079A20 = .rodata:0x80079A20; // type:object size:0x1B8
lbl_80079BD8 = .rodata:0x80079BD8; // type:object size:0x24 data:string
lbl_80079BFC = .rodata:0x80079BFC; // type:object size:0x2C
lbl_80079C28 = .rodata:0x80079C28; // type:object size:0x24
lbl_80079C4C = .rodata:0x80079C4C; // type:object size:0x10 data:string
lbl_80079C5C = .rodata:0x80079C5C; // type:object size:0x2C
lbl_80079C88 = .rodata:0x80079C88; // type:object size:0x40 data:string
lbl_80079CC8 = .rodata:0x80079CC8; // type:object size:0x40
lbl_80079D08 = .rodata:0x80079D08; // type:object size:0x38
lbl_80079D40 = .rodata:0x80079D40; // type:object size:0x18
lbl_80079D58 = .rodata:0x80079D58; // type:object size:0x30
lbl_80079D88 = .rodata:0x80079D88; // type:object size:0x1A data:string
lbl_80079DC0 = .data:0x80079DC0; // type:object size:0x664
jumptable_8007A424 = .data:0x8007A424; // type:object size:0x34 scope:local
__vt__Q23std9exception = .data:0x8007A458; // type:object size:0x10
jumptable_8007A468 = .data:0x8007A468; // type:object size:0x44 scope:local
jumptable_8007A4AC = .data:0x8007A4AC; // type:object size:0x44 scope:local
jumptable_8007A4F0 = .data:0x8007A4F0; // type:object size:0x44 scope:local
lbl_8007A534 = .data:0x8007A534; // type:object size:0xC
__vt__Q23std13bad_exception = .data:0x8007A540; // type:object size:0x10
__files = .data:0x8007A550; // type:object size:0x140 scope:global
pow_10$415 = .data:0x8007A690; // type:object size:0x40 data:double
jumptable_8007A6D0 = .data:0x8007A6D0; // type:object size:0x124 scope:local
__ctype_map = .data:0x8007A7F8; // type:object size:0x100
__lower_map = .data:0x8007A8F8; // type:object size:0x100
__upper_map = .data:0x8007A9F8; // type:object size:0x100
__lconv = .data:0x8007AAF8; // type:object size:0x38 data:4byte
@1249 = .data:0x8007AB30; // type:object size:0x84 scope:local
jumptable_8007ABB4 = .data:0x8007ABB4; // type:object size:0x84 scope:local
jumptable_8007AC38 = .data:0x8007AC38; // type:object size:0xE0 scope:local
jumptable_8007AD18 = .data:0x8007AD18; // type:object size:0x44 scope:local
jumptable_8007AD60 = .data:0x8007AD60; // type:object size:0xD0 scope:local
jumptable_8007AE30 = .data:0x8007AE30; // type:object size:0x44 scope:local
jumptable_8007AE74 = .data:0x8007AE74; // type:object size:0x44 scope:local
gTRKDispatchTable = .data:0x8007AEB8; // type:object size:0x84
jumptable_8007AF40 = .data:0x8007AF40; // type:object size:0x1C scope:local
jumptable_8007AF5C = .data:0x8007AF5C; // type:object size:0x1C scope:local
gTRKRestoreFlags = .data:0x8007AF78; // type:object size:0x9 scope:global data:byte
gTRKExceptionStatus = .data:0x8007AF84; // type:object size:0x10 scope:local data:4byte
gTRKStepStatus = .data:0x8007AF94; // type:object size:0x14 data:4byte
TRK_ISR_OFFSETS = .data:0x8007AFA8; // type:object size:0x3C data:4byte
gDBCommTable = .data:0x8007AFE8; // type:object size:0x1C scope:global data:4byte
lbl_8007B008 = .data:0x8007B008; // type:object size:0x44 data:string
lbl_8007B050 = .data:0x8007B050; // type:object size:0x44 data:string
lbl_8007B098 = .data:0x8007B098; // type:object size:0x45 data:string
lbl_8007B0E0 = .data:0x8007B0E0; // type:object size:0x44 data:string
__AXSrcCycles = .data:0x8007B128; // type:object size:0x14
__AXMainMixCycles = .data:0x8007B13C; // type:object size:0x40
__AXAuxMixCycles = .data:0x8007B17C; // type:object size:0x80
__AXCompressorTable = .data:0x8007B200; // type:object size:0x1A40
axDspSlave = .data:0x8007CC40; // type:object size:0x1F20
lens$108 = .data:0x8007EB60; // type:object size:0x20 scope:local data:4byte
lens$108 = .data:0x8007EB80; // type:object size:0x10 scope:local data:4byte
rsmpTab12khz = .data:0x8007EB90; // type:object size:0x800
lbl_8007F390 = .data:0x8007F390; // type:object size:0x46 data:string
ResetFunctionInfo = .data:0x8007F3D8; // type:object size:0x10
CardData = .data:0x8007F400; // type:object size:0x160
SectorSizeTable = .data:0x8007F560; // type:object size:0x20
LatencyTable = .data:0x8007F580; // type:object size:0x20
lbl_8007F5A0 = .data:0x8007F5A0; // type:object size:0x18 data:string
lbl_8007F5B8 = .data:0x8007F5B8; // type:object size:0x45 data:string
lbl_8007F600 = .data:0x8007F600; // type:object size:0x1E data:string
lbl_8007F620 = .data:0x8007F620; // type:object size:0xC data:string
lbl_8007F62C = .data:0x8007F62C; // type:object size:0x9 data:string
lbl_8007F638 = .data:0x8007F638; // type:object size:0x1D data:string
lbl_8007F658 = .data:0x8007F658; // type:object size:0x2D data:string
lbl_8007F688 = .data:0x8007F688; // type:object size:0x2D data:string
lbl_8007F6B8 = .data:0x8007F6B8; // type:object size:0x2D data:string
lbl_8007F6E8 = .data:0x8007F6E8; // type:object size:0x2D data:string
lbl_8007F718 = .data:0x8007F718; // type:object size:0x2D data:string
lbl_8007F748 = .data:0x8007F748; // type:object size:0x2B data:string
lbl_8007F778 = .data:0x8007F778; // type:object size:0xC8 data:string
lbl_8007F840 = .data:0x8007F840; // type:object size:0x37 data:string
lbl_8007F878 = .data:0x8007F878; // type:object size:0x34 data:string
lbl_8007F8AC = .data:0x8007F8AC; // type:object size:0x2F data:string
lbl_8007F8E0 = .data:0x8007F8E0; // type:object size:0x45 data:string
@18 = .data:0x8007F928; // type:object size:0xA scope:local data:string
lbl_8007F934 = .data:0x8007F934; // type:object size:0x34 data:string
jumptable_8007F968 = .data:0x8007F968; // type:object size:0x40 scope:local
ImmCommand = .data:0x8007F9A8; // type:object size:0xC data:4byte
lbl_8007F9B4 = .data:0x8007F9B4; // type:object size:0x41 data:string
jumptable_8007F9F8 = .data:0x8007F9F8; // type:object size:0x34 scope:local
jumptable_8007FA2C = .data:0x8007FA2C; // type:object size:0x34 scope:local
ErrorTable = .data:0x8007FA60; // type:object size:0x48 data:4byte
@36 = .data:0x8007FAA8; // type:object size:0x1A scope:local data:string
lbl_8007FAC4 = .data:0x8007FAC4; // type:object size:0x16 scope:local data:string
lbl_8007FADC = .data:0x8007FADC; // type:object size:0x14 scope:local data:string
lbl_8007FAF0 = .data:0x8007FAF0; // type:object size:0x14 scope:local data:string
lbl_8007FB04 = .data:0x8007FB04; // type:object size:0x14 scope:local data:string
lbl_8007FB18 = .data:0x8007FB18; // type:object size:0x110
lbl_8007FC28 = .data:0x8007FC28; // type:object size:0x44 data:string
lbl_8007FC6C = .data:0x8007FC6C; // type:object size:0xD0
lbl_8007FD3C = .data:0x8007FD3C; // type:object size:0x1C
GXResetFuncInfo = .data:0x8007FD58; // type:object size:0x10 scope:local
jumptable_8007FD68 = .data:0x8007FD68; // type:object size:0x68 scope:local
jumptable_8007FDD0 = .data:0x8007FDD0; // type:object size:0x44 scope:local
jumptable_8007FE14 = .data:0x8007FE14; // type:object size:0x44 scope:local
jumptable_8007FE58 = .data:0x8007FE58; // type:object size:0x1C scope:local
jumptable_8007FE74 = .data:0x8007FE74; // type:object size:0x54 scope:local
lbl_8007FEC8 = .data:0x8007FEC8; // type:object size:0x3C
lbl_8007FF04 = .data:0x8007FF04; // type:object size:0x3C
lbl_8007FF40 = .data:0x8007FF40; // type:object size:0x3C
lbl_8007FF7C = .data:0x8007FF7C; // type:object size:0x3C
jumptable_8007FFB8 = .data:0x8007FFB8; // type:object size:0xF4 scope:local
jumptable_800800AC = .data:0x800800AC; // type:object size:0xF4 scope:local
jumptable_800801A0 = .data:0x800801A0; // type:object size:0x3C scope:local
lbl_800801E0 = .data:0x800801E0; // type:object size:0x50
lbl_80080230 = .data:0x80080230; // type:object size:0x28
lbl_80080258 = .data:0x80080258; // type:object size:0x20
jumptable_80080278 = .data:0x80080278; // type:object size:0x5C scope:local
jumptable_800802D4 = .data:0x800802D4; // type:object size:0x90 scope:local
lbl_80080368 = .data:0x80080368; // type:object size:0xBC0
@1 = .data:0x80080F28; // type:object size:0x44 scope:local data:string
lbl_80081120 = .data:0x80081120; // type:object size:0x398
DSPInitCode = .data:0x800814B8; // type:object size:0x80 scope:local
@69 = .data:0x80081538; // type:object size:0x29 scope:local data:string
lbl_80081768 = .data:0x80081768; // type:object size:0x1B4
@74 = .data:0x8008191C; // type:object size:0x23 scope:local data:string
@13 = .data:0x80081940; // type:object size:0x16 scope:local data:string
@87 = .data:0x80081C1C; // type:object size:0x40 scope:local
lbl_80081C60 = .data:0x80081C60; // type:object size:0x180
lbl_80081DE0 = .data:0x80081DE0; // type:object size:0x990
lbl_80082770 = .data:0x80082770; // type:object size:0x30 data:4byte
lbl_800827A0 = .data:0x800827A0; // type:object size:0x28
lbl_800827C8 = .data:0x800827C8; // type:object size:0x28
ResetFunctionInfo = .data:0x800827F0; // type:object size:0x10 scope:local
lbl_80082800 = .data:0x80082800; // type:object size:0x48
lbl_80082848 = .data:0x80082848; // type:object size:0x10
lbl_80082858 = .data:0x80082858; // type:object size:0x44 data:string
Si = .data:0x8008289C; // type:object size:0x14 scope:local data:4byte
Type = .data:0x800828B0; // type:object size:0x10 scope:local
XYNTSC = .data:0x80082970; // type:object size:0x30 scope:local
lbl_80082A08 = .data:0x80082A08; // type:object size:0x1F4
jumptable_80082BFC = .data:0x80082BFC; // type:object size:0x6C scope:local
@724 = .data:0x80082DBC; // type:object size:0x1C scope:local
lbl_80082DD8 = .data:0x80082DD8; // type:object size:0x18
lbl_80082DF0 = .data:0x80082DF0; // type:object size:0xC
lbl_80082DFC = .data:0x80082DFC; // type:object size:0xC
lbl_80082E08 = .data:0x80082E08; // type:object size:0x10 data:4byte
lbl_80082E18 = .data:0x80082E18; // type:object size:0x10 data:string
jumptable_80082E28 = .data:0x80082E28; // type:object size:0x28 scope:local
lbl_80082E50 = .data:0x80082E50; // type:object size:0x20
lbl_80082E70 = .data:0x80082E70; // type:object size:0x10
jumptable_80082E80 = .data:0x80082E80; // type:object size:0x4C scope:local
lbl_80082ED0 = .data:0x80082ED0; // type:object size:0x28
lbl_80082EF8 = .data:0x80082EF8; // type:object size:0x28
lbl_80082F20 = .data:0x80082F20; // type:object size:0x18
lbl_80082F38 = .data:0x80082F38; // type:object size:0xC
lbl_80082F44 = .data:0x80082F44; // type:object size:0x2C
lbl_80082F70 = .data:0x80082F70; // type:object size:0x2C data:string
lbl_80082F9C = .data:0x80082F9C; // type:object size:0x38
lbl_80082FD4 = .data:0x80082FD4; // type:object size:0x2C data:string
lbl_80083000 = .data:0x80083000; // type:object size:0x38
lbl_80083038 = .data:0x80083038; // type:object size:0x30 data:string
lbl_80083068 = .data:0x80083068; // type:object size:0x10
lbl_80083078 = .data:0x80083078; // type:object size:0x20
lbl_80083098 = .data:0x80083098; // type:object size:0x20
lbl_800830B8 = .data:0x800830B8; // type:object size:0x8 data:4byte
lbl_800830C0 = .data:0x800830C0; // type:object size:0x4 data:4byte
lbl_800830C4 = .data:0x800830C4; // type:object size:0x4 data:4byte
lbl_800830C8 = .data:0x800830C8; // type:object size:0x200
lbl_800832C8 = .data:0x800832C8; // type:object size:0x4 data:4byte
lbl_800832CC = .data:0x800832CC; // type:object size:0x4 data:4byte
lbl_800832D0 = .data:0x800832D0; // type:object size:0x10 data:4byte
lbl_800832E0 = .data:0x800832E0; // type:object size:0x8 data:4byte
lbl_800832E8 = .data:0x800832E8; // type:object size:0x18 data:4byte
lbl_80083300 = .data:0x80083300; // type:object size:0x8 data:4byte
lbl_80083308 = .data:0x80083308; // type:object size:0x68
lbl_80083370 = .data:0x80083370; // type:object size:0x8 data:4byte
lbl_80083378 = .data:0x80083378; // type:object size:0x30
lbl_800833A8 = .data:0x800833A8; // type:object size:0x30
lbl_800833D8 = .data:0x800833D8; // type:object size:0x1C0
lbl_80083598 = .data:0x80083598; // type:object size:0x68
lbl_80083600 = .data:0x80083600; // type:object size:0x4 data:4byte
lbl_80083604 = .data:0x80083604; // type:object size:0x7C data:4byte
lbl_80083680 = .data:0x80083680; // type:object size:0x2008
lbl_80085688 = .data:0x80085688; // type:object size:0x660
lbl_80085CE8 = .data:0x80085CE8; // type:object size:0x10
lbl_80085CF8 = .data:0x80085CF8; // type:object size:0x30 data:byte
lbl_80085D28 = .data:0x80085D28; // type:object size:0x380
lbl_800860A8 = .data:0x800860A8; // type:object size:0xC
lbl_800860B4 = .data:0x800860B4; // type:object size:0x1A data:string
lbl_800860E0 = .bss:0x800860E0; // type:object size:0xC
lbl_800860EC = .bss:0x800860EC; // type:object size:0xB84
fragmentinfo = .bss:0x80086C70; // type:object size:0xC scope:local data:4byte
__atexit_funcs = .bss:0x80086C80; // type:object size:0x100 scope:local
protopool$192 = .bss:0x80086D80; // type:object size:0x38 data:4byte
stderr_buff = .bss:0x80086DB8; // type:object size:0x100
stdout_buff = .bss:0x80086EB8; // type:object size:0x100
stdin_buff = .bss:0x80086FB8; // type:object size:0x100
signal_funcs = .bss:0x800870B8; // type:object size:0x18
gTRKEventQueue = .bss:0x800870D0; // type:object size:0x28
gTRKBigEndian = .bss:0x800870F8; // type:object size:0x4 scope:global data:4byte
gTRKMsgBufs = .bss:0x80087100; // type:object size:0x19B0
gTRKInputPendingPtr = .bss:0x80088AB0; // type:object size:0x4 scope:global data:4byte
gTRKFramingState = .bss:0x80088AB4; // type:object size:0x14 data:4byte
gTRKDispatchTableSize = .bss:0x80088AC8; // type:object size:0x4 data:4byte
IsTRKConnected = .bss:0x80088AD0; // type:object size:0x4 data:4byte
TRK_saved_exceptionID = .bss:0x80088AD8; // type:object size:0x2 scope:local data:2byte
gTRKState = .bss:0x80088ADC; // type:object size:0xA4 scope:global data:4byte
gTRKCPUState = .bss:0x80088B80; // type:object size:0x430 scope:global
gTRKSaveState = .bss:0x80088FB0; // type:object size:0x94 scope:global data:4byte
TRKvalue128_temp = .bss:0x80089044; // type:object size:0x10
lc_base = .bss:0x80089058; // type:object size:0x4 data:4byte
TRK_mainError = .bss:0x80089060; // type:object size:0x4 scope:local data:4byte
gWritePos = .bss:0x80089068; // type:object size:0x4 data:4byte
gReadPos = .bss:0x8008906C; // type:object size:0x4 data:4byte
gReadCount = .bss:0x80089070; // type:object size:0x4 data:4byte
_MetroTRK_Has_Framing = .bss:0x80089074; // type:object size:0x4 data:4byte
gReadBuf = .bss:0x80089078; // type:object size:0x110A
gWriteBuf = .bss:0x8008A184; // type:object size:0x110A
bUseSerialIO = .bss:0x8008B290; // type:object size:0x1 data:byte
__AXStackHead = .bss:0x8008B298; // type:object size:0x80 data:4byte
__AXStackTail = .bss:0x8008B318; // type:object size:0x80 data:4byte
__AXBufferAuxA = .bss:0x8008B3A0; // type:object size:0x1680 data:4byte
__AXBufferAuxB = .bss:0x8008CA20; // type:object size:0x1680 data:4byte
__AXCommandList = .bss:0x8008E0A0; // type:object size:0x600
__AXOutBuffer = .bss:0x8008E6A0; // type:object size:0x500 data:4byte
__AXOutSBuffer = .bss:0x8008EBA0; // type:object size:0x280
__AXDSPTask = .bss:0x8008EE20; // type:object size:0x50
__AXDramImage = .bss:0x8008EE70; // type:object size:0x4000
__AXLocalProfile = .bss:0x80092E70; // type:object size:0x38
__AXStudio = .bss:0x80092EC0; // type:object size:0x36
__AXPB = .bss:0x80092F00; // type:object size:0x3B00 data:2byte
__AXITD = .bss:0x80096A00; // type:object size:0x1000
__AXUpdates = .bss:0x80097A00; // type:object size:0x4000
__AXVPB = .bss:0x8009BA00; // type:object size:0x8900
__CARDBlock = .bss:0x800A4300; // type:object size:0x220 data:4byte
__CARDDiskNone = .bss:0x800A4520; // type:object size:0x20
CommandList = .bss:0x800A4540; // type:object size:0x3C scope:local data:4byte
AlarmForTimeout = .bss:0x800A45A8; // type:object size:0x28 scope:local
BB2 = .bss:0x800A4620; // type:object size:0x20 scope:local
CurrDiskID = .bss:0x800A4640; // type:object size:0x20
DummyCommandBlock = .bss:0x800A4660; // type:object size:0x30 scope:local
ResetAlarm = .bss:0x800A4690; // type:object size:0x28 scope:local
WaitingQueue = .bss:0x800A46B8; // type:object size:0x20 scope:local data:4byte
bb2Buf = .bss:0x800A46D8; // type:object size:0x3F scope:local
block$16 = .bss:0x800A4718; // type:object size:0x30 scope:local
Ecb = .bss:0x800A4748; // type:object size:0xC0 scope:local data:4byte
gxData = .bss:0x800A4808; // type:object size:0x4F8 scope:local
lbl_800A4D80 = .bss:0x800A4D80; // type:object size:0x1800 data:4byte
DriveInfo = .bss:0x800A6580; // type:object size:0x20 scope:local
__OSErrorTable = .bss:0x800A65D0; // type:object size:0x44 scope:global data:4byte
lbl_800A6620 = .bss:0x800A6620; // type:object size:0x20
Scb = .bss:0x800A6640; // type:object size:0x54 scope:local data:4byte
RunQueue = .bss:0x800A6698; // type:object size:0x100 scope:local data:4byte
lbl_800A7090 = .bss:0x800A7090; // type:object size:0x10
lbl_800A70A0 = .bss:0x800A70A0; // type:object size:0x40
Packet = .bss:0x800A70E0; // type:object size:0x80 scope:local data:4byte
lbl_800A7160 = .bss:0x800A7160; // type:object size:0xA0
TypeTime = .bss:0x800A7200; // type:object size:0x20 scope:local
lbl_800A7220 = .bss:0x800A7220; // type:object size:0x20
lbl_800A7240 = .bss:0x800A7240; // type:object size:0x40
lbl_800A7280 = .bss:0x800A7280; // type:object size:0x60 data:4byte
lbl_800A72E0 = .bss:0x800A72E0; // type:object size:0x148 data:2byte
lbl_800A7428 = .bss:0x800A7428; // type:object size:0x80
lbl_800A74A8 = .bss:0x800A74A8; // type:object size:0x10
lbl_800A74B8 = .bss:0x800A74B8; // type:object size:0x500
lbl_800A79B8 = .bss:0x800A79B8; // type:object size:0xF0
lbl_800A7AA8 = .bss:0x800A7AA8; // type:object size:0xC data:4byte
lbl_800A7AB4 = .bss:0x800A7AB4; // type:object size:0x20 data:4byte
lbl_800A7AD4 = .bss:0x800A7AD4; // type:object size:0x30
lbl_800A7B04 = .bss:0x800A7B04; // type:object size:0x10 data:float
lbl_800A7B14 = .bss:0x800A7B14; // type:object size:0x28 data:float
lbl_800A7B3C = .bss:0x800A7B3C; // type:object size:0x30 data:float
lbl_800A7B6C = .bss:0x800A7B6C; // type:object size:0x1F4
lbl_800A7D60 = .bss:0x800A7D60; // type:object size:0x20
lbl_800A7D80 = .bss:0x800A7D80; // type:object size:0xD0
lbl_800A7E50 = .bss:0x800A7E50; // type:object size:0x20
lbl_800A7E70 = .bss:0x800A7E70; // type:object size:0x20
lbl_800A7E90 = .bss:0x800A7E90; // type:object size:0x100
lbl_800A7F90 = .bss:0x800A7F90; // type:object size:0x30
lbl_800A7FC0 = .bss:0x800A7FC0; // type:object size:0x100
lbl_800A80C0 = .bss:0x800A80C0; // type:object size:0x1E0
lbl_800A82A0 = .bss:0x800A82A0; // type:object size:0x28 data:4byte
lbl_800A82C8 = .bss:0x800A82C8; // type:object size:0x30
lbl_800A82F8 = .bss:0x800A82F8; // type:object size:0x100
lbl_800A83F8 = .bss:0x800A83F8; // type:object size:0x10 data:4byte
lbl_800A8408 = .bss:0x800A8408; // type:object size:0x4 data:4byte
lbl_800A840C = .bss:0x800A840C; // type:object size:0xC04 data:byte
lbl_800A9010 = .bss:0x800A9010; // type:object size:0x9C0 data:byte
lbl_800A99D0 = .bss:0x800A99D0; // type:object size:0x4 data:4byte
lbl_800A99D4 = .bss:0x800A99D4; // type:object size:0x4 data:4byte
lbl_800A99D8 = .bss:0x800A99D8; // type:object size:0x14 data:4byte
lbl_800A99EC = .bss:0x800A99EC; // type:object size:0xC84 data:2byte
lbl_800AA670 = .bss:0x800AA670; // type:object size:0x8 data:4byte
lbl_800AA678 = .bss:0x800AA678; // type:object size:0x8 data:4byte
lbl_800AA680 = .bss:0x800AA680; // type:object size:0x4 data:4byte
lbl_800AA684 = .bss:0x800AA684; // type:object size:0x4 data:4byte
lbl_800AA688 = .bss:0x800AA688; // type:object size:0x120
lbl_800AA7A8 = .bss:0x800AA7A8; // type:object size:0x8 data:4byte
lbl_800AA7B0 = .bss:0x800AA7B0; // type:object size:0x40
lbl_800AA7F0 = .bss:0x800AA7F0; // type:object size:0x400
lbl_800AABF0 = .bss:0x800AABF0; // type:object size:0x8 data:4byte
lbl_800AABF8 = .bss:0x800AABF8; // type:object size:0x9D0 data:4byte
lbl_800AB5C8 = .bss:0x800AB5C8; // type:object size:0x16C0 data:byte
lbl_800ACC88 = .bss:0x800ACC88; // type:object size:0x4 data:4byte
lbl_800ACC8C = .bss:0x800ACC8C; // type:object size:0x4 data:4byte
lbl_800ACC90 = .bss:0x800ACC90; // type:object size:0x4 data:4byte
lbl_800ACC94 = .bss:0x800ACC94; // type:object size:0x4 data:4byte
lbl_800ACC98 = .bss:0x800ACC98; // type:object size:0xE60 data:byte
lbl_800ADAF8 = .bss:0x800ADAF8; // type:object size:0x4 data:4byte
lbl_800ADAFC = .bss:0x800ADAFC; // type:object size:0x20 data:4byte
lbl_800ADB1C = .bss:0x800ADB1C; // type:object size:0x10 data:4byte
lbl_800ADB2C = .bss:0x800ADB2C; // type:object size:0x14 data:4byte
lbl_800ADB40 = .bss:0x800ADB40; // type:object size:0x10 data:4byte
lbl_800ADB50 = .bss:0x800ADB50; // type:object size:0x4 data:4byte
lbl_800ADB54 = .bss:0x800ADB54; // type:object size:0x3C4 data:4byte
lbl_800ADF18 = .bss:0x800ADF18; // type:object size:0x4
lbl_800ADF1C = .bss:0x800ADF1C; // type:object size:0x7CAC data:4byte
lbl_800B5BC8 = .bss:0x800B5BC8; // type:object size:0x4 data:4byte
lbl_800B5BCC = .bss:0x800B5BCC; // type:object size:0x4 data:4byte
lbl_800B5BD0 = .bss:0x800B5BD0; // type:object size:0x8 data:4byte
lbl_800B5BD8 = .bss:0x800B5BD8; // type:object size:0x4 data:4byte
lbl_800B5BDC = .bss:0x800B5BDC; // type:object size:0x4 data:4byte
lbl_800B5BE0 = .bss:0x800B5BE0; // type:object size:0x4 data:4byte
lbl_800B5BE4 = .bss:0x800B5BE4; // type:object size:0x4 data:4byte
lbl_800B5BE8 = .bss:0x800B5BE8; // type:object size:0x4 data:4byte
lbl_800B5BEC = .bss:0x800B5BEC; // type:object size:0x20
lbl_800B5C0C = .bss:0x800B5C0C; // type:object size:0x100
lbl_800B5D0C = .bss:0x800B5D0C; // type:object size:0x4 data:4byte
lbl_800B5D10 = .bss:0x800B5D10; // type:object size:0x400
lbl_800B6110 = .bss:0x800B6110; // type:object size:0x440 data:byte
lbl_800B6550 = .bss:0x800B6550; // type:object size:0x4 data:4byte
lbl_800B6554 = .bss:0x800B6554; // type:object size:0x4 data:4byte
lbl_800B6558 = .bss:0x800B6558; // type:object size:0x2080
lbl_800B85D8 = .bss:0x800B85D8; // type:object size:0x4 data:4byte
lbl_800B85DC = .bss:0x800B85DC; // type:object size:0x140 data:4byte
lbl_800B871C = .bss:0x800B871C; // type:object size:0x344 data:4byte
lbl_800B8A60 = .bss:0x800B8A60; // type:object size:0xC data:4byte
lbl_800B8A6C = .bss:0x800B8A6C; // type:object size:0x4 data:4byte
lbl_800B8A70 = .bss:0x800B8A70; // type:object size:0x4 data:4byte
lbl_800B8A74 = .bss:0x800B8A74; // type:object size:0xFA4 data:byte
lbl_800B9A18 = .bss:0x800B9A18; // type:object size:0x100
lbl_800B9B18 = .bss:0x800B9B18; // type:object size:0x4 data:4byte
lbl_800B9B1C = .bss:0x800B9B1C; // type:object size:0x104 data:4byte
lbl_800B9C20 = .bss:0x800B9C20; // type:object size:0x10 data:4byte
lbl_800B9C30 = .bss:0x800B9C30; // type:object size:0x4 data:4byte
lbl_800B9C34 = .bss:0x800B9C34; // type:object size:0x2384 data:byte
lbl_800BBFB8 = .bss:0x800BBFB8; // type:object size:0x4 data:4byte
lbl_800BBFBC = .bss:0x800BBFBC; // type:object size:0x4 data:4byte
lbl_800BBFC0 = .bss:0x800BBFC0; // type:object size:0x4 data:4byte
lbl_800BBFC4 = .bss:0x800BBFC4; // type:object size:0x484
lbl_800BC448 = .bss:0x800BC448; // type:object size:0x4 data:4byte
lbl_800BC44C = .bss:0x800BC44C; // type:object size:0x4004 data:4byte
lbl_800C0450 = .bss:0x800C0450; // type:object size:0x4 data:4byte
lbl_800C0454 = .bss:0x800C0454; // type:object size:0xC04
lbl_800C1058 = .bss:0x800C1058; // type:object size:0x30 data:4byte
lbl_800C1088 = .bss:0x800C1088; // type:object size:0x80
lbl_800C1108 = .bss:0x800C1108; // type:object size:0x8 data:4byte
lbl_800C1110 = .bss:0x800C1110; // type:object size:0x8 data:4byte
lbl_800C1118 = .bss:0x800C1118; // type:object size:0x8 data:4byte
lbl_800C1120 = .bss:0x800C1120; // type:object size:0x200
lbl_800C1320 = .bss:0x800C1320; // type:object size:0x4 data:4byte
lbl_800C1324 = .bss:0x800C1324; // type:object size:0x9F4 data:4byte
lbl_800C1D18 = .bss:0x800C1D18; // type:object size:0x4 data:4byte
lbl_800C1D1C = .bss:0x800C1D1C; // type:object size:0x104 data:4byte
lbl_800C1E20 = .bss:0x800C1E20; // type:object size:0x4 data:4byte
lbl_800C1E24 = .bss:0x800C1E24; // type:object size:0x4 data:4byte
lbl_800C1E28 = .bss:0x800C1E28; // type:object size:0x8 data:4byte
lbl_800C1E30 = .bss:0x800C1E30; // type:object size:0x4 data:4byte
lbl_800C1E34 = .bss:0x800C1E34; // type:object size:0x10C0
lbl_800C2EF4 = .bss:0x800C2EF4; // type:object size:0xE84 data:byte
lbl_800C3D78 = .bss:0x800C3D78; // type:object size:0x14 data:4byte
lbl_800C3D8C = .bss:0x800C3D8C; // type:object size:0x194 data:4byte
lbl_800C3F20 = .bss:0x800C3F20; // type:object size:0x100
lbl_800C4020 = .bss:0x800C4020; // type:object size:0x400
__RTTI__Q23std9exception = .sdata:0x800C4420; // type:object size:0x8 scope:local
thandler__3std = .sdata:0x800C4428; // type:object size:0x4 data:4byte
uhandler__3std = .sdata:0x800C442C; // type:object size:0x4 data:4byte
fragmentID = .sdata:0x800C4430; // type:object size:0x4 scope:local data:4byte
__RTTI__Q23std9exception = .sdata:0x800C4438; // type:object size:0x8 scope:local
__RTTI__Q23std13bad_exception = .sdata:0x800C4440; // type:object size:0x8
@wstringBase0 = .sdata:0x800C4448; // type:object size:0x2 scope:local
next = .sdata:0x800C4450; // type:object size:0x4 scope:local data:4byte
__float_nan = .sdata:0x800C4458; // type:object size:0x4 data:float
__float_huge = .sdata:0x800C445C; // type:object size:0x4 data:float
__double_max = .sdata:0x800C4460; // type:object size:0x8 data:double
__double_huge = .sdata:0x800C4468; // type:object size:0x8 data:double
__extended_min = .sdata:0x800C4470; // type:object size:0x8 data:double
__extended_max = .sdata:0x800C4478; // type:object size:0x8 data:double
__AIVersion = .sdata:0x800C4480; // type:object size:0x4 data:4byte
__ARVersion = .sdata:0x800C4488; // type:object size:0x4 data:4byte
__ARQVersion = .sdata:0x800C4490; // type:object size:0x4 data:4byte
__AXVersion = .sdata:0x800C4498; // type:object size:0x4 data:4byte
axDspSlaveLength = .sdata:0x800C44A0; // type:object size:0x2 data:2byte
__AXFXAlloc = .sdata:0x800C44A8; // type:object size:0x4 data:4byte
__AXFXFree = .sdata:0x800C44AC; // type:object size:0x4 data:4byte
__CARDVersion = .sdata:0x800C44B0; // type:object size:0x4 data:4byte
next = .sdata:0x800C44B8; // type:object size:0x4 scope:local data:4byte
__CARDVendorID = .sdata:0x800C44C0; // type:object size:0x2 data:2byte
__DSPVersion = .sdata:0x800C44C8; // type:object size:0x4 data:4byte
FirstRead = .sdata:0x800C44D0; // type:object size:0x4 data:4byte
lbl_800C44D8 = .sdata:0x800C44D8; // type:object size:0x8 data:string
__DVDVersion = .sdata:0x800C44E0; // type:object size:0x4 scope:global data:4byte
autoInvalidation = .sdata:0x800C44E4; // type:object size:0x4 scope:local data:4byte
checkOptionalCommand = .sdata:0x800C44E8; // type:object size:0x4 data:4byte
lbl_800C44EC = .sdata:0x800C44EC; // type:object size:0x6 data:string
DmaCommand = .sdata:0x800C44F4; // type:object size:0x4 data:4byte
@35 = .sdata:0x800C44F8; // type:object size:0x2 scope:local data:string
@40 = .sdata:0x800C44FC; // type:object size:0x4 scope:local data:string
@41 = .sdata:0x800C4500; // type:object size:0x3 scope:local data:string
__EXIVersion = .sdata:0x800C4508; // type:object size:0x4 scope:global data:4byte
__GXVersion = .sdata:0x800C4510; // type:object size:0x4 scope:global data:4byte
lbl_800C4518 = .sdata:0x800C4518; // type:object size:0x4
lbl_800C451C = .sdata:0x800C451C; // type:object size:0x4
lbl_800C4520 = .sdata:0x800C4520; // type:object size:0x8
lbl_800C4528 = .sdata:0x800C4528; // type:object size:0x8
lbl_800C4530 = .sdata:0x800C4530; // type:object size:0x8
lbl_800C4538 = .sdata:0x800C4538; // type:object size:0x8
lbl_800C4540 = .sdata:0x800C4540; // type:object size:0x8
lbl_800C4548 = .sdata:0x800C4548; // type:object size:0x8
lbl_800C4550 = .sdata:0x800C4550; // type:object size:0x8
lbl_800C4558 = .sdata:0x800C4558; // type:object size:0x8
lbl_800C4560 = .sdata:0x800C4560; // type:object size:0x8
lbl_800C4568 = .sdata:0x800C4568; // type:object size:0x8
__OSVersion = .sdata:0x800C4570; // type:object size:0x4 scope:global data:4byte
@97 = .sdata:0x800C4574; // type:object size:0x6 scope:local data:string
lbl_800C457C = .sdata:0x800C457C; // type:object size:0x4 data:string
lbl_800C4580 = .sdata:0x800C4580; // type:object size:0x8 data:4byte
__OSArenaLo = .sdata:0x800C4588; // type:object size:0x4 scope:local data:4byte
lbl_800C4590 = .sdata:0x800C4590; // type:object size:0x4 data:4byte
@76 = .sdata:0x800C4594; // type:object size:0x2 scope:local data:string
lbl_800C4598 = .sdata:0x800C4598; // type:object size:0x8 data:2byte
SwitchThreadCallback = .sdata:0x800C45A0; // type:object size:0x4 scope:local data:4byte
lbl_800C45A8 = .sdata:0x800C45A8; // type:object size:0x4 data:4byte
lbl_800C45AC = .sdata:0x800C45AC; // type:object size:0x4 data:4byte
lbl_800C45B0 = .sdata:0x800C45B0; // type:object size:0x4 data:4byte
lbl_800C45B4 = .sdata:0x800C45B4; // type:object size:0x4 data:4byte
lbl_800C45B8 = .sdata:0x800C45B8; // type:object size:0x4 data:4byte
lbl_800C45BC = .sdata:0x800C45BC; // type:object size:0x4 data:4byte
lbl_800C45C0 = .sdata:0x800C45C0; // type:object size:0x4
lbl_800C45C4 = .sdata:0x800C45C4; // type:object size:0x4
__SIVersion = .sdata:0x800C45C8; // type:object size:0x4 scope:global data:4byte
lbl_800C45D0 = .sdata:0x800C45D0; // type:object size:0x4 data:4byte
lbl_800C45D4 = .sdata:0x800C45D4; // type:object size:0xC
lbl_800C45E0 = .sdata:0x800C45E0; // type:object size:0x8 data:4byte
lbl_800C45E8 = .sdata:0x800C45E8; // type:object size:0xC
lbl_800C45F4 = .sdata:0x800C45F4; // type:object size:0x8 data:float
lbl_800C45FC = .sdata:0x800C45FC; // type:object size:0x4 data:float
lbl_800C4600 = .sdata:0x800C4600; // type:object size:0x8 data:float
lbl_800C4608 = .sdata:0x800C4608; // type:object size:0x8 data:4byte
lbl_800C4610 = .sdata:0x800C4610; // type:object size:0x8
lbl_800C4618 = .sdata:0x800C4618; // type:object size:0x8
lbl_800C4620 = .sdata:0x800C4620; // type:object size:0x8 data:4byte
lbl_800C4628 = .sdata:0x800C4628; // type:object size:0x4 data:4byte
lbl_800C462C = .sdata:0x800C462C; // type:object size:0x4 data:4byte
lbl_800C4630 = .sdata:0x800C4630; // type:object size:0x1 data:byte
lbl_800C4640 = .sbss:0x800C4640; // type:object size:0x4 data:4byte
lbl_800C4644 = .sbss:0x800C4644; // type:object size:0x4 data:4byte
lbl_800C4648 = .sbss:0x800C4648; // type:object size:0x4 data:4byte
lbl_800C464C = .sbss:0x800C464C; // type:object size:0x4 data:4byte
lbl_800C4650 = .sbss:0x800C4650; // type:object size:0x4 data:4byte
lbl_800C4654 = .sbss:0x800C4654; // type:object size:0x4 data:4byte
lbl_800C4658 = .sbss:0x800C4658; // type:object size:0x4 data:4byte
lbl_800C465C = .sbss:0x800C465C; // type:object size:0x4 data:4byte
lbl_800C4660 = .sbss:0x800C4660; // type:object size:0x4 data:4byte
lbl_800C4664 = .sbss:0x800C4664; // type:object size:0x4 data:4byte
lbl_800C4668 = .sbss:0x800C4668; // type:object size:0x8 data:4byte
lbl_800C4670 = .sbss:0x800C4670; // type:object size:0x8 data:4byte
__global_destructor_chain = .sbss:0x800C4678; // type:object size:0x4 scope:global data:4byte
__aborting = .sbss:0x800C4680; // type:object size:0x4 scope:global data:4byte
__atexit_curr_func = .sbss:0x800C4684; // type:object size:0x4 scope:local data:4byte
__stdio_exit = .sbss:0x800C4688; // type:object size:0x4 scope:global data:4byte
__console_exit = .sbss:0x800C468C; // type:object size:0x4 scope:global data:4byte
init$193 = .sbss:0x800C4690; // type:object size:0x1 data:byte
errno = .sbss:0x800C4698; // type:object size:0x4 data:4byte
initialized$16 = .sbss:0x800C46A0; // type:object size:0x4 data:4byte
zero = .sbss:0x800C46A8; // type:object size:0x8 scope:local data:double
zero = .sbss:0x800C46B0; // type:object size:0x8 scope:local data:double
__AIS_Callback = .sbss:0x800C46B8; // type:object size:0x4 data:4byte
__AID_Callback = .sbss:0x800C46BC; // type:object size:0x4 data:4byte
__CallbackStack = .sbss:0x800C46C0; // type:object size:0x4 data:4byte
__OldStack = .sbss:0x800C46C4; // type:object size:0x4 data:4byte
__AI_init_flag = .sbss:0x800C46C8; // type:object size:0x4 data:4byte
__AID_Active = .sbss:0x800C46CC; // type:object size:0x4 data:4byte
bound_32KHz = .sbss:0x800C46D0; // type:object size:0x8 data:4byte
bound_48KHz = .sbss:0x800C46D8; // type:object size:0x8 data:4byte
min_wait = .sbss:0x800C46E0; // type:object size:0x8 data:4byte
max_wait = .sbss:0x800C46E8; // type:object size:0x8 data:4byte
buffer = .sbss:0x800C46F0; // type:object size:0x8 data:4byte
__AR_Callback = .sbss:0x800C46F8; // type:object size:0x4 data:4byte
__AR_Size = .sbss:0x800C46FC; // type:object size:0x4 data:4byte
__AR_InternalSize = .sbss:0x800C4700; // type:object size:0x4 data:4byte
__AR_ExpansionSize = .sbss:0x800C4704; // type:object size:0x4 data:4byte
__AR_StackPointer = .sbss:0x800C4708; // type:object size:0x4 data:4byte
__AR_FreeBlocks = .sbss:0x800C470C; // type:object size:0x4 data:4byte
__AR_BlockLength = .sbss:0x800C4710; // type:object size:0x4 data:4byte
__AR_init_flag = .sbss:0x800C4714; // type:object size:0x4 data:4byte
__ARQRequestQueueHi = .sbss:0x800C4718; // type:object size:0x4 data:4byte
__ARQRequestTailHi = .sbss:0x800C471C; // type:object size:0x4 data:4byte
__ARQRequestQueueLo = .sbss:0x800C4720; // type:object size:0x4 data:4byte
__ARQRequestTailLo = .sbss:0x800C4724; // type:object size:0x4 data:4byte
__ARQRequestPendingHi = .sbss:0x800C4728; // type:object size:0x4 data:4byte
__ARQRequestPendingLo = .sbss:0x800C472C; // type:object size:0x4 data:4byte
__ARQCallbackHi = .sbss:0x800C4730; // type:object size:0x4 data:4byte
__ARQCallbackLo = .sbss:0x800C4734; // type:object size:0x4 data:4byte
__ARQChunkSize = .sbss:0x800C4738; // type:object size:0x4 data:4byte
__ARQ_init_flag = .sbss:0x800C473C; // type:object size:0x4 data:4byte
__AXCallbackStack = .sbss:0x800C4740; // type:object size:0x4 data:4byte
__AXCallbackAuxA = .sbss:0x800C4748; // type:object size:0x4 data:4byte
__AXCallbackAuxB = .sbss:0x800C474C; // type:object size:0x4 data:4byte
__AXContextAuxA = .sbss:0x800C4750; // type:object size:0x4 data:4byte
__AXContextAuxB = .sbss:0x800C4754; // type:object size:0x4 data:4byte
__AXAuxADspWrite = .sbss:0x800C4758; // type:object size:0x4 data:4byte
__AXAuxADspRead = .sbss:0x800C475C; // type:object size:0x4 data:4byte
__AXAuxBDspWrite = .sbss:0x800C4760; // type:object size:0x4 data:4byte
__AXAuxBDspRead = .sbss:0x800C4764; // type:object size:0x4 data:4byte
__AXAuxDspWritePosition = .sbss:0x800C4768; // type:object size:0x4 data:4byte
__AXAuxDspReadPosition = .sbss:0x800C476C; // type:object size:0x4 data:4byte
__AXAuxDspWritePositionDpl2 = .sbss:0x800C4770; // type:object size:0x4 data:4byte
__AXAuxDspReadPositionDpl2 = .sbss:0x800C4774; // type:object size:0x4 data:4byte
__AXAuxCpuReadWritePosition = .sbss:0x800C4778; // type:object size:0x4 data:4byte
__AXCommandListPosition = .sbss:0x800C4780; // type:object size:0x4 data:4byte
__AXClWrite = .sbss:0x800C4784; // type:object size:0x4 data:4byte
__AXCommandListCycles = .sbss:0x800C4788; // type:object size:0x4 data:4byte
__AXCompressor = .sbss:0x800C478C; // type:object size:0x4 data:4byte
__AXClMode = .sbss:0x800C4790; // type:object size:0x4 data:4byte
__AXOutFrame = .sbss:0x800C4798; // type:object size:0x4 data:4byte
__AXOutDspReady = .sbss:0x800C479C; // type:object size:0x4 data:4byte
__AXOsTime = .sbss:0x800C47A0; // type:object size:0x8 data:4byte
__AXUserFrameCallback = .sbss:0x800C47A8; // type:object size:0x4 data:4byte
__AXDSPInitFlag = .sbss:0x800C47AC; // type:object size:0x4 data:4byte
__AXDSPDoneFlag = .sbss:0x800C47B0; // type:object size:0x4 data:4byte
__AXDebugSteppingMode = .sbss:0x800C47B4; // type:object size:0x4 data:4byte
__AXOutThreadQueue = .sbss:0x800C47B8; // type:object size:0x8
__AXSpbAL = .sbss:0x800C47C0; // type:object size:0x4 data:4byte
__AXSpbAR = .sbss:0x800C47C4; // type:object size:0x4 data:4byte
__AXSpbAS = .sbss:0x800C47C8; // type:object size:0x4 data:4byte
__AXSpbAAL = .sbss:0x800C47CC; // type:object size:0x4 data:4byte
__AXSpbAAR = .sbss:0x800C47D0; // type:object size:0x4 data:4byte
__AXSpbAAS = .sbss:0x800C47D4; // type:object size:0x4 data:4byte
__AXSpbABL = .sbss:0x800C47D8; // type:object size:0x4 data:4byte
__AXSpbABR = .sbss:0x800C47DC; // type:object size:0x4 data:4byte
__AXSpbABS = .sbss:0x800C47E0; // type:object size:0x4 data:4byte
__AXMaxDspCycles = .sbss:0x800C47E8; // type:object size:0x4 data:4byte
__AXRecDspCycles = .sbss:0x800C47EC; // type:object size:0x4 data:4byte
__AXNumVoices = .sbss:0x800C47F0; // type:object size:0x4 data:4byte
__AXProfile = .sbss:0x800C47F8; // type:object size:0x4 data:4byte
__AXMaxProfiles = .sbss:0x800C47FC; // type:object size:0x4 data:4byte
__AXCurrentProfile = .sbss:0x800C4800; // type:object size:0x4 data:4byte
__AXProfileInitialized = .sbss:0x800C4804; // type:object size:0x4 data:4byte
__CARDEncode = .sbss:0x800C4808; // type:object size:0x2 data:2byte
__DBInterface = .sbss:0x800C4810; // type:object size:0x4 scope:global data:4byte
DBVerbose = .sbss:0x800C4814; // type:object size:0x4 scope:global data:4byte
__DSP_init_flag = .sbss:0x800C4818; // type:object size:0x4 data:4byte
__DSP_rude_task_pending = .sbss:0x800C4820; // type:object size:0x4 data:4byte
__DSP_rude_task = .sbss:0x800C4824; // type:object size:0x4 data:4byte
__DSP_tmp_task = .sbss:0x800C4828; // type:object size:0x4 data:4byte
__DSP_last_task = .sbss:0x800C482C; // type:object size:0x4 data:4byte
__DSP_first_task = .sbss:0x800C4830; // type:object size:0x4 data:4byte
__DSP_curr_task = .sbss:0x800C4834; // type:object size:0x4 data:4byte
StopAtNextInt = .sbss:0x800C4838; // type:object size:0x4 scope:local data:4byte
LastLength = .sbss:0x800C483C; // type:object size:0x4 data:4byte
Callback = .sbss:0x800C4840; // type:object size:0x4 scope:local data:4byte
ResetCoverCallback = .sbss:0x800C4844; // type:object size:0x4 data:4byte
LastResetEnd = .sbss:0x800C4848; // type:object size:0x8 scope:local data:4byte
ResetOccurred = .sbss:0x800C4850; // type:object size:0x4 scope:local data:4byte
WaitingCoverClose = .sbss:0x800C4854; // type:object size:0x4 scope:local data:4byte
Breaking = .sbss:0x800C4858; // type:object size:0x4 data:4byte
WorkAroundType = .sbss:0x800C485C; // type:object size:0x4 scope:local data:4byte
WorkAroundSeekLocation = .sbss:0x800C4860; // type:object size:0x4 scope:local data:4byte
LastReadFinished = .sbss:0x800C4868; // type:object size:0x8 data:4byte
LastReadIssued = .sbss:0x800C4870; // type:object size:0x8 data:4byte
LastCommandWasRead = .sbss:0x800C4878; // type:object size:0x4 data:4byte
NextCommandNumber = .sbss:0x800C487C; // type:object size:0x4 scope:local data:4byte
BootInfo = .sbss:0x800C4880; // type:object size:0x4 scope:local data:4byte
FstStart = .sbss:0x800C4884; // type:object size:0x4 scope:local data:4byte
FstStringStart = .sbss:0x800C4888; // type:object size:0x4 scope:local data:4byte
MaxEntryNum = .sbss:0x800C488C; // type:object size:0x4 scope:local data:4byte
currentDirectory = .sbss:0x800C4890; // type:object size:0x4 data:4byte
__DVDLongFileNameFlag = .sbss:0x800C4894; // type:object size:0x4 scope:global data:4byte
__DVDThreadQueue = .sbss:0x800C4898; // type:object size:0x8 scope:global
executing = .sbss:0x800C48A0; // type:object size:0x4 scope:local data:4byte
IDShouldBe = .sbss:0x800C48A4; // type:object size:0x4 scope:local data:4byte
bootInfo = .sbss:0x800C48A8; // type:object size:0x4 scope:local data:4byte
PauseFlag = .sbss:0x800C48AC; // type:object size:0x4 scope:local data:4byte
PausingFlag = .sbss:0x800C48B0; // type:object size:0x4 scope:local data:4byte
AutoFinishing = .sbss:0x800C48B4; // type:object size:0x4 data:4byte
FatalErrorFlag = .sbss:0x800C48B8; // type:object size:0x4 scope:local data:4byte
CurrCommand = .sbss:0x800C48BC; // type:object size:0x4 scope:local data:4byte
Canceling = .sbss:0x800C48C0; // type:object size:0x4 data:4byte
CancelCallback = .sbss:0x800C48C4; // type:object size:0x4 data:4byte
ResumeFromHere = .sbss:0x800C48C8; // type:object size:0x4 scope:local data:4byte
CancelLastError = .sbss:0x800C48CC; // type:object size:0x4 scope:local data:4byte
LastError = .sbss:0x800C48D0; // type:object size:0x4 data:4byte
NumInternalRetry = .sbss:0x800C48D4; // type:object size:0x4 data:4byte
ResetRequired = .sbss:0x800C48D8; // type:object size:0x4 scope:local data:4byte
FirstTimeInBootrom = .sbss:0x800C48DC; // type:object size:0x4 scope:local data:4byte
DVDInitialized = .sbss:0x800C48E0; // type:object size:0x4 scope:local data:4byte
LastState = .sbss:0x800C48E4; // type:object size:0x4 data:4byte
FatalFunc = .sbss:0x800C48E8; // type:object size:0x4 data:4byte
status = .sbss:0x800C48F0; // type:object size:0x4 data:4byte
bb2 = .sbss:0x800C48F4; // type:object size:0x4 scope:local data:4byte
idTmp = .sbss:0x800C48F8; // type:object size:0x4 scope:local data:4byte
IDSerialPort1 = .sbss:0x800C4900; // type:object size:0x4 scope:local data:4byte
lbl_800C4908 = .sbss:0x800C4908; // type:object size:0x4 data:4byte
lbl_800C490C = .sbss:0x800C490C; // type:object size:0x4 data:4byte
lbl_800C4910 = .sbss:0x800C4910; // type:object size:0x4 data:4byte
lbl_800C4914 = .sbss:0x800C4914; // type:object size:0x4 data:4byte
__piReg = .sbss:0x800C4918; // type:object size:0x4 scope:global data:4byte
__cpReg = .sbss:0x800C491C; // type:object size:0x4 scope:global data:4byte
__peReg = .sbss:0x800C4920; // type:object size:0x4 scope:global data:4byte
__memReg = .sbss:0x800C4924; // type:object size:0x4 scope:global data:4byte
lbl_800C4928 = .sbss:0x800C4928; // type:object size:0x8 data:4byte
lbl_800C4930 = .sbss:0x800C4930; // type:object size:0x4 data:4byte
lbl_800C4934 = .sbss:0x800C4934; // type:object size:0x4 data:4byte
lbl_800C4938 = .sbss:0x800C4938; // type:object size:0x4 data:4byte
resetFuncRegistered$63 = .sbss:0x800C493C; // type:object size:0x4 scope:local data:4byte
lbl_800C4940 = .sbss:0x800C4940; // type:object size:0x4 data:4byte
lbl_800C4944 = .sbss:0x800C4944; // type:object size:0x4 data:4byte
lbl_800C4948 = .sbss:0x800C4948; // type:object size:0x4 data:4byte
lbl_800C494C = .sbss:0x800C494C; // type:object size:0x1 data:byte
lbl_800C4950 = .sbss:0x800C4950; // type:object size:0x4 data:4byte
lbl_800C4954 = .sbss:0x800C4954; // type:object size:0x4 data:4byte
lbl_800C4958 = .sbss:0x800C4958; // type:object size:0x8 data:4byte
lbl_800C4960 = .sbss:0x800C4960; // type:object size:0x4 data:4byte
lbl_800C4964 = .sbss:0x800C4964; // type:object size:0x4 data:4byte
lbl_800C4968 = .sbss:0x800C4968; // type:object size:0x1 data:byte
lbl_800C496C = .sbss:0x800C496C; // type:object size:0xC
lbl_800C4978 = .sbss:0x800C4978; // type:object size:0x4 data:4byte
lbl_800C497C = .sbss:0x800C497C; // type:object size:0x4 data:4byte
lbl_800C4980 = .sbss:0x800C4980; // type:object size:0x8 data:4byte
BootInfo = .sbss:0x800C4988; // type:object size:0x4 scope:local data:4byte
BI2DebugFlag = .sbss:0x800C498C; // type:object size:0x4 scope:local data:4byte
BI2DebugFlagHolder = .sbss:0x800C4990; // type:object size:0x4 scope:local data:4byte
__OSIsGcam = .sbss:0x800C4994; // type:object size:0x4 scope:weak data:4byte
ZeroF = .sbss:0x800C4998; // type:object size:0x8 scope:local data:double
ZeroPS = .sbss:0x800C49A0; // type:object size:0x8 scope:local
AreWeInitialized = .sbss:0x800C49A8; // type:object size:0x4 scope:local data:4byte
OSExceptionTable = .sbss:0x800C49AC; // type:object size:0x4 scope:local data:4byte
__OSSavedRegionEnd = .sbss:0x800C49B0; // type:object size:0x4 scope:global data:4byte
__OSSavedRegionStart = .sbss:0x800C49B4; // type:object size:0x4 scope:global data:4byte
__OSInIPL = .sbss:0x800C49B8; // type:object size:0x4 scope:global data:4byte
__OSStartTime = .sbss:0x800C49C0; // type:object size:0x8 scope:global data:4byte
AlarmQueue = .sbss:0x800C49C8; // type:object size:0x8 scope:local data:4byte
lbl_800C49D0 = .sbss:0x800C49D0; // type:object size:0x4 data:4byte
lbl_800C49D4 = .sbss:0x800C49D4; // type:object size:0x4 data:4byte
lbl_800C49D8 = .sbss:0x800C49D8; // type:object size:0x4 data:4byte
lbl_800C49DC = .sbss:0x800C49DC; // type:object size:0x4 data:4byte
__OSArenaHi = .sbss:0x800C49E0; // type:object size:0x4 scope:local data:4byte
lbl_800C49E8 = .sbss:0x800C49E8; // type:object size:0x4 data:4byte
lbl_800C49EC = .sbss:0x800C49EC; // type:object size:0x4 data:4byte
lbl_800C49F0 = .sbss:0x800C49F0; // type:object size:0x4 data:4byte
lbl_800C49F4 = .sbss:0x800C49F4; // type:object size:0x4 data:4byte
InterruptHandlerTable = .sbss:0x800C49F8; // type:object size:0x4 scope:local data:4byte
__OSLastInterruptSrr0 = .sbss:0x800C49FC; // type:object size:0x4 scope:global data:4byte
__OSLastInterrupt = .sbss:0x800C4A00; // type:object size:0x2 scope:global data:2byte
__OSLastInterruptTime = .sbss:0x800C4A08; // type:object size:0x8 scope:global data:4byte
lbl_800C4A10 = .sbss:0x800C4A10; // type:object size:0x4 data:4byte
lbl_800C4A14 = .sbss:0x800C4A14; // type:object size:0x4 data:4byte
lbl_800C4A18 = .sbss:0x800C4A18; // type:object size:0x8 data:4byte
ResetFunctionQueue = .sbss:0x800C4A20; // type:object size:0x8 scope:local data:4byte
lbl_800C4A28 = .sbss:0x800C4A28; // type:object size:0x4 data:4byte
lbl_800C4A2C = .sbss:0x800C4A2C; // type:object size:0x4 data:4byte
lbl_800C4A30 = .sbss:0x800C4A30; // type:object size:0x8 data:4byte
lbl_800C4A38 = .sbss:0x800C4A38; // type:object size:0x4 data:4byte
lbl_800C4A3C = .sbss:0x800C4A3C; // type:object size:0x4 data:4byte
lbl_800C4A40 = .sbss:0x800C4A40; // type:object size:0x4 data:4byte
lbl_800C4A44 = .sbss:0x800C4A44; // type:object size:0x4 data:4byte
RunQueueBits = .sbss:0x800C4A48; // type:object size:0x4 scope:local data:4byte
RunQueueHint = .sbss:0x800C4A4C; // type:object size:0x4 scope:local data:4byte
Reschedule = .sbss:0x800C4A50; // type:object size:0x4 scope:local data:4byte
Debug_BBA = .sbss:0x800C4A58; // type:object size:0x1 scope:local data:byte
lbl_800C4A60 = .sbss:0x800C4A60; // type:object size:0x4 data:4byte
lbl_800C4A64 = .sbss:0x800C4A64; // type:object size:0x4 data:4byte
lbl_800C4A68 = .sbss:0x800C4A68; // type:object size:0x4 data:4byte
lbl_800C4A6C = .sbss:0x800C4A6C; // type:object size:0x4 data:4byte
lbl_800C4A70 = .sbss:0x800C4A70; // type:object size:0x4 data:4byte
lbl_800C4A74 = .sbss:0x800C4A74; // type:object size:0x4 data:4byte
lbl_800C4A78 = .sbss:0x800C4A78; // type:object size:0x4 data:4byte
lbl_800C4A7C = .sbss:0x800C4A7C; // type:object size:0x4 data:4byte
lbl_800C4A80 = .sbss:0x800C4A80; // type:object size:0x4 data:4byte
__PADSpec = .sbss:0x800C4A84; // type:object size:0x4 scope:global data:4byte
lbl_800C4A88 = .sbss:0x800C4A88; // type:object size:0x4
cmdTypeAndStatus$371 = .sbss:0x800C4A8C; // type:object size:0x4 scope:local
lbl_800C4A90 = .sbss:0x800C4A90; // type:object size:0x8 data:4byte
SamplingRate = .sbss:0x800C4A98; // type:object size:0x4 scope:local data:4byte
lbl_800C4AA0 = .sbss:0x800C4AA0; // type:object size:0x4 data:4byte
lbl_800C4AA4 = .sbss:0x800C4AA4; // type:object size:0x4 data:4byte
lbl_800C4AA8 = .sbss:0x800C4AA8; // type:object size:0x4 data:4byte
lbl_800C4AAC = .sbss:0x800C4AAC; // type:object size:0x8
lbl_800C4AB4 = .sbss:0x800C4AB4; // type:object size:0x4 data:4byte
lbl_800C4AB8 = .sbss:0x800C4AB8; // type:object size:0x4 data:4byte
lbl_800C4ABC = .sbss:0x800C4ABC; // type:object size:0x4 data:4byte
lbl_800C4AC0 = .sbss:0x800C4AC0; // type:object size:0x2 data:2byte
lbl_800C4AC2 = .sbss:0x800C4AC2; // type:object size:0x2 data:2byte
lbl_800C4AC4 = .sbss:0x800C4AC4; // type:object size:0x4 data:4byte
lbl_800C4AC8 = .sbss:0x800C4AC8; // type:object size:0x4 data:4byte
lbl_800C4ACC = .sbss:0x800C4ACC; // type:object size:0x4 data:4byte
lbl_800C4AD0 = .sbss:0x800C4AD0; // type:object size:0x8 data:4byte
lbl_800C4AD8 = .sbss:0x800C4AD8; // type:object size:0x4 data:4byte
lbl_800C4ADC = .sbss:0x800C4ADC; // type:object size:0x4 data:4byte
lbl_800C4AE0 = .sbss:0x800C4AE0; // type:object size:0x4 data:4byte
CurrTvMode = .sbss:0x800C4AE4; // type:object size:0x4 scope:local data:4byte
lbl_800C4AE8 = .sbss:0x800C4AE8; // type:object size:0x4 data:4byte
lbl_800C4AEC = .sbss:0x800C4AEC; // type:object size:0x4 data:4byte
lbl_800C4AF0 = .sbss:0x800C4AF0; // type:object size:0x4 data:4byte
lbl_800C4AF4 = .sbss:0x800C4AF4; // type:object size:0x4 data:4byte
lbl_800C4AF8 = .sbss:0x800C4AF8; // type:object size:0x8
lbl_800C4B00 = .sbss:0x800C4B00; // type:object size:0x8 data:float
lbl_800C4B08 = .sbss:0x800C4B08; // type:object size:0x4 data:4byte
lbl_800C4B0C = .sbss:0x800C4B0C; // type:object size:0x4 data:4byte
lbl_800C4B10 = .sbss:0x800C4B10; // type:object size:0x4 data:4byte
lbl_800C4B14 = .sbss:0x800C4B14; // type:object size:0x4 data:4byte
lbl_800C4B18 = .sbss:0x800C4B18; // type:object size:0x4 data:4byte
lbl_800C4B1C = .sbss:0x800C4B1C; // type:object size:0x4 data:4byte
lbl_800C4B20 = .sbss:0x800C4B20; // type:object size:0x4 data:4byte
lbl_800C4B24 = .sbss:0x800C4B24; // type:object size:0x4 data:4byte
lbl_800C4B28 = .sbss:0x800C4B28; // type:object size:0x4 data:float
lbl_800C4B2C = .sbss:0x800C4B2C; // type:object size:0x4 data:4byte
lbl_800C4B30 = .sbss:0x800C4B30; // type:object size:0x8 data:4byte
lbl_800C4B38 = .sbss:0x800C4B38; // type:object size:0x4 data:4byte
lbl_800C4B3C = .sbss:0x800C4B3C; // type:object size:0x4 data:4byte
lbl_800C4B40 = .sbss:0x800C4B40; // type:object size:0x4 data:4byte
lbl_800C4B44 = .sbss:0x800C4B44; // type:object size:0x4 data:4byte
lbl_800C4B48 = .sbss:0x800C4B48; // type:object size:0x4 data:4byte
lbl_800C4B4C = .sbss:0x800C4B4C; // type:object size:0x4 data:4byte
lbl_800C4B50 = .sbss:0x800C4B50; // type:object size:0x4 data:4byte
lbl_800C4B54 = .sbss:0x800C4B54; // type:object size:0x4 data:4byte
lbl_800C4B58 = .sbss:0x800C4B58; // type:object size:0x4 data:4byte
lbl_800C4B5C = .sbss:0x800C4B5C; // type:object size:0x4 data:4byte
lbl_800C4B60 = .sbss:0x800C4B60; // type:object size:0x4 data:4byte
lbl_800C4B64 = .sbss:0x800C4B64; // type:object size:0x4 data:4byte
lbl_800C4B68 = .sbss:0x800C4B68; // type:object size:0x4 data:4byte
lbl_800C4B6C = .sbss:0x800C4B6C; // type:object size:0x4 data:4byte
lbl_800C4B70 = .sbss:0x800C4B70; // type:object size:0x4 data:4byte
lbl_800C4B74 = .sbss:0x800C4B74; // type:object size:0x4 data:4byte
lbl_800C4B78 = .sbss:0x800C4B78; // type:object size:0x4 data:4byte
lbl_800C4B7C = .sbss:0x800C4B7C; // type:object size:0x4 data:4byte
lbl_800C4B80 = .sbss:0x800C4B80; // type:object size:0x4 data:4byte
lbl_800C4B84 = .sbss:0x800C4B84; // type:object size:0x4 data:4byte
lbl_800C4B88 = .sbss:0x800C4B88; // type:object size:0x4 data:4byte
lbl_800C4B8C = .sbss:0x800C4B8C; // type:object size:0x4 data:4byte
lbl_800C4B90 = .sbss:0x800C4B90; // type:object size:0x8 data:4byte
lbl_800C4B98 = .sbss:0x800C4B98; // type:object size:0x4 data:4byte
lbl_800C4B9C = .sbss:0x800C4B9C; // type:object size:0x4 data:4byte
lbl_800C4BA0 = .sbss:0x800C4BA0; // type:object size:0x4 data:4byte
lbl_800C4BA4 = .sbss:0x800C4BA4; // type:object size:0x4 data:4byte
lbl_800C4BA8 = .sbss:0x800C4BA8; // type:object size:0x8 data:4byte
lbl_800C4BB0 = .sbss:0x800C4BB0; // type:object size:0x4 data:float
lbl_800C4BB4 = .sbss:0x800C4BB4; // type:object size:0x4 data:float
lbl_800C4BB8 = .sbss:0x800C4BB8; // type:object size:0x4 data:4byte
lbl_800C4BBC = .sbss:0x800C4BBC; // type:object size:0x4 data:4byte
lbl_800C4BC0 = .sbss:0x800C4BC0; // type:object size:0x8 data:byte
lbl_800C4BC8 = .sbss:0x800C4BC8; // type:object size:0x4 data:4byte
lbl_800C4BCC = .sbss:0x800C4BCC; // type:object size:0x4 data:4byte
lbl_800C4BD0 = .sbss:0x800C4BD0; // type:object size:0x4 data:4byte
lbl_800C4BD4 = .sbss:0x800C4BD4; // type:object size:0x4 data:4byte
lbl_800C4BD8 = .sbss:0x800C4BD8; // type:object size:0x4 data:4byte
lbl_800C4BDC = .sbss:0x800C4BDC; // type:object size:0x2 data:2byte
lbl_800C4BE0 = .sbss:0x800C4BE0; // type:object size:0x4 data:4byte
lbl_800C4BE4 = .sbss:0x800C4BE4; // type:object size:0x4 data:4byte
lbl_800C4BE8 = .sbss:0x800C4BE8; // type:object size:0x4 data:4byte
lbl_800C4BEC = .sbss:0x800C4BEC; // type:object size:0x4 data:4byte
lbl_800C4BF0 = .sbss:0x800C4BF0; // type:object size:0x4 data:4byte
lbl_800C4BF4 = .sbss:0x800C4BF4; // type:object size:0x4 data:4byte
lbl_800C4BF8 = .sbss:0x800C4BF8; // type:object size:0x4 data:4byte
lbl_800C4BFC = .sbss:0x800C4BFC; // type:object size:0x1 data:byte
lbl_800C4C00 = .sbss:0x800C4C00; // type:object size:0x4 data:4byte
lbl_800C4C04 = .sbss:0x800C4C04; // type:object size:0x4 data:4byte
lbl_800C4C08 = .sbss:0x800C4C08; // type:object size:0x4 data:4byte
lbl_800C4C0C = .sbss:0x800C4C0C; // type:object size:0x4 data:4byte
lbl_800C4C10 = .sbss:0x800C4C10; // type:object size:0x4 data:4byte
lbl_800C4C14 = .sbss:0x800C4C14; // type:object size:0x4 data:4byte
lbl_800C4C18 = .sbss:0x800C4C18; // type:object size:0x4 data:4byte
lbl_800C4C1C = .sbss:0x800C4C1C; // type:object size:0x1 data:byte
lbl_800C4C20 = .sbss:0x800C4C20; // type:object size:0x4 data:4byte
lbl_800C4C24 = .sbss:0x800C4C24; // type:object size:0x4 data:4byte
lbl_800C4C28 = .sbss:0x800C4C28; // type:object size:0x4 data:4byte
lbl_800C4C40 = .sdata2:0x800C4C40; // type:object size:0x4 data:4byte
lbl_800C4C44 = .sdata2:0x800C4C44; // type:object size:0x4 data:float
lbl_800C4C48 = .sdata2:0x800C4C48; // type:object size:0x4 data:float
lbl_800C4C50 = .sdata2:0x800C4C50; // type:object size:0x8 data:double
lbl_800C4C58 = .sdata2:0x800C4C58; // type:object size:0x4 data:float
lbl_800C4C60 = .sdata2:0x800C4C60; // type:object size:0x8 data:double
lbl_800C4C68 = .sdata2:0x800C4C68; // type:object size:0x8 data:double
lbl_800C4C70 = .sdata2:0x800C4C70; // type:object size:0x8 data:double
lbl_800C4C78 = .sdata2:0x800C4C78; // type:object size:0x8 data:double
lbl_800C4C80 = .sdata2:0x800C4C80; // type:object size:0x8 data:double
lbl_800C4C88 = .sdata2:0x800C4C88; // type:object size:0x8 data:double
lbl_800C4C90 = .sdata2:0x800C4C90; // type:object size:0x4 data:4byte
lbl_800C4C98 = .sdata2:0x800C4C98; // type:object size:0x8 data:double
lbl_800C4CA0 = .sdata2:0x800C4CA0; // type:object size:0x4 data:string
lbl_800C4CA4 = .sdata2:0x800C4CA4; // type:object size:0x1 data:string
lbl_800C4CA8 = .sdata2:0x800C4CA8; // type:object size:0x8 data:double
lbl_800C4CB0 = .sdata2:0x800C4CB0; // type:object size:0x8 data:double
lbl_800C4CB8 = .sdata2:0x800C4CB8; // type:object size:0x8 data:double
lbl_800C4CC0 = .sdata2:0x800C4CC0; // type:object size:0x8 data:double
lbl_800C4CC8 = .sdata2:0x800C4CC8; // type:object size:0x8 data:double
lbl_800C4CD0 = .sdata2:0x800C4CD0; // type:object size:0x8 data:double
lbl_800C4CD8 = .sdata2:0x800C4CD8; // type:object size:0x8 data:double
lbl_800C4CE0 = .sdata2:0x800C4CE0; // type:object size:0x8 data:double
lbl_800C4CE8 = .sdata2:0x800C4CE8; // type:object size:0x8 data:double
lbl_800C4CF0 = .sdata2:0x800C4CF0; // type:object size:0x8 data:double
lbl_800C4CF8 = .sdata2:0x800C4CF8; // type:object size:0x8 data:double
lbl_800C4D00 = .sdata2:0x800C4D00; // type:object size:0x8 data:double
lbl_800C4D08 = .sdata2:0x800C4D08; // type:object size:0x8 data:double
lbl_800C4D10 = .sdata2:0x800C4D10; // type:object size:0x8 data:double
lbl_800C4D18 = .sdata2:0x800C4D18; // type:object size:0x8 data:double
lbl_800C4D20 = .sdata2:0x800C4D20; // type:object size:0x8 data:double
lbl_800C4D28 = .sdata2:0x800C4D28; // type:object size:0x8 data:double
lbl_800C4D30 = .sdata2:0x800C4D30; // type:object size:0x8 data:double
lbl_800C4D38 = .sdata2:0x800C4D38; // type:object size:0x8 data:double
lbl_800C4D40 = .sdata2:0x800C4D40; // type:object size:0x8 data:double
lbl_800C4D48 = .sdata2:0x800C4D48; // type:object size:0x8 data:double
lbl_800C4D50 = .sdata2:0x800C4D50; // type:object size:0x8 data:double
lbl_800C4D58 = .sdata2:0x800C4D58; // type:object size:0x8 data:double
lbl_800C4D60 = .sdata2:0x800C4D60; // type:object size:0x8 data:double
lbl_800C4D68 = .sdata2:0x800C4D68; // type:object size:0x8 data:double
lbl_800C4D70 = .sdata2:0x800C4D70; // type:object size:0x8 data:double
lbl_800C4D78 = .sdata2:0x800C4D78; // type:object size:0x8 data:double
lbl_800C4D80 = .sdata2:0x800C4D80; // type:object size:0x8 data:double
lbl_800C4D88 = .sdata2:0x800C4D88; // type:object size:0x8 data:double
lbl_800C4D90 = .sdata2:0x800C4D90; // type:object size:0x8 data:double
lbl_800C4D98 = .sdata2:0x800C4D98; // type:object size:0x8 data:double
lbl_800C4DA0 = .sdata2:0x800C4DA0; // type:object size:0x8 data:double
lbl_800C4DA8 = .sdata2:0x800C4DA8; // type:object size:0x8 data:double
lbl_800C4DB0 = .sdata2:0x800C4DB0; // type:object size:0x8 data:double
lbl_800C4DB8 = .sdata2:0x800C4DB8; // type:object size:0x8 data:double
lbl_800C4DC0 = .sdata2:0x800C4DC0; // type:object size:0x8 data:double
lbl_800C4DC8 = .sdata2:0x800C4DC8; // type:object size:0x8 data:double
lbl_800C4DD0 = .sdata2:0x800C4DD0; // type:object size:0x8 data:double
lbl_800C4DD8 = .sdata2:0x800C4DD8; // type:object size:0x8 data:double
lbl_800C4DE0 = .sdata2:0x800C4DE0; // type:object size:0x8 data:double
lbl_800C4DE8 = .sdata2:0x800C4DE8; // type:object size:0x8 data:double
lbl_800C4DF0 = .sdata2:0x800C4DF0; // type:object size:0x8 data:double
lbl_800C4DF8 = .sdata2:0x800C4DF8; // type:object size:0x8 data:double
lbl_800C4E00 = .sdata2:0x800C4E00; // type:object size:0x8 data:double
lbl_800C4E08 = .sdata2:0x800C4E08; // type:object size:0x8 data:double
lbl_800C4E10 = .sdata2:0x800C4E10; // type:object size:0x8 data:double
lbl_800C4E18 = .sdata2:0x800C4E18; // type:object size:0x8 data:double
lbl_800C4E20 = .sdata2:0x800C4E20; // type:object size:0x8 data:double
lbl_800C4E28 = .sdata2:0x800C4E28; // type:object size:0x8 data:double
lbl_800C4E30 = .sdata2:0x800C4E30; // type:object size:0x8 data:double
lbl_800C4E38 = .sdata2:0x800C4E38; // type:object size:0x8 data:double
lbl_800C4E40 = .sdata2:0x800C4E40; // type:object size:0x8 data:double
lbl_800C4E48 = .sdata2:0x800C4E48; // type:object size:0x8 data:double
lbl_800C4E50 = .sdata2:0x800C4E50; // type:object size:0x8 data:double
lbl_800C4E58 = .sdata2:0x800C4E58; // type:object size:0x8 data:double
lbl_800C4E60 = .sdata2:0x800C4E60; // type:object size:0x8 data:double
lbl_800C4E68 = .sdata2:0x800C4E68; // type:object size:0x8 data:double
lbl_800C4E70 = .sdata2:0x800C4E70; // type:object size:0x8 data:double
lbl_800C4E78 = .sdata2:0x800C4E78; // type:object size:0x8 data:double
lbl_800C4E80 = .sdata2:0x800C4E80; // type:object size:0x8 data:double
lbl_800C4E88 = .sdata2:0x800C4E88; // type:object size:0x8 data:double
lbl_800C4E90 = .sdata2:0x800C4E90; // type:object size:0x8 data:double
lbl_800C4E98 = .sdata2:0x800C4E98; // type:object size:0x8 data:double
lbl_800C4EA0 = .sdata2:0x800C4EA0; // type:object size:0x8 data:double
lbl_800C4EA8 = .sdata2:0x800C4EA8; // type:object size:0x8 data:double
lbl_800C4EB0 = .sdata2:0x800C4EB0; // type:object size:0x8 data:double
lbl_800C4EB8 = .sdata2:0x800C4EB8; // type:object size:0x8 data:double
lbl_800C4EC0 = .sdata2:0x800C4EC0; // type:object size:0x8 data:double
lbl_800C4EC8 = .sdata2:0x800C4EC8; // type:object size:0x8 data:double
lbl_800C4ED0 = .sdata2:0x800C4ED0; // type:object size:0x8 data:double
lbl_800C4ED8 = .sdata2:0x800C4ED8; // type:object size:0x8 data:double
lbl_800C4EE0 = .sdata2:0x800C4EE0; // type:object size:0x8 data:double
lbl_800C4EE8 = .sdata2:0x800C4EE8; // type:object size:0x8 data:double
lbl_800C4EF0 = .sdata2:0x800C4EF0; // type:object size:0x8 data:double
lbl_800C4EF8 = .sdata2:0x800C4EF8; // type:object size:0x8 data:double
lbl_800C4F00 = .sdata2:0x800C4F00; // type:object size:0x8 data:double
lbl_800C4F08 = .sdata2:0x800C4F08; // type:object size:0x8 data:double
lbl_800C4F10 = .sdata2:0x800C4F10; // type:object size:0x8 data:double
lbl_800C4F18 = .sdata2:0x800C4F18; // type:object size:0x8 data:double
lbl_800C4F20 = .sdata2:0x800C4F20; // type:object size:0x8 data:double
lbl_800C4F28 = .sdata2:0x800C4F28; // type:object size:0x8 data:double
lbl_800C4F30 = .sdata2:0x800C4F30; // type:object size:0x8 data:double
lbl_800C4F38 = .sdata2:0x800C4F38; // type:object size:0x8 data:double
lbl_800C4F40 = .sdata2:0x800C4F40; // type:object size:0x8 data:double
lbl_800C4F48 = .sdata2:0x800C4F48; // type:object size:0x8 data:double
lbl_800C4F50 = .sdata2:0x800C4F50; // type:object size:0x8 data:double
lbl_800C4F58 = .sdata2:0x800C4F58; // type:object size:0x8 data:double
lbl_800C4F60 = .sdata2:0x800C4F60; // type:object size:0x8 data:double
lbl_800C4F68 = .sdata2:0x800C4F68; // type:object size:0x8 data:double
lbl_800C4F70 = .sdata2:0x800C4F70; // type:object size:0x8 data:double
lbl_800C4F78 = .sdata2:0x800C4F78; // type:object size:0x8 data:double
lbl_800C4F80 = .sdata2:0x800C4F80; // type:object size:0x8 data:double
lbl_800C4F88 = .sdata2:0x800C4F88; // type:object size:0x8 data:double
lbl_800C4F90 = .sdata2:0x800C4F90; // type:object size:0x8 data:double
lbl_800C4F98 = .sdata2:0x800C4F98; // type:object size:0x8 data:double
lbl_800C4FA0 = .sdata2:0x800C4FA0; // type:object size:0x8 data:double
lbl_800C4FA8 = .sdata2:0x800C4FA8; // type:object size:0x8 data:double
lbl_800C4FB0 = .sdata2:0x800C4FB0; // type:object size:0x8 data:double
lbl_800C4FB8 = .sdata2:0x800C4FB8; // type:object size:0x8 data:double
lbl_800C4FC0 = .sdata2:0x800C4FC0; // type:object size:0x8 data:double
lbl_800C4FC8 = .sdata2:0x800C4FC8; // type:object size:0x8 data:double
lbl_800C4FD0 = .sdata2:0x800C4FD0; // type:object size:0x8 data:double
lbl_800C4FD8 = .sdata2:0x800C4FD8; // type:object size:0x8 data:double
lbl_800C4FE0 = .sdata2:0x800C4FE0; // type:object size:0x8 data:double
lbl_800C4FE8 = .sdata2:0x800C4FE8; // type:object size:0x8 data:double
lbl_800C4FF0 = .sdata2:0x800C4FF0; // type:object size:0x8 data:double
lbl_800C4FF8 = .sdata2:0x800C4FF8; // type:object size:0x8 data:double
lbl_800C5000 = .sdata2:0x800C5000; // type:object size:0x8 data:double
lbl_800C5008 = .sdata2:0x800C5008; // type:object size:0x8 data:double
lbl_800C5010 = .sdata2:0x800C5010; // type:object size:0x8 data:double
lbl_800C5018 = .sdata2:0x800C5018; // type:object size:0x8 data:double
lbl_800C5020 = .sdata2:0x800C5020; // type:object size:0x8 data:double
lbl_800C5028 = .sdata2:0x800C5028; // type:object size:0x8 data:double
lbl_800C5030 = .sdata2:0x800C5030; // type:object size:0x8 data:double
lbl_800C5038 = .sdata2:0x800C5038; // type:object size:0x8 data:double
lbl_800C5040 = .sdata2:0x800C5040; // type:object size:0x8 data:double
lbl_800C5048 = .sdata2:0x800C5048; // type:object size:0x8 data:double
lbl_800C5050 = .sdata2:0x800C5050; // type:object size:0x8 data:double
lbl_800C5058 = .sdata2:0x800C5058; // type:object size:0x8 data:double
lbl_800C5060 = .sdata2:0x800C5060; // type:object size:0x8 data:double
lbl_800C5068 = .sdata2:0x800C5068; // type:object size:0x8 data:double
lbl_800C5070 = .sdata2:0x800C5070; // type:object size:0x8 data:double
lbl_800C5078 = .sdata2:0x800C5078; // type:object size:0x8 data:double
lbl_800C5080 = .sdata2:0x800C5080; // type:object size:0x8 data:double
lbl_800C5088 = .sdata2:0x800C5088; // type:object size:0x8 data:double
lbl_800C5090 = .sdata2:0x800C5090; // type:object size:0x8 data:double
lbl_800C5098 = .sdata2:0x800C5098; // type:object size:0x8 data:double
lbl_800C50A0 = .sdata2:0x800C50A0; // type:object size:0x8 data:double
lbl_800C50A8 = .sdata2:0x800C50A8; // type:object size:0x8 data:double
lbl_800C50B0 = .sdata2:0x800C50B0; // type:object size:0x8 data:double
lbl_800C50B8 = .sdata2:0x800C50B8; // type:object size:0x8 data:double
lbl_800C50C0 = .sdata2:0x800C50C0; // type:object size:0x8 data:double
lbl_800C50C8 = .sdata2:0x800C50C8; // type:object size:0x8 data:double
lbl_800C50D0 = .sdata2:0x800C50D0; // type:object size:0x8 data:double
lbl_800C50D8 = .sdata2:0x800C50D8; // type:object size:0x8 data:double
lbl_800C50E0 = .sdata2:0x800C50E0; // type:object size:0x8 data:double
lbl_800C50E8 = .sdata2:0x800C50E8; // type:object size:0x8 data:double
lbl_800C50F0 = .sdata2:0x800C50F0; // type:object size:0x8 data:double
lbl_800C50F8 = .sdata2:0x800C50F8; // type:object size:0x8 data:double
lbl_800C5100 = .sdata2:0x800C5100; // type:object size:0x8 data:double
lbl_800C5108 = .sdata2:0x800C5108; // type:object size:0x8 data:double
lbl_800C5110 = .sdata2:0x800C5110; // type:object size:0x8 data:double
lbl_800C5118 = .sdata2:0x800C5118; // type:object size:0x8 data:double
lbl_800C5120 = .sdata2:0x800C5120; // type:object size:0x8 data:double
lbl_800C5128 = .sdata2:0x800C5128; // type:object size:0x8 data:double
lbl_800C5130 = .sdata2:0x800C5130; // type:object size:0x8 data:double
lbl_800C5138 = .sdata2:0x800C5138; // type:object size:0x8 data:double
lbl_800C5140 = .sdata2:0x800C5140; // type:object size:0x8 data:double
lbl_800C5148 = .sdata2:0x800C5148; // type:object size:0x8 data:double
lbl_800C5150 = .sdata2:0x800C5150; // type:object size:0x8 data:double
lbl_800C5158 = .sdata2:0x800C5158; // type:object size:0x8 data:double
lbl_800C5160 = .sdata2:0x800C5160; // type:object size:0x8 data:double
lbl_800C5168 = .sdata2:0x800C5168; // type:object size:0x8 data:double
lbl_800C5170 = .sdata2:0x800C5170; // type:object size:0x8 data:double
lbl_800C5178 = .sdata2:0x800C5178; // type:object size:0x8 data:double
lbl_800C5180 = .sdata2:0x800C5180; // type:object size:0x8 data:double
lbl_800C5188 = .sdata2:0x800C5188; // type:object size:0x8 data:double
lbl_800C5190 = .sdata2:0x800C5190; // type:object size:0x8 data:double
lbl_800C5198 = .sdata2:0x800C5198; // type:object size:0x8 data:double
lbl_800C51A0 = .sdata2:0x800C51A0; // type:object size:0x8 data:double
lbl_800C51A8 = .sdata2:0x800C51A8; // type:object size:0x8 data:double
lbl_800C51B0 = .sdata2:0x800C51B0; // type:object size:0x8 data:double
lbl_800C51B8 = .sdata2:0x800C51B8; // type:object size:0x8 data:double
lbl_800C51C0 = .sdata2:0x800C51C0; // type:object size:0x8 data:double
lbl_800C51C8 = .sdata2:0x800C51C8; // type:object size:0x8 data:double
lbl_800C51D0 = .sdata2:0x800C51D0; // type:object size:0x8 data:double
lbl_800C51D8 = .sdata2:0x800C51D8; // type:object size:0x4 data:float
lbl_800C51E0 = .sdata2:0x800C51E0; // type:object size:0x8 data:double
lbl_800C51E8 = .sdata2:0x800C51E8; // type:object size:0x8 data:double
lbl_800C51F0 = .sdata2:0x800C51F0; // type:object size:0x8 data:double
lbl_800C51F8 = .sdata2:0x800C51F8; // type:object size:0x4 data:float
lbl_800C5200 = .sdata2:0x800C5200; // type:object size:0x4 data:float
lbl_800C5204 = .sdata2:0x800C5204; // type:object size:0x4 data:float
lbl_800C5208 = .sdata2:0x800C5208; // type:object size:0x4 data:float
lbl_800C520C = .sdata2:0x800C520C; // type:object size:0x4 data:float
lbl_800C5210 = .sdata2:0x800C5210; // type:object size:0x4 data:float
lbl_800C5214 = .sdata2:0x800C5214; // type:object size:0x4 data:float
lbl_800C5218 = .sdata2:0x800C5218; // type:object size:0x4 data:float
lbl_800C521C = .sdata2:0x800C521C; // type:object size:0x4 data:float
lbl_800C5220 = .sdata2:0x800C5220; // type:object size:0x8 data:double
i2fMagic = .sdata2:0x800C5228; // type:object size:0x8 scope:local data:double
value1_0 = .sdata2:0x800C5230; // type:object size:0x4 data:float
value0_3 = .sdata2:0x800C5234; // type:object size:0x4 scope:local data:float
value0_6 = .sdata2:0x800C5238; // type:object size:0x4 scope:local data:float
lbl_800C523C = .sdata2:0x800C523C; // type:object size:0x4 data:float
lbl_800C5240 = .sdata2:0x800C5240; // type:object size:0x4 data:float
lbl_800C5244 = .sdata2:0x800C5244; // type:object size:0x4 data:float
lbl_800C5248 = .sdata2:0x800C5248; // type:object size:0x4 data:float
lbl_800C524C = .sdata2:0x800C524C; // type:object size:0x4 data:float
lbl_800C5250 = .sdata2:0x800C5250; // type:object size:0x4 data:float
lbl_800C5254 = .sdata2:0x800C5254; // type:object size:0x4 data:float
lbl_800C5258 = .sdata2:0x800C5258; // type:object size:0x4 data:float
lbl_800C525C = .sdata2:0x800C525C; // type:object size:0x4 data:float
lbl_800C5260 = .sdata2:0x800C5260; // type:object size:0x8 data:double
value0_3 = .sdata2:0x800C5268; // type:object size:0x4 data:float
value0_6 = .sdata2:0x800C526C; // type:object size:0x4 data:float
i2fMagic = .sdata2:0x800C5270; // type:object size:0x8 scope:local data:double
i2fMagic = .sdata2:0x800C5278; // type:object size:0x8 scope:local data:double
gx = .sdata2:0x800C5280; // type:object size:0x4 scope:global data:4byte
lbl_800C5284 = .sdata2:0x800C5284; // type:object size:0x4 data:4byte
lbl_800C5288 = .sdata2:0x800C5288; // type:object size:0x4 data:4byte
lbl_800C528C = .sdata2:0x800C528C; // type:object size:0x4 data:4byte
lbl_800C5290 = .sdata2:0x800C5290; // type:object size:0x4 data:float
lbl_800C5294 = .sdata2:0x800C5294; // type:object size:0x4 data:float
lbl_800C5298 = .sdata2:0x800C5298; // type:object size:0x4 data:float
lbl_800C52A0 = .sdata2:0x800C52A0; // type:object size:0x8 data:double
lbl_800C52A8 = .sdata2:0x800C52A8; // type:object size:0x8 data:float
lbl_800C52B0 = .sdata2:0x800C52B0; // type:object size:0x4 data:float
lbl_800C52B8 = .sdata2:0x800C52B8; // type:object size:0x8 data:double
lbl_800C52C0 = .sdata2:0x800C52C0; // type:object size:0x4 data:float
lbl_800C52C4 = .sdata2:0x800C52C4; // type:object size:0x4 data:float
lbl_800C52C8 = .sdata2:0x800C52C8; // type:object size:0x4 data:float
lbl_800C52CC = .sdata2:0x800C52CC; // type:object size:0x4 data:float
lbl_800C52D0 = .sdata2:0x800C52D0; // type:object size:0x4 data:float
lbl_800C52D4 = .sdata2:0x800C52D4; // type:object size:0x4 data:float
lbl_800C52D8 = .sdata2:0x800C52D8; // type:object size:0x8 data:float
lbl_800C52E0 = .sdata2:0x800C52E0; // type:object size:0x4 data:float
lbl_800C52E4 = .sdata2:0x800C52E4; // type:object size:0x4 data:float
lbl_800C52E8 = .sdata2:0x800C52E8; // type:object size:0x4 data:float
lbl_800C52F0 = .sdata2:0x800C52F0; // type:object size:0x8 data:double
lbl_800C52F8 = .sdata2:0x800C52F8; // type:object size:0x4 data:float
lbl_800C5300 = .sdata2:0x800C5300; // type:object size:0x8 data:double
lbl_800C5308 = .sdata2:0x800C5308; // type:object size:0x4 data:float
lbl_800C5310 = .sdata2:0x800C5310; // type:object size:0x8 data:double
lbl_800C5318 = .sdata2:0x800C5318; // type:object size:0x4 data:float
lbl_800C531C = .sdata2:0x800C531C; // type:object size:0x4 data:float
lbl_800C5320 = .sdata2:0x800C5320; // type:object size:0x4 data:float
lbl_800C5328 = .sdata2:0x800C5328; // type:object size:0x8 data:double
lbl_800C5330 = .sdata2:0x800C5330; // type:object size:0x4 data:float
lbl_800C5334 = .sdata2:0x800C5334; // type:object size:0x4 data:float
lbl_800C5338 = .sdata2:0x800C5338; // type:object size:0x4 data:float
lbl_800C533C = .sdata2:0x800C533C; // type:object size:0x4 data:float
lbl_800C5340 = .sdata2:0x800C5340; // type:object size:0x4 data:float
lbl_800C5344 = .sdata2:0x800C5344; // type:object size:0x4 data:float
lbl_800C5348 = .sdata2:0x800C5348; // type:object size:0x4 data:float
lbl_800C534C = .sdata2:0x800C534C; // type:object size:0x4 data:float
lbl_800C5350 = .sdata2:0x800C5350; // type:object size:0x4 data:float
lbl_800C5354 = .sdata2:0x800C5354; // type:object size:0x4 data:float
lbl_800C5358 = .sdata2:0x800C5358; // type:object size:0x4 data:float
lbl_800C535C = .sdata2:0x800C535C; // type:object size:0x4 data:float
lbl_800C5360 = .sdata2:0x800C5360; // type:object size:0x4 data:float
lbl_800C5364 = .sdata2:0x800C5364; // type:object size:0x4 data:float
lbl_800C5368 = .sdata2:0x800C5368; // type:object size:0x4 data:float
lbl_800C536C = .sdata2:0x800C536C; // type:object size:0x4 data:float
lbl_800C5370 = .sdata2:0x800C5370; // type:object size:0x4 data:4byte
lbl_800C5374 = .sdata2:0x800C5374; // type:object size:0x4 data:4byte
lbl_800C5378 = .sdata2:0x800C5378; // type:object size:0x8 data:float
lbl_800C5380 = .sdata2:0x800C5380; // type:object size:0x8 data:float
lbl_800C5388 = .sdata2:0x800C5388; // type:object size:0x4 data:float
lbl_800C538C = .sdata2:0x800C538C; // type:object size:0x4 data:float
lbl_800C5390 = .sdata2:0x800C5390; // type:object size:0x4 data:float
lbl_800C5398 = .sdata2:0x800C5398; // type:object size:0x8 data:double
lbl_800C53A0 = .sdata2:0x800C53A0; // type:object size:0x8 data:double
lbl_800C53A8 = .sdata2:0x800C53A8; // type:object size:0x4 data:float
lbl_800C53AC = .sdata2:0x800C53AC; // type:object size:0x4 data:float
lbl_800C53B0 = .sdata2:0x800C53B0; // type:object size:0x8 data:float
lbl_800C53B8 = .sdata2:0x800C53B8; // type:object size:0x4 data:float
lbl_800C53BC = .sdata2:0x800C53BC; // type:object size:0x4 data:float
lbl_800C53C0 = .sdata2:0x800C53C0; // type:object size:0x8 data:float
lbl_800C53C8 = .sdata2:0x800C53C8; // type:object size:0x4 data:float
lbl_800C53D0 = .sdata2:0x800C53D0; // type:object size:0x8 data:double
lbl_800C53D8 = .sdata2:0x800C53D8; // type:object size:0x4 data:4byte
lbl_800C53DC = .sdata2:0x800C53DC; // type:object size:0x4 data:4byte
lbl_800C53E0 = .sdata2:0x800C53E0; // type:object size:0x4 data:float
lbl_800C53E4 = .sdata2:0x800C53E4; // type:object size:0x4 data:float
lbl_800C53E8 = .sdata2:0x800C53E8; // type:object size:0x4 data:float
lbl_800C53EC = .sdata2:0x800C53EC; // type:object size:0x4 data:float
lbl_800C53F0 = .sdata2:0x800C53F0; // type:object size:0x4 data:float
lbl_800C53F4 = .sdata2:0x800C53F4; // type:object size:0x4 data:float
lbl_800C53F8 = .sdata2:0x800C53F8; // type:object size:0x8 data:double
lbl_800C5400 = .sdata2:0x800C5400; // type:object size:0x4 data:float
lbl_800C5408 = .sdata2:0x800C5408; // type:object size:0x8 data:double
lbl_800C5410 = .sdata2:0x800C5410; // type:object size:0x8 data:double
lbl_800C5418 = .sdata2:0x800C5418; // type:object size:0x4 data:float
lbl_800C5420 = .sdata2:0x800C5420; // type:object size:0x8 data:double
lbl_800C5428 = .sdata2:0x800C5428; // type:object size:0x8 data:double
lbl_800C5430 = .sdata2:0x800C5430; // type:object size:0x4 data:float
lbl_800C5434 = .sdata2:0x800C5434; // type:object size:0x4 data:float
lbl_800C5438 = .sdata2:0x800C5438; // type:object size:0x8 data:double
lbl_800C5440 = .sdata2:0x800C5440; // type:object size:0x8 data:double
lbl_800C5448 = .sdata2:0x800C5448; // type:object size:0x8 data:float
lbl_800C5450 = .sdata2:0x800C5450; // type:object size:0x4 data:float
lbl_800C5454 = .sdata2:0x800C5454; // type:object size:0x4 data:float
lbl_800C5458 = .sdata2:0x800C5458; // type:object size:0x8 data:double
lbl_800C5460 = .sdata2:0x800C5460; // type:object size:0x4 data:float
lbl_800C5464 = .sdata2:0x800C5464; // type:object size:0x4 data:float
lbl_800C5468 = .sdata2:0x800C5468; // type:object size:0x4 data:float
lbl_800C5470 = .sdata2:0x800C5470; // type:object size:0x8 data:double
lbl_800C5478 = .sdata2:0x800C5478; // type:object size:0x8 data:double
lbl_800C5480 = .sdata2:0x800C5480; // type:object size:0x8 data:double
lbl_800C5488 = .sdata2:0x800C5488; // type:object size:0x8 data:double
lbl_800C5490 = .sdata2:0x800C5490; // type:object size:0x8 data:double
lbl_800C5498 = .sdata2:0x800C5498; // type:object size:0x8 data:double
lbl_800C54A0 = .sdata2:0x800C54A0; // type:object size:0x8 data:double
lbl_800C54A8 = .sdata2:0x800C54A8; // type:object size:0x4 data:float
lbl_800C54AC = .sdata2:0x800C54AC; // type:object size:0x4 data:float
lbl_800C54B0 = .sdata2:0x800C54B0; // type:object size:0x4 data:float
lbl_800C54B4 = .sdata2:0x800C54B4; // type:object size:0x4 data:float
lbl_800C54B8 = .sdata2:0x800C54B8; // type:object size:0x4 data:float
lbl_800C54C0 = .sdata2:0x800C54C0; // type:object size:0x8 data:double
lbl_800C54C8 = .sdata2:0x800C54C8; // type:object size:0x4 data:float
lbl_800C54CC = .sdata2:0x800C54CC; // type:object size:0x4 data:float
lbl_800C54D0 = .sdata2:0x800C54D0; // type:object size:0x4 data:float
lbl_800C54D4 = .sdata2:0x800C54D4; // type:object size:0x4 data:float
lbl_800C54D8 = .sdata2:0x800C54D8; // type:object size:0x4 data:float
lbl_800C54DC = .sdata2:0x800C54DC; // type:object size:0x4 data:float
lbl_800C54E0 = .sdata2:0x800C54E0; // type:object size:0x8 data:float
lbl_800C54E8 = .sdata2:0x800C54E8; // type:object size:0x4 data:float
lbl_800C54EC = .sdata2:0x800C54EC; // type:object size:0x4 data:float
lbl_800C54F0 = .sdata2:0x800C54F0; // type:object size:0x8 data:float
lbl_800C54F8 = .sdata2:0x800C54F8; // type:object size:0x4 data:float
lbl_800C54FC = .sdata2:0x800C54FC; // type:object size:0x4 data:float
lbl_800C5500 = .sdata2:0x800C5500; // type:object size:0x8 data:float
lbl_800C5508 = .sdata2:0x800C5508; // type:object size:0x8 data:float
lbl_800C5510 = .sdata2:0x800C5510; // type:object size:0x4 data:float
lbl_800C5514 = .sdata2:0x800C5514; // type:object size:0x4 data:float
lbl_800C5518 = .sdata2:0x800C5518; // type:object size:0x8 data:double
lbl_800C5520 = .sdata2:0x800C5520; // type:object size:0x8 data:double
lbl_800C5528 = .sdata2:0x800C5528; // type:object size:0x8 data:float
lbl_800C5530 = .sdata2:0x800C5530; // type:object size:0x8 data:float
lbl_800C5538 = .sdata2:0x800C5538; // type:object size:0x8 data:float
lbl_800C5540 = .sdata2:0x800C5540; // type:object size:0x4 data:float
lbl_800C5548 = .sdata2:0x800C5548; // type:object size:0x8 data:double
lbl_800C5550 = .sdata2:0x800C5550; // type:object size:0x4 data:float
lbl_800C5554 = .sdata2:0x800C5554; // type:object size:0x4 data:float
lbl_800C5558 = .sdata2:0x800C5558; // type:object size:0x4 data:float
lbl_800C555C = .sdata2:0x800C555C; // type:object size:0x4 data:float
lbl_800C5560 = .sdata2:0x800C5560; // type:object size:0x8 data:double
lbl_800C5568 = .sdata2:0x800C5568; // type:object size:0x8 data:double
lbl_800C5570 = .sdata2:0x800C5570; // type:object size:0x4 data:float
lbl_800C5574 = .sdata2:0x800C5574; // type:object size:0x4 data:float
lbl_800C5578 = .sdata2:0x800C5578; // type:object size:0x8 data:double
lbl_800C5580 = .sdata2:0x800C5580; // type:object size:0x4 data:float
lbl_800C5588 = .sdata2:0x800C5588; // type:object size:0x8 data:double
lbl_800C5590 = .sdata2:0x800C5590; // type:object size:0x4 data:float
lbl_800C5594 = .sdata2:0x800C5594; // type:object size:0x4 data:float
lbl_800C5598 = .sdata2:0x800C5598; // type:object size:0x4 data:float
lbl_800C55A0 = .sdata2:0x800C55A0; // type:object size:0x8 data:double
lbl_800C55A8 = .sdata2:0x800C55A8; // type:object size:0x4 data:float
lbl_800C55AC = .sdata2:0x800C55AC; // type:object size:0x4 data:float
lbl_800C55B0 = .sdata2:0x800C55B0; // type:object size:0x4 data:float
lbl_800C55B4 = .sdata2:0x800C55B4; // type:object size:0x4 data:float
lbl_800C55B8 = .sdata2:0x800C55B8; // type:object size:0x8 data:float
lbl_800C55C0 = .sdata2:0x800C55C0; // type:object size:0x4 data:float
lbl_800C55C4 = .sdata2:0x800C55C4; // type:object size:0x4 data:float
lbl_800C55C8 = .sdata2:0x800C55C8; // type:object size:0x4 data:float
lbl_800C55CC = .sdata2:0x800C55CC; // type:object size:0x4 data:float
lbl_800C55D0 = .sdata2:0x800C55D0; // type:object size:0x4 data:float
lbl_800C55D4 = .sdata2:0x800C55D4; // type:object size:0x4 data:float
lbl_800C55D8 = .sdata2:0x800C55D8; // type:object size:0x4 data:float
lbl_800C55DC = .sdata2:0x800C55DC; // type:object size:0x4 data:float
lbl_800C55E0 = .sdata2:0x800C55E0; // type:object size:0x8 data:float
lbl_800C55E8 = .sdata2:0x800C55E8; // type:object size:0x8 data:float
lbl_800C55F0 = .sdata2:0x800C55F0; // type:object size:0x4 data:float
lbl_800C55F4 = .sdata2:0x800C55F4; // type:object size:0x4 data:float
lbl_800C55F8 = .sdata2:0x800C55F8; // type:object size:0x4 data:float
lbl_800C55FC = .sdata2:0x800C55FC; // type:object size:0x4 data:float
lbl_800C5600 = .sdata2:0x800C5600; // type:object size:0x8 data:double
lbl_800C5608 = .sdata2:0x800C5608; // type:object size:0x8 data:double
lbl_800C5610 = .sdata2:0x800C5610; // type:object size:0x8 data:double
lbl_800C5618 = .sdata2:0x800C5618; // type:object size:0x8 data:double
lbl_800C5620 = .sdata2:0x800C5620; // type:object size:0x4 data:float
lbl_800C5624 = .sdata2:0x800C5624; // type:object size:0x4 data:float
lbl_800C5628 = .sdata2:0x800C5628; // type:object size:0x4 data:float
lbl_800C562C = .sdata2:0x800C562C; // type:object size:0x4 data:float
lbl_800C5630 = .sdata2:0x800C5630; // type:object size:0x4 data:float
lbl_800C5634 = .sdata2:0x800C5634; // type:object size:0x4 data:float
lbl_800C5638 = .sdata2:0x800C5638; // type:object size:0x4 data:float
lbl_800C563C = .sdata2:0x800C563C; // type:object size:0x4 data:float
lbl_800C5640 = .sdata2:0x800C5640; // type:object size:0x4 data:float
lbl_800C5644 = .sdata2:0x800C5644; // type:object size:0x4 data:float
lbl_800C5648 = .sdata2:0x800C5648; // type:object size:0x4 data:float
lbl_800C564C = .sdata2:0x800C564C; // type:object size:0x4 data:float
lbl_800C5650 = .sdata2:0x800C5650; // type:object size:0x4 data:float
lbl_800C5654 = .sdata2:0x800C5654; // type:object size:0x4 data:float
lbl_800C5658 = .sdata2:0x800C5658; // type:object size:0x4 data:float
lbl_800C5660 = .sdata2:0x800C5660; // type:object size:0x8 data:double
lbl_800C5668 = .sdata2:0x800C5668; // type:object size:0x4 data:float
lbl_800C566C = .sdata2:0x800C566C; // type:object size:0x4 data:float
lbl_800C5670 = .sdata2:0x800C5670; // type:object size:0x8 data:double
lbl_800C5678 = .sdata2:0x800C5678; // type:object size:0x8 data:double
lbl_800C5680 = .sdata2:0x800C5680; // type:object size:0x4 data:float
lbl_800C5688 = .sdata2:0x800C5688; // type:object size:0x8 data:double
lbl_800C5690 = .sdata2:0x800C5690; // type:object size:0x8 data:double
lbl_800C5698 = .sdata2:0x800C5698; // type:object size:0x8 data:double
lbl_800C56A0 = .sdata2:0x800C56A0; // type:object size:0x4 data:float
lbl_800C56A4 = .sdata2:0x800C56A4; // type:object size:0x4 data:float
lbl_800C56A8 = .sdata2:0x800C56A8; // type:object size:0x4 data:float
lbl_800C56AC = .sdata2:0x800C56AC; // type:object size:0x4 data:float
lbl_800C56B0 = .sdata2:0x800C56B0; // type:object size:0x8 data:float
lbl_800C56B8 = .sdata2:0x800C56B8; // type:object size:0x4 data:float
lbl_800C56BC = .sdata2:0x800C56BC; // type:object size:0x4 data:float
lbl_800C56C0 = .sdata2:0x800C56C0; // type:object size:0x4 data:float
lbl_800C56C4 = .sdata2:0x800C56C4; // type:object size:0x4 data:float
lbl_800C56C8 = .sdata2:0x800C56C8; // type:object size:0x4 data:float
lbl_800C56CC = .sdata2:0x800C56CC; // type:object size:0x4 data:float
lbl_800C56D0 = .sdata2:0x800C56D0; // type:object size:0x4 data:float
lbl_800C56D8 = .sdata2:0x800C56D8; // type:object size:0x8 data:double
lbl_800C56E0 = .sdata2:0x800C56E0; // type:object size:0x4 data:float
lbl_800C56E4 = .sdata2:0x800C56E4; // type:object size:0x4 data:float
lbl_800C56E8 = .sdata2:0x800C56E8; // type:object size:0x4 data:float
lbl_800C56F0 = .sdata2:0x800C56F0; // type:object size:0x8 data:double
lbl_800C56F8 = .sdata2:0x800C56F8; // type:object size:0x8 data:double
lbl_800C5700 = .sbss2:0x800C5700; // type:object size:0x4 data:4byte
lbl_800C5704 = .sbss2:0x800C5704; // type:object size:0x4 data:4byte
