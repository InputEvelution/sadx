memset = .init:0x80003100; // type:function size:0x30 scope:global
__fill_mem = .init:0x80003130; // type:function size:0xB8 scope:global
memcpy = .init:0x800031E8; // type:function size:0x50 scope:global
TRK_memset = .init:0x80003238; // type:function size:0x30
TRK_memcpy = .init:0x80003268; // type:function size:0x24
gTRKInterruptVectorTable = .init:0x8000328C; // type:label scope:global
__TRK_reset = .init:0x800051C0; // type:function size:0x104
gTRKInterruptVectorTableEnd = .init:0x800051C0; // type:label scope:global
__check_pad3 = .init:0x800052C4; // type:function size:0x40 scope:local
__set_debug_bba = .init:0x80005304; // type:function size:0xC scope:local
__get_debug_bba = .init:0x80005310; // type:function size:0x8 scope:local
__start = .init:0x80005318; // type:function size:0x15C scope:weak
__init_registers = .init:0x80005474; // type:function size:0x90 scope:local
__init_data = .init:0x80005504; // type:function size:0xC0 scope:local
__init_hardware = .init:0x800055C4; // type:function size:0x24 scope:global
__flush_cache = .init:0x800055E8; // type:function size:0x34 scope:global
_rom_copy_info = .init:0x8000561C; // type:object size:0x6C scope:global data:4byte
_bss_init_info = .init:0x80005688; // type:object size:0x18 scope:global data:4byte
main = .text:0x800056A0; // type:function size:0x4B8 scope:global
fn_80005B58 = .text:0x80005B58; // type:function size:0x240
fn_80005D98 = .text:0x80005D98; // type:function size:0x350
fn_800060E8 = .text:0x800060E8; // type:function size:0x194
fn_8000627C = .text:0x8000627C; // type:function size:0xF4
__va_arg = .text:0x80006370; // type:function size:0xC8 scope:global
__destroy_global_chain = .text:0x80006438; // type:function size:0x48 scope:global
__cvt_fp2unsigned = .text:0x80006480; // type:function size:0x5C
__save_fpr = .text:0x800064DC; // type:function size:0x4C scope:global
_savefpr_14 = .text:0x800064DC; // type:label scope:global
_savefpr_15 = .text:0x800064E0; // type:label scope:global
_savefpr_16 = .text:0x800064E4; // type:label scope:global
_savefpr_17 = .text:0x800064E8; // type:label scope:global
_savefpr_18 = .text:0x800064EC; // type:label scope:global
_savefpr_19 = .text:0x800064F0; // type:label scope:global
_savefpr_20 = .text:0x800064F4; // type:label scope:global
_savefpr_21 = .text:0x800064F8; // type:label scope:global
_savefpr_22 = .text:0x800064FC; // type:label scope:global
_savefpr_23 = .text:0x80006500; // type:label scope:global
_savefpr_24 = .text:0x80006504; // type:label scope:global
_savefpr_25 = .text:0x80006508; // type:label scope:global
_savefpr_26 = .text:0x8000650C; // type:label scope:global
_savefpr_27 = .text:0x80006510; // type:label scope:global
_savefpr_28 = .text:0x80006514; // type:label scope:global
_savefpr_29 = .text:0x80006518; // type:label scope:global
_savefpr_30 = .text:0x8000651C; // type:label scope:global
_savefpr_31 = .text:0x80006520; // type:label scope:global
__restore_fpr = .text:0x80006528; // type:function size:0x4C scope:global
_restfpr_14 = .text:0x80006528; // type:label scope:global
_restfpr_15 = .text:0x8000652C; // type:label scope:global
_restfpr_16 = .text:0x80006530; // type:label scope:global
_restfpr_17 = .text:0x80006534; // type:label scope:global
_restfpr_18 = .text:0x80006538; // type:label scope:global
_restfpr_19 = .text:0x8000653C; // type:label scope:global
_restfpr_20 = .text:0x80006540; // type:label scope:global
_restfpr_21 = .text:0x80006544; // type:label scope:global
_restfpr_22 = .text:0x80006548; // type:label scope:global
_restfpr_23 = .text:0x8000654C; // type:label scope:global
_restfpr_24 = .text:0x80006550; // type:label scope:global
_restfpr_25 = .text:0x80006554; // type:label scope:global
_restfpr_26 = .text:0x80006558; // type:label scope:global
_restfpr_27 = .text:0x8000655C; // type:label scope:global
_restfpr_28 = .text:0x80006560; // type:label scope:global
_restfpr_29 = .text:0x80006564; // type:label scope:global
_restfpr_30 = .text:0x80006568; // type:label scope:global
_restfpr_31 = .text:0x8000656C; // type:label scope:global
__save_gpr = .text:0x80006574; // type:function size:0x4C scope:global
_savegpr_14 = .text:0x80006574; // type:label scope:global
_savegpr_15 = .text:0x80006578; // type:label scope:global
_savegpr_16 = .text:0x8000657C; // type:label scope:global
_savegpr_17 = .text:0x80006580; // type:label scope:global
_savegpr_18 = .text:0x80006584; // type:label scope:global
_savegpr_19 = .text:0x80006588; // type:label scope:global
_savegpr_20 = .text:0x8000658C; // type:label scope:global
_savegpr_21 = .text:0x80006590; // type:label scope:global
_savegpr_22 = .text:0x80006594; // type:label scope:global
_savegpr_23 = .text:0x80006598; // type:label scope:global
_savegpr_24 = .text:0x8000659C; // type:label scope:global
_savegpr_25 = .text:0x800065A0; // type:label scope:global
_savegpr_26 = .text:0x800065A4; // type:label scope:global
_savegpr_27 = .text:0x800065A8; // type:label scope:global
_savegpr_28 = .text:0x800065AC; // type:label scope:global
_savegpr_29 = .text:0x800065B0; // type:label scope:global
_savegpr_30 = .text:0x800065B4; // type:label scope:global
_savegpr_31 = .text:0x800065B8; // type:label scope:global
__restore_gpr = .text:0x800065C0; // type:function size:0x4C scope:global
_restgpr_14 = .text:0x800065C0; // type:label scope:global
_restgpr_15 = .text:0x800065C4; // type:label scope:global
_restgpr_16 = .text:0x800065C8; // type:label scope:global
_restgpr_17 = .text:0x800065CC; // type:label scope:global
_restgpr_18 = .text:0x800065D0; // type:label scope:global
_restgpr_19 = .text:0x800065D4; // type:label scope:global
_restgpr_20 = .text:0x800065D8; // type:label scope:global
_restgpr_21 = .text:0x800065DC; // type:label scope:global
_restgpr_22 = .text:0x800065E0; // type:label scope:global
_restgpr_23 = .text:0x800065E4; // type:label scope:global
_restgpr_24 = .text:0x800065E8; // type:label scope:global
_restgpr_25 = .text:0x800065EC; // type:label scope:global
_restgpr_26 = .text:0x800065F0; // type:label scope:global
_restgpr_27 = .text:0x800065F4; // type:label scope:global
_restgpr_28 = .text:0x800065F8; // type:label scope:global
_restgpr_29 = .text:0x800065FC; // type:label scope:global
_restgpr_30 = .text:0x80006600; // type:label scope:global
_restgpr_31 = .text:0x80006604; // type:label scope:global
__div2u = .text:0x8000660C; // type:function size:0xEC scope:global
__div2i = .text:0x800066F8; // type:function size:0x138
__mod2u = .text:0x80006830; // type:function size:0xE4 scope:global
__shl2i = .text:0x80006914; // type:function size:0x24
__shr2u = .text:0x80006938; // type:function size:0x24
__shr2i = .text:0x8000695C; // type:function size:0x28
__cvt_sll_dbl = .text:0x80006984; // type:function size:0xB0
__cvt_dbl_usll = .text:0x80006A34; // type:function size:0xCC
__sys_free = .text:0x80006B00; // type:function size:0xB8
exit = .text:0x80006BB8; // type:function size:0xCC scope:global
free = .text:0x80006C84; // type:function size:0x134
deallocate_from_fixed_pools = .text:0x80006DB8; // type:function size:0x1FC
SubBlock_merge_next = .text:0x80006FB4; // type:function size:0xBC
Block_link = .text:0x80007070; // type:function size:0x17C
__flush_all = .text:0x800071EC; // type:function size:0x70
__close_all = .text:0x8000725C; // type:function size:0x98 scope:global
__dec2num = .text:0x800072F4; // type:function size:0x954
__num2dec = .text:0x80007C48; // type:function size:0x1A4
__num2dec_internal = .text:0x80007DEC; // type:function size:0x23C
__minus_dec = .text:0x80008028; // type:function size:0x4FC
__less_dec = .text:0x80008524; // type:function size:0xF8
__equals_dec = .text:0x8000861C; // type:function size:0x10C
__two_exp = .text:0x80008728; // type:function size:0x340
__str2dec = .text:0x80008A68; // type:function size:0xEC
__timesdec = .text:0x80008B54; // type:function size:0x28C
__ull2dec = .text:0x80008DE0; // type:function size:0x110
__count_trailing_zerol = .text:0x80008EF0; // type:function size:0x70
__flush_buffer = .text:0x80008F60; // type:function size:0xC4 scope:global
__prep_buffer = .text:0x80009024; // type:function size:0x34 scope:global
toupper = .text:0x80009058; // type:function size:0x24
tolower = .text:0x8000907C; // type:function size:0x24
__fwrite = .text:0x800090A0; // type:function size:0x30C scope:global
fwrite = .text:0x800093AC; // type:function size:0x20 scope:global
fflush = .text:0x800093CC; // type:function size:0x138
fclose = .text:0x80009504; // type:function size:0xC0
fseek = .text:0x800095C4; // type:function size:0x20 scope:global
_fseek = .text:0x800095E4; // type:function size:0x23C
ftell = .text:0x80009820; // type:function size:0x70
wcstombs = .text:0x80009890; // type:function size:0xA0 scope:global
unicode_to_UTF8 = .text:0x80009930; // type:function size:0xA4
mbtowc = .text:0x800099D4; // type:function size:0x20
utf8_to_unicode = .text:0x800099F4; // type:function size:0x120
is_utf8_complete = .text:0x80009B14; // type:function size:0xEC
memcmp = .text:0x80009C00; // type:function size:0x4C
__memrchr = .text:0x80009C4C; // type:function size:0x2C scope:global
memchr = .text:0x80009C78; // type:function size:0x2C scope:global
memmove = .text:0x80009CA4; // type:function size:0xCC scope:global
__copy_longs_rev_unaligned = .text:0x80009D70; // type:function size:0xB0
__copy_longs_unaligned = .text:0x80009E20; // type:function size:0xC4
__copy_longs_rev_aligned = .text:0x80009EE4; // type:function size:0xAC
__copy_longs_aligned = .text:0x80009F90; // type:function size:0xC0
__stdio_atexit = .text:0x8000A050; // type:function size:0x10 scope:global
sprintf = .text:0x8000A060; // type:function size:0xE0
vsprintf = .text:0x8000A140; // type:function size:0x78
vprintf = .text:0x8000A1B8; // type:function size:0x7C scope:global
__StringWrite = .text:0x8000A234; // type:function size:0x6C
__FileWrite = .text:0x8000A2A0; // type:function size:0x58 scope:global
__pformatter = .text:0x8000A2F8; // type:function size:0x774 scope:local
float2str = .text:0x8000AA6C; // type:function size:0x6EC scope:local
round_decimal = .text:0x8000B158; // type:function size:0x12C
double2hex = .text:0x8000B284; // type:function size:0x338 scope:local
longlong2str = .text:0x8000B5BC; // type:function size:0x2DC scope:local
long2str = .text:0x8000B898; // type:function size:0x220 scope:local
parse_format = .text:0x8000BAB8; // type:function size:0x504 scope:local
srand = .text:0x8000BFBC; // type:function size:0x8
rand = .text:0x8000BFC4; // type:function size:0x20
sscanf = .text:0x8000BFE4; // type:function size:0xC4
__StringRead = .text:0x8000C0A8; // type:function size:0x90
__sformatter = .text:0x8000C138; // type:function size:0x9AC
parse_format = .text:0x8000CAE4; // type:function size:0x548 scope:local
strstr = .text:0x8000D02C; // type:function size:0x68
strchr = .text:0x8000D094; // type:function size:0x30 scope:global
strncmp = .text:0x8000D0C4; // type:function size:0x40
strcmp = .text:0x8000D104; // type:function size:0x128
strncat = .text:0x8000D22C; // type:function size:0x4C
strcat = .text:0x8000D278; // type:function size:0x2C
strncpy = .text:0x8000D2A4; // type:function size:0x44
strcpy = .text:0x8000D2E8; // type:function size:0xB8
strlen = .text:0x8000D3A0; // type:function size:0x1C scope:global
__strtold = .text:0x8000D3BC; // type:function size:0x100C
atoi = .text:0x8000E3C8; // type:function size:0xC0
strtoul = .text:0x8000E488; // type:function size:0xAC
__strtoull = .text:0x8000E534; // type:function size:0x40C
__strtoul = .text:0x8000E940; // type:function size:0x378
__close_console = .text:0x8000ECB8; // type:function size:0x8
__write_console = .text:0x8000ECC0; // type:function size:0xC4
fwide = .text:0x8000ED84; // type:function size:0x88 scope:global
__ieee754_acos = .text:0x8000EE0C; // type:function size:0x310
__ieee754_asin = .text:0x8000F11C; // type:function size:0x264
__ieee754_atan2 = .text:0x8000F380; // type:function size:0x290
__ieee754_log = .text:0x8000F610; // type:function size:0x27C
__ieee754_log10 = .text:0x8000F88C; // type:function size:0x110
__ieee754_pow = .text:0x8000F99C; // type:function size:0x88C
__ieee754_rem_pio2 = .text:0x80010228; // type:function size:0x3A0
__kernel_cos = .text:0x800105C8; // type:function size:0xF4
__kernel_rem_pio2 = .text:0x800106BC; // type:function size:0xE54
__kernel_sin = .text:0x80011510; // type:function size:0xA0
__kernel_tan = .text:0x800115B0; // type:function size:0x214
atan = .text:0x800117C4; // type:function size:0x200
ceil = .text:0x800119C4; // type:function size:0x144
copysign = .text:0x80011B08; // type:function size:0x28
cos = .text:0x80011B30; // type:function size:0xD4
floor = .text:0x80011C04; // type:function size:0x148
frexp = .text:0x80011D4C; // type:function size:0x8C
ldexp = .text:0x80011DD8; // type:function size:0x1C4
modf = .text:0x80011F9C; // type:function size:0xFC
nextafter = .text:0x80012098; // type:function size:0x184
sin = .text:0x8001221C; // type:function size:0xD8
tan = .text:0x800122F4; // type:function size:0x78
acos = .text:0x8001236C; // type:function size:0x20
asin = .text:0x8001238C; // type:function size:0x20
atan2 = .text:0x800123AC; // type:function size:0x20
log = .text:0x800123CC; // type:function size:0x20
log10 = .text:0x800123EC; // type:function size:0x20
pow = .text:0x8001240C; // type:function size:0x20
modff__FfPf = .text:0x8001242C; // type:function size:0x130
sqrtf__Ff = .text:0x8001255C; // type:function size:0x64
floorf = .text:0x800125C0; // type:function size:0x24
powf = .text:0x800125E4; // type:function size:0x24
fabsf = .text:0x80012608; // type:function size:0xC
tanf = .text:0x80012614; // type:function size:0x24
sinf = .text:0x80012638; // type:function size:0x24
cosf = .text:0x8001265C; // type:function size:0x24
atanf = .text:0x80012680; // type:function size:0x24
acosf = .text:0x800126A4; // type:function size:0x24
TRKNubMainLoop = .text:0x800126C8; // type:function size:0xF8 scope:global
TRKDestructEvent = .text:0x800127C0; // type:function size:0x24 scope:global
TRKConstructEvent = .text:0x800127E4; // type:function size:0x18
TRKPostEvent = .text:0x800127FC; // type:function size:0xE0
TRKGetNextEvent = .text:0x800128DC; // type:function size:0xB4 scope:global
TRKInitializeEventQueue = .text:0x80012990; // type:function size:0x58 scope:global
TRKNubWelcome = .text:0x800129E8; // type:function size:0x28 scope:global
TRKTerminateNub = .text:0x80012A10; // type:function size:0x24 scope:global
TRKInitializeNub = .text:0x80012A34; // type:function size:0x134 scope:global
TRKMessageSend = .text:0x80012B68; // type:function size:0x1DC
TRKReadBuffer_ui32 = .text:0x80012D44; // type:function size:0xF0
TRKReadBuffer_ui8 = .text:0x80012E34; // type:function size:0x98
TRKReadBuffer1_ui64 = .text:0x80012ECC; // type:function size:0xE8
TRKReadBuffer1_ui32 = .text:0x80012FB4; // type:function size:0xC8
TRKReadBuffer1_ui16 = .text:0x8001307C; // type:function size:0xB8
TRKReadBuffer1_ui8 = .text:0x80013134; // type:function size:0x80
TRKAppendBuffer_ui32 = .text:0x800131B4; // type:function size:0xA8
TRKAppendBuffer_ui8 = .text:0x8001325C; // type:function size:0x68
TRKAppendBuffer1_ui64 = .text:0x800132C4; // type:function size:0x88
TRKAppendBuffer1_ui32 = .text:0x8001334C; // type:function size:0x64
TRKAppendBuffer1_ui16 = .text:0x800133B0; // type:function size:0x54
TRKReadBuffer = .text:0x80013404; // type:function size:0x8C
TRKAppendBuffer = .text:0x80013490; // type:function size:0xA4
TRKSetBufferPosition = .text:0x80013534; // type:function size:0x30
TRKResetBuffer = .text:0x80013564; // type:function size:0x40
TRKReleaseBuffer = .text:0x800135A4; // type:function size:0x64
TRKGetBuffer = .text:0x80013608; // type:function size:0x2C scope:global
TRKGetFreeBuffer = .text:0x80013634; // type:function size:0xC8
TRKInitializeMessageBuffers = .text:0x800136FC; // type:function size:0x74 scope:global
TRKTerminateSerialHandler = .text:0x80013770; // type:function size:0x8
TRKInitializeSerialHandler = .text:0x80013778; // type:function size:0x24 scope:global
TRKProcessInput = .text:0x8001379C; // type:function size:0x50
TRKGetInput = .text:0x800137EC; // type:function size:0x98 scope:global
TRKTestForPacket = .text:0x80013884; // type:function size:0x2B8
usr_put_initialize = .text:0x80013B3C; // type:function size:0x4 scope:global
usr_puts_serial = .text:0x80013B40; // type:function size:0x88
TRKDispatchMessage = .text:0x80013BC8; // type:function size:0x84 scope:global
TRKInitializeDispatcher = .text:0x80013C4C; // type:function size:0x18 scope:global
TRKDoSetOption = .text:0x80013C64; // type:function size:0x1A4
TRKDoStop = .text:0x80013E08; // type:function size:0x100
TRKDoStep = .text:0x80013F08; // type:function size:0x530
TRKDoContinue = .text:0x80014438; // type:function size:0x154
TRKDoFlushCache = .text:0x8001458C; // type:function size:0x2F8
TRKDoWriteRegisters = .text:0x80014884; // type:function size:0x3C8
TRKDoReadRegisters = .text:0x80014C4C; // type:function size:0x3CC
TRKDoWriteMemory = .text:0x80015018; // type:function size:0x420
TRKDoReadMemory = .text:0x80015438; // type:function size:0x410
TRKDoCPUType = .text:0x80015848; // type:function size:0x398
TRKDoSupportMask = .text:0x80015BE0; // type:function size:0x230
TRKDoVersions = .text:0x80015E10; // type:function size:0x2D8
TRKDoReset = .text:0x800160E8; // type:function size:0xB8
TRKDoDisconnect = .text:0x800161A0; // type:function size:0xE4
TRKDoConnect = .text:0x80016284; // type:function size:0xBC
TRKDoUnsupported = .text:0x80016340; // type:function size:0xB0
TRKStandardACK = .text:0x800163F0; // type:function size:0xB8
SetTRKConnected = .text:0x800164A8; // type:function size:0xC
GetTRKConnected = .text:0x800164B4; // type:function size:0x10
HandlePositionFileSupportRequest = .text:0x800164C4; // type:function size:0x190
HandleCloseFileSupportRequest = .text:0x80016654; // type:function size:0x120
HandleOpenFileSupportRequest = .text:0x80016774; // type:function size:0x1A8
TRKRequestSend = .text:0x8001691C; // type:function size:0x1A4
TRKSuppAccessFile = .text:0x80016AC0; // type:function size:0x2C4
TRKReleaseMutex = .text:0x80016D84; // type:function size:0x8
TRKAcquireMutex = .text:0x80016D8C; // type:function size:0x8
TRKInitializeMutex = .text:0x80016D94; // type:function size:0x8
TRKDoNotifyStopped = .text:0x80016D9C; // type:function size:0xD8
TRK_flush_cache = .text:0x80016E74; // type:function size:0x38
TRK_fill_mem = .text:0x80016EAC; // type:function size:0xBC
__TRK_get_MSR = .text:0x80016F68; // type:function size:0x8
__TRK_set_MSR = .text:0x80016F70; // type:function size:0x8
TRK_ppc_memcpy = .text:0x80016F78; // type:function size:0x3C
TRKInterruptHandler = .text:0x80016FB4; // type:function size:0x194 scope:global
TRKExceptionHandler = .text:0x80017148; // type:function size:0x9C scope:global
TRKSwapAndGo = .text:0x800171E4; // type:function size:0xC4 scope:global
TRKInterruptHandlerEnableInterrupts = .text:0x800172A8; // type:function size:0x54 scope:global
TRKTargetSetInputPendingPtr = .text:0x800172FC; // type:function size:0x10 scope:global
TRKPPCAccessFPRegister = .text:0x8001730C; // type:function size:0x21C
TRKTargetStop = .text:0x80017528; // type:function size:0x18
TRKTargetSetStopped = .text:0x80017540; // type:function size:0x10 scope:global
TRKTargetStopped = .text:0x80017550; // type:function size:0x10 scope:global
TRKTargetFlushCache = .text:0x80017560; // type:function size:0x3C
TRKTargetSupportRequest = .text:0x8001759C; // type:function size:0x208 scope:global
TRKTargetGetPC = .text:0x800177A4; // type:function size:0x10
TRKTargetStepOutOfRange = .text:0x800177B4; // type:function size:0x7C
TRKTargetSingleStep = .text:0x80017830; // type:function size:0x6C
TRKTargetAddExceptionInfo = .text:0x8001789C; // type:function size:0xAC
TRKTargetAddStopInfo = .text:0x80017948; // type:function size:0x124
TRKTargetInterrupt = .text:0x80017A6C; // type:function size:0x15C scope:global
TRKPostInterruptEvent = .text:0x80017BC8; // type:function size:0xC0 scope:global
TRKTargetCPUType = .text:0x80017C88; // type:function size:0x60
TRKTargetSupportMask = .text:0x80017CE8; // type:function size:0xA4
TRKTargetVersions = .text:0x80017D8C; // type:function size:0x24
TRKTargetAccessExtended2 = .text:0x80017DB0; // type:function size:0x438
TRKTargetAccessExtended1 = .text:0x800181E8; // type:function size:0x170
TRKTargetAccessFP = .text:0x80018358; // type:function size:0x13C
TRKTargetAccessDefault = .text:0x80018494; // type:function size:0xF4
TRKTargetAccessMemory = .text:0x80018588; // type:function size:0x14C
TRKValidMemory32 = .text:0x800186D4; // type:function size:0x124
TRKAccessFile = .text:0x80018800; // type:function size:0x8
TRKOpenFile = .text:0x80018808; // type:function size:0x8
TRKCloseFile = .text:0x80018810; // type:function size:0x8
TRKPositionFile = .text:0x80018818; // type:function size:0x8
InitMetroTRK = .text:0x80018820; // type:function size:0x94 scope:global
TRKInitializeTarget = .text:0x800188B4; // type:function size:0x4C scope:global
TRKTargetTranslate = .text:0x80018900; // type:function size:0x40
EnableMetroTRKInterrupts = .text:0x80018940; // type:function size:0x20 scope:global
TRKSaveExtended1Block = .text:0x80018960; // type:function size:0x1B8 scope:global
TRKRestoreExtended1Block = .text:0x80018B18; // type:function size:0x1B8 scope:global
TRKTargetCPUMinorType = .text:0x80018CD0; // type:function size:0x8
TRK_main = .text:0x80018CD8; // type:function size:0x44 scope:global
TRKLoadContext = .text:0x80018D1C; // type:function size:0x88 scope:global
TRKUARTInterruptHandler = .text:0x80018DA4; // type:function size:0x4 scope:global
TRK_board_display = .text:0x80018DA8; // type:function size:0x24 scope:global
UnreserveEXI2Port = .text:0x80018DCC; // type:function size:0x30 scope:global
ReserveEXI2Port = .text:0x80018DFC; // type:function size:0x30 scope:global
TRKReadUARTPoll = .text:0x80018E2C; // type:function size:0xF0
WriteUART1 = .text:0x80018F1C; // type:function size:0x28
WriteUARTFlush = .text:0x80018F44; // type:function size:0xE0
EnableEXI2Interrupts = .text:0x80019024; // type:function size:0x30
TRKInitializeIntDrivenUART = .text:0x80019054; // type:function size:0x3C scope:global
InitMetroTRKCommTable = .text:0x80019090; // type:function size:0x100 scope:global
TRKEXICallBack = .text:0x80019190; // type:function size:0x38 scope:global
TRKTargetContinue = .text:0x800191C8; // type:function size:0x34 scope:global
GetUseSerialIO = .text:0x800191FC; // type:function size:0x10
SetUseSerialIO = .text:0x8001920C; // type:function size:0xC
__TRK_write_console = .text:0x80019218; // type:function size:0xBC
__read_console = .text:0x800192D4; // type:function size:0xBC
AIRegisterDMACallback = .text:0x80019390; // type:function size:0x44
AIInitDMA = .text:0x800193D4; // type:function size:0x88
AIStartDMA = .text:0x8001945C; // type:function size:0x18
AISetStreamPlayState = .text:0x80019474; // type:function size:0xD8
AIGetStreamPlayState = .text:0x8001954C; // type:function size:0x10
AISetDSPSampleRate = .text:0x8001955C; // type:function size:0xE0
AIGetDSPSampleRate = .text:0x8001963C; // type:function size:0x14
__AI_set_stream_sample_rate = .text:0x80019650; // type:function size:0xD4
AIGetStreamSampleRate = .text:0x80019724; // type:function size:0x10
AISetStreamVolLeft = .text:0x80019734; // type:function size:0x1C
AIGetStreamVolLeft = .text:0x80019750; // type:function size:0x10
AISetStreamVolRight = .text:0x80019760; // type:function size:0x1C
AIGetStreamVolRight = .text:0x8001977C; // type:function size:0x10
AIInit = .text:0x8001978C; // type:function size:0x16C
__AISHandler = .text:0x800198F8; // type:function size:0x7C
__AIDHandler = .text:0x80019974; // type:function size:0xAC
__AICallbackStackSwitch = .text:0x80019A20; // type:function size:0x58
__AI_SRC_INIT = .text:0x80019A78; // type:function size:0x1E4
EXI2_Init = .text:0x80019C5C; // type:function size:0x4 scope:global
EXI2_EnableInterrupts = .text:0x80019C60; // type:function size:0x4 scope:global
EXI2_Poll = .text:0x80019C64; // type:function size:0x8 scope:global
EXI2_ReadN = .text:0x80019C6C; // type:function size:0x8 scope:global
EXI2_WriteN = .text:0x80019C74; // type:function size:0x8 scope:global
EXI2_Reserve = .text:0x80019C7C; // type:function size:0x4 scope:global
EXI2_Unreserve = .text:0x80019C80; // type:function size:0x4 scope:global
AMC_IsStub = .text:0x80019C84; // type:function size:0x8 scope:global
ARRegisterDMACallback = .text:0x80019C8C; // type:function size:0x44
ARStartDMA = .text:0x80019CD0; // type:function size:0xF0
ARAlloc = .text:0x80019DC0; // type:function size:0x68
ARFree = .text:0x80019E28; // type:function size:0x74
ARInit = .text:0x80019E9C; // type:function size:0xC4
__ARHandler = .text:0x80019F60; // type:function size:0x78
__ARChecksize = .text:0x80019FD8; // type:function size:0x17F4
__ARQServiceQueueLo = .text:0x8001B7CC; // type:function size:0x100
__ARQCallbackHack = .text:0x8001B8CC; // type:function size:0x4
__ARQInterruptServiceRoutine = .text:0x8001B8D0; // type:function size:0xCC
ARQInit = .text:0x8001B99C; // type:function size:0x70
ARQPostRequest = .text:0x8001BA0C; // type:function size:0x15C
AXInit = .text:0x8001BB68; // type:function size:0x3C
__AXGetStackHead = .text:0x8001BBA4; // type:function size:0x18
__AXServiceCallbackStack = .text:0x8001BBBC; // type:function size:0x74
__AXAllocInit = .text:0x8001BC30; // type:function size:0xB4
__AXPushFreeStack = .text:0x8001BCE4; // type:function size:0x20
__AXPushCallbackStack = .text:0x8001BD04; // type:function size:0x10
__AXPopCallbackStack = .text:0x8001BD14; // type:function size:0x1C
__AXRemoveFromStack = .text:0x8001BD30; // type:function size:0x94
AXFreeVoice = .text:0x8001BDC4; // type:function size:0x80
AXAcquireVoice = .text:0x8001BE44; // type:function size:0x174
__AXAuxInit = .text:0x8001BFB8; // type:function size:0xE4
__AXGetAuxAInput = .text:0x8001C09C; // type:function size:0x34
__AXGetAuxAInputDpl2 = .text:0x8001C0D0; // type:function size:0x20
__AXGetAuxAOutput = .text:0x8001C0F0; // type:function size:0x1C
__AXGetAuxAOutputDpl2R = .text:0x8001C10C; // type:function size:0x20
__AXGetAuxAOutputDpl2Ls = .text:0x8001C12C; // type:function size:0x20
__AXGetAuxAOutputDpl2Rs = .text:0x8001C14C; // type:function size:0x20
__AXGetAuxBInput = .text:0x8001C16C; // type:function size:0x34
__AXGetAuxBOutput = .text:0x8001C1A0; // type:function size:0x1C
__AXGetAuxBForDPL2 = .text:0x8001C1BC; // type:function size:0x1C
__AXGetAuxBOutputDPL2 = .text:0x8001C1D8; // type:function size:0x1C
__AXProcessAux = .text:0x8001C1F4; // type:function size:0x23C
AXRegisterAuxACallback = .text:0x8001C430; // type:function size:0xC
AXRegisterAuxBCallback = .text:0x8001C43C; // type:function size:0xC
__AXGetCommandListCycles = .text:0x8001C448; // type:function size:0x8
__AXGetCommandListAddress = .text:0x8001C450; // type:function size:0x3C
__AXNextFrame = .text:0x8001C48C; // type:function size:0x6B0
__AXClInit = .text:0x8001CB3C; // type:function size:0x24
AXSetMode = .text:0x8001CB60; // type:function size:0x14
__AXOutNewFrame = .text:0x8001CB74; // type:function size:0x188
__AXOutAiCallback = .text:0x8001CCFC; // type:function size:0x68
__AXDSPInitCallback = .text:0x8001CD64; // type:function size:0xC
__AXDSPResumeCallback = .text:0x8001CD70; // type:function size:0x58
__AXDSPDoneCallback = .text:0x8001CDC8; // type:function size:0x2C
__AXOutInitDSP = .text:0x8001CDF4; // type:function size:0xCC
__AXOutInit = .text:0x8001CEC0; // type:function size:0x340
AXRegisterCallback = .text:0x8001D200; // type:function size:0x8
__AXGetStudio = .text:0x8001D208; // type:function size:0xC
__AXPrintStudio = .text:0x8001D214; // type:function size:0x3F8
__AXSPBInit = .text:0x8001D60C; // type:function size:0x2C
__AXDepopVoice = .text:0x8001D638; // type:function size:0x94
__AXGetNumVoices = .text:0x8001D6CC; // type:function size:0x8
__AXServiceVPB = .text:0x8001D6D4; // type:function size:0x708
__AXSyncPBs = .text:0x8001DDDC; // type:function size:0x268
__AXGetPBs = .text:0x8001E044; // type:function size:0xC
__AXSetPBDefault = .text:0x8001E050; // type:function size:0x3C
__AXVPBInit = .text:0x8001E08C; // type:function size:0x1FC
AXSetVoiceSrcType = .text:0x8001E288; // type:function size:0xC4
AXSetVoiceState = .text:0x8001E34C; // type:function size:0x5C
AXSetVoiceMix = .text:0x8001E3A8; // type:function size:0x254
AXSetVoiceAddr = .text:0x8001E5FC; // type:function size:0x110
AXSetVoiceAdpcm = .text:0x8001E70C; // type:function size:0xA4
AXSetVoiceSrc = .text:0x8001E7B0; // type:function size:0x98
AXSetVoiceSrcRatio = .text:0x8001E848; // type:function size:0x98
AXSetVoiceAdpcmLoop = .text:0x8001E8E0; // type:function size:0x6C
__AXGetCurrentProfile = .text:0x8001E94C; // type:function size:0x48
ReverbHICreate = .text:0x8001E994; // type:function size:0x4EC
DoCrossTalk = .text:0x8001EE80; // type:function size:0x190
HandleReverb = .text:0x8001F010; // type:function size:0x50C scope:local
AXFXReverbHiInit = .text:0x8001F51C; // type:function size:0x70
AXFXReverbHiCallback = .text:0x8001F58C; // type:function size:0x104
ReverbSTDCreate = .text:0x8001F690; // type:function size:0x40C
HandleReverb = .text:0x8001FA9C; // type:function size:0x3B4 scope:local
AXFXReverbStdInit = .text:0x8001FE50; // type:function size:0x6C
AXFXReverbStdCallback = .text:0x8001FEBC; // type:function size:0x30
do_src1 = .text:0x8001FEEC; // type:function size:0x198
do_src2 = .text:0x80020084; // type:function size:0x1EC
AXFXChorusInit = .text:0x80020270; // type:function size:0x200
AXFXChorusSettings = .text:0x80020470; // type:function size:0xC4
AXFXChorusCallback = .text:0x80020534; // type:function size:0x350
AXFXDelayCallback = .text:0x80020884; // type:function size:0x1D0
AXFXDelaySettings = .text:0x80020A54; // type:function size:0x204
AXFXDelayInit = .text:0x80020C58; // type:function size:0x48
AXFXDelayShutdown = .text:0x80020CA0; // type:function size:0x90
__AXFXAllocFunction = .text:0x80020D30; // type:function size:0x28
__AXFXFreeFunction = .text:0x80020D58; // type:function size:0x28
AXFXSetHooks = .text:0x80020D80; // type:function size:0xC
PPCMfmsr = .text:0x80020D8C; // type:function size:0x8 scope:global
PPCMtmsr = .text:0x80020D94; // type:function size:0x8 scope:global
PPCMfhid0 = .text:0x80020D9C; // type:function size:0x8 scope:global
PPCMthid0 = .text:0x80020DA4; // type:function size:0x8
PPCMfl2cr = .text:0x80020DAC; // type:function size:0x8 scope:global
PPCMtl2cr = .text:0x80020DB4; // type:function size:0x8 scope:global
PPCMtdec = .text:0x80020DBC; // type:function size:0x8 scope:weak
PPCSync = .text:0x80020DC4; // type:function size:0x8
PPCHalt = .text:0x80020DCC; // type:function size:0x14 scope:weak
PPCMtmmcr0 = .text:0x80020DE0; // type:function size:0x8 scope:global
PPCMtmmcr1 = .text:0x80020DE8; // type:function size:0x8 scope:global
PPCMtpmc1 = .text:0x80020DF0; // type:function size:0x8 scope:global
PPCMtpmc2 = .text:0x80020DF8; // type:function size:0x8 scope:global
PPCMtpmc3 = .text:0x80020E00; // type:function size:0x8 scope:global
PPCMtpmc4 = .text:0x80020E08; // type:function size:0x8 scope:global
PPCMffpscr = .text:0x80020E10; // type:function size:0x20 scope:global
PPCMtfpscr = .text:0x80020E30; // type:function size:0x28 scope:global
PPCMfhid2 = .text:0x80020E58; // type:function size:0x8 scope:global
PPCMthid2 = .text:0x80020E60; // type:function size:0x8 scope:global
PPCMtwpar = .text:0x80020E68; // type:function size:0x8 scope:global
PPCDisableSpeculation = .text:0x80020E70; // type:function size:0x28 scope:global
PPCSetFpNonIEEEMode = .text:0x80020E98; // type:function size:0x8 scope:global
__CARDDefaultApiCallback = .text:0x80020EA0; // type:function size:0x4
__CARDSyncCallback = .text:0x80020EA4; // type:function size:0x34
__CARDExtHandler = .text:0x80020ED8; // type:function size:0xD8
__CARDExiHandler = .text:0x80020FB0; // type:function size:0x118
__CARDTxHandler = .text:0x800210C8; // type:function size:0xA8
__CARDUnlockedHandler = .text:0x80021170; // type:function size:0x84
__CARDEnableInterrupt = .text:0x800211F4; // type:function size:0xC0
__CARDReadStatus = .text:0x800212B4; // type:function size:0xF0
__CARDClearStatus = .text:0x800213A4; // type:function size:0xAC
TimeoutHandler = .text:0x80021450; // type:function size:0xA4
Retry = .text:0x800214F4; // type:function size:0x22C
UnlockedCallback = .text:0x80021720; // type:function size:0x110
__CARDStart = .text:0x80021830; // type:function size:0x1B4
__CARDReadSegment = .text:0x800219E4; // type:function size:0x134
__CARDWritePage = .text:0x80021B18; // type:function size:0x11C
__CARDEraseSector = .text:0x80021C34; // type:function size:0xE0
CARDInit = .text:0x80021D14; // type:function size:0xAC
__CARDGetFontEncode = .text:0x80021DC0; // type:function size:0x8
__CARDSetDiskID = .text:0x80021DC8; // type:function size:0x38
__CARDGetControlBlock = .text:0x80021E00; // type:function size:0xB8
__CARDPutControlBlock = .text:0x80021EB8; // type:function size:0x64
CARDFreeBlocks = .text:0x80021F1C; // type:function size:0x150
CARDGetEncoding = .text:0x8002206C; // type:function size:0x88
__CARDSync = .text:0x800220F4; // type:function size:0x98
OnReset = .text:0x8002218C; // type:function size:0x50
bitrev = .text:0x800221DC; // type:function size:0x16C
ReadArrayUnlock = .text:0x80022348; // type:function size:0x144
DummyLen = .text:0x8002248C; // type:function size:0xC4
__CARDUnlock = .text:0x80022550; // type:function size:0xB58
InitCallback = .text:0x800230A8; // type:function size:0x70
DoneCallback = .text:0x80023118; // type:function size:0x324
BlockReadCallback = .text:0x8002343C; // type:function size:0xDC
__CARDRead = .text:0x80023518; // type:function size:0x64
BlockWriteCallback = .text:0x8002357C; // type:function size:0xDC
__CARDWrite = .text:0x80023658; // type:function size:0x64
__CARDGetFatBlock = .text:0x800236BC; // type:function size:0x8
WriteCallback = .text:0x800236C4; // type:function size:0xD4 scope:local
EraseCallback = .text:0x80023798; // type:function size:0xC8 scope:local
__CARDAllocBlock = .text:0x80023860; // type:function size:0x118
__CARDFreeBlock = .text:0x80023978; // type:function size:0x9C
__CARDUpdateFatBlock = .text:0x80023A14; // type:function size:0xAC
__CARDGetDirBlock = .text:0x80023AC0; // type:function size:0x8
WriteCallback = .text:0x80023AC8; // type:function size:0xD0 scope:local
EraseCallback = .text:0x80023B98; // type:function size:0xC8 scope:local
__CARDUpdateDir = .text:0x80023C60; // type:function size:0xC4
__CARDCheckSum = .text:0x80023D24; // type:function size:0x1B0
VerifyID = .text:0x80023ED4; // type:function size:0x284
VerifyDir = .text:0x80024158; // type:function size:0x240
VerifyFAT = .text:0x80024398; // type:function size:0x284
__CARDVerify = .text:0x8002461C; // type:function size:0x8C
CARDCheckExAsync = .text:0x800246A8; // type:function size:0x590
CARDCheckAsync = .text:0x80024C38; // type:function size:0x28
CARDCheck = .text:0x80024C60; // type:function size:0x54
IsCard = .text:0x80024CB4; // type:function size:0xCC
CARDProbeEx = .text:0x80024D80; // type:function size:0x17C
DoMount = .text:0x80024EFC; // type:function size:0x410
__CARDMountCallback = .text:0x8002530C; // type:function size:0x138
CARDMountAsync = .text:0x80025444; // type:function size:0x1A0
CARDMount = .text:0x800255E4; // type:function size:0x48
DoUnmount = .text:0x8002562C; // type:function size:0x9C
CARDUnmount = .text:0x800256C8; // type:function size:0xAC
FormatCallback = .text:0x80025774; // type:function size:0x144
__CARDFormatRegionAsync = .text:0x800258B8; // type:function size:0x658
CARDFormatAsync = .text:0x80025F10; // type:function size:0x48
CARDFormat = .text:0x80025F58; // type:function size:0x54
__CARDCompareFileName = .text:0x80025FAC; // type:function size:0x68
__CARDAccess = .text:0x80026014; // type:function size:0x98
__CARDIsPublic = .text:0x800260AC; // type:function size:0x30
__CARDGetFileNo = .text:0x800260DC; // type:function size:0x150
CARDFastOpen = .text:0x8002622C; // type:function size:0x160
CARDOpen = .text:0x8002638C; // type:function size:0x178
CARDClose = .text:0x80026504; // type:function size:0x54
__CARDIsOpened = .text:0x80026558; // type:function size:0x8
CreateCallbackFat = .text:0x80026560; // type:function size:0x130
CARDCreateAsync = .text:0x80026690; // type:function size:0x220
CARDCreate = .text:0x800268B0; // type:function size:0x48
__CARDSeek = .text:0x800268F8; // type:function size:0x1B8
ReadCallback = .text:0x80026AB0; // type:function size:0x130
CARDReadAsync = .text:0x80026BE0; // type:function size:0x148
CARDRead = .text:0x80026D28; // type:function size:0x48
WriteCallback = .text:0x80026D70; // type:function size:0x170 scope:local
EraseCallback = .text:0x80026EE0; // type:function size:0xB0 scope:local
CARDWriteAsync = .text:0x80026F90; // type:function size:0x114
DeleteCallback = .text:0x800270A4; // type:function size:0xA4
CARDFastDeleteAsync = .text:0x80027148; // type:function size:0x12C
CARDDeleteAsync = .text:0x80027274; // type:function size:0x110
CARDDelete = .text:0x80027384; // type:function size:0x48
UpdateIconOffsets = .text:0x800273CC; // type:function size:0x1F8
CARDGetStatus = .text:0x800275C4; // type:function size:0x12C
CARDSetStatusAsync = .text:0x800276F0; // type:function size:0x174
CARDSetStatus = .text:0x80027864; // type:function size:0x48
CARDGetSerialNo = .text:0x800278AC; // type:function size:0xC4
DBInit = .text:0x80027970; // type:function size:0x28 scope:global
__DBExceptionDestinationAux = .text:0x80027998; // type:function size:0x48
__DBExceptionDestination = .text:0x800279E0; // type:function size:0x10 scope:global
__DBIsExceptionMarked = .text:0x800279F0; // type:function size:0x1C scope:global
DBPrintf = .text:0x80027A0C; // type:function size:0x50 scope:global
DSPCheckMailToDSP = .text:0x80027A5C; // type:function size:0x10
DSPCheckMailFromDSP = .text:0x80027A6C; // type:function size:0x10
DSPReadMailFromDSP = .text:0x80027A7C; // type:function size:0x18
DSPSendMailToDSP = .text:0x80027A94; // type:function size:0x14
DSPInit = .text:0x80027AA8; // type:function size:0xC4
DSPCheckInit = .text:0x80027B6C; // type:function size:0x8
DSPAddTask = .text:0x80027B74; // type:function size:0x70
DSPAssertTask = .text:0x80027BE4; // type:function size:0xC8
__DSP_debug_printf = .text:0x80027CAC; // type:function size:0x50
__DSPHandler = .text:0x80027CFC; // type:function size:0x424
__DSP_exec_task = .text:0x80028120; // type:function size:0x1A0
__DSP_boot_task = .text:0x800282C0; // type:function size:0x18C
__DSP_insert_task = .text:0x8002844C; // type:function size:0xA0
__DSP_remove_task = .text:0x800284EC; // type:function size:0x94
__DVDInitWA = .text:0x80028580; // type:function size:0x40 scope:weak
__DVDInterruptHandler = .text:0x800285C0; // type:function size:0x2E0 scope:weak
AlarmHandler = .text:0x800288A0; // type:function size:0x84
AlarmHandlerForTimeout = .text:0x80028924; // type:function size:0x70 scope:local
Read = .text:0x80028994; // type:function size:0x110
SeekTwiceBeforeRead = .text:0x80028AA4; // type:function size:0x80
DVDLowRead = .text:0x80028B24; // type:function size:0x298
DVDLowSeek = .text:0x80028DBC; // type:function size:0x94
DVDLowWaitCoverClose = .text:0x80028E50; // type:function size:0x2C scope:weak
DVDLowReadDiskID = .text:0x80028E7C; // type:function size:0xA4
DVDLowStopMotor = .text:0x80028F20; // type:function size:0x8C scope:weak
DVDLowRequestError = .text:0x80028FAC; // type:function size:0x8C
DVDLowInquiry = .text:0x80029038; // type:function size:0x9C
DVDLowAudioStream = .text:0x800290D4; // type:function size:0x98
DVDLowRequestAudioStatus = .text:0x8002916C; // type:function size:0x8C
DVDLowAudioBufferConfig = .text:0x800291F8; // type:function size:0x9C
DVDLowReset = .text:0x80029294; // type:function size:0xBC scope:global
DVDLowBreak = .text:0x80029350; // type:function size:0x14
DVDLowClearCallback = .text:0x80029364; // type:function size:0x18
__DVDLowSetWAType = .text:0x8002937C; // type:function size:0x44 scope:global
__DVDFSInit = .text:0x800293C0; // type:function size:0x38 scope:global
DVDConvertPathToEntrynum = .text:0x800293F8; // type:function size:0x2F4
DVDOpen = .text:0x800296EC; // type:function size:0xC8
DVDClose = .text:0x800297B4; // type:function size:0x24
entryToPath = .text:0x800297D8; // type:function size:0x160
DVDGetCurrentDir = .text:0x80029938; // type:function size:0xC4
DVDReadAsyncPrio = .text:0x800299FC; // type:function size:0xC0
cbForReadAsync = .text:0x80029ABC; // type:function size:0x30
DVDReadPrio = .text:0x80029AEC; // type:function size:0x118
cbForReadSync = .text:0x80029C04; // type:function size:0x24
DVDGetTransferredSize = .text:0x80029C28; // type:function size:0x6C
defaultOptionalCommandChecker = .text:0x80029C94; // type:function size:0x4
DVDInit = .text:0x80029C98; // type:function size:0xCC scope:global
stateReadingFST = .text:0x80029D64; // type:function size:0x94
cbForStateReadingFST = .text:0x80029DF8; // type:function size:0x8C
cbForStateError = .text:0x80029E84; // type:function size:0xAC scope:local
stateTimeout = .text:0x80029F30; // type:function size:0x34
stateGettingError = .text:0x80029F64; // type:function size:0x28
CategorizeError = .text:0x80029F8C; // type:function size:0xB4
cbForStateGettingError = .text:0x8002A040; // type:function size:0x294
cbForUnrecoveredError = .text:0x8002A2D4; // type:function size:0x68
cbForUnrecoveredErrorRetry = .text:0x8002A33C; // type:function size:0x98
stateGoToRetry = .text:0x8002A3D4; // type:function size:0x28
cbForStateGoToRetry = .text:0x8002A3FC; // type:function size:0x158
stateCheckID = .text:0x8002A554; // type:function size:0xE0
stateCheckID3 = .text:0x8002A634; // type:function size:0x34
stateCheckID2a = .text:0x8002A668; // type:function size:0x34
cbForStateCheckID2a = .text:0x8002A69C; // type:function size:0x74
stateCheckID2 = .text:0x8002A710; // type:function size:0x38
cbForStateCheckID1 = .text:0x8002A748; // type:function size:0x114
cbForStateCheckID2 = .text:0x8002A85C; // type:function size:0xE4
cbForStateCheckID3 = .text:0x8002A940; // type:function size:0xFC
AlarmHandler = .text:0x8002AA3C; // type:function size:0x44 scope:local
stateCoverClosed = .text:0x8002AA80; // type:function size:0xCC
stateCoverClosed_CMD = .text:0x8002AB4C; // type:function size:0x30
cbForStateCoverClosed = .text:0x8002AB7C; // type:function size:0x70
stateMotorStopped = .text:0x8002ABEC; // type:function size:0x28
cbForStateMotorStopped = .text:0x8002AC14; // type:function size:0xE4 scope:local
stateReady = .text:0x8002ACF8; // type:function size:0x230 scope:local
stateBusy = .text:0x8002AF28; // type:function size:0x320 scope:local
cbForStateBusy = .text:0x8002B248; // type:function size:0x638
DVDReadAbsAsyncPrio = .text:0x8002B880; // type:function size:0xDC
DVDReadAbsAsyncForBS = .text:0x8002B95C; // type:function size:0xD0
DVDReadDiskID = .text:0x8002BA2C; // type:function size:0xD4 scope:global
DVDCancelStreamAsync = .text:0x8002BB00; // type:function size:0xBC
DVDInquiryAsync = .text:0x8002BBBC; // type:function size:0xD0 scope:global
DVDReset = .text:0x8002BC8C; // type:function size:0x44 scope:global
DVDGetCommandBlockStatus = .text:0x8002BCD0; // type:function size:0x4C
DVDGetDriveStatus = .text:0x8002BD1C; // type:function size:0xAC scope:global
DVDSetAutoInvalidation = .text:0x8002BDC8; // type:function size:0x10
DVDResume = .text:0x8002BDD8; // type:function size:0x50
DVDCancelAsync = .text:0x8002BE28; // type:function size:0x27C
DVDCancel = .text:0x8002C0A4; // type:function size:0xAC
cbForCancelSync = .text:0x8002C150; // type:function size:0x24
DVDGetCurrentDiskID = .text:0x8002C174; // type:function size:0x8
DVDCheckDisk = .text:0x8002C17C; // type:function size:0xF8
__DVDPrepareResetAsync = .text:0x8002C274; // type:function size:0x11C
__DVDClearWaitingQueue = .text:0x8002C390; // type:function size:0x38 scope:global
__DVDPushWaitingQueue = .text:0x8002C3C8; // type:function size:0x68 scope:global
__DVDPopWaitingQueue = .text:0x8002C430; // type:function size:0xA0 scope:global
__DVDCheckWaitingQueue = .text:0x8002C4D0; // type:function size:0x58 scope:global
__DVDDequeueWaitingQueue = .text:0x8002C528; // type:function size:0x60
ErrorCode2Num = .text:0x8002C588; // type:function size:0x11C scope:local
__DVDStoreErrorCode = .text:0x8002C6A4; // type:function size:0x7C scope:global
DVDCompareDiskID = .text:0x8002C720; // type:function size:0xF8
__DVDPrintFatalMessage = .text:0x8002C818; // type:function size:0x30
cb = .text:0x8002C848; // type:function size:0xD8 scope:local
__fstLoad = .text:0x8002C920; // type:function size:0x168 scope:global
SetExiInterruptMask = .text:0x8002CA88; // type:function size:0xF4 scope:local
EXIImm = .text:0x8002CB7C; // type:function size:0x25C scope:global
EXIImmEx = .text:0x8002CDD8; // type:function size:0xA0
EXIDma = .text:0x8002CE78; // type:function size:0xEC scope:global
EXISync = .text:0x8002CF64; // type:function size:0x24C scope:global
EXIClearInterrupts = .text:0x8002D1B0; // type:function size:0x48 scope:global
EXISetExiCallback = .text:0x8002D1F8; // type:function size:0x7C
__EXIProbe = .text:0x8002D274; // type:function size:0x174 scope:local
EXIProbe = .text:0x8002D3E8; // type:function size:0x80
EXIProbeEx = .text:0x8002D468; // type:function size:0xB4
EXIAttach = .text:0x8002D51C; // type:function size:0x10C
EXIDetach = .text:0x8002D628; // type:function size:0xBC
EXISelect = .text:0x8002D6E4; // type:function size:0x12C scope:global
EXIDeselect = .text:0x8002D810; // type:function size:0x110 scope:global
EXIIntrruptHandler = .text:0x8002D920; // type:function size:0xC8 scope:local
TCIntrruptHandler = .text:0x8002D9E8; // type:function size:0x218 scope:local
EXTIntrruptHandler = .text:0x8002DC00; // type:function size:0xD0 scope:local
EXIInit = .text:0x8002DCD0; // type:function size:0x1D4 scope:global
EXILock = .text:0x8002DEA4; // type:function size:0xF4 scope:global
EXIUnlock = .text:0x8002DF98; // type:function size:0xDC scope:global
EXIGetState = .text:0x8002E074; // type:function size:0x18
UnlockedHandler = .text:0x8002E08C; // type:function size:0x28 scope:local
EXIGetID = .text:0x8002E0B4; // type:function size:0x3B0 scope:global
ProbeBarnacle = .text:0x8002E464; // type:function size:0x18C
__OSEnableBarnacle = .text:0x8002E5F0; // type:function size:0x1BC scope:global
InitializeUART = .text:0x8002E7AC; // type:function size:0x70
WriteUARTN = .text:0x8002E81C; // type:function size:0x21C
__GXDefaultTexRegionCallback = .text:0x8002EA38; // type:function size:0x7C
__GXDefaultTlutRegionCallback = .text:0x8002EAB4; // type:function size:0x24
__GXShutdown = .text:0x8002EAD8; // type:function size:0x190
GXInit = .text:0x8002EC68; // type:function size:0x890 scope:global
__GXInitGX = .text:0x8002F4F8; // type:function size:0x8C4 scope:global
fn_8002FDBC = .text:0x8002FDBC; // type:function size:0x134
GXInitFifoBase = .text:0x8002FEF0; // type:function size:0x6C scope:global
fn_8002FF5C = .text:0x8002FF5C; // type:function size:0x70
fn_8002FFCC = .text:0x8002FFCC; // type:function size:0xC
GXSetCPUFifo = .text:0x8002FFD8; // type:function size:0x110 scope:global
GXSetGPFifo = .text:0x800300E8; // type:function size:0x178 scope:global
fn_80030260 = .text:0x80030260; // type:function size:0x44
__GXFifoInit = .text:0x800302A4; // type:function size:0x4C scope:global
fn_800302F0 = .text:0x800302F0; // type:function size:0x24
fn_80030314 = .text:0x80030314; // type:function size:0x20
fn_80030334 = .text:0x80030334; // type:function size:0x3C
fn_80030370 = .text:0x80030370; // type:function size:0x3C
fn_800303AC = .text:0x800303AC; // type:function size:0x3C
fn_800303E8 = .text:0x800303E8; // type:function size:0x8
fn_800303F0 = .text:0x800303F0; // type:function size:0x158
fn_80030548 = .text:0x80030548; // type:function size:0x350
fn_80030898 = .text:0x80030898; // type:function size:0x54
fn_800308EC = .text:0x800308EC; // type:function size:0x124
fn_80030A10 = .text:0x80030A10; // type:function size:0x38
fn_80030A48 = .text:0x80030A48; // type:function size:0x358
fn_80030DA0 = .text:0x80030DA0; // type:function size:0x378
fn_80031118 = .text:0x80031118; // type:function size:0x9C
fn_800311B4 = .text:0x800311B4; // type:function size:0x8C
fn_80031240 = .text:0x80031240; // type:function size:0x10
fn_80031250 = .text:0x80031250; // type:function size:0x2D0
fn_80031520 = .text:0x80031520; // type:function size:0x40
GXSetMisc = .text:0x80031560; // type:function size:0x94 scope:global
fn_800315F4 = .text:0x800315F4; // type:function size:0x5C
fn_80031650 = .text:0x80031650; // type:function size:0x16C
fn_800317BC = .text:0x800317BC; // type:function size:0x80
fn_8003183C = .text:0x8003183C; // type:function size:0x14
fn_80031850 = .text:0x80031850; // type:function size:0x14
fn_80031864 = .text:0x80031864; // type:function size:0x1C
fn_80031880 = .text:0x80031880; // type:function size:0x88
fn_80031908 = .text:0x80031908; // type:function size:0x1C
fn_80031924 = .text:0x80031924; // type:function size:0x14
fn_80031938 = .text:0x80031938; // type:function size:0x1C
fn_80031954 = .text:0x80031954; // type:function size:0x28
fn_8003197C = .text:0x8003197C; // type:function size:0x44
fn_800319C0 = .text:0x800319C0; // type:function size:0x88
fn_80031A48 = .text:0x80031A48; // type:function size:0x44
fn_80031A8C = .text:0x80031A8C; // type:function size:0x84
__GXPEInit = .text:0x80031B10; // type:function size:0x80 scope:global
fn_80031B90 = .text:0x80031B90; // type:function size:0xA0
fn_80031C30 = .text:0x80031C30; // type:function size:0xF0
fn_80031D20 = .text:0x80031D20; // type:function size:0x88
fn_80031DA8 = .text:0x80031DA8; // type:function size:0x48
fn_80031DF0 = .text:0x80031DF0; // type:function size:0x48
fn_80031E38 = .text:0x80031E38; // type:function size:0x5C
fn_80031E94 = .text:0x80031E94; // type:function size:0x4C
fn_80031EE0 = .text:0x80031EE0; // type:function size:0x44
fn_80031F24 = .text:0x80031F24; // type:function size:0x3C
fn_80031F60 = .text:0x80031F60; // type:function size:0x24
fn_80031F84 = .text:0x80031F84; // type:function size:0x120
fn_800320A4 = .text:0x800320A4; // type:function size:0x90
fn_80032134 = .text:0x80032134; // type:function size:0x90
fn_800321C4 = .text:0x800321C4; // type:function size:0x3C
fn_80032200 = .text:0x80032200; // type:function size:0x154
fn_80032354 = .text:0x80032354; // type:function size:0x28
fn_8003237C = .text:0x8003237C; // type:function size:0x68
fn_800323E4 = .text:0x800323E4; // type:function size:0xC8
fn_800324AC = .text:0x800324AC; // type:function size:0x68
fn_80032514 = .text:0x80032514; // type:function size:0x228
fn_8003273C = .text:0x8003273C; // type:function size:0x1C
fn_80032758 = .text:0x80032758; // type:function size:0x15C
fn_800328B4 = .text:0x800328B4; // type:function size:0x17C
fn_80032A30 = .text:0x80032A30; // type:function size:0x38
fn_80032A68 = .text:0x80032A68; // type:function size:0x10
fn_80032A78 = .text:0x80032A78; // type:function size:0xC
fn_80032A84 = .text:0x80032A84; // type:function size:0x7C
fn_80032B00 = .text:0x80032B00; // type:function size:0xF4
fn_80032BF4 = .text:0x80032BF4; // type:function size:0xF4
fn_80032CE8 = .text:0x80032CE8; // type:function size:0x44
fn_80032D2C = .text:0x80032D2C; // type:function size:0xCC
fn_80032DF8 = .text:0x80032DF8; // type:function size:0x15C
fn_80032F54 = .text:0x80032F54; // type:function size:0xC8
fn_8003301C = .text:0x8003301C; // type:function size:0x274
fn_80033290 = .text:0x80033290; // type:function size:0x48
fn_800332D8 = .text:0x800332D8; // type:function size:0x194
fn_8003346C = .text:0x8003346C; // type:function size:0x8
fn_80033474 = .text:0x80033474; // type:function size:0x198
fn_8003360C = .text:0x8003360C; // type:function size:0x54
GXInitTexCacheRegion = .text:0x80033660; // type:function size:0x120 scope:global
GXInitTlutRegion = .text:0x80033780; // type:function size:0x48 scope:global
fn_800337C8 = .text:0x800337C8; // type:function size:0x48
fn_80033810 = .text:0x80033810; // type:function size:0x14
fn_80033824 = .text:0x80033824; // type:function size:0x14
fn_80033838 = .text:0x80033838; // type:function size:0xB8
fn_800338F0 = .text:0x800338F0; // type:function size:0x17C
__GXSetTmemConfig = .text:0x80033A6C; // type:function size:0x240 scope:global
fn_80033CAC = .text:0x80033CAC; // type:function size:0x9C
fn_80033D48 = .text:0x80033D48; // type:function size:0x160
fn_80033EA8 = .text:0x80033EA8; // type:function size:0x17C
fn_80034024 = .text:0x80034024; // type:function size:0x114
fn_80034138 = .text:0x80034138; // type:function size:0x28
fn_80034160 = .text:0x80034160; // type:function size:0x48
fn_800341A8 = .text:0x800341A8; // type:function size:0x64
fn_8003420C = .text:0x8003420C; // type:function size:0xCC
__GXFlushTextureState = .text:0x800342D8; // type:function size:0x24 scope:global
fn_800342FC = .text:0x800342FC; // type:function size:0x8C
fn_80034388 = .text:0x80034388; // type:function size:0x44
fn_800343CC = .text:0x800343CC; // type:function size:0x44
fn_80034410 = .text:0x80034410; // type:function size:0x68
fn_80034478 = .text:0x80034478; // type:function size:0x68
fn_800344E0 = .text:0x800344E0; // type:function size:0x6C
fn_8003454C = .text:0x8003454C; // type:function size:0x6C
fn_800345B8 = .text:0x800345B8; // type:function size:0x54
fn_8003460C = .text:0x8003460C; // type:function size:0x98
fn_800346A4 = .text:0x800346A4; // type:function size:0x54
fn_800346F8 = .text:0x800346F8; // type:function size:0x84
fn_8003477C = .text:0x8003477C; // type:function size:0x1D8
fn_80034954 = .text:0x80034954; // type:function size:0x30
fn_80034984 = .text:0x80034984; // type:function size:0x21C
fn_80034BA0 = .text:0x80034BA0; // type:function size:0x100
fn_80034CA0 = .text:0x80034CA0; // type:function size:0x54
fn_80034CF4 = .text:0x80034CF4; // type:function size:0x2C
fn_80034D20 = .text:0x80034D20; // type:function size:0x2C
fn_80034D4C = .text:0x80034D4C; // type:function size:0x34
fn_80034D80 = .text:0x80034D80; // type:function size:0x38
fn_80034DB8 = .text:0x80034DB8; // type:function size:0xE8
fn_80034EA0 = .text:0x80034EA0; // type:function size:0x2C
fn_80034ECC = .text:0x80034ECC; // type:function size:0x3C
fn_80034F08 = .text:0x80034F08; // type:function size:0x38
fn_80034F40 = .text:0x80034F40; // type:function size:0x7C
fn_80034FBC = .text:0x80034FBC; // type:function size:0x4
fn_80034FC0 = .text:0x80034FC0; // type:function size:0x174
fn_80035134 = .text:0x80035134; // type:function size:0xB4
fn_800351E8 = .text:0x800351E8; // type:function size:0xC0
fn_800352A8 = .text:0x800352A8; // type:function size:0x60
fn_80035308 = .text:0x80035308; // type:function size:0x50
fn_80035358 = .text:0x80035358; // type:function size:0x50
fn_800353A8 = .text:0x800353A8; // type:function size:0x38
fn_800353E0 = .text:0x800353E0; // type:function size:0xB4
fn_80035494 = .text:0x80035494; // type:function size:0x104
fn_80035598 = .text:0x80035598; // type:function size:0x24
fn_800355BC = .text:0x800355BC; // type:function size:0x38
fn_800355F4 = .text:0x800355F4; // type:function size:0x90
fn_80035684 = .text:0x80035684; // type:function size:0x40
fn_800356C4 = .text:0x800356C4; // type:function size:0x28
fn_800356EC = .text:0x800356EC; // type:function size:0x84
fn_80035770 = .text:0x80035770; // type:function size:0x848
fn_80035FB8 = .text:0x80035FB8; // type:function size:0x10
fn_80035FC8 = .text:0x80035FC8; // type:function size:0xBC
fn_80036084 = .text:0x80036084; // type:function size:0xC8
fn_8003614C = .text:0x8003614C; // type:function size:0x8
fn_80036154 = .text:0x80036154; // type:function size:0xE7C
fn_80036FD0 = .text:0x80036FD0; // type:function size:0x20
fn_80036FF0 = .text:0x80036FF0; // type:function size:0x28
fn_80037018 = .text:0x80037018; // type:function size:0x6C
fn_80037084 = .text:0x80037084; // type:function size:0x107C
fn_80038100 = .text:0x80038100; // type:function size:0x2C
fn_8003812C = .text:0x8003812C; // type:function size:0x34
fn_80038160 = .text:0x80038160; // type:function size:0xCC
fn_8003822C = .text:0x8003822C; // type:function size:0xF8
fn_80038324 = .text:0x80038324; // type:function size:0x70
fn_80038394 = .text:0x80038394; // type:function size:0xB0
fn_80038444 = .text:0x80038444; // type:function size:0xB0
fn_800384F4 = .text:0x800384F4; // type:function size:0x70
fn_80038564 = .text:0x80038564; // type:function size:0x34
fn_80038598 = .text:0x80038598; // type:function size:0x28
fn_800385C0 = .text:0x800385C0; // type:function size:0xA4
fn_80038664 = .text:0x80038664; // type:function size:0x18C
fn_800387F0 = .text:0x800387F0; // type:function size:0xCC
fn_800388BC = .text:0x800388BC; // type:function size:0x54
fn_80038910 = .text:0x80038910; // type:function size:0x54
fn_80038964 = .text:0x80038964; // type:function size:0xD0
fn_80038A34 = .text:0x80038A34; // type:function size:0x98
fn_80038ACC = .text:0x80038ACC; // type:function size:0x44
fn_80038B10 = .text:0x80038B10; // type:function size:0x3C
fn_80038B4C = .text:0x80038B4C; // type:function size:0x54
Hu_IsStub = .text:0x80038BA0; // type:function size:0x8 scope:weak
__OSFPRInit = .text:0x80038BA8; // type:function size:0x128 scope:global
fn_80038CD0 = .text:0x80038CD0; // type:function size:0x28
ClearArena = .text:0x80038CF8; // type:function size:0x128 scope:local
InquiryCallback = .text:0x80038E20; // type:function size:0x3C scope:local
OSInit = .text:0x80038E5C; // type:function size:0x3D8 scope:global
OSExceptionInit = .text:0x80039234; // type:function size:0x280 scope:local
__OSDBINTSTART = .text:0x800394B4; // type:label scope:global
__OSDBIntegrator = .text:0x800394B4; // type:function size:0x24 scope:local
__OSDBINTEND = .text:0x800394D8; // type:label scope:global
fn_800394D8 = .text:0x800394D8; // type:function size:0x4
__OSDBJUMPEND = .text:0x800394DC; // type:label scope:global
__OSSetExceptionHandler = .text:0x800394DC; // type:function size:0x1C scope:global
__OSGetExceptionHandler = .text:0x800394F8; // type:function size:0x14 scope:global
__OSEVStart = .text:0x8003950C; // type:label scope:global
OSExceptionVector = .text:0x8003950C; // type:function size:0x9C scope:local
__DBVECTOR = .text:0x80039564; // type:label scope:global data:4byte
__OSEVSetNumber = .text:0x80039574; // type:label scope:global data:4byte
__OSEVEnd = .text:0x800395A4; // type:label scope:global
OSDefaultExceptionHandler = .text:0x800395A8; // type:function size:0x58 scope:global
__OSPSInit = .text:0x80039600; // type:function size:0x54 scope:global
fn_80039654 = .text:0x80039654; // type:function size:0x14
OSRegisterVersion = .text:0x80039668; // type:function size:0x2C scope:global
OSInitAlarm = .text:0x80039694; // type:function size:0x4C scope:global
OSCreateAlarm = .text:0x800396E0; // type:function size:0x10 scope:global
InsertAlarm = .text:0x800396F0; // type:function size:0x250 scope:local
OSSetAlarm = .text:0x80039940; // type:function size:0x68 scope:global
fn_800399A8 = .text:0x800399A8; // type:function size:0x11C
DecrementerExceptionCallback = .text:0x80039AC4; // type:function size:0x230 scope:local
DecrementerExceptionHandler = .text:0x80039CF4; // type:function size:0x50 scope:local
fn_80039D44 = .text:0x80039D44; // type:function size:0xAC
fn_80039DF0 = .text:0x80039DF0; // type:function size:0xFC
fn_80039EEC = .text:0x80039EEC; // type:function size:0x7C
fn_80039F68 = .text:0x80039F68; // type:function size:0x10
fn_80039F78 = .text:0x80039F78; // type:function size:0x70
fn_80039FE8 = .text:0x80039FE8; // type:function size:0x6C
OSGetArenaHi = .text:0x8003A054; // type:function size:0x8 scope:global
OSGetArenaLo = .text:0x8003A05C; // type:function size:0x8 scope:global
OSSetArenaHi = .text:0x8003A064; // type:function size:0x8 scope:global
OSSetArenaLo = .text:0x8003A06C; // type:function size:0x8 scope:global
fn_8003A074 = .text:0x8003A074; // type:function size:0x2C
fn_8003A0A0 = .text:0x8003A0A0; // type:function size:0x20
__OSInitAudioSystem = .text:0x8003A0C0; // type:function size:0x1BC scope:global
__OSStopAudioSystem = .text:0x8003A27C; // type:function size:0xD8 scope:global
DCEnable = .text:0x8003A354; // type:function size:0x14 scope:global
DCInvalidateRange = .text:0x8003A368; // type:function size:0x2C scope:global
DCFlushRange = .text:0x8003A394; // type:function size:0x30 scope:global
fn_8003A3C4 = .text:0x8003A3C4; // type:function size:0x30
DCFlushRangeNoSync = .text:0x8003A3F4; // type:function size:0x2C scope:global
ICInvalidateRange = .text:0x8003A420; // type:function size:0x34 scope:global
ICFlashInvalidate = .text:0x8003A454; // type:function size:0x10 scope:global
ICEnable = .text:0x8003A464; // type:function size:0x14 scope:global
fn_8003A478 = .text:0x8003A478; // type:function size:0xCC
fn_8003A544 = .text:0x8003A544; // type:function size:0x38
LCDisable = .text:0x8003A57C; // type:function size:0x28 scope:global
L2GlobalInvalidate = .text:0x8003A5A4; // type:function size:0x98 scope:global
DMAErrorHandler = .text:0x8003A63C; // type:function size:0x160 scope:global
__OSCacheInit = .text:0x8003A79C; // type:function size:0xF4 scope:global
__OSLoadFPUContext = .text:0x8003A890; // type:function size:0x124 scope:local
__OSSaveFPUContext = .text:0x8003A9B4; // type:function size:0x128 scope:local
OSSaveFPUContext = .text:0x8003AADC; // type:function size:0x8 scope:global
OSSetCurrentContext = .text:0x8003AAE4; // type:function size:0x5C scope:global
fn_8003AB40 = .text:0x8003AB40; // type:function size:0xC
fn_8003AB4C = .text:0x8003AB4C; // type:function size:0x80
OSLoadContext = .text:0x8003ABCC; // type:function size:0xD8 scope:global
fn_8003ACA4 = .text:0x8003ACA4; // type:function size:0x8
OSClearContext = .text:0x8003ACAC; // type:function size:0x24 scope:global
fn_8003ACD0 = .text:0x8003ACD0; // type:function size:0xBC
OSDumpContext = .text:0x8003AD8C; // type:function size:0x2A8 scope:global
OSSwitchFPUContext = .text:0x8003B034; // type:function size:0x84 scope:local
__OSContextInit = .text:0x8003B0B8; // type:function size:0x48 scope:global
OSReport = .text:0x8003B100; // type:function size:0x80 scope:global
fn_8003B180 = .text:0x8003B180; // type:function size:0x12C
OSSetErrorHandler = .text:0x8003B2AC; // type:function size:0x218 scope:global
__OSUnhandledException = .text:0x8003B4C4; // type:function size:0x2E8 scope:global
fn_8003B7AC = .text:0x8003B7AC; // type:function size:0x19C
fn_8003B948 = .text:0x8003B948; // type:function size:0x174
fn_8003BABC = .text:0x8003BABC; // type:function size:0x58
fn_8003BB14 = .text:0x8003BB14; // type:function size:0x8C
fn_8003BBA0 = .text:0x8003BBA0; // type:function size:0x334
fn_8003BED4 = .text:0x8003BED4; // type:function size:0x3B0
fn_8003C284 = .text:0x8003C284; // type:function size:0xE0
fn_8003C364 = .text:0x8003C364; // type:function size:0x1A8
OSDisableInterrupts = .text:0x8003C50C; // type:function size:0x14 scope:global
OSEnableInterrupts = .text:0x8003C520; // type:function size:0x14 scope:global
OSRestoreInterrupts = .text:0x8003C534; // type:function size:0x24 scope:global
__OSSetInterruptHandler = .text:0x8003C558; // type:function size:0x1C scope:global
fn_8003C574 = .text:0x8003C574; // type:function size:0x14
__OSInterruptInit = .text:0x8003C588; // type:function size:0x74 scope:global
fn_8003C5FC = .text:0x8003C5FC; // type:function size:0x2D8
__OSMaskInterrupts = .text:0x8003C8D4; // type:function size:0x88 scope:global
__OSUnmaskInterrupts = .text:0x8003C95C; // type:function size:0x88 scope:global
fn_8003C9E4 = .text:0x8003C9E4; // type:function size:0x344
ExternalInterruptHandler = .text:0x8003CD28; // type:function size:0x50 scope:local
fn_8003CD78 = .text:0x8003CD78; // type:function size:0x4
fn_8003CD7C = .text:0x8003CD7C; // type:function size:0x4
fn_8003CD80 = .text:0x8003CD80; // type:function size:0xC
fn_8003CD8C = .text:0x8003CD8C; // type:function size:0x2BC
fn_8003D048 = .text:0x8003D048; // type:function size:0x2E0
fn_8003D328 = .text:0x8003D328; // type:function size:0x24
fn_8003D34C = .text:0x8003D34C; // type:function size:0x3C
fn_8003D388 = .text:0x8003D388; // type:function size:0x238
fn_8003D5C0 = .text:0x8003D5C0; // type:function size:0x1D4
__OSModuleInit = .text:0x8003D794; // type:function size:0x18 scope:global
fn_8003D7AC = .text:0x8003D7AC; // type:function size:0x3C
MEMIntrruptHandler = .text:0x8003D7E8; // type:function size:0x6C scope:local
Config24MB = .text:0x8003D854; // type:function size:0x80 scope:local
Config48MB = .text:0x8003D8D4; // type:function size:0x80 scope:local
RealMode = .text:0x8003D954; // type:function size:0x18 scope:local
__OSInitMemoryProtection = .text:0x8003D96C; // type:function size:0x118 scope:global
fn_8003DA84 = .text:0x8003DA84; // type:function size:0x70
fn_8003DAF4 = .text:0x8003DAF4; // type:function size:0x10
fn_8003DB04 = .text:0x8003DB04; // type:function size:0xC
__OSReboot = .text:0x8003DB10; // type:function size:0x340 scope:global
OSRegisterResetFunction = .text:0x8003DE50; // type:function size:0x84 scope:global
Reset = .text:0x8003DED4; // type:function size:0x70 scope:local
fn_8003DF44 = .text:0x8003DF44; // type:function size:0x48
OSResetSystem = .text:0x8003DF8C; // type:function size:0x288 scope:global
OSGetResetCode = .text:0x8003E214; // type:function size:0x30 scope:global
__OSResetSWInterruptHandler = .text:0x8003E244; // type:function size:0xF4 scope:global
fn_8003E338 = .text:0x8003E338; // type:function size:0x298
fn_8003E5D0 = .text:0x8003E5D0; // type:function size:0x60
fn_8003E630 = .text:0x8003E630; // type:function size:0x118
__OSInitSram = .text:0x8003E748; // type:function size:0x134 scope:global
__OSLockSram = .text:0x8003E87C; // type:function size:0x5C scope:global
__OSLockSramEx = .text:0x8003E8D8; // type:function size:0x5C scope:global
fn_8003E934 = .text:0x8003E934; // type:function size:0x308
__OSUnlockSram = .text:0x8003EC3C; // type:function size:0x24 scope:global
__OSUnlockSramEx = .text:0x8003EC60; // type:function size:0x24 scope:global
__OSSyncSram = .text:0x8003EC84; // type:function size:0x10 scope:global
fn_8003EC94 = .text:0x8003EC94; // type:function size:0x124
fn_8003EDB8 = .text:0x8003EDB8; // type:function size:0x80
fn_8003EE38 = .text:0x8003EE38; // type:function size:0xA4
fn_8003EEDC = .text:0x8003EEDC; // type:function size:0x70
fn_8003EF4C = .text:0x8003EF4C; // type:function size:0xA4
fn_8003EFF0 = .text:0x8003EFF0; // type:function size:0x84
fn_8003F074 = .text:0x8003F074; // type:function size:0xAC
__OSSystemCallVectorStart = .text:0x8003F120; // type:label scope:global
fn_8003F120 = .text:0x8003F120; // type:function size:0x20
__OSSystemCallVectorEnd = .text:0x8003F13C; // type:label scope:global
__OSInitSystemCall = .text:0x8003F140; // type:function size:0x64 scope:global
fn_8003F1A4 = .text:0x8003F1A4; // type:function size:0x4
__OSThreadInit = .text:0x8003F1A8; // type:function size:0x158 scope:global
OSInitThreadQueue = .text:0x8003F300; // type:function size:0x10 scope:global
fn_8003F310 = .text:0x8003F310; // type:function size:0xC
OSDisableScheduler = .text:0x8003F31C; // type:function size:0x40 scope:global
OSEnableScheduler = .text:0x8003F35C; // type:function size:0x40 scope:global
fn_8003F39C = .text:0x8003F39C; // type:function size:0x68
fn_8003F404 = .text:0x8003F404; // type:function size:0x3C
fn_8003F440 = .text:0x8003F440; // type:function size:0x1C0
SelectThread = .text:0x8003F600; // type:function size:0x228 scope:local
__OSReschedule = .text:0x8003F828; // type:function size:0x30 scope:global
fn_8003F858 = .text:0x8003F858; // type:function size:0x1E8
fn_8003FA40 = .text:0x8003FA40; // type:function size:0xE4
OSCancelThread = .text:0x8003FB24; // type:function size:0x1BC scope:global
fn_8003FCE0 = .text:0x8003FCE0; // type:function size:0x288
fn_8003FF68 = .text:0x8003FF68; // type:function size:0x170
fn_800400D8 = .text:0x800400D8; // type:function size:0xEC
fn_800401C4 = .text:0x800401C4; // type:function size:0x104
fn_800402C8 = .text:0x800402C8; // type:function size:0xC0
fn_80040388 = .text:0x80040388; // type:function size:0x8
OSClearStack = .text:0x80040390; // type:function size:0xAC scope:global
OSGetTime = .text:0x8004043C; // type:function size:0x18 scope:global
OSGetTick = .text:0x80040454; // type:function size:0x8 scope:global
__OSGetSystemTime = .text:0x8004045C; // type:function size:0x64 scope:global
InitMetroTRK_BBA = .text:0x800404C0; // type:function size:0x4 scope:weak
__init_user = .text:0x800404C4; // type:function size:0x20 scope:global
__init_cpp = .text:0x800404E4; // type:function size:0x54 scope:local
_ExitProcess = .text:0x80040538; // type:function size:0x20 scope:global
fn_80040558 = .text:0x80040558; // type:function size:0x1A4
fn_800406FC = .text:0x800406FC; // type:function size:0xC4
fn_800407C0 = .text:0x800407C0; // type:function size:0xC0
fn_80040880 = .text:0x80040880; // type:function size:0xD8
fn_80040958 = .text:0x80040958; // type:function size:0x32C
fn_80040C84 = .text:0x80040C84; // type:function size:0x134
fn_80040DB8 = .text:0x80040DB8; // type:function size:0x100
fn_80040EB8 = .text:0x80040EB8; // type:function size:0x218
fn_800410D0 = .text:0x800410D0; // type:function size:0x3AC
fn_8004147C = .text:0x8004147C; // type:function size:0xA4
fn_80041520 = .text:0x80041520; // type:function size:0x60
fn_80041580 = .text:0x80041580; // type:function size:0x174
fn_800416F4 = .text:0x800416F4; // type:function size:0x174
fn_80041868 = .text:0x80041868; // type:function size:0x3F8
fn_80041C60 = .text:0x80041C60; // type:function size:0x194
fn_80041DF4 = .text:0x80041DF4; // type:function size:0x60
fn_80041E54 = .text:0x80041E54; // type:function size:0x54
__PADDisableRecalibration = .text:0x80041EA8; // type:function size:0x7C scope:global
fn_80041F24 = .text:0x80041F24; // type:function size:0x20
fn_80041F44 = .text:0x80041F44; // type:function size:0x3C
fn_80041F80 = .text:0x80041F80; // type:function size:0x2FC
SIInterruptHandler = .text:0x8004227C; // type:function size:0x344 scope:local
fn_800425C0 = .text:0x800425C0; // type:function size:0x98
fn_80042658 = .text:0x80042658; // type:function size:0xCC
fn_80042724 = .text:0x80042724; // type:function size:0xF4
SIInit = .text:0x80042818; // type:function size:0xB4 scope:global
fn_800428CC = .text:0x800428CC; // type:function size:0x20C
fn_80042AD8 = .text:0x80042AD8; // type:function size:0x7C
fn_80042B54 = .text:0x80042B54; // type:function size:0x14
fn_80042B68 = .text:0x80042B68; // type:function size:0x10
SISetXY = .text:0x80042B78; // type:function size:0x6C scope:global
fn_80042BE4 = .text:0x80042BE4; // type:function size:0x9C
fn_80042C80 = .text:0x80042C80; // type:function size:0x6C
fn_80042CEC = .text:0x80042CEC; // type:function size:0xD4
fn_80042DC0 = .text:0x80042DC0; // type:function size:0xC4
fn_80042E84 = .text:0x80042E84; // type:function size:0x8C
SITransfer = .text:0x80042F10; // type:function size:0x16C scope:global
GetTypeCallback = .text:0x8004307C; // type:function size:0x298 scope:local
SIGetType = .text:0x80043314; // type:function size:0x1C4 scope:global
fn_800434D8 = .text:0x800434D8; // type:function size:0x13C
SISetSamplingRate = .text:0x80043614; // type:function size:0xE4 scope:global
fn_800436F8 = .text:0x800436F8; // type:function size:0x24
fn_8004371C = .text:0x8004371C; // type:function size:0x230
fn_8004394C = .text:0x8004394C; // type:function size:0x44
fn_80043990 = .text:0x80043990; // type:function size:0xA0
fn_80043A30 = .text:0x80043A30; // type:function size:0x200
fn_80043C30 = .text:0x80043C30; // type:function size:0x4B0
fn_800440E0 = .text:0x800440E0; // type:function size:0x54
fn_80044134 = .text:0x80044134; // type:function size:0x2D4
fn_80044408 = .text:0x80044408; // type:function size:0x1A0
fn_800445A8 = .text:0x800445A8; // type:function size:0x828
fn_80044DD0 = .text:0x80044DD0; // type:function size:0x130
fn_80044F00 = .text:0x80044F00; // type:function size:0x6C
fn_80044F6C = .text:0x80044F6C; // type:function size:0x7C
fn_80044FE8 = .text:0x80044FE8; // type:function size:0x68
fn_80045050 = .text:0x80045050; // type:function size:0x98
VIGetTvFormat = .text:0x800450E8; // type:function size:0x68 scope:global
fn_80045150 = .text:0x80045150; // type:function size:0x3C
fn_8004518C = .text:0x8004518C; // type:function size:0x24
fn_800451B0 = .text:0x800451B0; // type:function size:0x3C
fn_800451EC = .text:0x800451EC; // type:function size:0x1C
fn_80045208 = .text:0x80045208; // type:function size:0x1C
fn_80045224 = .text:0x80045224; // type:function size:0x28
fn_8004524C = .text:0x8004524C; // type:function size:0x40
fn_8004528C = .text:0x8004528C; // type:function size:0x78
fn_80045304 = .text:0x80045304; // type:function size:0x24
fn_80045328 = .text:0x80045328; // type:function size:0x20
fn_80045348 = .text:0x80045348; // type:function size:0x68
fn_800453B0 = .text:0x800453B0; // type:function size:0x68
fn_80045418 = .text:0x80045418; // type:function size:0x68
fn_80045480 = .text:0x80045480; // type:function size:0x2C
fn_800454AC = .text:0x800454AC; // type:function size:0x30
fn_800454DC = .text:0x800454DC; // type:function size:0x30
fn_8004550C = .text:0x8004550C; // type:function size:0x78
fn_80045584 = .text:0x80045584; // type:function size:0x70
fn_800455F4 = .text:0x800455F4; // type:function size:0xAC
fn_800456A0 = .text:0x800456A0; // type:function size:0xAC
fn_8004574C = .text:0x8004574C; // type:function size:0x5C
fn_800457A8 = .text:0x800457A8; // type:function size:0xE4
fn_8004588C = .text:0x8004588C; // type:function size:0x244
fn_80045AD0 = .text:0x80045AD0; // type:function size:0x4C
fn_80045B1C = .text:0x80045B1C; // type:function size:0x2C
fn_80045B48 = .text:0x80045B48; // type:function size:0x78
fn_80045BC0 = .text:0x80045BC0; // type:function size:0x78
fn_80045C38 = .text:0x80045C38; // type:function size:0x78
fn_80045CB0 = .text:0x80045CB0; // type:function size:0x70
fn_80045D20 = .text:0x80045D20; // type:function size:0x60
fn_80045D80 = .text:0x80045D80; // type:function size:0xB0
fn_80045E30 = .text:0x80045E30; // type:function size:0x94
fn_80045EC4 = .text:0x80045EC4; // type:function size:0xA8
fn_80045F6C = .text:0x80045F6C; // type:function size:0x160
fn_800460CC = .text:0x800460CC; // type:function size:0x214
fn_800462E0 = .text:0x800462E0; // type:function size:0x30
fn_80046310 = .text:0x80046310; // type:function size:0x5C
fn_8004636C = .text:0x8004636C; // type:function size:0xE4
fn_80046450 = .text:0x80046450; // type:function size:0x44
fn_80046494 = .text:0x80046494; // type:function size:0x3C
fn_800464D0 = .text:0x800464D0; // type:function size:0xC4
fn_80046594 = .text:0x80046594; // type:function size:0x18
fn_800465AC = .text:0x800465AC; // type:function size:0x40
fn_800465EC = .text:0x800465EC; // type:function size:0x114
fn_80046700 = .text:0x80046700; // type:function size:0x8
fn_80046708 = .text:0x80046708; // type:function size:0x48
fn_80046750 = .text:0x80046750; // type:function size:0xF4
fn_80046844 = .text:0x80046844; // type:function size:0x8C
fn_800468D0 = .text:0x800468D0; // type:function size:0x2A0
fn_80046B70 = .text:0x80046B70; // type:function size:0x8
fn_80046B78 = .text:0x80046B78; // type:function size:0x8
fn_80046B80 = .text:0x80046B80; // type:function size:0x34
fn_80046BB4 = .text:0x80046BB4; // type:function size:0x4
fn_80046BB8 = .text:0x80046BB8; // type:function size:0x1C
fn_80046BD4 = .text:0x80046BD4; // type:function size:0x138
fn_80046D0C = .text:0x80046D0C; // type:function size:0x2F4
fn_80047000 = .text:0x80047000; // type:function size:0x1BC
fn_800471BC = .text:0x800471BC; // type:function size:0x394
fn_80047550 = .text:0x80047550; // type:function size:0x9C
fn_800475EC = .text:0x800475EC; // type:function size:0x24
fn_80047610 = .text:0x80047610; // type:function size:0x2C
fn_8004763C = .text:0x8004763C; // type:function size:0x34
fn_80047670 = .text:0x80047670; // type:function size:0x28
fn_80047698 = .text:0x80047698; // type:function size:0x64
fn_800476FC = .text:0x800476FC; // type:function size:0x28
fn_80047724 = .text:0x80047724; // type:function size:0x30
fn_80047754 = .text:0x80047754; // type:function size:0x54
fn_800477A8 = .text:0x800477A8; // type:function size:0x78
fn_80047820 = .text:0x80047820; // type:function size:0x78
fn_80047898 = .text:0x80047898; // type:function size:0x50
fn_800478E8 = .text:0x800478E8; // type:function size:0x2C
fn_80047914 = .text:0x80047914; // type:function size:0x24
fn_80047938 = .text:0x80047938; // type:function size:0x78
fn_800479B0 = .text:0x800479B0; // type:function size:0x2C
fn_800479DC = .text:0x800479DC; // type:function size:0x2C
fn_80047A08 = .text:0x80047A08; // type:function size:0x2C
fn_80047A34 = .text:0x80047A34; // type:function size:0x1C
fn_80047A50 = .text:0x80047A50; // type:function size:0x98
fn_80047AE8 = .text:0x80047AE8; // type:function size:0x2C
fn_80047B14 = .text:0x80047B14; // type:function size:0x164
fn_80047C78 = .text:0x80047C78; // type:function size:0x1D8
fn_80047E50 = .text:0x80047E50; // type:function size:0x80
fn_80047ED0 = .text:0x80047ED0; // type:function size:0x80
fn_80047F50 = .text:0x80047F50; // type:function size:0x4C
fn_80047F9C = .text:0x80047F9C; // type:function size:0x24
fn_80047FC0 = .text:0x80047FC0; // type:function size:0x2C
fn_80047FEC = .text:0x80047FEC; // type:function size:0x58
fn_80048044 = .text:0x80048044; // type:function size:0x80
fn_800480C4 = .text:0x800480C4; // type:function size:0x3C
fn_80048100 = .text:0x80048100; // type:function size:0x68
fn_80048168 = .text:0x80048168; // type:function size:0x2C
fn_80048194 = .text:0x80048194; // type:function size:0x60
fn_800481F4 = .text:0x800481F4; // type:function size:0x58
fn_8004824C = .text:0x8004824C; // type:function size:0x134
fn_80048380 = .text:0x80048380; // type:function size:0x4C
fn_800483CC = .text:0x800483CC; // type:function size:0x28
fn_800483F4 = .text:0x800483F4; // type:function size:0x60
fn_80048454 = .text:0x80048454; // type:function size:0x60
fn_800484B4 = .text:0x800484B4; // type:function size:0x38
fn_800484EC = .text:0x800484EC; // type:function size:0x110
fn_800485FC = .text:0x800485FC; // type:function size:0x5C
fn_80048658 = .text:0x80048658; // type:function size:0x34
fn_8004868C = .text:0x8004868C; // type:function size:0x1B8
fn_80048844 = .text:0x80048844; // type:function size:0x50
fn_80048894 = .text:0x80048894; // type:function size:0xCC
fn_80048960 = .text:0x80048960; // type:function size:0x28
fn_80048988 = .text:0x80048988; // type:function size:0x40
fn_800489C8 = .text:0x800489C8; // type:function size:0xC4
fn_80048A8C = .text:0x80048A8C; // type:function size:0x9C
fn_80048B28 = .text:0x80048B28; // type:function size:0x14
fn_80048B3C = .text:0x80048B3C; // type:function size:0x2C
fn_80048B68 = .text:0x80048B68; // type:function size:0x144
fn_80048CAC = .text:0x80048CAC; // type:function size:0x1D4
fn_80048E80 = .text:0x80048E80; // type:function size:0x4C
fn_80048ECC = .text:0x80048ECC; // type:function size:0xE0
fn_80048FAC = .text:0x80048FAC; // type:function size:0x58
fn_80049004 = .text:0x80049004; // type:function size:0x74
fn_80049078 = .text:0x80049078; // type:function size:0x44
fn_800490BC = .text:0x800490BC; // type:function size:0x20
fn_800490DC = .text:0x800490DC; // type:function size:0x10
fn_800490EC = .text:0x800490EC; // type:function size:0xC
fn_800490F8 = .text:0x800490F8; // type:function size:0x38
fn_80049130 = .text:0x80049130; // type:function size:0x28
fn_80049158 = .text:0x80049158; // type:function size:0x44
fn_8004919C = .text:0x8004919C; // type:function size:0x68
fn_80049204 = .text:0x80049204; // type:function size:0x30
fn_80049234 = .text:0x80049234; // type:function size:0x18C
fn_800493C0 = .text:0x800493C0; // type:function size:0x10C
fn_800494CC = .text:0x800494CC; // type:function size:0x34
fn_80049500 = .text:0x80049500; // type:function size:0x80
fn_80049580 = .text:0x80049580; // type:function size:0x2C
fn_800495AC = .text:0x800495AC; // type:function size:0xDC
fn_80049688 = .text:0x80049688; // type:function size:0x4
fn_8004968C = .text:0x8004968C; // type:function size:0x70
fn_800496FC = .text:0x800496FC; // type:function size:0x98
fn_80049794 = .text:0x80049794; // type:function size:0x98
fn_8004982C = .text:0x8004982C; // type:function size:0x104
fn_80049930 = .text:0x80049930; // type:function size:0xB0
fn_800499E0 = .text:0x800499E0; // type:function size:0x58
fn_80049A38 = .text:0x80049A38; // type:function size:0x58
fn_80049A90 = .text:0x80049A90; // type:function size:0x30
fn_80049AC0 = .text:0x80049AC0; // type:function size:0x8
fn_80049AC8 = .text:0x80049AC8; // type:function size:0x8
fn_80049AD0 = .text:0x80049AD0; // type:function size:0x18
fn_80049AE8 = .text:0x80049AE8; // type:function size:0x4C
fn_80049B34 = .text:0x80049B34; // type:function size:0x104
fn_80049C38 = .text:0x80049C38; // type:function size:0x70
fn_80049CA8 = .text:0x80049CA8; // type:function size:0x18
fn_80049CC0 = .text:0x80049CC0; // type:function size:0x18
fn_80049CD8 = .text:0x80049CD8; // type:function size:0x18
fn_80049CF0 = .text:0x80049CF0; // type:function size:0x18
fn_80049D08 = .text:0x80049D08; // type:function size:0x68
fn_80049D70 = .text:0x80049D70; // type:function size:0x68
fn_80049DD8 = .text:0x80049DD8; // type:function size:0x18
fn_80049DF0 = .text:0x80049DF0; // type:function size:0x18
fn_80049E08 = .text:0x80049E08; // type:function size:0x34
fn_80049E3C = .text:0x80049E3C; // type:function size:0x28
fn_80049E64 = .text:0x80049E64; // type:function size:0x7C
fn_80049EE0 = .text:0x80049EE0; // type:function size:0x24
fn_80049F04 = .text:0x80049F04; // type:function size:0x4
fn_80049F08 = .text:0x80049F08; // type:function size:0xBC
fn_80049FC4 = .text:0x80049FC4; // type:function size:0xC8
fn_8004A08C = .text:0x8004A08C; // type:function size:0x14
fn_8004A0A0 = .text:0x8004A0A0; // type:function size:0xF4
fn_8004A194 = .text:0x8004A194; // type:function size:0x208
fn_8004A39C = .text:0x8004A39C; // type:function size:0x4
fn_8004A3A0 = .text:0x8004A3A0; // type:function size:0xC
fn_8004A3AC = .text:0x8004A3AC; // type:function size:0x18
fn_8004A3C4 = .text:0x8004A3C4; // type:function size:0xF4
fn_8004A4B8 = .text:0x8004A4B8; // type:function size:0x14C
fn_8004A604 = .text:0x8004A604; // type:function size:0xCC
fn_8004A6D0 = .text:0x8004A6D0; // type:function size:0x11C
fn_8004A7EC = .text:0x8004A7EC; // type:function size:0x38
fn_8004A824 = .text:0x8004A824; // type:function size:0xC
fn_8004A830 = .text:0x8004A830; // type:function size:0x14
fn_8004A844 = .text:0x8004A844; // type:function size:0x38
fn_8004A87C = .text:0x8004A87C; // type:function size:0x1C
fn_8004A898 = .text:0x8004A898; // type:function size:0x34
fn_8004A8CC = .text:0x8004A8CC; // type:function size:0x134
fn_8004AA00 = .text:0x8004AA00; // type:function size:0x50
fn_8004AA50 = .text:0x8004AA50; // type:function size:0x138
fn_8004AB88 = .text:0x8004AB88; // type:function size:0x23C
fn_8004ADC4 = .text:0x8004ADC4; // type:function size:0x24
fn_8004ADE8 = .text:0x8004ADE8; // type:function size:0x24
fn_8004AE0C = .text:0x8004AE0C; // type:function size:0x24
fn_8004AE30 = .text:0x8004AE30; // type:function size:0x14
fn_8004AE44 = .text:0x8004AE44; // type:function size:0xC
fn_8004AE50 = .text:0x8004AE50; // type:function size:0x2C
fn_8004AE7C = .text:0x8004AE7C; // type:function size:0x2C
fn_8004AEA8 = .text:0x8004AEA8; // type:function size:0x2C
fn_8004AED4 = .text:0x8004AED4; // type:function size:0x28
fn_8004AEFC = .text:0x8004AEFC; // type:function size:0x28
fn_8004AF24 = .text:0x8004AF24; // type:function size:0x54
fn_8004AF78 = .text:0x8004AF78; // type:function size:0x64
fn_8004AFDC = .text:0x8004AFDC; // type:function size:0x38
fn_8004B014 = .text:0x8004B014; // type:function size:0x8
fn_8004B01C = .text:0x8004B01C; // type:function size:0xC
fn_8004B028 = .text:0x8004B028; // type:function size:0x2C
fn_8004B054 = .text:0x8004B054; // type:function size:0x8
fn_8004B05C = .text:0x8004B05C; // type:function size:0x54
fn_8004B0B0 = .text:0x8004B0B0; // type:function size:0x7C
fn_8004B12C = .text:0x8004B12C; // type:function size:0x5C
fn_8004B188 = .text:0x8004B188; // type:function size:0x134
fn_8004B2BC = .text:0x8004B2BC; // type:function size:0x140
fn_8004B3FC = .text:0x8004B3FC; // type:function size:0x58
fn_8004B454 = .text:0x8004B454; // type:function size:0x100
fn_8004B554 = .text:0x8004B554; // type:function size:0x2FC
fn_8004B850 = .text:0x8004B850; // type:function size:0xD8
fn_8004B928 = .text:0x8004B928; // type:function size:0xD8
fn_8004BA00 = .text:0x8004BA00; // type:function size:0x3C
fn_8004BA3C = .text:0x8004BA3C; // type:function size:0xE4
fn_8004BB20 = .text:0x8004BB20; // type:function size:0x78
fn_8004BB98 = .text:0x8004BB98; // type:function size:0xEC
fn_8004BC84 = .text:0x8004BC84; // type:function size:0x28
fn_8004BCAC = .text:0x8004BCAC; // type:function size:0x28
fn_8004BCD4 = .text:0x8004BCD4; // type:function size:0x28
fn_8004BCFC = .text:0x8004BCFC; // type:function size:0x28
fn_8004BD24 = .text:0x8004BD24; // type:function size:0x28
fn_8004BD4C = .text:0x8004BD4C; // type:function size:0x4
fn_8004BD50 = .text:0x8004BD50; // type:function size:0x104
fn_8004BE54 = .text:0x8004BE54; // type:function size:0x168
fn_8004BFBC = .text:0x8004BFBC; // type:function size:0x78
fn_8004C034 = .text:0x8004C034; // type:function size:0xA0
fn_8004C0D4 = .text:0x8004C0D4; // type:function size:0x78
fn_8004C14C = .text:0x8004C14C; // type:function size:0x34
fn_8004C180 = .text:0x8004C180; // type:function size:0x94
fn_8004C214 = .text:0x8004C214; // type:function size:0x44
fn_8004C258 = .text:0x8004C258; // type:function size:0x108
fn_8004C360 = .text:0x8004C360; // type:function size:0x24
fn_8004C384 = .text:0x8004C384; // type:function size:0x38
fn_8004C3BC = .text:0x8004C3BC; // type:function size:0x28
fn_8004C3E4 = .text:0x8004C3E4; // type:function size:0xD0
fn_8004C4B4 = .text:0x8004C4B4; // type:function size:0x4
fn_8004C4B8 = .text:0x8004C4B8; // type:function size:0xC
fn_8004C4C4 = .text:0x8004C4C4; // type:function size:0x14
fn_8004C4D8 = .text:0x8004C4D8; // type:function size:0x4C
fn_8004C524 = .text:0x8004C524; // type:function size:0x20
fn_8004C544 = .text:0x8004C544; // type:function size:0x94
fn_8004C5D8 = .text:0x8004C5D8; // type:function size:0x44
fn_8004C61C = .text:0x8004C61C; // type:function size:0x4
fn_8004C620 = .text:0x8004C620; // type:function size:0x10
fn_8004C630 = .text:0x8004C630; // type:function size:0xC
fn_8004C63C = .text:0x8004C63C; // type:function size:0x14
fn_8004C650 = .text:0x8004C650; // type:function size:0x20
fn_8004C670 = .text:0x8004C670; // type:function size:0xB4
fn_8004C724 = .text:0x8004C724; // type:function size:0x44
fn_8004C768 = .text:0x8004C768; // type:function size:0x4
fn_8004C76C = .text:0x8004C76C; // type:function size:0x10
fn_8004C77C = .text:0x8004C77C; // type:function size:0xC
fn_8004C788 = .text:0x8004C788; // type:function size:0x14
fn_8004C79C = .text:0x8004C79C; // type:function size:0x54
fn_8004C7F0 = .text:0x8004C7F0; // type:function size:0xB4
fn_8004C8A4 = .text:0x8004C8A4; // type:function size:0x40
fn_8004C8E4 = .text:0x8004C8E4; // type:function size:0x4C
fn_8004C930 = .text:0x8004C930; // type:function size:0x58
fn_8004C988 = .text:0x8004C988; // type:function size:0xB8
fn_8004CA40 = .text:0x8004CA40; // type:function size:0x40
fn_8004CA80 = .text:0x8004CA80; // type:function size:0x4C
fn_8004CACC = .text:0x8004CACC; // type:function size:0x128
fn_8004CBF4 = .text:0x8004CBF4; // type:function size:0x274
fn_8004CE68 = .text:0x8004CE68; // type:function size:0x11C
fn_8004CF84 = .text:0x8004CF84; // type:function size:0x248
fn_8004D1CC = .text:0x8004D1CC; // type:function size:0x4EC
fn_8004D6B8 = .text:0x8004D6B8; // type:function size:0xF0
fn_8004D7A8 = .text:0x8004D7A8; // type:function size:0xC
fn_8004D7B4 = .text:0x8004D7B4; // type:function size:0x14
fn_8004D7C8 = .text:0x8004D7C8; // type:function size:0x10
fn_8004D7D8 = .text:0x8004D7D8; // type:function size:0x4
fn_8004D7DC = .text:0x8004D7DC; // type:function size:0x534
fn_8004DD10 = .text:0x8004DD10; // type:function size:0x5C0
fn_8004E2D0 = .text:0x8004E2D0; // type:function size:0x4
fn_8004E2D4 = .text:0x8004E2D4; // type:function size:0x10
fn_8004E2E4 = .text:0x8004E2E4; // type:function size:0xC
fn_8004E2F0 = .text:0x8004E2F0; // type:function size:0x14
fn_8004E304 = .text:0x8004E304; // type:function size:0xDC
fn_8004E3E0 = .text:0x8004E3E0; // type:function size:0x60
fn_8004E440 = .text:0x8004E440; // type:function size:0x4B4
fn_8004E8F4 = .text:0x8004E8F4; // type:function size:0x3AC
fn_8004ECA0 = .text:0x8004ECA0; // type:function size:0x8C
fn_8004ED2C = .text:0x8004ED2C; // type:function size:0x38
fn_8004ED64 = .text:0x8004ED64; // type:function size:0x98
fn_8004EDFC = .text:0x8004EDFC; // type:function size:0x4
fn_8004EE00 = .text:0x8004EE00; // type:function size:0x8C
fn_8004EE8C = .text:0x8004EE8C; // type:function size:0xB4
fn_8004EF40 = .text:0x8004EF40; // type:function size:0x8C
fn_8004EFCC = .text:0x8004EFCC; // type:function size:0xC8
fn_8004F094 = .text:0x8004F094; // type:function size:0x4
fn_8004F098 = .text:0x8004F098; // type:function size:0xA4
fn_8004F13C = .text:0x8004F13C; // type:function size:0xB0
fn_8004F1EC = .text:0x8004F1EC; // type:function size:0x4C
fn_8004F238 = .text:0x8004F238; // type:function size:0xC4
fn_8004F2FC = .text:0x8004F2FC; // type:function size:0x4
fn_8004F300 = .text:0x8004F300; // type:function size:0xA0
fn_8004F3A0 = .text:0x8004F3A0; // type:function size:0xD8
fn_8004F478 = .text:0x8004F478; // type:function size:0xA0
fn_8004F518 = .text:0x8004F518; // type:function size:0xE8
fn_8004F600 = .text:0x8004F600; // type:function size:0x4
fn_8004F604 = .text:0x8004F604; // type:function size:0xA0
fn_8004F6A4 = .text:0x8004F6A4; // type:function size:0x1FC
fn_8004F8A0 = .text:0x8004F8A0; // type:function size:0x4
fn_8004F8A4 = .text:0x8004F8A4; // type:function size:0x54
fn_8004F8F8 = .text:0x8004F8F8; // type:function size:0xA8
fn_8004F9A0 = .text:0x8004F9A0; // type:function size:0x70
fn_8004FA10 = .text:0x8004FA10; // type:function size:0xC8
fn_8004FAD8 = .text:0x8004FAD8; // type:function size:0x8
fn_8004FAE0 = .text:0x8004FAE0; // type:function size:0x84
fn_8004FB64 = .text:0x8004FB64; // type:function size:0x88
fn_8004FBEC = .text:0x8004FBEC; // type:function size:0x1CC
fn_8004FDB8 = .text:0x8004FDB8; // type:function size:0x4
fn_8004FDBC = .text:0x8004FDBC; // type:function size:0x54
fn_8004FE10 = .text:0x8004FE10; // type:function size:0x4B4
fn_800502C4 = .text:0x800502C4; // type:function size:0x458
fn_8005071C = .text:0x8005071C; // type:function size:0x4C
fn_80050768 = .text:0x80050768; // type:function size:0x74
fn_800507DC = .text:0x800507DC; // type:function size:0x5C
fn_80050838 = .text:0x80050838; // type:function size:0x5C
fn_80050894 = .text:0x80050894; // type:function size:0x38
fn_800508CC = .text:0x800508CC; // type:function size:0x34
fn_80050900 = .text:0x80050900; // type:function size:0xA0
fn_800509A0 = .text:0x800509A0; // type:function size:0x48
fn_800509E8 = .text:0x800509E8; // type:function size:0x9C
fn_80050A84 = .text:0x80050A84; // type:function size:0x64
fn_80050AE8 = .text:0x80050AE8; // type:function size:0x6C
fn_80050B54 = .text:0x80050B54; // type:function size:0x144
fn_80050C98 = .text:0x80050C98; // type:function size:0x4
fn_80050C9C = .text:0x80050C9C; // type:function size:0x28
fn_80050CC4 = .text:0x80050CC4; // type:function size:0x10
fn_80050CD4 = .text:0x80050CD4; // type:function size:0x10
fn_80050CE4 = .text:0x80050CE4; // type:function size:0x10
fn_80050CF4 = .text:0x80050CF4; // type:function size:0x10
fn_80050D04 = .text:0x80050D04; // type:function size:0x30
fn_80050D34 = .text:0x80050D34; // type:function size:0x8
fn_80050D3C = .text:0x80050D3C; // type:function size:0x34
fn_80050D70 = .text:0x80050D70; // type:function size:0x10
fn_80050D80 = .text:0x80050D80; // type:function size:0xA4
fn_80050E24 = .text:0x80050E24; // type:function size:0x2C
fn_80050E50 = .text:0x80050E50; // type:function size:0x84
fn_80050ED4 = .text:0x80050ED4; // type:function size:0x40
fn_80050F14 = .text:0x80050F14; // type:function size:0x8
fn_80050F1C = .text:0x80050F1C; // type:function size:0x98
DBClose = .text:0x80050FB4; // type:function size:0x4 scope:global
DBOpen = .text:0x80050FB8; // type:function size:0x4 scope:global
DBWrite = .text:0x80050FBC; // type:function size:0x260 scope:global
DBRead = .text:0x8005121C; // type:function size:0x8C scope:global
DBQueryData = .text:0x800512A8; // type:function size:0x9C scope:global
DBInitInterrupts = .text:0x80051344; // type:function size:0x54 scope:global
DBInitComm = .text:0x80051398; // type:function size:0x78 scope:global
fn_80051410 = .text:0x80051410; // type:function size:0x40
fn_80051450 = .text:0x80051450; // type:function size:0x3C
fn_8005148C = .text:0x8005148C; // type:function size:0xAC
fn_80051538 = .text:0x80051538; // type:function size:0xDC
fn_80051614 = .text:0x80051614; // type:function size:0xDC
fn_800516F0 = .text:0x800516F0; // type:function size:0xAC
fn_8005179C = .text:0x8005179C; // type:function size:0x298
fn_80051A34 = .text:0x80051A34; // type:function size:0x90
fn_80051AC4 = .text:0x80051AC4; // type:function size:0x13C
fn_80051C00 = .text:0x80051C00; // type:function size:0x24
fn_80051C24 = .text:0x80051C24; // type:function size:0x24
fn_80051C48 = .text:0x80051C48; // type:function size:0x2C
fn_80051C74 = .text:0x80051C74; // type:function size:0x24
fn_80051C98 = .text:0x80051C98; // type:function size:0x24
fn_80051CBC = .text:0x80051CBC; // type:function size:0x24
fn_80051CE0 = .text:0x80051CE0; // type:function size:0x24
fn_80051D04 = .text:0x80051D04; // type:function size:0x24
fn_80051D28 = .text:0x80051D28; // type:function size:0x8
fn_80051D30 = .text:0x80051D30; // type:function size:0x24
fn_80051D54 = .text:0x80051D54; // type:function size:0x24
fn_80051D78 = .text:0x80051D78; // type:function size:0x24
fn_80051D9C = .text:0x80051D9C; // type:function size:0x24
fn_80051DC0 = .text:0x80051DC0; // type:function size:0x24
fn_80051DE4 = .text:0x80051DE4; // type:function size:0x24
fn_80051E08 = .text:0x80051E08; // type:function size:0x24
fn_80051E2C = .text:0x80051E2C; // type:function size:0x24
fn_80051E50 = .text:0x80051E50; // type:function size:0x24
fn_80051E74 = .text:0x80051E74; // type:function size:0x24
fn_80051E98 = .text:0x80051E98; // type:function size:0x24
fn_80051EBC = .text:0x80051EBC; // type:function size:0x8
fn_80051EC4 = .text:0x80051EC4; // type:function size:0x8
fn_80051ECC = .text:0x80051ECC; // type:function size:0x8
fn_80051ED4 = .text:0x80051ED4; // type:function size:0xC
fn_80051EE0 = .text:0x80051EE0; // type:function size:0x8
fn_80051EE8 = .text:0x80051EE8; // type:function size:0x8
fn_80051EF0 = .text:0x80051EF0; // type:function size:0x280
fn_80052170 = .text:0x80052170; // type:function size:0x258
fn_800523C8 = .text:0x800523C8; // type:function size:0x234
fn_800525FC = .text:0x800525FC; // type:function size:0xF8
fn_800526F4 = .text:0x800526F4; // type:function size:0x1F4
fn_800528E8 = .text:0x800528E8; // type:function size:0x38
fn_80052920 = .text:0x80052920; // type:function size:0x40
fn_80052960 = .text:0x80052960; // type:function size:0x24
fn_80052984 = .text:0x80052984; // type:function size:0x4C
fn_800529D0 = .text:0x800529D0; // type:function size:0x4C
fn_80052A1C = .text:0x80052A1C; // type:function size:0xC
fn_80052A28 = .text:0x80052A28; // type:function size:0x54
fn_80052A7C = .text:0x80052A7C; // type:function size:0x290
fn_80052D0C = .text:0x80052D0C; // type:function size:0x30
fn_80052D3C = .text:0x80052D3C; // type:function size:0x34
fn_80052D70 = .text:0x80052D70; // type:function size:0x4C
fn_80052DBC = .text:0x80052DBC; // type:function size:0x68
fn_80052E24 = .text:0x80052E24; // type:function size:0x3B0
fn_800531D4 = .text:0x800531D4; // type:function size:0x3A4
fn_80053578 = .text:0x80053578; // type:function size:0x32C
fn_800538A4 = .text:0x800538A4; // type:function size:0xEC
fn_80053990 = .text:0x80053990; // type:function size:0x268
fn_80053BF8 = .text:0x80053BF8; // type:function size:0x2C
fn_80053C24 = .text:0x80053C24; // type:function size:0x24
fn_80053C48 = .text:0x80053C48; // type:function size:0x38
fn_80053C80 = .text:0x80053C80; // type:function size:0x34
fn_80053CB4 = .text:0x80053CB4; // type:function size:0x338
fn_80053FEC = .text:0x80053FEC; // type:function size:0x3B0
fn_8005439C = .text:0x8005439C; // type:function size:0x184
fn_80054520 = .text:0x80054520; // type:function size:0x68
fn_80054588 = .text:0x80054588; // type:function size:0x270
fn_800547F8 = .text:0x800547F8; // type:function size:0x44
fn_8005483C = .text:0x8005483C; // type:function size:0x3C4
fn_80054C00 = .text:0x80054C00; // type:function size:0x338
fn_80054F38 = .text:0x80054F38; // type:function size:0x3B0
fn_800552E8 = .text:0x800552E8; // type:function size:0x178
fn_80055460 = .text:0x80055460; // type:function size:0x68
fn_800554C8 = .text:0x800554C8; // type:function size:0x208
fn_800556D0 = .text:0x800556D0; // type:function size:0x8C
fn_8005575C = .text:0x8005575C; // type:function size:0x404
fn_80055B60 = .text:0x80055B60; // type:function size:0x8
fn_80055B68 = .text:0x80055B68; // type:function size:0x8
fn_80055B70 = .text:0x80055B70; // type:function size:0x48
fn_80055BB8 = .text:0x80055BB8; // type:function size:0x38
fn_80055BF0 = .text:0x80055BF0; // type:function size:0x18
fn_80055C08 = .text:0x80055C08; // type:function size:0x70
fn_80055C78 = .text:0x80055C78; // type:function size:0x8
fn_80055C80 = .text:0x80055C80; // type:function size:0x4C
fn_80055CCC = .text:0x80055CCC; // type:function size:0x4C
fn_80055D18 = .text:0x80055D18; // type:function size:0x8
fn_80055D20 = .text:0x80055D20; // type:function size:0x8
fn_80055D28 = .text:0x80055D28; // type:function size:0x8
fn_80055D30 = .text:0x80055D30; // type:function size:0x8
fn_80055D38 = .text:0x80055D38; // type:function size:0x8
fn_80055D40 = .text:0x80055D40; // type:function size:0x8
fn_80055D48 = .text:0x80055D48; // type:function size:0x8
fn_80055D50 = .text:0x80055D50; // type:function size:0x6C
fn_80055DBC = .text:0x80055DBC; // type:function size:0xC
fn_80055DC8 = .text:0x80055DC8; // type:function size:0x8
fn_80055DD0 = .text:0x80055DD0; // type:function size:0x8
fn_80055DD8 = .text:0x80055DD8; // type:function size:0x8
fn_80055DE0 = .text:0x80055DE0; // type:function size:0xC
fn_80055DEC = .text:0x80055DEC; // type:function size:0x10C
fn_80055EF8 = .text:0x80055EF8; // type:function size:0x680
fn_80056578 = .text:0x80056578; // type:function size:0x4C
fn_800565C4 = .text:0x800565C4; // type:function size:0x198
fn_8005675C = .text:0x8005675C; // type:function size:0x1C
fn_80056778 = .text:0x80056778; // type:function size:0x30
fn_800567A8 = .text:0x800567A8; // type:function size:0x48
fn_800567F0 = .text:0x800567F0; // type:function size:0x34
fn_80056824 = .text:0x80056824; // type:function size:0x2D8
fn_80056AFC = .text:0x80056AFC; // type:function size:0xEC
fn_80056BE8 = .text:0x80056BE8; // type:function size:0x124
fn_80056D0C = .text:0x80056D0C; // type:function size:0x8
fn_80056D14 = .text:0x80056D14; // type:function size:0xC
fn_80056D20 = .text:0x80056D20; // type:function size:0x1B8
fn_80056ED8 = .text:0x80056ED8; // type:function size:0x44
fn_80056F1C = .text:0x80056F1C; // type:function size:0x38
fn_80056F54 = .text:0x80056F54; // type:function size:0x44
fn_80056F98 = .text:0x80056F98; // type:function size:0x10
fn_80056FA8 = .text:0x80056FA8; // type:function size:0x9C
fn_80057044 = .text:0x80057044; // type:function size:0x38
fn_8005707C = .text:0x8005707C; // type:function size:0x11C
fn_80057198 = .text:0x80057198; // type:function size:0xD0
fn_80057268 = .text:0x80057268; // type:function size:0x50
fn_800572B8 = .text:0x800572B8; // type:function size:0x48
fn_80057300 = .text:0x80057300; // type:function size:0xF0
fn_800573F0 = .text:0x800573F0; // type:function size:0x7C
fn_8005746C = .text:0x8005746C; // type:function size:0x1E8
fn_80057654 = .text:0x80057654; // type:function size:0x4DC
fn_80057B30 = .text:0x80057B30; // type:function size:0x80
fn_80057BB0 = .text:0x80057BB0; // type:function size:0x64
fn_80057C14 = .text:0x80057C14; // type:function size:0x30
fn_80057C44 = .text:0x80057C44; // type:function size:0x48
fn_80057C8C = .text:0x80057C8C; // type:function size:0x48
fn_80057CD4 = .text:0x80057CD4; // type:function size:0x8C
fn_80057D60 = .text:0x80057D60; // type:function size:0x1A8
fn_80057F08 = .text:0x80057F08; // type:function size:0x18
fn_80057F20 = .text:0x80057F20; // type:function size:0x18
fn_80057F38 = .text:0x80057F38; // type:function size:0x5C
fn_80057F94 = .text:0x80057F94; // type:function size:0x190
fn_80058124 = .text:0x80058124; // type:function size:0x8C
fn_800581B0 = .text:0x800581B0; // type:function size:0x1C
fn_800581CC = .text:0x800581CC; // type:function size:0xC
fn_800581D8 = .text:0x800581D8; // type:function size:0x100
fn_800582D8 = .text:0x800582D8; // type:function size:0x8C
fn_80058364 = .text:0x80058364; // type:function size:0x600
fn_80058964 = .text:0x80058964; // type:function size:0x44
fn_800589A8 = .text:0x800589A8; // type:function size:0x44
fn_800589EC = .text:0x800589EC; // type:function size:0xF0C
fn_800598F8 = .text:0x800598F8; // type:function size:0x230
fn_80059B28 = .text:0x80059B28; // type:function size:0x29C
fn_80059DC4 = .text:0x80059DC4; // type:function size:0x240
fn_8005A004 = .text:0x8005A004; // type:function size:0x234
fn_8005A238 = .text:0x8005A238; // type:function size:0x4C8
fn_8005A700 = .text:0x8005A700; // type:function size:0xC
fn_8005A70C = .text:0x8005A70C; // type:function size:0x90
fn_8005A79C = .text:0x8005A79C; // type:function size:0x8
fn_8005A7A4 = .text:0x8005A7A4; // type:function size:0x8
fn_8005A7AC = .text:0x8005A7AC; // type:function size:0xC
fn_8005A7B8 = .text:0x8005A7B8; // type:function size:0x10
fn_8005A7C8 = .text:0x8005A7C8; // type:function size:0x18
fn_8005A7E0 = .text:0x8005A7E0; // type:function size:0x7C
fn_8005A85C = .text:0x8005A85C; // type:function size:0x218
fn_8005AA74 = .text:0x8005AA74; // type:function size:0x3CC
fn_8005AE40 = .text:0x8005AE40; // type:function size:0x48
fn_8005AE88 = .text:0x8005AE88; // type:function size:0xC
fn_8005AE94 = .text:0x8005AE94; // type:function size:0xF4
fn_8005AF88 = .text:0x8005AF88; // type:function size:0x70
fn_8005AFF8 = .text:0x8005AFF8; // type:function size:0x50
fn_8005B048 = .text:0x8005B048; // type:function size:0x58
fn_8005B0A0 = .text:0x8005B0A0; // type:function size:0x1C
fn_8005B0BC = .text:0x8005B0BC; // type:function size:0x50
fn_8005B10C = .text:0x8005B10C; // type:function size:0xC
fn_8005B118 = .text:0x8005B118; // type:function size:0x1C4
fn_8005B2DC = .text:0x8005B2DC; // type:function size:0x94
fn_8005B370 = .text:0x8005B370; // type:function size:0xBC
fn_8005B42C = .text:0x8005B42C; // type:function size:0x5C
fn_8005B488 = .text:0x8005B488; // type:function size:0x294
fn_8005B71C = .text:0x8005B71C; // type:function size:0x2BC
fn_8005B9D8 = .text:0x8005B9D8; // type:function size:0x4
fn_8005B9DC = .text:0x8005B9DC; // type:function size:0x34
fn_8005BA10 = .text:0x8005BA10; // type:function size:0x180
fn_8005BB90 = .text:0x8005BB90; // type:function size:0x30
fn_8005BBC0 = .text:0x8005BBC0; // type:function size:0x94
fn_8005BC54 = .text:0x8005BC54; // type:function size:0x8
fn_8005BC5C = .text:0x8005BC5C; // type:function size:0x164
fn_8005BDC0 = .text:0x8005BDC0; // type:function size:0x20
fn_8005BDE0 = .text:0x8005BDE0; // type:function size:0x4
fn_8005BDE4 = .text:0x8005BDE4; // type:function size:0x4
fn_8005BDE8 = .text:0x8005BDE8; // type:function size:0x150
fn_8005BF38 = .text:0x8005BF38; // type:function size:0x48
fn_8005BF80 = .text:0x8005BF80; // type:function size:0x3C
fn_8005BFBC = .text:0x8005BFBC; // type:function size:0xBC
fn_8005C078 = .text:0x8005C078; // type:function size:0x8
fn_8005C080 = .text:0x8005C080; // type:function size:0x38
fn_8005C0B8 = .text:0x8005C0B8; // type:function size:0x38
fn_8005C0F0 = .text:0x8005C0F0; // type:function size:0x3C
fn_8005C12C = .text:0x8005C12C; // type:function size:0x40
fn_8005C16C = .text:0x8005C16C; // type:function size:0x44
fn_8005C1B0 = .text:0x8005C1B0; // type:function size:0x68
fn_8005C218 = .text:0x8005C218; // type:function size:0x58
fn_8005C270 = .text:0x8005C270; // type:function size:0x58
fn_8005C2C8 = .text:0x8005C2C8; // type:function size:0x58
fn_8005C320 = .text:0x8005C320; // type:function size:0x4F4
fn_8005C814 = .text:0x8005C814; // type:function size:0x40
fn_8005C854 = .text:0x8005C854; // type:function size:0x120
fn_8005C974 = .text:0x8005C974; // type:function size:0x210
fn_8005CB84 = .text:0x8005CB84; // type:function size:0x148
fn_8005CCCC = .text:0x8005CCCC; // type:function size:0x284
fn_8005CF50 = .text:0x8005CF50; // type:function size:0x418
fn_8005D368 = .text:0x8005D368; // type:function size:0x94
fn_8005D3FC = .text:0x8005D3FC; // type:function size:0xF8
fn_8005D4F4 = .text:0x8005D4F4; // type:function size:0x308
fn_8005D7FC = .text:0x8005D7FC; // type:function size:0x434
fn_8005DC30 = .text:0x8005DC30; // type:function size:0x2E0
fn_8005DF10 = .text:0x8005DF10; // type:function size:0x78
fn_8005DF88 = .text:0x8005DF88; // type:function size:0x180
fn_8005E108 = .text:0x8005E108; // type:function size:0xA8
fn_8005E1B0 = .text:0x8005E1B0; // type:function size:0xF8
fn_8005E2A8 = .text:0x8005E2A8; // type:function size:0x8
fn_8005E2B0 = .text:0x8005E2B0; // type:function size:0x18
fn_8005E2C8 = .text:0x8005E2C8; // type:function size:0x34
fn_8005E2FC = .text:0x8005E2FC; // type:function size:0x20
fn_8005E31C = .text:0x8005E31C; // type:function size:0x34
fn_8005E350 = .text:0x8005E350; // type:function size:0x38
fn_8005E388 = .text:0x8005E388; // type:function size:0x8
fn_8005E390 = .text:0x8005E390; // type:function size:0x38
fn_8005E3C8 = .text:0x8005E3C8; // type:function size:0x1C
fn_8005E3E4 = .text:0x8005E3E4; // type:function size:0x10
fn_8005E3F4 = .text:0x8005E3F4; // type:function size:0x24
fn_8005E418 = .text:0x8005E418; // type:function size:0x24
fn_8005E43C = .text:0x8005E43C; // type:function size:0x30
fn_8005E46C = .text:0x8005E46C; // type:function size:0x158
fn_8005E5C4 = .text:0x8005E5C4; // type:function size:0x30
fn_8005E5F4 = .text:0x8005E5F4; // type:function size:0x1C
fn_8005E610 = .text:0x8005E610; // type:function size:0x218
fn_8005E828 = .text:0x8005E828; // type:function size:0x20
fn_8005E848 = .text:0x8005E848; // type:function size:0xCC
fn_8005E914 = .text:0x8005E914; // type:function size:0x58
fn_8005E96C = .text:0x8005E96C; // type:function size:0xB0
fn_8005EA1C = .text:0x8005EA1C; // type:function size:0x30
fn_8005EA4C = .text:0x8005EA4C; // type:function size:0xBC
fn_8005EB08 = .text:0x8005EB08; // type:function size:0x64
fn_8005EB6C = .text:0x8005EB6C; // type:function size:0xB4
fn_8005EC20 = .text:0x8005EC20; // type:function size:0x20
fn_8005EC40 = .text:0x8005EC40; // type:function size:0x20
fn_8005EC60 = .text:0x8005EC60; // type:function size:0x20
fn_8005EC80 = .text:0x8005EC80; // type:function size:0x20
fn_8005ECA0 = .text:0x8005ECA0; // type:function size:0xC0
fn_8005ED60 = .text:0x8005ED60; // type:function size:0x24
fn_8005ED84 = .text:0x8005ED84; // type:function size:0x24
fn_8005EDA8 = .text:0x8005EDA8; // type:function size:0x20
fn_8005EDC8 = .text:0x8005EDC8; // type:function size:0x24
fn_8005EDEC = .text:0x8005EDEC; // type:function size:0x4
fn_8005EDF0 = .text:0x8005EDF0; // type:function size:0x20
fn_8005EE10 = .text:0x8005EE10; // type:function size:0x20
fn_8005EE30 = .text:0x8005EE30; // type:function size:0x20
fn_8005EE50 = .text:0x8005EE50; // type:function size:0x20
fn_8005EE70 = .text:0x8005EE70; // type:function size:0x20
fn_8005EE90 = .text:0x8005EE90; // type:function size:0x20
fn_8005EEB0 = .text:0x8005EEB0; // type:function size:0x20
fn_8005EED0 = .text:0x8005EED0; // type:function size:0x20
fn_8005EEF0 = .text:0x8005EEF0; // type:function size:0x20
fn_8005EF10 = .text:0x8005EF10; // type:function size:0x20
fn_8005EF30 = .text:0x8005EF30; // type:function size:0x20
fn_8005EF50 = .text:0x8005EF50; // type:function size:0x44
fn_8005EF94 = .text:0x8005EF94; // type:function size:0x20
fn_8005EFB4 = .text:0x8005EFB4; // type:function size:0x20
fn_8005EFD4 = .text:0x8005EFD4; // type:function size:0x20
fn_8005EFF4 = .text:0x8005EFF4; // type:function size:0x20
fn_8005F014 = .text:0x8005F014; // type:function size:0x64
fn_8005F078 = .text:0x8005F078; // type:function size:0x260
fn_8005F2D8 = .text:0x8005F2D8; // type:function size:0x2F0
fn_8005F5C8 = .text:0x8005F5C8; // type:function size:0x154
fn_8005F71C = .text:0x8005F71C; // type:function size:0x38
fn_8005F754 = .text:0x8005F754; // type:function size:0xFC
fn_8005F850 = .text:0x8005F850; // type:function size:0x38
fn_8005F888 = .text:0x8005F888; // type:function size:0x38
fn_8005F8C0 = .text:0x8005F8C0; // type:function size:0x24
fn_8005F8E4 = .text:0x8005F8E4; // type:function size:0x38
fn_8005F91C = .text:0x8005F91C; // type:function size:0x9C
fn_8005F9B8 = .text:0x8005F9B8; // type:function size:0xAC
fn_8005FA64 = .text:0x8005FA64; // type:function size:0x20
fn_8005FA84 = .text:0x8005FA84; // type:function size:0x290
fn_8005FD14 = .text:0x8005FD14; // type:function size:0x190
fn_8005FEA4 = .text:0x8005FEA4; // type:function size:0x2C4
fn_80060168 = .text:0x80060168; // type:function size:0x5C
fn_800601C4 = .text:0x800601C4; // type:function size:0x2C0
fn_80060484 = .text:0x80060484; // type:function size:0x29C
fn_80060720 = .text:0x80060720; // type:function size:0x278
fn_80060998 = .text:0x80060998; // type:function size:0x3D0
fn_80060D68 = .text:0x80060D68; // type:function size:0x20
fn_80060D88 = .text:0x80060D88; // type:function size:0x230
fn_80060FB8 = .text:0x80060FB8; // type:function size:0x54
fn_8006100C = .text:0x8006100C; // type:function size:0x250
fn_8006125C = .text:0x8006125C; // type:function size:0x50
fn_800612AC = .text:0x800612AC; // type:function size:0x34
fn_800612E0 = .text:0x800612E0; // type:function size:0xC0
fn_800613A0 = .text:0x800613A0; // type:function size:0x68
fn_80061408 = .text:0x80061408; // type:function size:0xC0
fn_800614C8 = .text:0x800614C8; // type:function size:0xC0
fn_80061588 = .text:0x80061588; // type:function size:0xC0
fn_80061648 = .text:0x80061648; // type:function size:0xBC
fn_80061704 = .text:0x80061704; // type:function size:0x664
fn_80061D68 = .text:0x80061D68; // type:function size:0x134
fn_80061E9C = .text:0x80061E9C; // type:function size:0x27C
fn_80062118 = .text:0x80062118; // type:function size:0x40
fn_80062158 = .text:0x80062158; // type:function size:0x4
fn_8006215C = .text:0x8006215C; // type:function size:0x60
fn_800621BC = .text:0x800621BC; // type:function size:0xE4
fn_800622A0 = .text:0x800622A0; // type:function size:0x60
fn_80062300 = .text:0x80062300; // type:function size:0x64
fn_80062364 = .text:0x80062364; // type:function size:0x1A0
fn_80062504 = .text:0x80062504; // type:function size:0x428
fn_8006292C = .text:0x8006292C; // type:function size:0x60
fn_8006298C = .text:0x8006298C; // type:function size:0xCC
fn_80062A58 = .text:0x80062A58; // type:function size:0x1C4
fn_80062C1C = .text:0x80062C1C; // type:function size:0x210
fn_80062E2C = .text:0x80062E2C; // type:function size:0x164
fn_80062F90 = .text:0x80062F90; // type:function size:0x14
fn_80062FA4 = .text:0x80062FA4; // type:function size:0x178
fn_8006311C = .text:0x8006311C; // type:function size:0x6C
fn_80063188 = .text:0x80063188; // type:function size:0xC
fn_80063194 = .text:0x80063194; // type:function size:0xC0
fn_80063254 = .text:0x80063254; // type:function size:0x34
fn_80063288 = .text:0x80063288; // type:function size:0x20
fn_800632A8 = .text:0x800632A8; // type:function size:0x20
fn_800632C8 = .text:0x800632C8; // type:function size:0x3C
fn_80063304 = .text:0x80063304; // type:function size:0x40
fn_80063344 = .text:0x80063344; // type:function size:0x40
fn_80063384 = .text:0x80063384; // type:function size:0x64
fn_800633E8 = .text:0x800633E8; // type:function size:0x100
fn_800634E8 = .text:0x800634E8; // type:function size:0x100
fn_800635E8 = .text:0x800635E8; // type:function size:0x100
fn_800636E8 = .text:0x800636E8; // type:function size:0x90
fn_80063778 = .text:0x80063778; // type:function size:0x40
fn_800637B8 = .text:0x800637B8; // type:function size:0x44
fn_800637FC = .text:0x800637FC; // type:function size:0x6C
fn_80063868 = .text:0x80063868; // type:function size:0xBC
fn_80063924 = .text:0x80063924; // type:function size:0x110
fn_80063A34 = .text:0x80063A34; // type:function size:0x240
fn_80063C74 = .text:0x80063C74; // type:function size:0x30
fn_80063CA4 = .text:0x80063CA4; // type:function size:0x8
fn_80063CAC = .text:0x80063CAC; // type:function size:0xD8
fn_80063D84 = .text:0x80063D84; // type:function size:0x18C
fn_80063F10 = .text:0x80063F10; // type:function size:0xA4
fn_80063FB4 = .text:0x80063FB4; // type:function size:0x78
fn_8006402C = .text:0x8006402C; // type:function size:0x248
fn_80064274 = .text:0x80064274; // type:function size:0x4C
fn_800642C0 = .text:0x800642C0; // type:function size:0x4C
fn_8006430C = .text:0x8006430C; // type:function size:0xB8
fn_800643C4 = .text:0x800643C4; // type:function size:0x130
fn_800644F4 = .text:0x800644F4; // type:function size:0x94
fn_80064588 = .text:0x80064588; // type:function size:0xE8
fn_80064670 = .text:0x80064670; // type:function size:0x5C
fn_800646CC = .text:0x800646CC; // type:function size:0x14
fn_800646E0 = .text:0x800646E0; // type:function size:0xC
fn_800646EC = .text:0x800646EC; // type:function size:0x8
fn_800646F4 = .text:0x800646F4; // type:function size:0x40
fn_80064734 = .text:0x80064734; // type:function size:0x128
fn_8006485C = .text:0x8006485C; // type:function size:0x48
fn_800648A4 = .text:0x800648A4; // type:function size:0x54
fn_800648F8 = .text:0x800648F8; // type:function size:0x4
fn_800648FC = .text:0x800648FC; // type:function size:0x18
fn_80064914 = .text:0x80064914; // type:function size:0x8
fn_8006491C = .text:0x8006491C; // type:function size:0x8
fn_80064924 = .text:0x80064924; // type:function size:0x8
fn_8006492C = .text:0x8006492C; // type:function size:0x10C
fn_80064A38 = .text:0x80064A38; // type:function size:0x1AC
fn_80064BE4 = .text:0x80064BE4; // type:function size:0x15C
fn_80064D40 = .text:0x80064D40; // type:function size:0x1B4
fn_80064EF4 = .text:0x80064EF4; // type:function size:0x5C
fn_80064F50 = .text:0x80064F50; // type:function size:0x2C
fn_80064F7C = .text:0x80064F7C; // type:function size:0xC
fn_80064F88 = .text:0x80064F88; // type:function size:0x8
fn_80064F90 = .text:0x80064F90; // type:function size:0x50
fn_80064FE0 = .text:0x80064FE0; // type:function size:0x190
fn_80065170 = .text:0x80065170; // type:function size:0x48
fn_800651B8 = .text:0x800651B8; // type:function size:0x60
fn_80065218 = .text:0x80065218; // type:function size:0x4
fn_8006521C = .text:0x8006521C; // type:function size:0x48
fn_80065264 = .text:0x80065264; // type:function size:0x54
fn_800652B8 = .text:0x800652B8; // type:function size:0x214
fn_800654CC = .text:0x800654CC; // type:function size:0x64
fn_80065530 = .text:0x80065530; // type:function size:0x114
fn_80065644 = .text:0x80065644; // type:function size:0xA8
fn_800656EC = .text:0x800656EC; // type:function size:0x98
fn_80065784 = .text:0x80065784; // type:function size:0x90
fn_80065814 = .text:0x80065814; // type:function size:0x90
fn_800658A4 = .text:0x800658A4; // type:function size:0x90
fn_80065934 = .text:0x80065934; // type:function size:0x90
fn_800659C4 = .text:0x800659C4; // type:function size:0x10
fn_800659D4 = .text:0x800659D4; // type:function size:0x10
fn_800659E4 = .text:0x800659E4; // type:function size:0xF0
fn_80065AD4 = .text:0x80065AD4; // type:function size:0x44
fn_80065B18 = .text:0x80065B18; // type:function size:0x104
fn_80065C1C = .text:0x80065C1C; // type:function size:0x1B4
fn_80065DD0 = .text:0x80065DD0; // type:function size:0x148
fn_80065F18 = .text:0x80065F18; // type:function size:0x17C
fn_80066094 = .text:0x80066094; // type:function size:0x58
fn_800660EC = .text:0x800660EC; // type:function size:0xD8
fn_800661C4 = .text:0x800661C4; // type:function size:0x90
fn_80066254 = .text:0x80066254; // type:function size:0x90
fn_800662E4 = .text:0x800662E4; // type:function size:0x90
fn_80066374 = .text:0x80066374; // type:function size:0x90
fn_80066404 = .text:0x80066404; // type:function size:0x68
fn_8006646C = .text:0x8006646C; // type:function size:0x68
fn_800664D4 = .text:0x800664D4; // type:function size:0x68
fn_8006653C = .text:0x8006653C; // type:function size:0x68
fn_800665A4 = .text:0x800665A4; // type:function size:0x90
fn_80066634 = .text:0x80066634; // type:function size:0x68
fn_8006669C = .text:0x8006669C; // type:function size:0x60
fn_800666FC = .text:0x800666FC; // type:function size:0x98
fn_80066794 = .text:0x80066794; // type:function size:0x60
fn_800667F4 = .text:0x800667F4; // type:function size:0x64
fn_80066858 = .text:0x80066858; // type:function size:0x70
fn_800668C8 = .text:0x800668C8; // type:function size:0x288
fn_80066B50 = .text:0x80066B50; // type:function size:0x60
fn_80066BB0 = .text:0x80066BB0; // type:function size:0xF4
fn_80066CA4 = .text:0x80066CA4; // type:function size:0x98
fn_80066D3C = .text:0x80066D3C; // type:function size:0x230
fn_80066F6C = .text:0x80066F6C; // type:function size:0x10C
fn_80067078 = .text:0x80067078; // type:function size:0x14
fn_8006708C = .text:0x8006708C; // type:function size:0xC
fn_80067098 = .text:0x80067098; // type:function size:0x14
fn_800670AC = .text:0x800670AC; // type:function size:0x58
fn_80067104 = .text:0x80067104; // type:function size:0x14
fn_80067118 = .text:0x80067118; // type:function size:0x20
fn_80067138 = .text:0x80067138; // type:function size:0x20
fn_80067158 = .text:0x80067158; // type:function size:0x10
fn_80067168 = .text:0x80067168; // type:function size:0x8
fn_80067170 = .text:0x80067170; // type:function size:0x8
fn_80067178 = .text:0x80067178; // type:function size:0x10
fn_80067188 = .text:0x80067188; // type:function size:0xB4
fn_8006723C = .text:0x8006723C; // type:function size:0xAC
fn_800672E8 = .text:0x800672E8; // type:function size:0x154
fn_8006743C = .text:0x8006743C; // type:function size:0x10
fn_8006744C = .text:0x8006744C; // type:function size:0x5C
fn_800674A8 = .text:0x800674A8; // type:function size:0x338
fn_800677E0 = .text:0x800677E0; // type:function size:0xCC
fn_800678AC = .text:0x800678AC; // type:function size:0xDC
fn_80067988 = .text:0x80067988; // type:function size:0x178
fn_80067B00 = .text:0x80067B00; // type:function size:0x58
fn_80067B58 = .text:0x80067B58; // type:function size:0x5C
fn_80067BB4 = .text:0x80067BB4; // type:function size:0x1A0
fn_80067D54 = .text:0x80067D54; // type:function size:0x200
fn_80067F54 = .text:0x80067F54; // type:function size:0xD0
fn_80068024 = .text:0x80068024; // type:function size:0x6EC
fn_80068710 = .text:0x80068710; // type:function size:0x94
fn_800687A4 = .text:0x800687A4; // type:function size:0x120
fn_800688C4 = .text:0x800688C4; // type:function size:0x74
fn_80068938 = .text:0x80068938; // type:function size:0x20
fn_80068958 = .text:0x80068958; // type:function size:0x18
fn_80068970 = .text:0x80068970; // type:function size:0x18
fn_80068988 = .text:0x80068988; // type:function size:0x14
fn_8006899C = .text:0x8006899C; // type:function size:0x108
fn_80068AA4 = .text:0x80068AA4; // type:function size:0x16C
fn_80068C10 = .text:0x80068C10; // type:function size:0x178
fn_80068D88 = .text:0x80068D88; // type:function size:0x16C
fn_80068EF4 = .text:0x80068EF4; // type:function size:0x154
fn_80069048 = .text:0x80069048; // type:function size:0x108
fn_80069150 = .text:0x80069150; // type:function size:0xAC
fn_800691FC = .text:0x800691FC; // type:function size:0x138
fn_80069334 = .text:0x80069334; // type:function size:0xB0
fn_800693E4 = .text:0x800693E4; // type:function size:0xF8
fn_800694DC = .text:0x800694DC; // type:function size:0x168
fn_80069644 = .text:0x80069644; // type:function size:0xB0
fn_800696F4 = .text:0x800696F4; // type:function size:0x134
fn_80069828 = .text:0x80069828; // type:function size:0x48
fn_80069870 = .text:0x80069870; // type:function size:0x18
fn_80069888 = .text:0x80069888; // type:function size:0x60
fn_800698E8 = .text:0x800698E8; // type:function size:0x7C
fn_80069964 = .text:0x80069964; // type:function size:0xC0
fn_80069A24 = .text:0x80069A24; // type:function size:0x9C
fn_80069AC0 = .text:0x80069AC0; // type:function size:0x134
fn_80069BF4 = .text:0x80069BF4; // type:function size:0x30
fn_80069C24 = .text:0x80069C24; // type:function size:0x28
fn_80069C4C = .text:0x80069C4C; // type:function size:0x34
fn_80069C80 = .text:0x80069C80; // type:function size:0x54
fn_80069CD4 = .text:0x80069CD4; // type:function size:0x20
fn_80069CF4 = .text:0x80069CF4; // type:function size:0x44
fn_80069D38 = .text:0x80069D38; // type:function size:0x5BC
fn_8006A2F4 = .text:0x8006A2F4; // type:function size:0xAC
fn_8006A3A0 = .text:0x8006A3A0; // type:function size:0x1F0
fn_8006A590 = .text:0x8006A590; // type:function size:0x28
fn_8006A5B8 = .text:0x8006A5B8; // type:function size:0x88
fn_8006A640 = .text:0x8006A640; // type:function size:0x20
fn_8006A660 = .text:0x8006A660; // type:function size:0x44
fn_8006A6A4 = .text:0x8006A6A4; // type:function size:0x2A8
fn_8006A94C = .text:0x8006A94C; // type:function size:0x610
fn_8006AF5C = .text:0x8006AF5C; // type:function size:0x124
fn_8006B080 = .text:0x8006B080; // type:function size:0xA0
fn_8006B120 = .text:0x8006B120; // type:function size:0x790
fn_8006B8B0 = .text:0x8006B8B0; // type:function size:0x2B4
fn_8006BB64 = .text:0x8006BB64; // type:function size:0x240
fn_8006BDA4 = .text:0x8006BDA4; // type:function size:0xAC
fn_8006BE50 = .text:0x8006BE50; // type:function size:0x144
fn_8006BF94 = .text:0x8006BF94; // type:function size:0x1D0
fn_8006C164 = .text:0x8006C164; // type:function size:0xC0
fn_8006C224 = .text:0x8006C224; // type:function size:0x28
fn_8006C24C = .text:0x8006C24C; // type:function size:0x70
fn_8006C2BC = .text:0x8006C2BC; // type:function size:0xBC
fn_8006C378 = .text:0x8006C378; // type:function size:0x70
fn_8006C3E8 = .text:0x8006C3E8; // type:function size:0xBC
fn_8006C4A4 = .text:0x8006C4A4; // type:function size:0xD0
fn_8006C574 = .text:0x8006C574; // type:function size:0x20C
fn_8006C780 = .text:0x8006C780; // type:function size:0x300
fn_8006CA80 = .text:0x8006CA80; // type:function size:0x8C
fn_8006CB0C = .text:0x8006CB0C; // type:function size:0x1A4
fn_8006CCB0 = .text:0x8006CCB0; // type:function size:0xE0
fn_8006CD90 = .text:0x8006CD90; // type:function size:0x9C
fn_8006CE2C = .text:0x8006CE2C; // type:function size:0x50
fn_8006CE7C = .text:0x8006CE7C; // type:function size:0x1C
fn_8006CE98 = .text:0x8006CE98; // type:function size:0x198
fn_8006D030 = .text:0x8006D030; // type:function size:0x2C0
fn_8006D2F0 = .text:0x8006D2F0; // type:function size:0x240
fn_8006D530 = .text:0x8006D530; // type:function size:0xDC
fn_8006D60C = .text:0x8006D60C; // type:function size:0xF0
fn_8006D6FC = .text:0x8006D6FC; // type:function size:0x98
fn_8006D794 = .text:0x8006D794; // type:function size:0xDC
fn_8006D870 = .text:0x8006D870; // type:function size:0x44
fn_8006D8B4 = .text:0x8006D8B4; // type:function size:0x6C
fn_8006D920 = .text:0x8006D920; // type:function size:0x6C
fn_8006D98C = .text:0x8006D98C; // type:function size:0xB8
fn_8006DA44 = .text:0x8006DA44; // type:function size:0x190
fn_8006DBD4 = .text:0x8006DBD4; // type:function size:0x60
fn_8006DC34 = .text:0x8006DC34; // type:function size:0x1B0
fn_8006DDE4 = .text:0x8006DDE4; // type:function size:0x1B8
fn_8006DF9C = .text:0x8006DF9C; // type:function size:0xB8
fn_8006E054 = .text:0x8006E054; // type:function size:0x28
fn_8006E07C = .text:0x8006E07C; // type:function size:0x98
fn_8006E114 = .text:0x8006E114; // type:function size:0xF4
fn_8006E208 = .text:0x8006E208; // type:function size:0x74
fn_8006E27C = .text:0x8006E27C; // type:function size:0x1C
fn_8006E298 = .text:0x8006E298; // type:function size:0x90
fn_8006E328 = .text:0x8006E328; // type:function size:0x164
fn_8006E48C = .text:0x8006E48C; // type:function size:0x598
_ctors = .ctors:0x8006EA40; // type:label scope:global data:4byte
_dtors = .dtors:0x8006EA60; // type:label scope:global data:4byte
__destroy_global_chain_reference = .dtors:0x8006EA60; // type:object size:0x4 scope:global
__constants = .rodata:0x8006EA80; // type:object size:0x18 data:double
lbl_8006EA98 = .rodata:0x8006EA98; // type:object size:0x36 data:string
lbl_8006EAD0 = .rodata:0x8006EAD0; // type:object size:0x39 data:string
fix_pool_sizes = .rodata:0x8006EB10; // type:object size:0x18 data:4byte
@stringBase0 = .rodata:0x8006EB28; // type:object size:0xDD scope:local data:string_table
@stringBase0 = .rodata:0x8006EC08; // type:object size:0x5 scope:local data:string_table
@stringBase0 = .rodata:0x8006EC10; // type:object size:0x25 scope:local data:string_table
lbl_8006EC38 = .rodata:0x8006EC38; // type:object size:0x28 data:4byte
lbl_8006EC60 = .rodata:0x8006EC60; // type:object size:0x2A
lbl_8006EC8C = .rodata:0x8006EC8C; // type:object size:0x9 data:string
bp = .rodata:0x8006EC98; // type:object size:0x10 data:double
dp_h = .rodata:0x8006ECA8; // type:object size:0x10 data:double
dp_l = .rodata:0x8006ECB8; // type:object size:0x10 data:double
two_over_pi = .rodata:0x8006ECC8; // type:object size:0x108
npio2_hw = .rodata:0x8006EDD0; // type:object size:0x80 data:float
init_jk = .rodata:0x8006EE50; // type:object size:0x10
PIo2 = .rodata:0x8006EE60; // type:object size:0x40 data:double
T = .rodata:0x8006EEA0; // type:object size:0x68 data:double
atanhi = .rodata:0x8006EF08; // type:object size:0x20 data:double
atanlo = .rodata:0x8006EF28; // type:object size:0x20 data:double
aT = .rodata:0x8006EF48; // type:object size:0x58 data:double
@62 = .rodata:0x8006EFA0; // type:object size:0x1C scope:local data:string
lbl_8006EFC0 = .rodata:0x8006EFC0; // type:object size:0x1D data:string
gTRKMemMap = .rodata:0x8006EFE0; // type:object size:0x10 data:4byte
lbl_8006EFF0 = .rodata:0x8006EFF0; // type:object size:0x28 data:4byte
lbl_8006F018 = .rodata:0x8006F018; // type:object size:0x28 data:4byte
lbl_8006F040 = .rodata:0x8006F040; // type:object size:0x28 data:4byte
@154 = .rodata:0x8006F068; // type:object size:0x21 scope:local data:string
@155 = .rodata:0x8006F08C; // type:object size:0x24 scope:local data:string
lbl_8006F0B0 = .rodata:0x8006F0B0; // type:object size:0x10
lbl_8006F0C0 = .rodata:0x8006F0C0; // type:object size:0x10 data:4byte
lbl_8006F0D0 = .rodata:0x8006F0D0; // type:object size:0x30 data:4byte
lbl_8006F100 = .rodata:0x8006F100; // type:object size:0x20
lbl_8006F120 = .rodata:0x8006F120; // type:object size:0x10
lbl_8006F130 = .rodata:0x8006F130; // type:object size:0x10
lbl_8006F140 = .rodata:0x8006F140; // type:object size:0x20
lbl_8006F160 = .rodata:0x8006F160; // type:object size:0x30
lbl_8006F190 = .rodata:0x8006F190; // type:object size:0x8 data:4byte
lbl_8006F198 = .rodata:0x8006F198; // type:object size:0x20
lbl_8006F1B8 = .rodata:0x8006F1B8; // type:object size:0x28
lbl_8006F1E0 = .rodata:0x8006F1E0; // type:object size:0x8
lbl_8006F1E8 = .rodata:0x8006F1E8; // type:object size:0x8
lbl_8006F1F0 = .rodata:0x8006F1F0; // type:object size:0x8
lbl_8006F1F8 = .rodata:0x8006F1F8; // type:object size:0x8
lbl_8006F200 = .rodata:0x8006F200; // type:object size:0x8
lbl_8006F208 = .rodata:0x8006F208; // type:object size:0x8
lbl_8006F210 = .rodata:0x8006F210; // type:object size:0x8
lbl_8006F218 = .rodata:0x8006F218; // type:object size:0x8
lbl_8006F220 = .rodata:0x8006F220; // type:object size:0x888
lbl_8006FAA8 = .rodata:0x8006FAA8; // type:object size:0x8
lbl_8006FAB0 = .rodata:0x8006FAB0; // type:object size:0x8
lbl_8006FAB8 = .rodata:0x8006FAB8; // type:object size:0x4 data:float
lbl_8006FAC0 = .rodata:0x8006FAC0; // type:object size:0x8 data:double
lbl_8006FAC8 = .rodata:0x8006FAC8; // type:object size:0x8 data:double
lbl_8006FAD0 = .rodata:0x8006FAD0; // type:object size:0x8 data:double
lbl_8006FAD8 = .rodata:0x8006FAD8; // type:object size:0x4 data:float
lbl_8006FADC = .rodata:0x8006FADC; // type:object size:0x4 data:float
lbl_8006FAE0 = .rodata:0x8006FAE0; // type:object size:0x4 data:float
lbl_8006FAE4 = .rodata:0x8006FAE4; // type:object size:0x4 data:float
lbl_8006FAE8 = .rodata:0x8006FAE8; // type:object size:0x8 data:double
lbl_8006FAF0 = .rodata:0x8006FAF0; // type:object size:0x8
lbl_8006FAF8 = .rodata:0x8006FAF8; // type:object size:0x8
lbl_8006FB00 = .rodata:0x8006FB00; // type:object size:0x8 data:double
lbl_8006FB08 = .rodata:0x8006FB08; // type:object size:0x8 data:double
lbl_8006FB10 = .rodata:0x8006FB10; // type:object size:0x30
lbl_8006FB40 = .rodata:0x8006FB40; // type:object size:0x60
lbl_8006FBA0 = .rodata:0x8006FBA0; // type:object size:0x38 data:double
lbl_8006FBD8 = .rodata:0x8006FBD8; // type:object size:0x114
lbl_8006FCEC = .rodata:0x8006FCEC; // type:object size:0x30
lbl_8006FD1C = .rodata:0x8006FD1C; // type:object size:0xC4
lbl_8006FDE0 = .rodata:0x8006FDE0; // type:object size:0x28 data:string
lbl_8006FE08 = .rodata:0x8006FE08; // type:object size:0x2C
lbl_8006FE34 = .rodata:0x8006FE34; // type:object size:0x8C
lbl_8006FEC0 = .rodata:0x8006FEC0; // type:object size:0x60
lbl_8006FF20 = .rodata:0x8006FF20; // type:object size:0x2C
lbl_8006FF4C = .rodata:0x8006FF4C; // type:object size:0x2C
lbl_8006FF78 = .rodata:0x8006FF78; // type:object size:0x2C
lbl_8006FFA4 = .rodata:0x8006FFA4; // type:object size:0x2C
lbl_8006FFD0 = .rodata:0x8006FFD0; // type:object size:0x2C
lbl_8006FFFC = .rodata:0x8006FFFC; // type:object size:0x84
lbl_80070080 = .rodata:0x80070080; // type:object size:0x64
lbl_800700E4 = .rodata:0x800700E4; // type:object size:0x28
lbl_8007010C = .rodata:0x8007010C; // type:object size:0x28 data:string
lbl_80070134 = .rodata:0x80070134; // type:object size:0x28 data:string
lbl_8007015C = .rodata:0x8007015C; // type:object size:0x28
lbl_80070184 = .rodata:0x80070184; // type:object size:0x4 data:float
lbl_80070188 = .rodata:0x80070188; // type:object size:0x2C
lbl_800701B4 = .rodata:0x800701B4; // type:object size:0x2C
lbl_800701E0 = .rodata:0x800701E0; // type:object size:0x28
lbl_80070208 = .rodata:0x80070208; // type:object size:0x2C
lbl_80070234 = .rodata:0x80070234; // type:object size:0x40
lbl_80070274 = .rodata:0x80070274; // type:object size:0x2C
lbl_800702A0 = .rodata:0x800702A0; // type:object size:0x2C data:string
lbl_800702CC = .rodata:0x800702CC; // type:object size:0x4 data:4byte
lbl_800702D0 = .rodata:0x800702D0; // type:object size:0x38
lbl_80070308 = .rodata:0x80070308; // type:object size:0x48
lbl_80070350 = .rodata:0x80070350; // type:object size:0x40
lbl_80070390 = .rodata:0x80070390; // type:object size:0x10
lbl_800703A0 = .rodata:0x800703A0; // type:object size:0x30
lbl_800703D0 = .rodata:0x800703D0; // type:object size:0x8 data:4byte
lbl_800703D8 = .rodata:0x800703D8; // type:object size:0x2C data:string
lbl_80070404 = .rodata:0x80070404; // type:object size:0x24
lbl_80070428 = .rodata:0x80070428; // type:object size:0x11C
lbl_80070544 = .rodata:0x80070544; // type:object size:0x24 data:string
lbl_80070568 = .rodata:0x80070568; // type:object size:0x1FC
lbl_80070764 = .rodata:0x80070764; // type:object size:0x38
lbl_8007079C = .rodata:0x8007079C; // type:object size:0x1EC
lbl_80070988 = .rodata:0x80070988; // type:object size:0x8B8
lbl_80071240 = .rodata:0x80071240; // type:object size:0x1C data:string
lbl_8007125C = .rodata:0x8007125C; // type:object size:0x88
lbl_800712E4 = .rodata:0x800712E4; // type:object size:0x1C
lbl_80071300 = .rodata:0x80071300; // type:object size:0x18 data:string
lbl_80071318 = .rodata:0x80071318; // type:object size:0x1C
lbl_80071334 = .rodata:0x80071334; // type:object size:0x18
lbl_8007134C = .rodata:0x8007134C; // type:object size:0x1C
lbl_80071368 = .rodata:0x80071368; // type:object size:0x18
lbl_80071380 = .rodata:0x80071380; // type:object size:0x1C
lbl_8007139C = .rodata:0x8007139C; // type:object size:0xCC
lbl_80071468 = .rodata:0x80071468; // type:object size:0x28
lbl_80071490 = .rodata:0x80071490; // type:object size:0xB8
lbl_80071548 = .rodata:0x80071548; // type:object size:0x2C
lbl_80071574 = .rodata:0x80071574; // type:object size:0x18 data:string
lbl_8007158C = .rodata:0x8007158C; // type:object size:0x18 data:string
lbl_800715A4 = .rodata:0x800715A4; // type:object size:0x1C
lbl_800715C0 = .rodata:0x800715C0; // type:object size:0x1C0
lbl_80071780 = .rodata:0x80071780; // type:object size:0x24
lbl_800717A4 = .rodata:0x800717A4; // type:object size:0x24
lbl_800717C8 = .rodata:0x800717C8; // type:object size:0x24
lbl_800717EC = .rodata:0x800717EC; // type:object size:0x20 data:string
lbl_8007180C = .rodata:0x8007180C; // type:object size:0x24
lbl_80071830 = .rodata:0x80071830; // type:object size:0x2C
lbl_8007185C = .rodata:0x8007185C; // type:object size:0x2C
lbl_80071888 = .rodata:0x80071888; // type:object size:0x30
lbl_800718B8 = .rodata:0x800718B8; // type:object size:0x8 data:4byte
lbl_800718C0 = .rodata:0x800718C0; // type:object size:0x18
lbl_800718D8 = .rodata:0x800718D8; // type:object size:0x10
lbl_800718E8 = .rodata:0x800718E8; // type:object size:0x2C data:string
lbl_80071914 = .rodata:0x80071914; // type:object size:0x4 data:4byte
lbl_80071918 = .rodata:0x80071918; // type:object size:0x10
lbl_80071928 = .rodata:0x80071928; // type:object size:0x34
lbl_8007195C = .rodata:0x8007195C; // type:object size:0x120
lbl_80071A7C = .rodata:0x80071A7C; // type:object size:0x20 data:string
lbl_80071A9C = .rodata:0x80071A9C; // type:object size:0x34
lbl_80071AD0 = .rodata:0x80071AD0; // type:object size:0x30
lbl_80071B00 = .rodata:0x80071B00; // type:object size:0x90 data:4byte
lbl_80071B90 = .rodata:0x80071B90; // type:object size:0x40
lbl_80071BD0 = .rodata:0x80071BD0; // type:object size:0x3C
lbl_80071C0C = .rodata:0x80071C0C; // type:object size:0x18 data:string
lbl_80071C24 = .rodata:0x80071C24; // type:object size:0x18 data:string
lbl_80071C3C = .rodata:0x80071C3C; // type:object size:0x78
lbl_80071CB4 = .rodata:0x80071CB4; // type:object size:0x1C
lbl_80071CD0 = .rodata:0x80071CD0; // type:object size:0x98
lbl_80071D68 = .rodata:0x80071D68; // type:object size:0x2C data:string
lbl_80071D94 = .rodata:0x80071D94; // type:object size:0x4 data:4byte
lbl_80071D98 = .rodata:0x80071D98; // type:object size:0x4 data:string
lbl_80071D9C = .rodata:0x80071D9C; // type:object size:0xC
lbl_80071DA8 = .rodata:0x80071DA8; // type:object size:0x1B8
lbl_80071F60 = .rodata:0x80071F60; // type:object size:0x24 data:string
lbl_80071F84 = .rodata:0x80071F84; // type:object size:0x2C
lbl_80071FB0 = .rodata:0x80071FB0; // type:object size:0x24
lbl_80071FD4 = .rodata:0x80071FD4; // type:object size:0x10 data:string
lbl_80071FE4 = .rodata:0x80071FE4; // type:object size:0x2C
lbl_80072010 = .rodata:0x80072010; // type:object size:0x40 data:string
lbl_80072050 = .rodata:0x80072050; // type:object size:0x40
lbl_80072090 = .rodata:0x80072090; // type:object size:0x38
lbl_800720C8 = .rodata:0x800720C8; // type:object size:0x18
lbl_800720E0 = .rodata:0x800720E0; // type:object size:0x30
lbl_80072110 = .rodata:0x80072110; // type:object size:0x1A data:string
lbl_80072140 = .data:0x80072140; // type:object size:0x10
lbl_80072150 = .data:0x80072150; // type:object size:0x194
jumptable_800722E4 = .data:0x800722E4; // type:object size:0x34 scope:local
__files = .data:0x80072318; // type:object size:0x140 scope:global
pow_10$415 = .data:0x80072458; // type:object size:0x40 data:double
jumptable_80072498 = .data:0x80072498; // type:object size:0x124 scope:local
__ctype_map = .data:0x800725C0; // type:object size:0x100
__lower_map = .data:0x800726C0; // type:object size:0x100
__upper_map = .data:0x800727C0; // type:object size:0x100
__lconv = .data:0x800728C0; // type:object size:0x38 data:4byte
@1249 = .data:0x800728F8; // type:object size:0x84 scope:local
jumptable_8007297C = .data:0x8007297C; // type:object size:0x84 scope:local
jumptable_80072A00 = .data:0x80072A00; // type:object size:0xE0 scope:local
jumptable_80072AE0 = .data:0x80072AE0; // type:object size:0x44 scope:local
jumptable_80072B28 = .data:0x80072B28; // type:object size:0xD0 scope:local
jumptable_80072BF8 = .data:0x80072BF8; // type:object size:0x44 scope:local
jumptable_80072C3C = .data:0x80072C3C; // type:object size:0x44 scope:local
gTRKDispatchTable = .data:0x80072C80; // type:object size:0x84
jumptable_80072D08 = .data:0x80072D08; // type:object size:0x1C scope:local
jumptable_80072D24 = .data:0x80072D24; // type:object size:0x1C scope:local
gTRKRestoreFlags = .data:0x80072D40; // type:object size:0x9 scope:global data:byte
gTRKExceptionStatus = .data:0x80072D4C; // type:object size:0x10 scope:local data:4byte
gTRKStepStatus = .data:0x80072D5C; // type:object size:0x14 data:4byte
TRK_ISR_OFFSETS = .data:0x80072D70; // type:object size:0x3C data:4byte
gDBCommTable = .data:0x80072DB0; // type:object size:0x1C scope:global data:4byte
lbl_80072DD0 = .data:0x80072DD0; // type:object size:0x44 data:string
lbl_80072E18 = .data:0x80072E18; // type:object size:0x44 data:string
lbl_80072E60 = .data:0x80072E60; // type:object size:0x45 data:string
lbl_80072EA8 = .data:0x80072EA8; // type:object size:0x44 data:string
__AXSrcCycles = .data:0x80072EF0; // type:object size:0x14
__AXMainMixCycles = .data:0x80072F04; // type:object size:0x40
__AXAuxMixCycles = .data:0x80072F44; // type:object size:0x80
__AXCompressorTable = .data:0x80072FE0; // type:object size:0x1A40
axDspSlave = .data:0x80074A20; // type:object size:0x1F20
lens$108 = .data:0x80076940; // type:object size:0x20 scope:local data:4byte
lens$108 = .data:0x80076960; // type:object size:0x10 scope:local data:4byte
rsmpTab12khz = .data:0x80076970; // type:object size:0x800
lbl_80077170 = .data:0x80077170; // type:object size:0x46 data:string
ResetFunctionInfo = .data:0x800771B8; // type:object size:0x10
CardData = .data:0x800771E0; // type:object size:0x160
SectorSizeTable = .data:0x80077340; // type:object size:0x20
LatencyTable = .data:0x80077360; // type:object size:0x20
lbl_80077380 = .data:0x80077380; // type:object size:0x18 data:string
lbl_80077398 = .data:0x80077398; // type:object size:0x45 data:string
lbl_800773E0 = .data:0x800773E0; // type:object size:0x1E data:string
lbl_80077400 = .data:0x80077400; // type:object size:0xC data:string
lbl_8007740C = .data:0x8007740C; // type:object size:0x9 data:string
lbl_80077418 = .data:0x80077418; // type:object size:0x1D data:string
lbl_80077558 = .data:0x80077558; // type:object size:0xC8 data:string
lbl_80077620 = .data:0x80077620; // type:object size:0x37 data:string
lbl_80077658 = .data:0x80077658; // type:object size:0x34 data:string
lbl_8007768C = .data:0x8007768C; // type:object size:0x2F data:string
lbl_800776C0 = .data:0x800776C0; // type:object size:0x45 data:string
@18 = .data:0x80077708; // type:object size:0xA scope:local data:string
lbl_80077714 = .data:0x80077714; // type:object size:0x34 data:string
jumptable_80077748 = .data:0x80077748; // type:object size:0x40 scope:local
ImmCommand = .data:0x80077788; // type:object size:0xC data:4byte
lbl_80077794 = .data:0x80077794; // type:object size:0x41 data:string
jumptable_800777D8 = .data:0x800777D8; // type:object size:0x34 scope:local
jumptable_8007780C = .data:0x8007780C; // type:object size:0x34 scope:local
ErrorTable = .data:0x80077840; // type:object size:0x48 data:4byte
@36 = .data:0x80077888; // type:object size:0x1A scope:local data:string
lbl_800778A4 = .data:0x800778A4; // type:object size:0x16 scope:local data:string
lbl_800778BC = .data:0x800778BC; // type:object size:0x14 scope:local data:string
lbl_800778D0 = .data:0x800778D0; // type:object size:0x14 scope:local data:string
lbl_800778E4 = .data:0x800778E4; // type:object size:0x14 scope:local data:string
lbl_800778F8 = .data:0x800778F8; // type:object size:0x45 data:string
lbl_80077940 = .data:0x80077940; // type:object size:0xF data:string
lbl_80077950 = .data:0x80077950; // type:object size:0x10 data:string
lbl_80077960 = .data:0x80077960; // type:object size:0x10 data:string
lbl_80077970 = .data:0x80077970; // type:object size:0x10 data:string
lbl_80077980 = .data:0x80077980; // type:object size:0x11 data:string
lbl_80077994 = .data:0x80077994; // type:object size:0x11 data:string
lbl_800779A8 = .data:0x800779A8; // type:object size:0xC data:string
lbl_800779B4 = .data:0x800779B4; // type:object size:0x9 data:string
lbl_800779C0 = .data:0x800779C0; // type:object size:0xD data:string
lbl_800779D0 = .data:0x800779D0; // type:object size:0x12 data:string
lbl_800779E4 = .data:0x800779E4; // type:object size:0xE data:string
lbl_800779F4 = .data:0x800779F4; // type:object size:0xE data:string
lbl_80077A08 = .data:0x80077A08; // type:object size:0x44 data:string
lbl_80077A4C = .data:0x80077A4C; // type:object size:0xD0
lbl_80077B1C = .data:0x80077B1C; // type:object size:0x1C
GXResetFuncInfo = .data:0x80077B38; // type:object size:0x10 scope:local
jumptable_80077B48 = .data:0x80077B48; // type:object size:0x68 scope:local
jumptable_80077BB0 = .data:0x80077BB0; // type:object size:0x44 scope:local
jumptable_80077BF4 = .data:0x80077BF4; // type:object size:0x44 scope:local
jumptable_80077C38 = .data:0x80077C38; // type:object size:0x1C scope:local
jumptable_80077C54 = .data:0x80077C54; // type:object size:0x54 scope:local
lbl_80077CA8 = .data:0x80077CA8; // type:object size:0x3C
lbl_80077CE4 = .data:0x80077CE4; // type:object size:0x3C
lbl_80077D20 = .data:0x80077D20; // type:object size:0x3C
lbl_80077D5C = .data:0x80077D5C; // type:object size:0x3C
lbl_80077D98 = .data:0x80077D98; // type:object size:0x40
jumptable_80077DD8 = .data:0x80077DD8; // type:object size:0xF4 scope:local
jumptable_80077ECC = .data:0x80077ECC; // type:object size:0xF4 scope:local
jumptable_80077FC0 = .data:0x80077FC0; // type:object size:0x3C scope:local
lbl_80078000 = .data:0x80078000; // type:object size:0x50
lbl_80078050 = .data:0x80078050; // type:object size:0x28
lbl_80078078 = .data:0x80078078; // type:object size:0x20
jumptable_80078098 = .data:0x80078098; // type:object size:0x5C scope:local
jumptable_800780F4 = .data:0x800780F4; // type:object size:0x90 scope:local
lbl_80078188 = .data:0x80078188; // type:object size:0xBC0
@1 = .data:0x80078D48; // type:object size:0x44 scope:local data:string
DSPInitCode = .data:0x80078F40; // type:object size:0x80 scope:local
@69 = .data:0x80078FC0; // type:object size:0x29 scope:local data:string
lbl_800791F0 = .data:0x800791F0; // type:object size:0x1B4
@74 = .data:0x800793A4; // type:object size:0x23 scope:local data:string
@13 = .data:0x800793C8; // type:object size:0x16 scope:local data:string
@87 = .data:0x800796A4; // type:object size:0x40 scope:local
lbl_800796E8 = .data:0x800796E8; // type:object size:0x180
lbl_80079868 = .data:0x80079868; // type:object size:0x990
lbl_8007A1F8 = .data:0x8007A1F8; // type:object size:0x30 data:4byte
lbl_8007A228 = .data:0x8007A228; // type:object size:0x28
lbl_8007A250 = .data:0x8007A250; // type:object size:0x28
ResetFunctionInfo = .data:0x8007A278; // type:object size:0x10 scope:local
lbl_8007A288 = .data:0x8007A288; // type:object size:0x48
lbl_8007A2D0 = .data:0x8007A2D0; // type:object size:0x10
lbl_8007A2E0 = .data:0x8007A2E0; // type:object size:0x44 data:string
Si = .data:0x8007A324; // type:object size:0x14 scope:local data:4byte
Type = .data:0x8007A338; // type:object size:0x10 scope:local
XYNTSC = .data:0x8007A3F8; // type:object size:0x30 scope:local
lbl_8007A490 = .data:0x8007A490; // type:object size:0x1F4
jumptable_8007A684 = .data:0x8007A684; // type:object size:0x6C scope:local
@724 = .data:0x8007A844; // type:object size:0x1C scope:local
lbl_8007A860 = .data:0x8007A860; // type:object size:0x18
lbl_8007A878 = .data:0x8007A878; // type:object size:0xC
lbl_8007A884 = .data:0x8007A884; // type:object size:0xC
lbl_8007A890 = .data:0x8007A890; // type:object size:0x10 data:4byte
lbl_8007A8A0 = .data:0x8007A8A0; // type:object size:0x10 data:string
jumptable_8007A8B0 = .data:0x8007A8B0; // type:object size:0x28 scope:local
lbl_8007A8D8 = .data:0x8007A8D8; // type:object size:0x20
lbl_8007A8F8 = .data:0x8007A8F8; // type:object size:0x28
lbl_8007A920 = .data:0x8007A920; // type:object size:0x28
lbl_8007A948 = .data:0x8007A948; // type:object size:0x18
lbl_8007A960 = .data:0x8007A960; // type:object size:0xC
lbl_8007A96C = .data:0x8007A96C; // type:object size:0x2C
lbl_8007A998 = .data:0x8007A998; // type:object size:0x2C data:string
lbl_8007A9C4 = .data:0x8007A9C4; // type:object size:0x38
lbl_8007A9FC = .data:0x8007A9FC; // type:object size:0x2C data:string
lbl_8007AA28 = .data:0x8007AA28; // type:object size:0x38
lbl_8007AA60 = .data:0x8007AA60; // type:object size:0x30 data:string
lbl_8007AA90 = .data:0x8007AA90; // type:object size:0x10
lbl_8007AAA0 = .data:0x8007AAA0; // type:object size:0x20
lbl_8007AAC0 = .data:0x8007AAC0; // type:object size:0x20
lbl_8007AAE0 = .data:0x8007AAE0; // type:object size:0x8 data:4byte
lbl_8007AAE8 = .data:0x8007AAE8; // type:object size:0x4 data:4byte
lbl_8007AAEC = .data:0x8007AAEC; // type:object size:0x4 data:4byte
lbl_8007AAF0 = .data:0x8007AAF0; // type:object size:0x200
lbl_8007ACF0 = .data:0x8007ACF0; // type:object size:0x4 data:4byte
lbl_8007ACF4 = .data:0x8007ACF4; // type:object size:0x4 data:4byte
lbl_8007ACF8 = .data:0x8007ACF8; // type:object size:0x10 data:4byte
lbl_8007AD08 = .data:0x8007AD08; // type:object size:0x8 data:4byte
lbl_8007AD10 = .data:0x8007AD10; // type:object size:0x18 data:4byte
lbl_8007AD28 = .data:0x8007AD28; // type:object size:0x8 data:4byte
lbl_8007AD30 = .data:0x8007AD30; // type:object size:0x68
lbl_8007AD98 = .data:0x8007AD98; // type:object size:0x8 data:4byte
lbl_8007ADA0 = .data:0x8007ADA0; // type:object size:0x30
lbl_8007ADD0 = .data:0x8007ADD0; // type:object size:0x30
lbl_8007AE00 = .data:0x8007AE00; // type:object size:0x1C0
lbl_8007AFC0 = .data:0x8007AFC0; // type:object size:0x68
lbl_8007B028 = .data:0x8007B028; // type:object size:0x4 data:4byte
lbl_8007B02C = .data:0x8007B02C; // type:object size:0x7C data:4byte
lbl_8007B0A8 = .data:0x8007B0A8; // type:object size:0x2008
lbl_8007D0B0 = .data:0x8007D0B0; // type:object size:0x660
lbl_8007D720 = .bss:0x8007D720; // type:object size:0xC
lbl_8007D72C = .bss:0x8007D72C; // type:object size:0xB84
__atexit_funcs = .bss:0x8007E2B0; // type:object size:0x100 scope:local
protopool$192 = .bss:0x8007E3B0; // type:object size:0x38 data:4byte
stderr_buff = .bss:0x8007E3E8; // type:object size:0x100
stdout_buff = .bss:0x8007E4E8; // type:object size:0x100
stdin_buff = .bss:0x8007E5E8; // type:object size:0x100
gTRKEventQueue = .bss:0x8007E6E8; // type:object size:0x28
gTRKBigEndian = .bss:0x8007E710; // type:object size:0x4 scope:global data:4byte
gTRKMsgBufs = .bss:0x8007E718; // type:object size:0x19B0
gTRKInputPendingPtr = .bss:0x800800C8; // type:object size:0x4 scope:global data:4byte
gTRKFramingState = .bss:0x800800CC; // type:object size:0x14 data:4byte
gTRKDispatchTableSize = .bss:0x800800E0; // type:object size:0x4 data:4byte
IsTRKConnected = .bss:0x800800E8; // type:object size:0x4 data:4byte
TRK_saved_exceptionID = .bss:0x800800F0; // type:object size:0x2 scope:local data:2byte
gTRKState = .bss:0x800800F4; // type:object size:0xA4 scope:global data:4byte
gTRKCPUState = .bss:0x80080198; // type:object size:0x430 scope:global
gTRKSaveState = .bss:0x800805C8; // type:object size:0x94 scope:global data:4byte
TRKvalue128_temp = .bss:0x8008065C; // type:object size:0x10
lc_base = .bss:0x80080670; // type:object size:0x4 data:4byte
TRK_mainError = .bss:0x80080678; // type:object size:0x4 scope:local data:4byte
gWritePos = .bss:0x80080680; // type:object size:0x4 data:4byte
gReadPos = .bss:0x80080684; // type:object size:0x4 data:4byte
gReadCount = .bss:0x80080688; // type:object size:0x4 data:4byte
_MetroTRK_Has_Framing = .bss:0x8008068C; // type:object size:0x4 data:4byte
gReadBuf = .bss:0x80080690; // type:object size:0x110A
gWriteBuf = .bss:0x8008179C; // type:object size:0x110A
bUseSerialIO = .bss:0x800828A8; // type:object size:0x1 data:byte
__AXStackHead = .bss:0x800828B0; // type:object size:0x80 data:4byte
__AXStackTail = .bss:0x80082930; // type:object size:0x80 data:4byte
__AXBufferAuxA = .bss:0x800829C0; // type:object size:0x1680 data:4byte
__AXBufferAuxB = .bss:0x80084040; // type:object size:0x1680 data:4byte
__AXCommandList = .bss:0x800856C0; // type:object size:0x600
__AXOutBuffer = .bss:0x80085CC0; // type:object size:0x500 data:4byte
__AXOutSBuffer = .bss:0x800861C0; // type:object size:0x280
__AXDSPTask = .bss:0x80086440; // type:object size:0x50
__AXDramImage = .bss:0x80086490; // type:object size:0x4000
__AXLocalProfile = .bss:0x8008A490; // type:object size:0x38
__AXStudio = .bss:0x8008A4E0; // type:object size:0x36
__AXPB = .bss:0x8008A520; // type:object size:0x3B00 data:2byte
__AXITD = .bss:0x8008E020; // type:object size:0x1000
__AXUpdates = .bss:0x8008F020; // type:object size:0x4000
__AXVPB = .bss:0x80093020; // type:object size:0x8900
__CARDBlock = .bss:0x8009B920; // type:object size:0x220 data:4byte
__CARDDiskNone = .bss:0x8009BB40; // type:object size:0x20
CommandList = .bss:0x8009BB60; // type:object size:0x3C scope:local data:4byte
AlarmForTimeout = .bss:0x8009BBC8; // type:object size:0x28 scope:local
BB2 = .bss:0x8009BC40; // type:object size:0x20 scope:local
CurrDiskID = .bss:0x8009BC60; // type:object size:0x20
DummyCommandBlock = .bss:0x8009BC80; // type:object size:0x30 scope:local
ResetAlarm = .bss:0x8009BCB0; // type:object size:0x28 scope:local
WaitingQueue = .bss:0x8009BCD8; // type:object size:0x20 scope:local data:4byte
bb2Buf = .bss:0x8009BCF8; // type:object size:0x3F scope:local
block$16 = .bss:0x8009BD38; // type:object size:0x30 scope:local
Ecb = .bss:0x8009BD68; // type:object size:0xC0 scope:local data:4byte
gxData = .bss:0x8009BE28; // type:object size:0x4F8 scope:local
lbl_8009C3A0 = .bss:0x8009C3A0; // type:object size:0x1800 data:4byte
DriveInfo = .bss:0x8009DBA0; // type:object size:0x20 scope:local
__OSErrorTable = .bss:0x8009DBF0; // type:object size:0x44 scope:global data:4byte
lbl_8009DC40 = .bss:0x8009DC40; // type:object size:0x20
Scb = .bss:0x8009DC60; // type:object size:0x54 scope:local data:4byte
RunQueue = .bss:0x8009DCB8; // type:object size:0x100 scope:local data:4byte
lbl_8009E6B0 = .bss:0x8009E6B0; // type:object size:0x10
lbl_8009E6C0 = .bss:0x8009E6C0; // type:object size:0x40
Packet = .bss:0x8009E700; // type:object size:0x80 scope:local data:4byte
lbl_8009E780 = .bss:0x8009E780; // type:object size:0xA0
TypeTime = .bss:0x8009E820; // type:object size:0x20 scope:local
lbl_8009E840 = .bss:0x8009E840; // type:object size:0x20
lbl_8009E860 = .bss:0x8009E860; // type:object size:0x40
lbl_8009E8A0 = .bss:0x8009E8A0; // type:object size:0x60 data:4byte
lbl_8009E900 = .bss:0x8009E900; // type:object size:0x148 data:2byte
lbl_8009EA48 = .bss:0x8009EA48; // type:object size:0x80
lbl_8009EAC8 = .bss:0x8009EAC8; // type:object size:0x10
lbl_8009EAD8 = .bss:0x8009EAD8; // type:object size:0x500
lbl_8009EFD8 = .bss:0x8009EFD8; // type:object size:0xF0
lbl_8009F0C8 = .bss:0x8009F0C8; // type:object size:0xC data:4byte
lbl_8009F0D4 = .bss:0x8009F0D4; // type:object size:0x20 data:4byte
lbl_8009F0F4 = .bss:0x8009F0F4; // type:object size:0x30
lbl_8009F124 = .bss:0x8009F124; // type:object size:0x10 data:float
lbl_8009F134 = .bss:0x8009F134; // type:object size:0x28 data:float
lbl_8009F15C = .bss:0x8009F15C; // type:object size:0x34 data:float
lbl_8009F190 = .bss:0x8009F190; // type:object size:0x20
lbl_8009F1B0 = .bss:0x8009F1B0; // type:object size:0x20
lbl_8009F1D0 = .bss:0x8009F1D0; // type:object size:0x100
lbl_8009F2D0 = .bss:0x8009F2D0; // type:object size:0x30
lbl_8009F300 = .bss:0x8009F300; // type:object size:0x100
lbl_8009F400 = .bss:0x8009F400; // type:object size:0x1E0
lbl_8009F5E0 = .bss:0x8009F5E0; // type:object size:0x28 data:4byte
lbl_8009F608 = .bss:0x8009F608; // type:object size:0x10 data:4byte
lbl_8009F618 = .bss:0x8009F618; // type:object size:0x4 data:4byte
lbl_8009F61C = .bss:0x8009F61C; // type:object size:0xC04 data:byte
lbl_800A0220 = .bss:0x800A0220; // type:object size:0x9C0 data:byte
lbl_800A0BE0 = .bss:0x800A0BE0; // type:object size:0x4 data:4byte
lbl_800A0BE4 = .bss:0x800A0BE4; // type:object size:0x4 data:4byte
lbl_800A0BE8 = .bss:0x800A0BE8; // type:object size:0x14 data:4byte
lbl_800A0BFC = .bss:0x800A0BFC; // type:object size:0xC84 data:2byte
lbl_800A1880 = .bss:0x800A1880; // type:object size:0x8 data:4byte
lbl_800A1888 = .bss:0x800A1888; // type:object size:0x8 data:4byte
lbl_800A1890 = .bss:0x800A1890; // type:object size:0x4 data:4byte
lbl_800A1894 = .bss:0x800A1894; // type:object size:0x4 data:4byte
lbl_800A1898 = .bss:0x800A1898; // type:object size:0x120
lbl_800A19B8 = .bss:0x800A19B8; // type:object size:0x8 data:4byte
lbl_800A19C0 = .bss:0x800A19C0; // type:object size:0x40
lbl_800A1A00 = .bss:0x800A1A00; // type:object size:0x400
lbl_800A1E00 = .bss:0x800A1E00; // type:object size:0x8 data:4byte
lbl_800A1E08 = .bss:0x800A1E08; // type:object size:0x9D0 data:4byte
lbl_800A27D8 = .bss:0x800A27D8; // type:object size:0x16C0 data:byte
lbl_800A3E98 = .bss:0x800A3E98; // type:object size:0x4 data:4byte
lbl_800A3E9C = .bss:0x800A3E9C; // type:object size:0x4 data:4byte
lbl_800A3EA0 = .bss:0x800A3EA0; // type:object size:0x4 data:4byte
lbl_800A3EA4 = .bss:0x800A3EA4; // type:object size:0x4 data:4byte
lbl_800A3EA8 = .bss:0x800A3EA8; // type:object size:0xE60 data:byte
lbl_800A4D08 = .bss:0x800A4D08; // type:object size:0x4 data:4byte
lbl_800A4D0C = .bss:0x800A4D0C; // type:object size:0x20 data:4byte
lbl_800A4D2C = .bss:0x800A4D2C; // type:object size:0x10 data:4byte
lbl_800A4D3C = .bss:0x800A4D3C; // type:object size:0x14 data:4byte
lbl_800A4D50 = .bss:0x800A4D50; // type:object size:0x10 data:4byte
lbl_800A4D60 = .bss:0x800A4D60; // type:object size:0x4 data:4byte
lbl_800A4D64 = .bss:0x800A4D64; // type:object size:0x3C4 data:4byte
lbl_800A5128 = .bss:0x800A5128; // type:object size:0x4
lbl_800A512C = .bss:0x800A512C; // type:object size:0x7CAC data:4byte
lbl_800ACDD8 = .bss:0x800ACDD8; // type:object size:0x4 data:4byte
lbl_800ACDDC = .bss:0x800ACDDC; // type:object size:0x4 data:4byte
lbl_800ACDE0 = .bss:0x800ACDE0; // type:object size:0x8 data:4byte
lbl_800ACDE8 = .bss:0x800ACDE8; // type:object size:0x4 data:4byte
lbl_800ACDEC = .bss:0x800ACDEC; // type:object size:0x4 data:4byte
lbl_800ACDF0 = .bss:0x800ACDF0; // type:object size:0x4 data:4byte
lbl_800ACDF4 = .bss:0x800ACDF4; // type:object size:0x4 data:4byte
lbl_800ACDF8 = .bss:0x800ACDF8; // type:object size:0x4 data:4byte
lbl_800ACDFC = .bss:0x800ACDFC; // type:object size:0x20
lbl_800ACE1C = .bss:0x800ACE1C; // type:object size:0x100
lbl_800ACF1C = .bss:0x800ACF1C; // type:object size:0x4 data:4byte
lbl_800ACF20 = .bss:0x800ACF20; // type:object size:0x400
lbl_800AD320 = .bss:0x800AD320; // type:object size:0x440 data:byte
lbl_800AD760 = .bss:0x800AD760; // type:object size:0x4 data:4byte
lbl_800AD764 = .bss:0x800AD764; // type:object size:0x4 data:4byte
lbl_800AD768 = .bss:0x800AD768; // type:object size:0x2080
lbl_800AF7E8 = .bss:0x800AF7E8; // type:object size:0x4 data:4byte
lbl_800AF7EC = .bss:0x800AF7EC; // type:object size:0x140 data:4byte
lbl_800AF92C = .bss:0x800AF92C; // type:object size:0x344 data:4byte
lbl_800AFC70 = .bss:0x800AFC70; // type:object size:0xC data:4byte
lbl_800AFC7C = .bss:0x800AFC7C; // type:object size:0x4 data:4byte
lbl_800AFC80 = .bss:0x800AFC80; // type:object size:0x4 data:4byte
lbl_800AFC84 = .bss:0x800AFC84; // type:object size:0xFA4 data:byte
lbl_800B0C28 = .bss:0x800B0C28; // type:object size:0x100
lbl_800B0D28 = .bss:0x800B0D28; // type:object size:0x4 data:4byte
lbl_800B0D2C = .bss:0x800B0D2C; // type:object size:0x104 data:4byte
lbl_800B0E30 = .bss:0x800B0E30; // type:object size:0x10 data:4byte
lbl_800B0E40 = .bss:0x800B0E40; // type:object size:0x4 data:4byte
lbl_800B0E44 = .bss:0x800B0E44; // type:object size:0x2384 data:byte
lbl_800B31C8 = .bss:0x800B31C8; // type:object size:0x4 data:4byte
lbl_800B31CC = .bss:0x800B31CC; // type:object size:0x4 data:4byte
lbl_800B31D0 = .bss:0x800B31D0; // type:object size:0x4 data:4byte
lbl_800B31D4 = .bss:0x800B31D4; // type:object size:0x484
lbl_800B3658 = .bss:0x800B3658; // type:object size:0x4 data:4byte
lbl_800B365C = .bss:0x800B365C; // type:object size:0x4004 data:4byte
lbl_800B7660 = .bss:0x800B7660; // type:object size:0x4 data:4byte
lbl_800B7664 = .bss:0x800B7664; // type:object size:0xC04
lbl_800B8268 = .bss:0x800B8268; // type:object size:0x30 data:4byte
lbl_800B8298 = .bss:0x800B8298; // type:object size:0x80
lbl_800B8318 = .bss:0x800B8318; // type:object size:0x8 data:4byte
lbl_800B8320 = .bss:0x800B8320; // type:object size:0x8 data:4byte
lbl_800B8328 = .bss:0x800B8328; // type:object size:0x8 data:4byte
lbl_800B8330 = .bss:0x800B8330; // type:object size:0x200
lbl_800B8530 = .bss:0x800B8530; // type:object size:0x4 data:4byte
lbl_800B8534 = .bss:0x800B8534; // type:object size:0x9F4 data:4byte
lbl_800B8F28 = .bss:0x800B8F28; // type:object size:0x4 data:4byte
lbl_800B8F2C = .bss:0x800B8F2C; // type:object size:0x104 data:4byte
lbl_800B9030 = .bss:0x800B9030; // type:object size:0x4 data:4byte
lbl_800B9034 = .bss:0x800B9034; // type:object size:0x4 data:4byte
lbl_800B9038 = .bss:0x800B9038; // type:object size:0x8 data:4byte
lbl_800B9040 = .bss:0x800B9040; // type:object size:0x4 data:4byte
lbl_800B9044 = .bss:0x800B9044; // type:object size:0x10C0
lbl_800BA104 = .bss:0x800BA104; // type:object size:0xE84 data:byte
lbl_800BAF88 = .bss:0x800BAF88; // type:object size:0x14 data:4byte
lbl_800BAF9C = .bss:0x800BAF9C; // type:object size:0x180 data:4byte
@wstringBase0 = .sdata:0x800BB120; // type:object size:0x2 scope:local
next = .sdata:0x800BB128; // type:object size:0x4 scope:local data:4byte
__float_nan = .sdata:0x800BB130; // type:object size:0x4 data:float
__float_huge = .sdata:0x800BB134; // type:object size:0x4 data:float
__double_max = .sdata:0x800BB138; // type:object size:0x8 data:double
__double_huge = .sdata:0x800BB140; // type:object size:0x8 data:double
__extended_min = .sdata:0x800BB148; // type:object size:0x8 data:double
__extended_max = .sdata:0x800BB150; // type:object size:0x8 data:double
__AIVersion = .sdata:0x800BB158; // type:object size:0x4 data:4byte
__ARVersion = .sdata:0x800BB160; // type:object size:0x4 data:4byte
__ARQVersion = .sdata:0x800BB168; // type:object size:0x4 data:4byte
__AXVersion = .sdata:0x800BB170; // type:object size:0x4 data:4byte
axDspSlaveLength = .sdata:0x800BB178; // type:object size:0x2 data:2byte
__AXFXAlloc = .sdata:0x800BB180; // type:object size:0x4 data:4byte
__AXFXFree = .sdata:0x800BB184; // type:object size:0x4 data:4byte
__CARDVersion = .sdata:0x800BB188; // type:object size:0x4 data:4byte
next = .sdata:0x800BB190; // type:object size:0x4 scope:local data:4byte
__CARDVendorID = .sdata:0x800BB198; // type:object size:0x2 data:2byte
__DSPVersion = .sdata:0x800BB1A0; // type:object size:0x4 data:4byte
FirstRead = .sdata:0x800BB1A8; // type:object size:0x4 data:4byte
lbl_800BB1B0 = .sdata:0x800BB1B0; // type:object size:0x8 data:string
__DVDVersion = .sdata:0x800BB1B8; // type:object size:0x4 scope:global data:4byte
autoInvalidation = .sdata:0x800BB1BC; // type:object size:0x4 scope:local data:4byte
checkOptionalCommand = .sdata:0x800BB1C0; // type:object size:0x4 data:4byte
lbl_800BB1C4 = .sdata:0x800BB1C4; // type:object size:0x6 data:string
DmaCommand = .sdata:0x800BB1CC; // type:object size:0x4 data:4byte
@35 = .sdata:0x800BB1D0; // type:object size:0x2 scope:local data:string
@40 = .sdata:0x800BB1D4; // type:object size:0x4 scope:local data:string
@41 = .sdata:0x800BB1D8; // type:object size:0x3 scope:local data:string
__EXIVersion = .sdata:0x800BB1E0; // type:object size:0x4 scope:global data:4byte
__GXVersion = .sdata:0x800BB1E8; // type:object size:0x4 scope:global data:4byte
lbl_800BB1F0 = .sdata:0x800BB1F0; // type:object size:0x4
lbl_800BB1F4 = .sdata:0x800BB1F4; // type:object size:0x4
lbl_800BB1F8 = .sdata:0x800BB1F8; // type:object size:0x8
lbl_800BB200 = .sdata:0x800BB200; // type:object size:0x8
lbl_800BB208 = .sdata:0x800BB208; // type:object size:0x8
lbl_800BB210 = .sdata:0x800BB210; // type:object size:0x8
lbl_800BB218 = .sdata:0x800BB218; // type:object size:0x8
lbl_800BB220 = .sdata:0x800BB220; // type:object size:0x8
lbl_800BB228 = .sdata:0x800BB228; // type:object size:0x8
lbl_800BB230 = .sdata:0x800BB230; // type:object size:0x8
lbl_800BB238 = .sdata:0x800BB238; // type:object size:0x8
lbl_800BB240 = .sdata:0x800BB240; // type:object size:0x8
__OSVersion = .sdata:0x800BB248; // type:object size:0x4 scope:global data:4byte
@97 = .sdata:0x800BB24C; // type:object size:0x6 scope:local data:string
lbl_800BB254 = .sdata:0x800BB254; // type:object size:0x4 data:string
lbl_800BB258 = .sdata:0x800BB258; // type:object size:0x8 data:4byte
__OSArenaLo = .sdata:0x800BB260; // type:object size:0x4 scope:local data:4byte
lbl_800BB268 = .sdata:0x800BB268; // type:object size:0x4 data:4byte
@76 = .sdata:0x800BB26C; // type:object size:0x2 scope:local data:string
lbl_800BB270 = .sdata:0x800BB270; // type:object size:0x8 data:2byte
SwitchThreadCallback = .sdata:0x800BB278; // type:object size:0x4 scope:local data:4byte
lbl_800BB280 = .sdata:0x800BB280; // type:object size:0x4 data:4byte
lbl_800BB284 = .sdata:0x800BB284; // type:object size:0x4 data:4byte
lbl_800BB288 = .sdata:0x800BB288; // type:object size:0x4 data:4byte
lbl_800BB28C = .sdata:0x800BB28C; // type:object size:0x4 data:4byte
lbl_800BB290 = .sdata:0x800BB290; // type:object size:0x4 data:4byte
lbl_800BB294 = .sdata:0x800BB294; // type:object size:0x4 data:4byte
lbl_800BB298 = .sdata:0x800BB298; // type:object size:0x4
lbl_800BB29C = .sdata:0x800BB29C; // type:object size:0x4
__SIVersion = .sdata:0x800BB2A0; // type:object size:0x4 scope:global data:4byte
lbl_800BB2A8 = .sdata:0x800BB2A8; // type:object size:0x4 data:4byte
lbl_800BB2AC = .sdata:0x800BB2AC; // type:object size:0xC
lbl_800BB2B8 = .sdata:0x800BB2B8; // type:object size:0x8 data:4byte
lbl_800BB2C0 = .sdata:0x800BB2C0; // type:object size:0xC
lbl_800BB2CC = .sdata:0x800BB2CC; // type:object size:0x8 data:float
lbl_800BB2D4 = .sdata:0x800BB2D4; // type:object size:0x4 data:float
lbl_800BB2D8 = .sdata:0x800BB2D8; // type:object size:0x8 data:4byte
lbl_800BB2E0 = .sdata:0x800BB2E0; // type:object size:0x8
lbl_800BB2E8 = .sdata:0x800BB2E8; // type:object size:0x8 data:4byte
lbl_800BB2F0 = .sdata:0x800BB2F0; // type:object size:0x1 data:byte
lbl_800BB300 = .sbss:0x800BB300; // type:object size:0x4 data:4byte
lbl_800BB304 = .sbss:0x800BB304; // type:object size:0x4 data:4byte
lbl_800BB308 = .sbss:0x800BB308; // type:object size:0x4 data:4byte
lbl_800BB30C = .sbss:0x800BB30C; // type:object size:0x4 data:4byte
lbl_800BB310 = .sbss:0x800BB310; // type:object size:0x4 data:4byte
lbl_800BB314 = .sbss:0x800BB314; // type:object size:0x4 data:4byte
lbl_800BB318 = .sbss:0x800BB318; // type:object size:0x4 data:4byte
lbl_800BB31C = .sbss:0x800BB31C; // type:object size:0x4 data:4byte
lbl_800BB320 = .sbss:0x800BB320; // type:object size:0x4 data:4byte
lbl_800BB324 = .sbss:0x800BB324; // type:object size:0x4 data:4byte
lbl_800BB328 = .sbss:0x800BB328; // type:object size:0x8 data:4byte
lbl_800BB330 = .sbss:0x800BB330; // type:object size:0x8 data:4byte
__global_destructor_chain = .sbss:0x800BB338; // type:object size:0x4 scope:global data:4byte
__aborting = .sbss:0x800BB340; // type:object size:0x4 scope:global data:4byte
__atexit_curr_func = .sbss:0x800BB344; // type:object size:0x4 scope:local data:4byte
__stdio_exit = .sbss:0x800BB348; // type:object size:0x4 scope:global data:4byte
__console_exit = .sbss:0x800BB34C; // type:object size:0x4 scope:global data:4byte
init$193 = .sbss:0x800BB350; // type:object size:0x1 data:byte
errno = .sbss:0x800BB358; // type:object size:0x4 data:4byte
initialized$16 = .sbss:0x800BB360; // type:object size:0x4 data:4byte
zero = .sbss:0x800BB368; // type:object size:0x8 scope:local data:double
zero = .sbss:0x800BB370; // type:object size:0x8 scope:local data:double
__AIS_Callback = .sbss:0x800BB378; // type:object size:0x4 data:4byte
__AID_Callback = .sbss:0x800BB37C; // type:object size:0x4 data:4byte
__CallbackStack = .sbss:0x800BB380; // type:object size:0x4 data:4byte
__OldStack = .sbss:0x800BB384; // type:object size:0x4 data:4byte
__AI_init_flag = .sbss:0x800BB388; // type:object size:0x4 data:4byte
__AID_Active = .sbss:0x800BB38C; // type:object size:0x4 data:4byte
bound_32KHz = .sbss:0x800BB390; // type:object size:0x8 data:4byte
bound_48KHz = .sbss:0x800BB398; // type:object size:0x8 data:4byte
min_wait = .sbss:0x800BB3A0; // type:object size:0x8 data:4byte
max_wait = .sbss:0x800BB3A8; // type:object size:0x8 data:4byte
buffer = .sbss:0x800BB3B0; // type:object size:0x8 data:4byte
__AR_Callback = .sbss:0x800BB3B8; // type:object size:0x4 data:4byte
__AR_Size = .sbss:0x800BB3BC; // type:object size:0x4 data:4byte
__AR_InternalSize = .sbss:0x800BB3C0; // type:object size:0x4 data:4byte
__AR_ExpansionSize = .sbss:0x800BB3C4; // type:object size:0x4 data:4byte
__AR_StackPointer = .sbss:0x800BB3C8; // type:object size:0x4 data:4byte
__AR_FreeBlocks = .sbss:0x800BB3CC; // type:object size:0x4 data:4byte
__AR_BlockLength = .sbss:0x800BB3D0; // type:object size:0x4 data:4byte
__AR_init_flag = .sbss:0x800BB3D4; // type:object size:0x4 data:4byte
__ARQRequestQueueHi = .sbss:0x800BB3D8; // type:object size:0x4 data:4byte
__ARQRequestTailHi = .sbss:0x800BB3DC; // type:object size:0x4 data:4byte
__ARQRequestQueueLo = .sbss:0x800BB3E0; // type:object size:0x4 data:4byte
__ARQRequestTailLo = .sbss:0x800BB3E4; // type:object size:0x4 data:4byte
__ARQRequestPendingHi = .sbss:0x800BB3E8; // type:object size:0x4 data:4byte
__ARQRequestPendingLo = .sbss:0x800BB3EC; // type:object size:0x4 data:4byte
__ARQCallbackHi = .sbss:0x800BB3F0; // type:object size:0x4 data:4byte
__ARQCallbackLo = .sbss:0x800BB3F4; // type:object size:0x4 data:4byte
__ARQChunkSize = .sbss:0x800BB3F8; // type:object size:0x4 data:4byte
__ARQ_init_flag = .sbss:0x800BB3FC; // type:object size:0x4 data:4byte
__AXCallbackStack = .sbss:0x800BB400; // type:object size:0x4 data:4byte
__AXCallbackAuxA = .sbss:0x800BB408; // type:object size:0x4 data:4byte
__AXCallbackAuxB = .sbss:0x800BB40C; // type:object size:0x4 data:4byte
__AXContextAuxA = .sbss:0x800BB410; // type:object size:0x4 data:4byte
__AXContextAuxB = .sbss:0x800BB414; // type:object size:0x4 data:4byte
__AXAuxADspWrite = .sbss:0x800BB418; // type:object size:0x4 data:4byte
__AXAuxADspRead = .sbss:0x800BB41C; // type:object size:0x4 data:4byte
__AXAuxBDspWrite = .sbss:0x800BB420; // type:object size:0x4 data:4byte
__AXAuxBDspRead = .sbss:0x800BB424; // type:object size:0x4 data:4byte
__AXAuxDspWritePosition = .sbss:0x800BB428; // type:object size:0x4 data:4byte
__AXAuxDspReadPosition = .sbss:0x800BB42C; // type:object size:0x4 data:4byte
__AXAuxDspWritePositionDpl2 = .sbss:0x800BB430; // type:object size:0x4 data:4byte
__AXAuxDspReadPositionDpl2 = .sbss:0x800BB434; // type:object size:0x4 data:4byte
__AXAuxCpuReadWritePosition = .sbss:0x800BB438; // type:object size:0x4 data:4byte
__AXCommandListPosition = .sbss:0x800BB440; // type:object size:0x4 data:4byte
__AXClWrite = .sbss:0x800BB444; // type:object size:0x4 data:4byte
__AXCommandListCycles = .sbss:0x800BB448; // type:object size:0x4 data:4byte
__AXCompressor = .sbss:0x800BB44C; // type:object size:0x4 data:4byte
__AXClMode = .sbss:0x800BB450; // type:object size:0x4 data:4byte
__AXOutFrame = .sbss:0x800BB458; // type:object size:0x4 data:4byte
__AXOutDspReady = .sbss:0x800BB45C; // type:object size:0x4 data:4byte
__AXOsTime = .sbss:0x800BB460; // type:object size:0x8 data:4byte
__AXUserFrameCallback = .sbss:0x800BB468; // type:object size:0x4 data:4byte
__AXDSPInitFlag = .sbss:0x800BB46C; // type:object size:0x4 data:4byte
__AXDSPDoneFlag = .sbss:0x800BB470; // type:object size:0x4 data:4byte
__AXDebugSteppingMode = .sbss:0x800BB474; // type:object size:0x4 data:4byte
__AXOutThreadQueue = .sbss:0x800BB478; // type:object size:0x8
__AXSpbAL = .sbss:0x800BB480; // type:object size:0x4 data:4byte
__AXSpbAR = .sbss:0x800BB484; // type:object size:0x4 data:4byte
__AXSpbAS = .sbss:0x800BB488; // type:object size:0x4 data:4byte
__AXSpbAAL = .sbss:0x800BB48C; // type:object size:0x4 data:4byte
__AXSpbAAR = .sbss:0x800BB490; // type:object size:0x4 data:4byte
__AXSpbAAS = .sbss:0x800BB494; // type:object size:0x4 data:4byte
__AXSpbABL = .sbss:0x800BB498; // type:object size:0x4 data:4byte
__AXSpbABR = .sbss:0x800BB49C; // type:object size:0x4 data:4byte
__AXSpbABS = .sbss:0x800BB4A0; // type:object size:0x4 data:4byte
__AXMaxDspCycles = .sbss:0x800BB4A8; // type:object size:0x4 data:4byte
__AXRecDspCycles = .sbss:0x800BB4AC; // type:object size:0x4 data:4byte
__AXNumVoices = .sbss:0x800BB4B0; // type:object size:0x4 data:4byte
__AXProfile = .sbss:0x800BB4B8; // type:object size:0x4 data:4byte
__AXMaxProfiles = .sbss:0x800BB4BC; // type:object size:0x4 data:4byte
__AXCurrentProfile = .sbss:0x800BB4C0; // type:object size:0x4 data:4byte
__AXProfileInitialized = .sbss:0x800BB4C4; // type:object size:0x4 data:4byte
__CARDEncode = .sbss:0x800BB4C8; // type:object size:0x2 data:2byte
__DBInterface = .sbss:0x800BB4D0; // type:object size:0x4 scope:global data:4byte
DBVerbose = .sbss:0x800BB4D4; // type:object size:0x4 scope:global data:4byte
__DSP_init_flag = .sbss:0x800BB4D8; // type:object size:0x4 data:4byte
__DSP_rude_task_pending = .sbss:0x800BB4E0; // type:object size:0x4 data:4byte
__DSP_rude_task = .sbss:0x800BB4E4; // type:object size:0x4 data:4byte
__DSP_tmp_task = .sbss:0x800BB4E8; // type:object size:0x4 data:4byte
__DSP_last_task = .sbss:0x800BB4EC; // type:object size:0x4 data:4byte
__DSP_first_task = .sbss:0x800BB4F0; // type:object size:0x4 data:4byte
__DSP_curr_task = .sbss:0x800BB4F4; // type:object size:0x4 data:4byte
StopAtNextInt = .sbss:0x800BB4F8; // type:object size:0x4 scope:local data:4byte
LastLength = .sbss:0x800BB4FC; // type:object size:0x4 data:4byte
Callback = .sbss:0x800BB500; // type:object size:0x4 scope:local data:4byte
ResetCoverCallback = .sbss:0x800BB504; // type:object size:0x4 data:4byte
LastResetEnd = .sbss:0x800BB508; // type:object size:0x8 scope:local data:4byte
ResetOccurred = .sbss:0x800BB510; // type:object size:0x4 scope:local data:4byte
WaitingCoverClose = .sbss:0x800BB514; // type:object size:0x4 scope:local data:4byte
Breaking = .sbss:0x800BB518; // type:object size:0x4 data:4byte
WorkAroundType = .sbss:0x800BB51C; // type:object size:0x4 scope:local data:4byte
WorkAroundSeekLocation = .sbss:0x800BB520; // type:object size:0x4 scope:local data:4byte
LastReadFinished = .sbss:0x800BB528; // type:object size:0x8 data:4byte
LastReadIssued = .sbss:0x800BB530; // type:object size:0x8 data:4byte
LastCommandWasRead = .sbss:0x800BB538; // type:object size:0x4 data:4byte
NextCommandNumber = .sbss:0x800BB53C; // type:object size:0x4 scope:local data:4byte
BootInfo = .sbss:0x800BB540; // type:object size:0x4 scope:local data:4byte
FstStart = .sbss:0x800BB544; // type:object size:0x4 scope:local data:4byte
FstStringStart = .sbss:0x800BB548; // type:object size:0x4 scope:local data:4byte
MaxEntryNum = .sbss:0x800BB54C; // type:object size:0x4 scope:local data:4byte
currentDirectory = .sbss:0x800BB550; // type:object size:0x4 data:4byte
__DVDLongFileNameFlag = .sbss:0x800BB554; // type:object size:0x4 scope:global data:4byte
__DVDThreadQueue = .sbss:0x800BB558; // type:object size:0x8 scope:global
executing = .sbss:0x800BB560; // type:object size:0x4 scope:local data:4byte
IDShouldBe = .sbss:0x800BB564; // type:object size:0x4 scope:local data:4byte
bootInfo = .sbss:0x800BB568; // type:object size:0x4 scope:local data:4byte
PauseFlag = .sbss:0x800BB56C; // type:object size:0x4 scope:local data:4byte
PausingFlag = .sbss:0x800BB570; // type:object size:0x4 scope:local data:4byte
AutoFinishing = .sbss:0x800BB574; // type:object size:0x4 data:4byte
FatalErrorFlag = .sbss:0x800BB578; // type:object size:0x4 scope:local data:4byte
CurrCommand = .sbss:0x800BB57C; // type:object size:0x4 scope:local data:4byte
Canceling = .sbss:0x800BB580; // type:object size:0x4 data:4byte
CancelCallback = .sbss:0x800BB584; // type:object size:0x4 data:4byte
ResumeFromHere = .sbss:0x800BB588; // type:object size:0x4 scope:local data:4byte
CancelLastError = .sbss:0x800BB58C; // type:object size:0x4 scope:local data:4byte
LastError = .sbss:0x800BB590; // type:object size:0x4 data:4byte
NumInternalRetry = .sbss:0x800BB594; // type:object size:0x4 data:4byte
ResetRequired = .sbss:0x800BB598; // type:object size:0x4 scope:local data:4byte
FirstTimeInBootrom = .sbss:0x800BB59C; // type:object size:0x4 scope:local data:4byte
DVDInitialized = .sbss:0x800BB5A0; // type:object size:0x4 scope:local data:4byte
LastState = .sbss:0x800BB5A4; // type:object size:0x4 data:4byte
FatalFunc = .sbss:0x800BB5A8; // type:object size:0x4 data:4byte
status = .sbss:0x800BB5B0; // type:object size:0x4 data:4byte
bb2 = .sbss:0x800BB5B4; // type:object size:0x4 scope:local data:4byte
idTmp = .sbss:0x800BB5B8; // type:object size:0x4 scope:local data:4byte
IDSerialPort1 = .sbss:0x800BB5C0; // type:object size:0x4 scope:local data:4byte
Chan = .sbss:0x800BB5C8; // type:object size:0x4 data:4byte
Dev = .sbss:0x800BB5CC; // type:object size:0x4 data:4byte
Enabled = .sbss:0x800BB5D0; // type:object size:0x4 data:4byte
BarnacleEnabled = .sbss:0x800BB5D4; // type:object size:0x4 data:4byte
__piReg = .sbss:0x800BB5D8; // type:object size:0x4 scope:global data:4byte
__cpReg = .sbss:0x800BB5DC; // type:object size:0x4 scope:global data:4byte
__peReg = .sbss:0x800BB5E0; // type:object size:0x4 scope:global data:4byte
__memReg = .sbss:0x800BB5E4; // type:object size:0x4 scope:global data:4byte
lbl_800BB5E8 = .sbss:0x800BB5E8; // type:object size:0x8 data:4byte
lbl_800BB5F0 = .sbss:0x800BB5F0; // type:object size:0x4 data:4byte
lbl_800BB5F4 = .sbss:0x800BB5F4; // type:object size:0x4 data:4byte
lbl_800BB5F8 = .sbss:0x800BB5F8; // type:object size:0x4 data:4byte
resetFuncRegistered$63 = .sbss:0x800BB5FC; // type:object size:0x4 scope:local data:4byte
lbl_800BB600 = .sbss:0x800BB600; // type:object size:0x4 data:4byte
lbl_800BB604 = .sbss:0x800BB604; // type:object size:0x4 data:4byte
lbl_800BB608 = .sbss:0x800BB608; // type:object size:0x4 data:4byte
lbl_800BB60C = .sbss:0x800BB60C; // type:object size:0x1 data:byte
lbl_800BB610 = .sbss:0x800BB610; // type:object size:0x4 data:4byte
lbl_800BB614 = .sbss:0x800BB614; // type:object size:0x4 data:4byte
lbl_800BB618 = .sbss:0x800BB618; // type:object size:0x8 data:4byte
lbl_800BB620 = .sbss:0x800BB620; // type:object size:0x4 data:4byte
lbl_800BB624 = .sbss:0x800BB624; // type:object size:0x4 data:4byte
lbl_800BB628 = .sbss:0x800BB628; // type:object size:0x1 data:byte
lbl_800BB62C = .sbss:0x800BB62C; // type:object size:0xC
lbl_800BB638 = .sbss:0x800BB638; // type:object size:0x4 data:4byte
lbl_800BB63C = .sbss:0x800BB63C; // type:object size:0x4 data:4byte
lbl_800BB640 = .sbss:0x800BB640; // type:object size:0x8 data:4byte
BootInfo = .sbss:0x800BB648; // type:object size:0x4 scope:local data:4byte
BI2DebugFlag = .sbss:0x800BB64C; // type:object size:0x4 scope:local data:4byte
BI2DebugFlagHolder = .sbss:0x800BB650; // type:object size:0x4 scope:local data:4byte
__OSIsGcam = .sbss:0x800BB654; // type:object size:0x4 scope:weak data:4byte
ZeroF = .sbss:0x800BB658; // type:object size:0x8 scope:local data:double
ZeroPS = .sbss:0x800BB660; // type:object size:0x8 scope:local
AreWeInitialized = .sbss:0x800BB668; // type:object size:0x4 scope:local data:4byte
OSExceptionTable = .sbss:0x800BB66C; // type:object size:0x4 scope:local data:4byte
__OSSavedRegionEnd = .sbss:0x800BB670; // type:object size:0x4 scope:global data:4byte
__OSSavedRegionStart = .sbss:0x800BB674; // type:object size:0x4 scope:global data:4byte
__OSInIPL = .sbss:0x800BB678; // type:object size:0x4 scope:global data:4byte
__OSStartTime = .sbss:0x800BB680; // type:object size:0x8 scope:global data:4byte
AlarmQueue = .sbss:0x800BB688; // type:object size:0x8 scope:local data:4byte
lbl_800BB690 = .sbss:0x800BB690; // type:object size:0x4 data:4byte
lbl_800BB694 = .sbss:0x800BB694; // type:object size:0x4 data:4byte
lbl_800BB698 = .sbss:0x800BB698; // type:object size:0x4 data:4byte
lbl_800BB69C = .sbss:0x800BB69C; // type:object size:0x4 data:4byte
__OSArenaHi = .sbss:0x800BB6A0; // type:object size:0x4 scope:local data:4byte
lbl_800BB6A8 = .sbss:0x800BB6A8; // type:object size:0x4 data:4byte
lbl_800BB6AC = .sbss:0x800BB6AC; // type:object size:0x4 data:4byte
lbl_800BB6B0 = .sbss:0x800BB6B0; // type:object size:0x4 data:4byte
lbl_800BB6B4 = .sbss:0x800BB6B4; // type:object size:0x4 data:4byte
InterruptHandlerTable = .sbss:0x800BB6B8; // type:object size:0x4 scope:local data:4byte
__OSLastInterruptSrr0 = .sbss:0x800BB6BC; // type:object size:0x4 scope:global data:4byte
__OSLastInterrupt = .sbss:0x800BB6C0; // type:object size:0x2 scope:global data:2byte
__OSLastInterruptTime = .sbss:0x800BB6C8; // type:object size:0x8 scope:global data:4byte
lbl_800BB6D0 = .sbss:0x800BB6D0; // type:object size:0x4 data:4byte
lbl_800BB6D4 = .sbss:0x800BB6D4; // type:object size:0x4 data:4byte
lbl_800BB6D8 = .sbss:0x800BB6D8; // type:object size:0x8 data:4byte
ResetFunctionQueue = .sbss:0x800BB6E0; // type:object size:0x8 scope:local data:4byte
lbl_800BB6E8 = .sbss:0x800BB6E8; // type:object size:0x4 data:4byte
lbl_800BB6EC = .sbss:0x800BB6EC; // type:object size:0x4 data:4byte
lbl_800BB6F0 = .sbss:0x800BB6F0; // type:object size:0x8 data:4byte
lbl_800BB6F8 = .sbss:0x800BB6F8; // type:object size:0x4 data:4byte
lbl_800BB6FC = .sbss:0x800BB6FC; // type:object size:0x4 data:4byte
lbl_800BB700 = .sbss:0x800BB700; // type:object size:0x4 data:4byte
lbl_800BB704 = .sbss:0x800BB704; // type:object size:0x4 data:4byte
RunQueueBits = .sbss:0x800BB708; // type:object size:0x4 scope:local data:4byte
RunQueueHint = .sbss:0x800BB70C; // type:object size:0x4 scope:local data:4byte
Reschedule = .sbss:0x800BB710; // type:object size:0x4 scope:local data:4byte
Debug_BBA = .sbss:0x800BB718; // type:object size:0x1 scope:local data:byte
lbl_800BB720 = .sbss:0x800BB720; // type:object size:0x4 data:4byte
lbl_800BB724 = .sbss:0x800BB724; // type:object size:0x4 data:4byte
lbl_800BB728 = .sbss:0x800BB728; // type:object size:0x4 data:4byte
lbl_800BB72C = .sbss:0x800BB72C; // type:object size:0x4 data:4byte
lbl_800BB730 = .sbss:0x800BB730; // type:object size:0x4 data:4byte
lbl_800BB734 = .sbss:0x800BB734; // type:object size:0x4 data:4byte
lbl_800BB738 = .sbss:0x800BB738; // type:object size:0x4 data:4byte
lbl_800BB73C = .sbss:0x800BB73C; // type:object size:0x4 data:4byte
lbl_800BB740 = .sbss:0x800BB740; // type:object size:0x4 data:4byte
__PADSpec = .sbss:0x800BB744; // type:object size:0x4 scope:global data:4byte
lbl_800BB748 = .sbss:0x800BB748; // type:object size:0x4
cmdTypeAndStatus$371 = .sbss:0x800BB74C; // type:object size:0x4 scope:local
lbl_800BB750 = .sbss:0x800BB750; // type:object size:0x8 data:4byte
SamplingRate = .sbss:0x800BB758; // type:object size:0x4 scope:local data:4byte
lbl_800BB760 = .sbss:0x800BB760; // type:object size:0x4 data:4byte
lbl_800BB764 = .sbss:0x800BB764; // type:object size:0x4 data:4byte
lbl_800BB768 = .sbss:0x800BB768; // type:object size:0x4 data:4byte
lbl_800BB76C = .sbss:0x800BB76C; // type:object size:0x8
lbl_800BB774 = .sbss:0x800BB774; // type:object size:0x4 data:4byte
lbl_800BB778 = .sbss:0x800BB778; // type:object size:0x4 data:4byte
lbl_800BB77C = .sbss:0x800BB77C; // type:object size:0x4 data:4byte
lbl_800BB780 = .sbss:0x800BB780; // type:object size:0x2 data:2byte
lbl_800BB782 = .sbss:0x800BB782; // type:object size:0x2 data:2byte
lbl_800BB784 = .sbss:0x800BB784; // type:object size:0x4 data:4byte
lbl_800BB788 = .sbss:0x800BB788; // type:object size:0x4 data:4byte
lbl_800BB78C = .sbss:0x800BB78C; // type:object size:0x4 data:4byte
lbl_800BB790 = .sbss:0x800BB790; // type:object size:0x8 data:4byte
lbl_800BB798 = .sbss:0x800BB798; // type:object size:0x4 data:4byte
lbl_800BB79C = .sbss:0x800BB79C; // type:object size:0x4 data:4byte
lbl_800BB7A0 = .sbss:0x800BB7A0; // type:object size:0x4 data:4byte
CurrTvMode = .sbss:0x800BB7A4; // type:object size:0x4 scope:local data:4byte
lbl_800BB7A8 = .sbss:0x800BB7A8; // type:object size:0x4 data:4byte
lbl_800BB7AC = .sbss:0x800BB7AC; // type:object size:0x4 data:4byte
lbl_800BB7B0 = .sbss:0x800BB7B0; // type:object size:0x4 data:4byte
lbl_800BB7B4 = .sbss:0x800BB7B4; // type:object size:0x4 data:4byte
lbl_800BB7B8 = .sbss:0x800BB7B8; // type:object size:0x8
lbl_800BB7C0 = .sbss:0x800BB7C0; // type:object size:0x4 data:4byte
lbl_800BB7C4 = .sbss:0x800BB7C4; // type:object size:0x4 data:4byte
lbl_800BB7C8 = .sbss:0x800BB7C8; // type:object size:0x4 data:4byte
lbl_800BB7CC = .sbss:0x800BB7CC; // type:object size:0x4 data:4byte
lbl_800BB7D0 = .sbss:0x800BB7D0; // type:object size:0x4 data:4byte
lbl_800BB7D4 = .sbss:0x800BB7D4; // type:object size:0x4 data:4byte
lbl_800BB7D8 = .sbss:0x800BB7D8; // type:object size:0x4 data:4byte
lbl_800BB7DC = .sbss:0x800BB7DC; // type:object size:0x4 data:4byte
lbl_800BB7E0 = .sbss:0x800BB7E0; // type:object size:0x4 data:float
lbl_800BB7E4 = .sbss:0x800BB7E4; // type:object size:0x4 data:4byte
lbl_800BB7E8 = .sbss:0x800BB7E8; // type:object size:0x8 data:4byte
lbl_800BB7F0 = .sbss:0x800BB7F0; // type:object size:0x4 data:4byte
lbl_800BB7F4 = .sbss:0x800BB7F4; // type:object size:0x4 data:4byte
lbl_800BB7F8 = .sbss:0x800BB7F8; // type:object size:0x4 data:4byte
lbl_800BB7FC = .sbss:0x800BB7FC; // type:object size:0x4 data:4byte
lbl_800BB800 = .sbss:0x800BB800; // type:object size:0x4 data:4byte
lbl_800BB804 = .sbss:0x800BB804; // type:object size:0x4 data:4byte
lbl_800BB808 = .sbss:0x800BB808; // type:object size:0x4 data:4byte
lbl_800BB80C = .sbss:0x800BB80C; // type:object size:0x4 data:4byte
lbl_800BB810 = .sbss:0x800BB810; // type:object size:0x4 data:4byte
lbl_800BB814 = .sbss:0x800BB814; // type:object size:0x4 data:4byte
lbl_800BB818 = .sbss:0x800BB818; // type:object size:0x4 data:4byte
lbl_800BB81C = .sbss:0x800BB81C; // type:object size:0x4 data:4byte
lbl_800BB820 = .sbss:0x800BB820; // type:object size:0x4 data:4byte
lbl_800BB824 = .sbss:0x800BB824; // type:object size:0x4 data:4byte
lbl_800BB828 = .sbss:0x800BB828; // type:object size:0x4 data:4byte
lbl_800BB82C = .sbss:0x800BB82C; // type:object size:0x4 data:4byte
lbl_800BB830 = .sbss:0x800BB830; // type:object size:0x4 data:4byte
lbl_800BB834 = .sbss:0x800BB834; // type:object size:0x4 data:4byte
lbl_800BB838 = .sbss:0x800BB838; // type:object size:0x8 data:4byte
lbl_800BB840 = .sbss:0x800BB840; // type:object size:0x4 data:4byte
lbl_800BB844 = .sbss:0x800BB844; // type:object size:0x4 data:4byte
lbl_800BB848 = .sbss:0x800BB848; // type:object size:0x4 data:4byte
lbl_800BB84C = .sbss:0x800BB84C; // type:object size:0x4 data:4byte
lbl_800BB850 = .sbss:0x800BB850; // type:object size:0x8 data:4byte
lbl_800BB858 = .sbss:0x800BB858; // type:object size:0x4 data:4byte
lbl_800BB85C = .sbss:0x800BB85C; // type:object size:0x4 data:4byte
lbl_800BB860 = .sbss:0x800BB860; // type:object size:0x4 data:4byte
lbl_800BB864 = .sbss:0x800BB864; // type:object size:0x4 data:4byte
lbl_800BB868 = .sbss:0x800BB868; // type:object size:0x4 data:4byte
lbl_800BB86C = .sbss:0x800BB86C; // type:object size:0x2 data:2byte
lbl_800BB870 = .sbss:0x800BB870; // type:object size:0x4 data:4byte
lbl_800BB874 = .sbss:0x800BB874; // type:object size:0x4 data:4byte
lbl_800BB878 = .sbss:0x800BB878; // type:object size:0x4 data:4byte
lbl_800BB87C = .sbss:0x800BB87C; // type:object size:0x4 data:4byte
lbl_800BB880 = .sbss:0x800BB880; // type:object size:0x4 data:4byte
lbl_800BB884 = .sbss:0x800BB884; // type:object size:0x4 data:4byte
lbl_800BB888 = .sbss:0x800BB888; // type:object size:0x4 data:4byte
lbl_800BB88C = .sbss:0x800BB88C; // type:object size:0x1 data:byte
lbl_800BB890 = .sbss:0x800BB890; // type:object size:0x4 data:4byte
lbl_800BB894 = .sbss:0x800BB894; // type:object size:0x4 data:4byte
lbl_800BB8A0 = .sdata2:0x800BB8A0; // type:object size:0x4 data:4byte
lbl_800BB8A4 = .sdata2:0x800BB8A4; // type:object size:0x4 data:4byte
lbl_800BB8A8 = .sdata2:0x800BB8A8; // type:object size:0x4 data:4byte
lbl_800BB8AC = .sdata2:0x800BB8AC; // type:object size:0x4 data:float
lbl_800BB8B0 = .sdata2:0x800BB8B0; // type:object size:0x4 data:float
lbl_800BB8B8 = .sdata2:0x800BB8B8; // type:object size:0x8 data:double
lbl_800BB8C0 = .sdata2:0x800BB8C0; // type:object size:0x4 data:float
lbl_800BB8C8 = .sdata2:0x800BB8C8; // type:object size:0x8 data:double
lbl_800BB8D0 = .sdata2:0x800BB8D0; // type:object size:0x8 data:double
lbl_800BB8D8 = .sdata2:0x800BB8D8; // type:object size:0x8 data:double
lbl_800BB8E0 = .sdata2:0x800BB8E0; // type:object size:0x8 data:double
lbl_800BB8E8 = .sdata2:0x800BB8E8; // type:object size:0x8 data:double
lbl_800BB8F0 = .sdata2:0x800BB8F0; // type:object size:0x8 data:double
lbl_800BB8F8 = .sdata2:0x800BB8F8; // type:object size:0x4 data:4byte
lbl_800BB900 = .sdata2:0x800BB900; // type:object size:0x8 data:double
lbl_800BB908 = .sdata2:0x800BB908; // type:object size:0x4 data:string
lbl_800BB90C = .sdata2:0x800BB90C; // type:object size:0x1 data:string
lbl_800BB910 = .sdata2:0x800BB910; // type:object size:0x8 data:double
lbl_800BB918 = .sdata2:0x800BB918; // type:object size:0x8 data:double
lbl_800BB920 = .sdata2:0x800BB920; // type:object size:0x8 data:double
lbl_800BB928 = .sdata2:0x800BB928; // type:object size:0x8 data:double
lbl_800BB930 = .sdata2:0x800BB930; // type:object size:0x8 data:double
lbl_800BB938 = .sdata2:0x800BB938; // type:object size:0x8 data:double
lbl_800BB940 = .sdata2:0x800BB940; // type:object size:0x8 data:double
lbl_800BB948 = .sdata2:0x800BB948; // type:object size:0x8 data:double
lbl_800BB950 = .sdata2:0x800BB950; // type:object size:0x8 data:double
lbl_800BB958 = .sdata2:0x800BB958; // type:object size:0x8 data:double
lbl_800BB960 = .sdata2:0x800BB960; // type:object size:0x8 data:double
lbl_800BB968 = .sdata2:0x800BB968; // type:object size:0x8 data:double
lbl_800BB970 = .sdata2:0x800BB970; // type:object size:0x8 data:double
lbl_800BB978 = .sdata2:0x800BB978; // type:object size:0x8 data:double
lbl_800BB980 = .sdata2:0x800BB980; // type:object size:0x8 data:double
lbl_800BB988 = .sdata2:0x800BB988; // type:object size:0x8 data:double
lbl_800BB990 = .sdata2:0x800BB990; // type:object size:0x8 data:double
lbl_800BB998 = .sdata2:0x800BB998; // type:object size:0x8 data:double
lbl_800BB9A0 = .sdata2:0x800BB9A0; // type:object size:0x8 data:double
lbl_800BB9A8 = .sdata2:0x800BB9A8; // type:object size:0x8 data:double
lbl_800BB9B0 = .sdata2:0x800BB9B0; // type:object size:0x8 data:double
lbl_800BB9B8 = .sdata2:0x800BB9B8; // type:object size:0x8 data:double
lbl_800BB9C0 = .sdata2:0x800BB9C0; // type:object size:0x8 data:double
lbl_800BB9C8 = .sdata2:0x800BB9C8; // type:object size:0x8 data:double
lbl_800BB9D0 = .sdata2:0x800BB9D0; // type:object size:0x8 data:double
lbl_800BB9D8 = .sdata2:0x800BB9D8; // type:object size:0x8 data:double
lbl_800BB9E0 = .sdata2:0x800BB9E0; // type:object size:0x8 data:double
lbl_800BB9E8 = .sdata2:0x800BB9E8; // type:object size:0x8 data:double
lbl_800BB9F0 = .sdata2:0x800BB9F0; // type:object size:0x8 data:double
lbl_800BB9F8 = .sdata2:0x800BB9F8; // type:object size:0x8 data:double
lbl_800BBA00 = .sdata2:0x800BBA00; // type:object size:0x8 data:double
lbl_800BBA08 = .sdata2:0x800BBA08; // type:object size:0x8 data:double
lbl_800BBA10 = .sdata2:0x800BBA10; // type:object size:0x8 data:double
lbl_800BBA18 = .sdata2:0x800BBA18; // type:object size:0x8 data:double
lbl_800BBA20 = .sdata2:0x800BBA20; // type:object size:0x8 data:double
lbl_800BBA28 = .sdata2:0x800BBA28; // type:object size:0x8 data:double
lbl_800BBA30 = .sdata2:0x800BBA30; // type:object size:0x8 data:double
lbl_800BBA38 = .sdata2:0x800BBA38; // type:object size:0x8 data:double
lbl_800BBA40 = .sdata2:0x800BBA40; // type:object size:0x8 data:double
lbl_800BBA48 = .sdata2:0x800BBA48; // type:object size:0x8 data:double
lbl_800BBA50 = .sdata2:0x800BBA50; // type:object size:0x8 data:double
lbl_800BBA58 = .sdata2:0x800BBA58; // type:object size:0x8 data:double
lbl_800BBA60 = .sdata2:0x800BBA60; // type:object size:0x8 data:double
lbl_800BBA68 = .sdata2:0x800BBA68; // type:object size:0x8 data:double
lbl_800BBA70 = .sdata2:0x800BBA70; // type:object size:0x8 data:double
lbl_800BBA78 = .sdata2:0x800BBA78; // type:object size:0x8 data:double
lbl_800BBA80 = .sdata2:0x800BBA80; // type:object size:0x8 data:double
lbl_800BBA88 = .sdata2:0x800BBA88; // type:object size:0x8 data:double
lbl_800BBA90 = .sdata2:0x800BBA90; // type:object size:0x8 data:double
lbl_800BBA98 = .sdata2:0x800BBA98; // type:object size:0x8 data:double
lbl_800BBAA0 = .sdata2:0x800BBAA0; // type:object size:0x8 data:double
lbl_800BBAA8 = .sdata2:0x800BBAA8; // type:object size:0x8 data:double
lbl_800BBAB0 = .sdata2:0x800BBAB0; // type:object size:0x8 data:double
lbl_800BBAB8 = .sdata2:0x800BBAB8; // type:object size:0x8 data:double
lbl_800BBAC0 = .sdata2:0x800BBAC0; // type:object size:0x8 data:double
lbl_800BBAC8 = .sdata2:0x800BBAC8; // type:object size:0x8 data:double
lbl_800BBAD0 = .sdata2:0x800BBAD0; // type:object size:0x8 data:double
lbl_800BBAD8 = .sdata2:0x800BBAD8; // type:object size:0x8 data:double
lbl_800BBAE0 = .sdata2:0x800BBAE0; // type:object size:0x8 data:double
lbl_800BBAE8 = .sdata2:0x800BBAE8; // type:object size:0x8 data:double
lbl_800BBAF0 = .sdata2:0x800BBAF0; // type:object size:0x8 data:double
lbl_800BBAF8 = .sdata2:0x800BBAF8; // type:object size:0x8 data:double
lbl_800BBB00 = .sdata2:0x800BBB00; // type:object size:0x8 data:double
lbl_800BBB08 = .sdata2:0x800BBB08; // type:object size:0x8 data:double
lbl_800BBB10 = .sdata2:0x800BBB10; // type:object size:0x8 data:double
lbl_800BBB18 = .sdata2:0x800BBB18; // type:object size:0x8 data:double
lbl_800BBB20 = .sdata2:0x800BBB20; // type:object size:0x8 data:double
lbl_800BBB28 = .sdata2:0x800BBB28; // type:object size:0x8 data:double
lbl_800BBB30 = .sdata2:0x800BBB30; // type:object size:0x8 data:double
lbl_800BBB38 = .sdata2:0x800BBB38; // type:object size:0x8 data:double
lbl_800BBB40 = .sdata2:0x800BBB40; // type:object size:0x8 data:double
lbl_800BBB48 = .sdata2:0x800BBB48; // type:object size:0x8 data:double
lbl_800BBB50 = .sdata2:0x800BBB50; // type:object size:0x8 data:double
lbl_800BBB58 = .sdata2:0x800BBB58; // type:object size:0x8 data:double
lbl_800BBB60 = .sdata2:0x800BBB60; // type:object size:0x8 data:double
lbl_800BBB68 = .sdata2:0x800BBB68; // type:object size:0x8 data:double
lbl_800BBB70 = .sdata2:0x800BBB70; // type:object size:0x8 data:double
lbl_800BBB78 = .sdata2:0x800BBB78; // type:object size:0x8 data:double
lbl_800BBB80 = .sdata2:0x800BBB80; // type:object size:0x8 data:double
lbl_800BBB88 = .sdata2:0x800BBB88; // type:object size:0x8 data:double
lbl_800BBB90 = .sdata2:0x800BBB90; // type:object size:0x8 data:double
lbl_800BBB98 = .sdata2:0x800BBB98; // type:object size:0x8 data:double
lbl_800BBBA0 = .sdata2:0x800BBBA0; // type:object size:0x8 data:double
lbl_800BBBA8 = .sdata2:0x800BBBA8; // type:object size:0x8 data:double
lbl_800BBBB0 = .sdata2:0x800BBBB0; // type:object size:0x8 data:double
lbl_800BBBB8 = .sdata2:0x800BBBB8; // type:object size:0x8 data:double
lbl_800BBBC0 = .sdata2:0x800BBBC0; // type:object size:0x8 data:double
lbl_800BBBC8 = .sdata2:0x800BBBC8; // type:object size:0x8 data:double
lbl_800BBBD0 = .sdata2:0x800BBBD0; // type:object size:0x8 data:double
lbl_800BBBD8 = .sdata2:0x800BBBD8; // type:object size:0x8 data:double
lbl_800BBBE0 = .sdata2:0x800BBBE0; // type:object size:0x8 data:double
lbl_800BBBE8 = .sdata2:0x800BBBE8; // type:object size:0x8 data:double
lbl_800BBBF0 = .sdata2:0x800BBBF0; // type:object size:0x8 data:double
lbl_800BBBF8 = .sdata2:0x800BBBF8; // type:object size:0x8 data:double
lbl_800BBC00 = .sdata2:0x800BBC00; // type:object size:0x8 data:double
lbl_800BBC08 = .sdata2:0x800BBC08; // type:object size:0x8 data:double
lbl_800BBC10 = .sdata2:0x800BBC10; // type:object size:0x8 data:double
lbl_800BBC18 = .sdata2:0x800BBC18; // type:object size:0x8 data:double
lbl_800BBC20 = .sdata2:0x800BBC20; // type:object size:0x8 data:double
lbl_800BBC28 = .sdata2:0x800BBC28; // type:object size:0x8 data:double
lbl_800BBC30 = .sdata2:0x800BBC30; // type:object size:0x8 data:double
lbl_800BBC38 = .sdata2:0x800BBC38; // type:object size:0x8 data:double
lbl_800BBC40 = .sdata2:0x800BBC40; // type:object size:0x8 data:double
lbl_800BBC48 = .sdata2:0x800BBC48; // type:object size:0x8 data:double
lbl_800BBC50 = .sdata2:0x800BBC50; // type:object size:0x8 data:double
lbl_800BBC58 = .sdata2:0x800BBC58; // type:object size:0x8 data:double
lbl_800BBC60 = .sdata2:0x800BBC60; // type:object size:0x8 data:double
lbl_800BBC68 = .sdata2:0x800BBC68; // type:object size:0x8 data:double
lbl_800BBC70 = .sdata2:0x800BBC70; // type:object size:0x8 data:double
lbl_800BBC78 = .sdata2:0x800BBC78; // type:object size:0x8 data:double
lbl_800BBC80 = .sdata2:0x800BBC80; // type:object size:0x8 data:double
lbl_800BBC88 = .sdata2:0x800BBC88; // type:object size:0x8 data:double
lbl_800BBC90 = .sdata2:0x800BBC90; // type:object size:0x8 data:double
lbl_800BBC98 = .sdata2:0x800BBC98; // type:object size:0x8 data:double
lbl_800BBCA0 = .sdata2:0x800BBCA0; // type:object size:0x8 data:double
lbl_800BBCA8 = .sdata2:0x800BBCA8; // type:object size:0x8 data:double
lbl_800BBCB0 = .sdata2:0x800BBCB0; // type:object size:0x8 data:double
lbl_800BBCB8 = .sdata2:0x800BBCB8; // type:object size:0x8 data:double
lbl_800BBCC0 = .sdata2:0x800BBCC0; // type:object size:0x8 data:double
lbl_800BBCC8 = .sdata2:0x800BBCC8; // type:object size:0x8 data:double
lbl_800BBCD0 = .sdata2:0x800BBCD0; // type:object size:0x8 data:double
lbl_800BBCD8 = .sdata2:0x800BBCD8; // type:object size:0x8 data:double
lbl_800BBCE0 = .sdata2:0x800BBCE0; // type:object size:0x8 data:double
lbl_800BBCE8 = .sdata2:0x800BBCE8; // type:object size:0x8 data:double
lbl_800BBCF0 = .sdata2:0x800BBCF0; // type:object size:0x8 data:double
lbl_800BBCF8 = .sdata2:0x800BBCF8; // type:object size:0x8 data:double
lbl_800BBD00 = .sdata2:0x800BBD00; // type:object size:0x8 data:double
lbl_800BBD08 = .sdata2:0x800BBD08; // type:object size:0x8 data:double
lbl_800BBD10 = .sdata2:0x800BBD10; // type:object size:0x8 data:double
lbl_800BBD18 = .sdata2:0x800BBD18; // type:object size:0x8 data:double
lbl_800BBD20 = .sdata2:0x800BBD20; // type:object size:0x8 data:double
lbl_800BBD28 = .sdata2:0x800BBD28; // type:object size:0x8 data:double
lbl_800BBD30 = .sdata2:0x800BBD30; // type:object size:0x8 data:double
lbl_800BBD38 = .sdata2:0x800BBD38; // type:object size:0x8 data:double
lbl_800BBD40 = .sdata2:0x800BBD40; // type:object size:0x8 data:double
lbl_800BBD48 = .sdata2:0x800BBD48; // type:object size:0x8 data:double
lbl_800BBD50 = .sdata2:0x800BBD50; // type:object size:0x8 data:double
lbl_800BBD58 = .sdata2:0x800BBD58; // type:object size:0x8 data:double
lbl_800BBD60 = .sdata2:0x800BBD60; // type:object size:0x8 data:double
lbl_800BBD68 = .sdata2:0x800BBD68; // type:object size:0x8 data:double
lbl_800BBD70 = .sdata2:0x800BBD70; // type:object size:0x8 data:double
lbl_800BBD78 = .sdata2:0x800BBD78; // type:object size:0x8 data:double
lbl_800BBD80 = .sdata2:0x800BBD80; // type:object size:0x8 data:double
lbl_800BBD88 = .sdata2:0x800BBD88; // type:object size:0x8 data:double
lbl_800BBD90 = .sdata2:0x800BBD90; // type:object size:0x8 data:double
lbl_800BBD98 = .sdata2:0x800BBD98; // type:object size:0x8 data:double
lbl_800BBDA0 = .sdata2:0x800BBDA0; // type:object size:0x8 data:double
lbl_800BBDA8 = .sdata2:0x800BBDA8; // type:object size:0x8 data:double
lbl_800BBDB0 = .sdata2:0x800BBDB0; // type:object size:0x8 data:double
lbl_800BBDB8 = .sdata2:0x800BBDB8; // type:object size:0x8 data:double
lbl_800BBDC0 = .sdata2:0x800BBDC0; // type:object size:0x8 data:double
lbl_800BBDC8 = .sdata2:0x800BBDC8; // type:object size:0x8 data:double
lbl_800BBDD0 = .sdata2:0x800BBDD0; // type:object size:0x8 data:double
lbl_800BBDD8 = .sdata2:0x800BBDD8; // type:object size:0x8 data:double
lbl_800BBDE0 = .sdata2:0x800BBDE0; // type:object size:0x8 data:double
lbl_800BBDE8 = .sdata2:0x800BBDE8; // type:object size:0x8 data:double
lbl_800BBDF0 = .sdata2:0x800BBDF0; // type:object size:0x8 data:double
lbl_800BBDF8 = .sdata2:0x800BBDF8; // type:object size:0x8 data:double
lbl_800BBE00 = .sdata2:0x800BBE00; // type:object size:0x8 data:double
lbl_800BBE08 = .sdata2:0x800BBE08; // type:object size:0x8 data:double
lbl_800BBE10 = .sdata2:0x800BBE10; // type:object size:0x8 data:double
lbl_800BBE18 = .sdata2:0x800BBE18; // type:object size:0x8 data:double
lbl_800BBE20 = .sdata2:0x800BBE20; // type:object size:0x8 data:double
lbl_800BBE28 = .sdata2:0x800BBE28; // type:object size:0x8 data:double
lbl_800BBE30 = .sdata2:0x800BBE30; // type:object size:0x8 data:double
lbl_800BBE38 = .sdata2:0x800BBE38; // type:object size:0x8 data:double
lbl_800BBE40 = .sdata2:0x800BBE40; // type:object size:0x4 data:float
lbl_800BBE48 = .sdata2:0x800BBE48; // type:object size:0x8 data:double
lbl_800BBE50 = .sdata2:0x800BBE50; // type:object size:0x8 data:double
lbl_800BBE58 = .sdata2:0x800BBE58; // type:object size:0x8 data:double
lbl_800BBE60 = .sdata2:0x800BBE60; // type:object size:0x4 data:float
lbl_800BBE68 = .sdata2:0x800BBE68; // type:object size:0x4 data:float
lbl_800BBE6C = .sdata2:0x800BBE6C; // type:object size:0x4 data:float
lbl_800BBE70 = .sdata2:0x800BBE70; // type:object size:0x4 data:float
lbl_800BBE74 = .sdata2:0x800BBE74; // type:object size:0x4 data:float
lbl_800BBE78 = .sdata2:0x800BBE78; // type:object size:0x4 data:float
lbl_800BBE7C = .sdata2:0x800BBE7C; // type:object size:0x4 data:float
lbl_800BBE80 = .sdata2:0x800BBE80; // type:object size:0x4 data:float
lbl_800BBE84 = .sdata2:0x800BBE84; // type:object size:0x4 data:float
lbl_800BBE88 = .sdata2:0x800BBE88; // type:object size:0x8 data:double
i2fMagic = .sdata2:0x800BBE90; // type:object size:0x8 scope:local data:double
value1_0 = .sdata2:0x800BBE98; // type:object size:0x4 data:float
value0_3 = .sdata2:0x800BBE9C; // type:object size:0x4 scope:local data:float
value0_6 = .sdata2:0x800BBEA0; // type:object size:0x4 scope:local data:float
lbl_800BBEA4 = .sdata2:0x800BBEA4; // type:object size:0x4 data:float
lbl_800BBEA8 = .sdata2:0x800BBEA8; // type:object size:0x4 data:float
lbl_800BBEAC = .sdata2:0x800BBEAC; // type:object size:0x4 data:float
lbl_800BBEB0 = .sdata2:0x800BBEB0; // type:object size:0x4 data:float
lbl_800BBEB4 = .sdata2:0x800BBEB4; // type:object size:0x4 data:float
lbl_800BBEB8 = .sdata2:0x800BBEB8; // type:object size:0x4 data:float
lbl_800BBEBC = .sdata2:0x800BBEBC; // type:object size:0x4 data:float
lbl_800BBEC0 = .sdata2:0x800BBEC0; // type:object size:0x4 data:float
lbl_800BBEC4 = .sdata2:0x800BBEC4; // type:object size:0x4 data:float
lbl_800BBEC8 = .sdata2:0x800BBEC8; // type:object size:0x8 data:double
value0_3 = .sdata2:0x800BBED0; // type:object size:0x4 scope:local data:float
value0_6 = .sdata2:0x800BBED4; // type:object size:0x4 scope:local data:float
i2fMagic = .sdata2:0x800BBED8; // type:object size:0x8 scope:local data:double
i2fMagic = .sdata2:0x800BBEE0; // type:object size:0x8 scope:local data:double
gx = .sdata2:0x800BBEE8; // type:object size:0x4 scope:global data:4byte
lbl_800BBEEC = .sdata2:0x800BBEEC; // type:object size:0x4 data:4byte
lbl_800BBEF0 = .sdata2:0x800BBEF0; // type:object size:0x4 data:4byte
lbl_800BBEF4 = .sdata2:0x800BBEF4; // type:object size:0x4 data:4byte
lbl_800BBEF8 = .sdata2:0x800BBEF8; // type:object size:0x4 data:float
lbl_800BBEFC = .sdata2:0x800BBEFC; // type:object size:0x4 data:float
lbl_800BBF00 = .sdata2:0x800BBF00; // type:object size:0x4 data:float
lbl_800BBF08 = .sdata2:0x800BBF08; // type:object size:0x8 data:double
lbl_800BBF10 = .sdata2:0x800BBF10; // type:object size:0x8 data:float
lbl_800BBF18 = .sdata2:0x800BBF18; // type:object size:0x4 data:float
lbl_800BBF20 = .sdata2:0x800BBF20; // type:object size:0x8 data:double
lbl_800BBF28 = .sdata2:0x800BBF28; // type:object size:0x4 data:float
lbl_800BBF2C = .sdata2:0x800BBF2C; // type:object size:0x4 data:float
lbl_800BBF30 = .sdata2:0x800BBF30; // type:object size:0x4 data:float
lbl_800BBF34 = .sdata2:0x800BBF34; // type:object size:0x4 data:float
lbl_800BBF38 = .sdata2:0x800BBF38; // type:object size:0x4 data:float
lbl_800BBF3C = .sdata2:0x800BBF3C; // type:object size:0x4 data:float
lbl_800BBF40 = .sdata2:0x800BBF40; // type:object size:0x8 data:float
lbl_800BBF48 = .sdata2:0x800BBF48; // type:object size:0x4 data:float
lbl_800BBF4C = .sdata2:0x800BBF4C; // type:object size:0x4 data:float
lbl_800BBF50 = .sdata2:0x800BBF50; // type:object size:0x4 data:float
lbl_800BBF58 = .sdata2:0x800BBF58; // type:object size:0x8 data:double
lbl_800BBF60 = .sdata2:0x800BBF60; // type:object size:0x4 data:float
lbl_800BBF68 = .sdata2:0x800BBF68; // type:object size:0x8 data:double
lbl_800BBF70 = .sdata2:0x800BBF70; // type:object size:0x4 data:float
lbl_800BBF78 = .sdata2:0x800BBF78; // type:object size:0x8 data:double
lbl_800BBF80 = .sdata2:0x800BBF80; // type:object size:0x4 data:float
lbl_800BBF84 = .sdata2:0x800BBF84; // type:object size:0x4 data:float
lbl_800BBF88 = .sdata2:0x800BBF88; // type:object size:0x4 data:float
lbl_800BBF90 = .sdata2:0x800BBF90; // type:object size:0x8 data:double
lbl_800BBF98 = .sdata2:0x800BBF98; // type:object size:0x4 data:float
lbl_800BBF9C = .sdata2:0x800BBF9C; // type:object size:0x4 data:float
lbl_800BBFA0 = .sdata2:0x800BBFA0; // type:object size:0x4 data:float
lbl_800BBFA4 = .sdata2:0x800BBFA4; // type:object size:0x4 data:float
lbl_800BBFA8 = .sdata2:0x800BBFA8; // type:object size:0x4 data:float
lbl_800BBFAC = .sdata2:0x800BBFAC; // type:object size:0x4 data:float
lbl_800BBFB0 = .sdata2:0x800BBFB0; // type:object size:0x4 data:float
lbl_800BBFB4 = .sdata2:0x800BBFB4; // type:object size:0x4 data:float
lbl_800BBFB8 = .sdata2:0x800BBFB8; // type:object size:0x4 data:float
lbl_800BBFBC = .sdata2:0x800BBFBC; // type:object size:0x4 data:float
lbl_800BBFC0 = .sdata2:0x800BBFC0; // type:object size:0x4 data:float
lbl_800BBFC4 = .sdata2:0x800BBFC4; // type:object size:0x4 data:float
lbl_800BBFC8 = .sdata2:0x800BBFC8; // type:object size:0x4 data:float
lbl_800BBFCC = .sdata2:0x800BBFCC; // type:object size:0x4 data:float
lbl_800BBFD0 = .sdata2:0x800BBFD0; // type:object size:0x4 data:float
lbl_800BBFD4 = .sdata2:0x800BBFD4; // type:object size:0x4 data:float
lbl_800BBFD8 = .sdata2:0x800BBFD8; // type:object size:0x4 data:4byte
lbl_800BBFDC = .sdata2:0x800BBFDC; // type:object size:0x4 data:4byte
lbl_800BBFE0 = .sdata2:0x800BBFE0; // type:object size:0x8 data:float
lbl_800BBFE8 = .sdata2:0x800BBFE8; // type:object size:0x4 data:float
lbl_800BBFEC = .sdata2:0x800BBFEC; // type:object size:0x4 data:float
lbl_800BBFF0 = .sdata2:0x800BBFF0; // type:object size:0x4 data:float
lbl_800BBFF8 = .sdata2:0x800BBFF8; // type:object size:0x8 data:double
lbl_800BC000 = .sdata2:0x800BC000; // type:object size:0x8 data:double
lbl_800BC008 = .sdata2:0x800BC008; // type:object size:0x4 data:float
lbl_800BC00C = .sdata2:0x800BC00C; // type:object size:0x4 data:float
lbl_800BC010 = .sdata2:0x800BC010; // type:object size:0x8 data:float
lbl_800BC018 = .sdata2:0x800BC018; // type:object size:0x4 data:float
lbl_800BC01C = .sdata2:0x800BC01C; // type:object size:0x4 data:float
lbl_800BC020 = .sdata2:0x800BC020; // type:object size:0x8 data:float
lbl_800BC028 = .sdata2:0x800BC028; // type:object size:0x4 data:float
lbl_800BC030 = .sdata2:0x800BC030; // type:object size:0x8 data:double
lbl_800BC038 = .sdata2:0x800BC038; // type:object size:0x4 data:4byte
lbl_800BC03C = .sdata2:0x800BC03C; // type:object size:0x4 data:4byte
lbl_800BC040 = .sdata2:0x800BC040; // type:object size:0x4 data:float
lbl_800BC044 = .sdata2:0x800BC044; // type:object size:0x4 data:float
lbl_800BC048 = .sdata2:0x800BC048; // type:object size:0x4 data:float
lbl_800BC04C = .sdata2:0x800BC04C; // type:object size:0x4 data:float
lbl_800BC050 = .sdata2:0x800BC050; // type:object size:0x4 data:float
lbl_800BC054 = .sdata2:0x800BC054; // type:object size:0x4 data:float
lbl_800BC058 = .sdata2:0x800BC058; // type:object size:0x8 data:double
lbl_800BC060 = .sdata2:0x800BC060; // type:object size:0x8 data:double
lbl_800BC068 = .sdata2:0x800BC068; // type:object size:0x8 data:double
lbl_800BC070 = .sdata2:0x800BC070; // type:object size:0x4 data:float
lbl_800BC078 = .sdata2:0x800BC078; // type:object size:0x8 data:double
lbl_800BC080 = .sdata2:0x800BC080; // type:object size:0x4 data:float
lbl_800BC084 = .sdata2:0x800BC084; // type:object size:0x4 data:float
lbl_800BC088 = .sdata2:0x800BC088; // type:object size:0x8 data:double
lbl_800BC090 = .sdata2:0x800BC090; // type:object size:0x8 data:double
lbl_800BC098 = .sdata2:0x800BC098; // type:object size:0x4 data:float
lbl_800BC09C = .sdata2:0x800BC09C; // type:object size:0x4 data:float
lbl_800BC0A0 = .sdata2:0x800BC0A0; // type:object size:0x8 data:double
lbl_800BC0A8 = .sdata2:0x800BC0A8; // type:object size:0x4 data:float
lbl_800BC0AC = .sdata2:0x800BC0AC; // type:object size:0x4 data:float
lbl_800BC0B0 = .sdata2:0x800BC0B0; // type:object size:0x4 data:float
lbl_800BC0B8 = .sdata2:0x800BC0B8; // type:object size:0x8 data:double
lbl_800BC0C0 = .sdata2:0x800BC0C0; // type:object size:0x8 data:double
lbl_800BC0C8 = .sdata2:0x800BC0C8; // type:object size:0x8 data:double
lbl_800BC0D0 = .sdata2:0x800BC0D0; // type:object size:0x8 data:double
lbl_800BC0D8 = .sdata2:0x800BC0D8; // type:object size:0x8 data:double
lbl_800BC0E0 = .sdata2:0x800BC0E0; // type:object size:0x8 data:double
lbl_800BC0E8 = .sdata2:0x800BC0E8; // type:object size:0x8 data:double
lbl_800BC0F0 = .sdata2:0x800BC0F0; // type:object size:0x4 data:float
lbl_800BC0F4 = .sdata2:0x800BC0F4; // type:object size:0x4 data:float
lbl_800BC0F8 = .sdata2:0x800BC0F8; // type:object size:0x4 data:float
lbl_800BC0FC = .sdata2:0x800BC0FC; // type:object size:0x4 data:float
lbl_800BC100 = .sdata2:0x800BC100; // type:object size:0x4 data:float
lbl_800BC108 = .sdata2:0x800BC108; // type:object size:0x8 data:double
lbl_800BC110 = .sdata2:0x800BC110; // type:object size:0x4 data:float
lbl_800BC114 = .sdata2:0x800BC114; // type:object size:0x4 data:float
lbl_800BC118 = .sdata2:0x800BC118; // type:object size:0x4 data:float
lbl_800BC11C = .sdata2:0x800BC11C; // type:object size:0x4 data:float
lbl_800BC120 = .sdata2:0x800BC120; // type:object size:0x4 data:float
lbl_800BC124 = .sdata2:0x800BC124; // type:object size:0x4 data:float
lbl_800BC128 = .sdata2:0x800BC128; // type:object size:0x8 data:float
lbl_800BC130 = .sdata2:0x800BC130; // type:object size:0x4 data:float
lbl_800BC134 = .sdata2:0x800BC134; // type:object size:0x4 data:float
lbl_800BC138 = .sdata2:0x800BC138; // type:object size:0x8 data:float
lbl_800BC140 = .sdata2:0x800BC140; // type:object size:0x4 data:float
lbl_800BC144 = .sdata2:0x800BC144; // type:object size:0x4 data:float
lbl_800BC148 = .sdata2:0x800BC148; // type:object size:0x8 data:float
lbl_800BC150 = .sdata2:0x800BC150; // type:object size:0x8 data:float
lbl_800BC158 = .sdata2:0x800BC158; // type:object size:0x4 data:float
lbl_800BC15C = .sdata2:0x800BC15C; // type:object size:0x4 data:float
lbl_800BC160 = .sdata2:0x800BC160; // type:object size:0x8 data:double
lbl_800BC168 = .sdata2:0x800BC168; // type:object size:0x8 data:double
lbl_800BC170 = .sdata2:0x800BC170; // type:object size:0x8 data:float
lbl_800BC178 = .sdata2:0x800BC178; // type:object size:0x8 data:float
lbl_800BC180 = .sdata2:0x800BC180; // type:object size:0x4 data:float
lbl_800BC188 = .sdata2:0x800BC188; // type:object size:0x8 data:double
lbl_800BC190 = .sdata2:0x800BC190; // type:object size:0x8 data:float
lbl_800BC198 = .sdata2:0x800BC198; // type:object size:0x4 data:float
lbl_800BC19C = .sdata2:0x800BC19C; // type:object size:0x4 data:float
lbl_800BC1A0 = .sdata2:0x800BC1A0; // type:object size:0x8 data:double
lbl_800BC1A8 = .sdata2:0x800BC1A8; // type:object size:0x8 data:double
lbl_800BC1B0 = .sdata2:0x800BC1B0; // type:object size:0x4 data:float
lbl_800BC1B4 = .sdata2:0x800BC1B4; // type:object size:0x4 data:float
lbl_800BC1B8 = .sdata2:0x800BC1B8; // type:object size:0x8 data:double
lbl_800BC1C0 = .sdata2:0x800BC1C0; // type:object size:0x4 data:float
lbl_800BC1C8 = .sdata2:0x800BC1C8; // type:object size:0x8 data:double
lbl_800BC1D0 = .sdata2:0x800BC1D0; // type:object size:0x4 data:float
lbl_800BC1D4 = .sdata2:0x800BC1D4; // type:object size:0x4 data:float
lbl_800BC1D8 = .sdata2:0x800BC1D8; // type:object size:0x4 data:float
lbl_800BC1E0 = .sdata2:0x800BC1E0; // type:object size:0x8 data:double
lbl_800BC1E8 = .sdata2:0x800BC1E8; // type:object size:0x4 data:float
lbl_800BC1EC = .sdata2:0x800BC1EC; // type:object size:0x4 data:float
lbl_800BC1F0 = .sdata2:0x800BC1F0; // type:object size:0x4 data:float
lbl_800BC1F4 = .sdata2:0x800BC1F4; // type:object size:0x4 data:float
lbl_800BC1F8 = .sdata2:0x800BC1F8; // type:object size:0x8 data:float
lbl_800BC200 = .sdata2:0x800BC200; // type:object size:0x4 data:float
lbl_800BC204 = .sdata2:0x800BC204; // type:object size:0x4 data:float
lbl_800BC208 = .sdata2:0x800BC208; // type:object size:0x4 data:float
lbl_800BC20C = .sdata2:0x800BC20C; // type:object size:0x4 data:float
lbl_800BC210 = .sdata2:0x800BC210; // type:object size:0x8 data:float
lbl_800BC218 = .sdata2:0x800BC218; // type:object size:0x8 data:float
lbl_800BC220 = .sdata2:0x800BC220; // type:object size:0x4 data:float
lbl_800BC224 = .sdata2:0x800BC224; // type:object size:0x4 data:float
lbl_800BC228 = .sdata2:0x800BC228; // type:object size:0x4 data:float
lbl_800BC22C = .sdata2:0x800BC22C; // type:object size:0x4 data:float
lbl_800BC230 = .sdata2:0x800BC230; // type:object size:0x8 data:double
lbl_800BC238 = .sdata2:0x800BC238; // type:object size:0x8 data:double
lbl_800BC240 = .sdata2:0x800BC240; // type:object size:0x8 data:double
lbl_800BC248 = .sdata2:0x800BC248; // type:object size:0x8 data:double
lbl_800BC250 = .sdata2:0x800BC250; // type:object size:0x4 data:float
lbl_800BC254 = .sdata2:0x800BC254; // type:object size:0x4 data:float
lbl_800BC258 = .sdata2:0x800BC258; // type:object size:0x4 data:float
lbl_800BC25C = .sdata2:0x800BC25C; // type:object size:0x4 data:float
lbl_800BC260 = .sdata2:0x800BC260; // type:object size:0x4 data:float
lbl_800BC264 = .sdata2:0x800BC264; // type:object size:0x4 data:float
lbl_800BC268 = .sdata2:0x800BC268; // type:object size:0x4 data:float
lbl_800BC26C = .sdata2:0x800BC26C; // type:object size:0x4 data:float
lbl_800BC270 = .sdata2:0x800BC270; // type:object size:0x4 data:float
lbl_800BC274 = .sdata2:0x800BC274; // type:object size:0x4 data:float
lbl_800BC278 = .sdata2:0x800BC278; // type:object size:0x4 data:float
lbl_800BC27C = .sdata2:0x800BC27C; // type:object size:0x4 data:float
lbl_800BC280 = .sdata2:0x800BC280; // type:object size:0x4 data:float
lbl_800BC284 = .sdata2:0x800BC284; // type:object size:0x4 data:float
lbl_800BC288 = .sdata2:0x800BC288; // type:object size:0x4 data:float
lbl_800BC290 = .sdata2:0x800BC290; // type:object size:0x8 data:double
lbl_800BC298 = .sdata2:0x800BC298; // type:object size:0x4 data:float
lbl_800BC29C = .sdata2:0x800BC29C; // type:object size:0x4 data:float
lbl_800BC2A0 = .sdata2:0x800BC2A0; // type:object size:0x8 data:double
lbl_800BC2A8 = .sdata2:0x800BC2A8; // type:object size:0x8 data:double
lbl_800BC2B0 = .sdata2:0x800BC2B0; // type:object size:0x4 data:float
lbl_800BC2B8 = .sdata2:0x800BC2B8; // type:object size:0x8 data:double
lbl_800BC2C0 = .sdata2:0x800BC2C0; // type:object size:0x8 data:double
lbl_800BC2C8 = .sdata2:0x800BC2C8; // type:object size:0x8 data:double
lbl_800BC2D0 = .sdata2:0x800BC2D0; // type:object size:0x4 data:float
lbl_800BC2D4 = .sdata2:0x800BC2D4; // type:object size:0x4 data:float
lbl_800BC2D8 = .sdata2:0x800BC2D8; // type:object size:0x4 data:float
lbl_800BC2DC = .sdata2:0x800BC2DC; // type:object size:0x4 data:float
lbl_800BC2E0 = .sdata2:0x800BC2E0; // type:object size:0x8 data:float
lbl_800BC2E8 = .sdata2:0x800BC2E8; // type:object size:0x4 data:float
lbl_800BC2EC = .sdata2:0x800BC2EC; // type:object size:0x4 data:float
lbl_800BC2F0 = .sdata2:0x800BC2F0; // type:object size:0x4 data:float
lbl_800BC2F4 = .sdata2:0x800BC2F4; // type:object size:0x4 data:float
lbl_800BC2F8 = .sdata2:0x800BC2F8; // type:object size:0x4 data:float
lbl_800BC2FC = .sdata2:0x800BC2FC; // type:object size:0x4 data:float
lbl_800BC300 = .sdata2:0x800BC300; // type:object size:0x4 data:float
lbl_800BC308 = .sdata2:0x800BC308; // type:object size:0x8 data:double
lbl_800BC310 = .sdata2:0x800BC310; // type:object size:0x4 data:float
lbl_800BC314 = .sdata2:0x800BC314; // type:object size:0x4 data:float
lbl_800BC318 = .sdata2:0x800BC318; // type:object size:0x4 data:float
lbl_800BC320 = .sdata2:0x800BC320; // type:object size:0x8 data:double
lbl_800BC328 = .sdata2:0x800BC328; // type:object size:0x8 data:double
