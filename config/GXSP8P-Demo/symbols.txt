memset = .init:0x80003100; // type:function size:0x30 scope:global
__fill_mem = .init:0x80003130; // type:function size:0xB8 scope:global
memcpy = .init:0x800031E8; // type:function size:0x50 scope:global
TRK_memset = .init:0x80003238; // type:function size:0x30
TRK_memcpy = .init:0x80003268; // type:function size:0x24
gTRKInterruptVectorTable = .init:0x8000328C; // type:label scope:global
__TRK_reset = .init:0x800051C0; // type:function size:0x104
gTRKInterruptVectorTableEnd = .init:0x800051C0; // type:label scope:global
__check_pad3 = .init:0x800052C4; // type:function size:0x40 scope:local
__set_debug_bba = .init:0x80005304; // type:function size:0xC scope:local
__get_debug_bba = .init:0x80005310; // type:function size:0x8 scope:local
__start = .init:0x80005318; // type:function size:0x15C scope:weak
__init_registers = .init:0x80005474; // type:function size:0x90 scope:local
__init_data = .init:0x80005504; // type:function size:0xC0 scope:local
__init_hardware = .init:0x800055C4; // type:function size:0x24 scope:global
__flush_cache = .init:0x800055E8; // type:function size:0x34 scope:global
_rom_copy_info = .init:0x8000561C; // type:object size:0x6C scope:global data:4byte
_bss_init_info = .init:0x80005688; // type:object size:0x20 scope:global data:4byte
main = .text:0x800056C0; // type:function size:0x4EC scope:global
fn_80005BAC = .text:0x80005BAC; // type:function size:0x3E0
fn_80005F8C = .text:0x80005F8C; // type:function size:0x350
fn_800062DC = .text:0x800062DC; // type:function size:0x194
fn_80006470 = .text:0x80006470; // type:function size:0xF4
__va_arg = .text:0x80006564; // type:function size:0xC8 scope:global
__destroy_global_chain = .text:0x8000662C; // type:function size:0x48 scope:global
__cvt_fp2unsigned = .text:0x80006674; // type:function size:0x5C
__save_fpr = .text:0x800066D0; // type:function size:0x4C scope:global
_savefpr_14 = .text:0x800066D0; // type:label scope:global
_savefpr_15 = .text:0x800066D4; // type:label scope:global
_savefpr_16 = .text:0x800066D8; // type:label scope:global
_savefpr_17 = .text:0x800066DC; // type:label scope:global
_savefpr_18 = .text:0x800066E0; // type:label scope:global
_savefpr_19 = .text:0x800066E4; // type:label scope:global
_savefpr_20 = .text:0x800066E8; // type:label scope:global
_savefpr_21 = .text:0x800066EC; // type:label scope:global
_savefpr_22 = .text:0x800066F0; // type:label scope:global
_savefpr_23 = .text:0x800066F4; // type:label scope:global
_savefpr_24 = .text:0x800066F8; // type:label scope:global
_savefpr_25 = .text:0x800066FC; // type:label scope:global
_savefpr_26 = .text:0x80006700; // type:label scope:global
_savefpr_27 = .text:0x80006704; // type:label scope:global
_savefpr_28 = .text:0x80006708; // type:label scope:global
_savefpr_29 = .text:0x8000670C; // type:label scope:global
_savefpr_30 = .text:0x80006710; // type:label scope:global
_savefpr_31 = .text:0x80006714; // type:label scope:global
__restore_fpr = .text:0x8000671C; // type:function size:0x4C scope:global
_restfpr_14 = .text:0x8000671C; // type:label scope:global
_restfpr_15 = .text:0x80006720; // type:label scope:global
_restfpr_16 = .text:0x80006724; // type:label scope:global
_restfpr_17 = .text:0x80006728; // type:label scope:global
_restfpr_18 = .text:0x8000672C; // type:label scope:global
_restfpr_19 = .text:0x80006730; // type:label scope:global
_restfpr_20 = .text:0x80006734; // type:label scope:global
_restfpr_21 = .text:0x80006738; // type:label scope:global
_restfpr_22 = .text:0x8000673C; // type:label scope:global
_restfpr_23 = .text:0x80006740; // type:label scope:global
_restfpr_24 = .text:0x80006744; // type:label scope:global
_restfpr_25 = .text:0x80006748; // type:label scope:global
_restfpr_26 = .text:0x8000674C; // type:label scope:global
_restfpr_27 = .text:0x80006750; // type:label scope:global
_restfpr_28 = .text:0x80006754; // type:label scope:global
_restfpr_29 = .text:0x80006758; // type:label scope:global
_restfpr_30 = .text:0x8000675C; // type:label scope:global
_restfpr_31 = .text:0x80006760; // type:label scope:global
__save_gpr = .text:0x80006768; // type:function size:0x4C scope:global
_savegpr_14 = .text:0x80006768; // type:label scope:global
_savegpr_15 = .text:0x8000676C; // type:label scope:global
_savegpr_16 = .text:0x80006770; // type:label scope:global
_savegpr_17 = .text:0x80006774; // type:label scope:global
_savegpr_18 = .text:0x80006778; // type:label scope:global
_savegpr_19 = .text:0x8000677C; // type:label scope:global
_savegpr_20 = .text:0x80006780; // type:label scope:global
_savegpr_21 = .text:0x80006784; // type:label scope:global
_savegpr_22 = .text:0x80006788; // type:label scope:global
_savegpr_23 = .text:0x8000678C; // type:label scope:global
_savegpr_24 = .text:0x80006790; // type:label scope:global
_savegpr_25 = .text:0x80006794; // type:label scope:global
_savegpr_26 = .text:0x80006798; // type:label scope:global
_savegpr_27 = .text:0x8000679C; // type:label scope:global
_savegpr_28 = .text:0x800067A0; // type:label scope:global
_savegpr_29 = .text:0x800067A4; // type:label scope:global
_savegpr_30 = .text:0x800067A8; // type:label scope:global
_savegpr_31 = .text:0x800067AC; // type:label scope:global
__restore_gpr = .text:0x800067B4; // type:function size:0x4C scope:global
_restgpr_14 = .text:0x800067B4; // type:label scope:global
_restgpr_15 = .text:0x800067B8; // type:label scope:global
_restgpr_16 = .text:0x800067BC; // type:label scope:global
_restgpr_17 = .text:0x800067C0; // type:label scope:global
_restgpr_18 = .text:0x800067C4; // type:label scope:global
_restgpr_19 = .text:0x800067C8; // type:label scope:global
_restgpr_20 = .text:0x800067CC; // type:label scope:global
_restgpr_21 = .text:0x800067D0; // type:label scope:global
_restgpr_22 = .text:0x800067D4; // type:label scope:global
_restgpr_23 = .text:0x800067D8; // type:label scope:global
_restgpr_24 = .text:0x800067DC; // type:label scope:global
_restgpr_25 = .text:0x800067E0; // type:label scope:global
_restgpr_26 = .text:0x800067E4; // type:label scope:global
_restgpr_27 = .text:0x800067E8; // type:label scope:global
_restgpr_28 = .text:0x800067EC; // type:label scope:global
_restgpr_29 = .text:0x800067F0; // type:label scope:global
_restgpr_30 = .text:0x800067F4; // type:label scope:global
_restgpr_31 = .text:0x800067F8; // type:label scope:global
__div2u = .text:0x80006800; // type:function size:0xEC scope:global
__div2i = .text:0x800068EC; // type:function size:0x138
__mod2u = .text:0x80006A24; // type:function size:0xE4 scope:global
__shl2i = .text:0x80006B08; // type:function size:0x24
__shr2u = .text:0x80006B2C; // type:function size:0x24
__shr2i = .text:0x80006B50; // type:function size:0x28
__cvt_sll_dbl = .text:0x80006B78; // type:function size:0xB0
__cvt_dbl_usll = .text:0x80006C28; // type:function size:0xCC
__sys_free = .text:0x80006CF4; // type:function size:0xB8
exit = .text:0x80006DAC; // type:function size:0xCC scope:global
free = .text:0x80006E78; // type:function size:0x134
deallocate_from_fixed_pools = .text:0x80006FAC; // type:function size:0x1FC
SubBlock_merge_next = .text:0x800071A8; // type:function size:0xBC
Block_link = .text:0x80007264; // type:function size:0x17C
__flush_all = .text:0x800073E0; // type:function size:0x70
__close_all = .text:0x80007450; // type:function size:0x98 scope:global
__dec2num = .text:0x800074E8; // type:function size:0x954
__num2dec = .text:0x80007E3C; // type:function size:0x1A4
__num2dec_internal = .text:0x80007FE0; // type:function size:0x23C
__minus_dec = .text:0x8000821C; // type:function size:0x4FC
__less_dec = .text:0x80008718; // type:function size:0xF8
__equals_dec = .text:0x80008810; // type:function size:0x10C
__two_exp = .text:0x8000891C; // type:function size:0x340
__str2dec = .text:0x80008C5C; // type:function size:0xEC
__timesdec = .text:0x80008D48; // type:function size:0x28C
__ull2dec = .text:0x80008FD4; // type:function size:0x110
__count_trailing_zerol = .text:0x800090E4; // type:function size:0x70
__flush_buffer = .text:0x80009154; // type:function size:0xC4 scope:global
__prep_buffer = .text:0x80009218; // type:function size:0x34 scope:global
toupper = .text:0x8000924C; // type:function size:0x24
tolower = .text:0x80009270; // type:function size:0x24
__fwrite = .text:0x80009294; // type:function size:0x30C scope:global
fwrite = .text:0x800095A0; // type:function size:0x20 scope:global
fflush = .text:0x800095C0; // type:function size:0x138
fclose = .text:0x800096F8; // type:function size:0xC0
fseek = .text:0x800097B8; // type:function size:0x20 scope:global
_fseek = .text:0x800097D8; // type:function size:0x23C
ftell = .text:0x80009A14; // type:function size:0x70
wcstombs = .text:0x80009A84; // type:function size:0xA0 scope:global
unicode_to_UTF8 = .text:0x80009B24; // type:function size:0xA4
mbtowc = .text:0x80009BC8; // type:function size:0x20
utf8_to_unicode = .text:0x80009BE8; // type:function size:0x120
is_utf8_complete = .text:0x80009D08; // type:function size:0xEC
memcmp = .text:0x80009DF4; // type:function size:0x4C
__memrchr = .text:0x80009E40; // type:function size:0x2C scope:global
memchr = .text:0x80009E6C; // type:function size:0x2C scope:global
memmove = .text:0x80009E98; // type:function size:0xCC scope:global
__copy_longs_rev_unaligned = .text:0x80009F64; // type:function size:0xB0
__copy_longs_unaligned = .text:0x8000A014; // type:function size:0xC4
__copy_longs_rev_aligned = .text:0x8000A0D8; // type:function size:0xAC
__copy_longs_aligned = .text:0x8000A184; // type:function size:0xC0
__stdio_atexit = .text:0x8000A244; // type:function size:0x10 scope:global
sprintf = .text:0x8000A254; // type:function size:0xE0
vsprintf = .text:0x8000A334; // type:function size:0x78
vprintf = .text:0x8000A3AC; // type:function size:0x7C scope:global
__StringWrite = .text:0x8000A428; // type:function size:0x6C
__FileWrite = .text:0x8000A494; // type:function size:0x58 scope:global
__pformatter = .text:0x8000A4EC; // type:function size:0x774 scope:local
float2str = .text:0x8000AC60; // type:function size:0x6EC scope:local
round_decimal = .text:0x8000B34C; // type:function size:0x12C
double2hex = .text:0x8000B478; // type:function size:0x338 scope:local
longlong2str = .text:0x8000B7B0; // type:function size:0x2DC scope:local
long2str = .text:0x8000BA8C; // type:function size:0x220 scope:local
parse_format = .text:0x8000BCAC; // type:function size:0x504 scope:local
srand = .text:0x8000C1B0; // type:function size:0x8
rand = .text:0x8000C1B8; // type:function size:0x20
sscanf = .text:0x8000C1D8; // type:function size:0xC4
__StringRead = .text:0x8000C29C; // type:function size:0x90
__sformatter = .text:0x8000C32C; // type:function size:0x9AC
parse_format = .text:0x8000CCD8; // type:function size:0x548 scope:local
strstr = .text:0x8000D220; // type:function size:0x68
strchr = .text:0x8000D288; // type:function size:0x30 scope:global
strncmp = .text:0x8000D2B8; // type:function size:0x40
strcmp = .text:0x8000D2F8; // type:function size:0x128
strncat = .text:0x8000D420; // type:function size:0x4C
strcat = .text:0x8000D46C; // type:function size:0x2C
strncpy = .text:0x8000D498; // type:function size:0x44
strcpy = .text:0x8000D4DC; // type:function size:0xB8
strlen = .text:0x8000D594; // type:function size:0x1C scope:global
__strtold = .text:0x8000D5B0; // type:function size:0x100C
atoi = .text:0x8000E5BC; // type:function size:0xC0
strtoul = .text:0x8000E67C; // type:function size:0xAC
__strtoull = .text:0x8000E728; // type:function size:0x40C
__strtoul = .text:0x8000EB34; // type:function size:0x378
__close_console = .text:0x8000EEAC; // type:function size:0x8
__write_console = .text:0x8000EEB4; // type:function size:0xC4
fwide = .text:0x8000EF78; // type:function size:0x88 scope:global
__ieee754_acos = .text:0x8000F000; // type:function size:0x310
__ieee754_asin = .text:0x8000F310; // type:function size:0x264
__ieee754_atan2 = .text:0x8000F574; // type:function size:0x290
__ieee754_log = .text:0x8000F804; // type:function size:0x27C
__ieee754_log10 = .text:0x8000FA80; // type:function size:0x110
__ieee754_pow = .text:0x8000FB90; // type:function size:0x88C
__ieee754_rem_pio2 = .text:0x8001041C; // type:function size:0x3A0
__kernel_cos = .text:0x800107BC; // type:function size:0xF4
__kernel_rem_pio2 = .text:0x800108B0; // type:function size:0xE54
__kernel_sin = .text:0x80011704; // type:function size:0xA0
__kernel_tan = .text:0x800117A4; // type:function size:0x214
atan = .text:0x800119B8; // type:function size:0x200
ceil = .text:0x80011BB8; // type:function size:0x144
copysign = .text:0x80011CFC; // type:function size:0x28
cos = .text:0x80011D24; // type:function size:0xD4
floor = .text:0x80011DF8; // type:function size:0x148
frexp = .text:0x80011F40; // type:function size:0x8C
ldexp = .text:0x80011FCC; // type:function size:0x1C4
modf = .text:0x80012190; // type:function size:0xFC
nextafter = .text:0x8001228C; // type:function size:0x184
sin = .text:0x80012410; // type:function size:0xD8
tan = .text:0x800124E8; // type:function size:0x78
acos = .text:0x80012560; // type:function size:0x20
asin = .text:0x80012580; // type:function size:0x20
atan2 = .text:0x800125A0; // type:function size:0x20
log = .text:0x800125C0; // type:function size:0x20
log10 = .text:0x800125E0; // type:function size:0x20
pow = .text:0x80012600; // type:function size:0x20
modff__FfPf = .text:0x80012620; // type:function size:0x130
sqrtf__Ff = .text:0x80012750; // type:function size:0x64
floorf = .text:0x800127B4; // type:function size:0x24
powf = .text:0x800127D8; // type:function size:0x24
fabsf = .text:0x800127FC; // type:function size:0xC
tanf = .text:0x80012808; // type:function size:0x24
sinf = .text:0x8001282C; // type:function size:0x24
cosf = .text:0x80012850; // type:function size:0x24
atanf = .text:0x80012874; // type:function size:0x24
acosf = .text:0x80012898; // type:function size:0x24
TRKNubMainLoop = .text:0x800128BC; // type:function size:0xF8 scope:global
TRKDestructEvent = .text:0x800129B4; // type:function size:0x24 scope:global
TRKConstructEvent = .text:0x800129D8; // type:function size:0x18
TRKPostEvent = .text:0x800129F0; // type:function size:0xE0
TRKGetNextEvent = .text:0x80012AD0; // type:function size:0xB4 scope:global
TRKInitializeEventQueue = .text:0x80012B84; // type:function size:0x58 scope:global
TRKNubWelcome = .text:0x80012BDC; // type:function size:0x28 scope:global
TRKTerminateNub = .text:0x80012C04; // type:function size:0x24 scope:global
TRKInitializeNub = .text:0x80012C28; // type:function size:0x134 scope:global
TRKMessageSend = .text:0x80012D5C; // type:function size:0x1DC
TRKReadBuffer_ui32 = .text:0x80012F38; // type:function size:0xF0
TRKReadBuffer_ui8 = .text:0x80013028; // type:function size:0x98
TRKReadBuffer1_ui64 = .text:0x800130C0; // type:function size:0xE8
TRKReadBuffer1_ui32 = .text:0x800131A8; // type:function size:0xC8
TRKReadBuffer1_ui16 = .text:0x80013270; // type:function size:0xB8
TRKReadBuffer1_ui8 = .text:0x80013328; // type:function size:0x80
TRKAppendBuffer_ui32 = .text:0x800133A8; // type:function size:0xA8
TRKAppendBuffer_ui8 = .text:0x80013450; // type:function size:0x68
TRKAppendBuffer1_ui64 = .text:0x800134B8; // type:function size:0x88
TRKAppendBuffer1_ui32 = .text:0x80013540; // type:function size:0x64
TRKAppendBuffer1_ui16 = .text:0x800135A4; // type:function size:0x54
TRKReadBuffer = .text:0x800135F8; // type:function size:0x8C
TRKAppendBuffer = .text:0x80013684; // type:function size:0xA4
TRKSetBufferPosition = .text:0x80013728; // type:function size:0x30
TRKResetBuffer = .text:0x80013758; // type:function size:0x40
TRKReleaseBuffer = .text:0x80013798; // type:function size:0x64
TRKGetBuffer = .text:0x800137FC; // type:function size:0x2C scope:global
TRKGetFreeBuffer = .text:0x80013828; // type:function size:0xC8
TRKInitializeMessageBuffers = .text:0x800138F0; // type:function size:0x74 scope:global
TRKTerminateSerialHandler = .text:0x80013964; // type:function size:0x8
TRKInitializeSerialHandler = .text:0x8001396C; // type:function size:0x24 scope:global
TRKProcessInput = .text:0x80013990; // type:function size:0x50
TRKGetInput = .text:0x800139E0; // type:function size:0x98 scope:global
TRKTestForPacket = .text:0x80013A78; // type:function size:0x2B8
usr_put_initialize = .text:0x80013D30; // type:function size:0x4 scope:global
usr_puts_serial = .text:0x80013D34; // type:function size:0x88
TRKDispatchMessage = .text:0x80013DBC; // type:function size:0x84 scope:global
TRKInitializeDispatcher = .text:0x80013E40; // type:function size:0x18 scope:global
TRKDoSetOption = .text:0x80013E58; // type:function size:0x1A4
TRKDoStop = .text:0x80013FFC; // type:function size:0x100
TRKDoStep = .text:0x800140FC; // type:function size:0x530
TRKDoContinue = .text:0x8001462C; // type:function size:0x154
TRKDoFlushCache = .text:0x80014780; // type:function size:0x2F8
TRKDoWriteRegisters = .text:0x80014A78; // type:function size:0x3C8
TRKDoReadRegisters = .text:0x80014E40; // type:function size:0x3CC
TRKDoWriteMemory = .text:0x8001520C; // type:function size:0x420
TRKDoReadMemory = .text:0x8001562C; // type:function size:0x410
TRKDoCPUType = .text:0x80015A3C; // type:function size:0x398
TRKDoSupportMask = .text:0x80015DD4; // type:function size:0x230
TRKDoVersions = .text:0x80016004; // type:function size:0x2D8
TRKDoReset = .text:0x800162DC; // type:function size:0xB8
TRKDoDisconnect = .text:0x80016394; // type:function size:0xE4
TRKDoConnect = .text:0x80016478; // type:function size:0xBC
TRKDoUnsupported = .text:0x80016534; // type:function size:0xB0
TRKStandardACK = .text:0x800165E4; // type:function size:0xB8
SetTRKConnected = .text:0x8001669C; // type:function size:0xC
GetTRKConnected = .text:0x800166A8; // type:function size:0x10
HandlePositionFileSupportRequest = .text:0x800166B8; // type:function size:0x190
HandleCloseFileSupportRequest = .text:0x80016848; // type:function size:0x120
HandleOpenFileSupportRequest = .text:0x80016968; // type:function size:0x1A8
TRKRequestSend = .text:0x80016B10; // type:function size:0x1A4
TRKSuppAccessFile = .text:0x80016CB4; // type:function size:0x2C4
TRKReleaseMutex = .text:0x80016F78; // type:function size:0x8
TRKAcquireMutex = .text:0x80016F80; // type:function size:0x8
TRKInitializeMutex = .text:0x80016F88; // type:function size:0x8
TRKDoNotifyStopped = .text:0x80016F90; // type:function size:0xD8
TRK_flush_cache = .text:0x80017068; // type:function size:0x38
TRK_fill_mem = .text:0x800170A0; // type:function size:0xBC
__TRK_get_MSR = .text:0x8001715C; // type:function size:0x8
__TRK_set_MSR = .text:0x80017164; // type:function size:0x8
TRK_ppc_memcpy = .text:0x8001716C; // type:function size:0x3C
TRKInterruptHandler = .text:0x800171A8; // type:function size:0x194 scope:global
TRKExceptionHandler = .text:0x8001733C; // type:function size:0x9C scope:global
TRKSwapAndGo = .text:0x800173D8; // type:function size:0xC4 scope:global
TRKInterruptHandlerEnableInterrupts = .text:0x8001749C; // type:function size:0x54 scope:global
TRKTargetSetInputPendingPtr = .text:0x800174F0; // type:function size:0x10 scope:global
TRKPPCAccessFPRegister = .text:0x80017500; // type:function size:0x21C
TRKTargetStop = .text:0x8001771C; // type:function size:0x18
TRKTargetSetStopped = .text:0x80017734; // type:function size:0x10 scope:global
TRKTargetStopped = .text:0x80017744; // type:function size:0x10 scope:global
TRKTargetFlushCache = .text:0x80017754; // type:function size:0x3C
TRKTargetSupportRequest = .text:0x80017790; // type:function size:0x208 scope:global
TRKTargetGetPC = .text:0x80017998; // type:function size:0x10
TRKTargetStepOutOfRange = .text:0x800179A8; // type:function size:0x7C
TRKTargetSingleStep = .text:0x80017A24; // type:function size:0x6C
TRKTargetAddExceptionInfo = .text:0x80017A90; // type:function size:0xAC
TRKTargetAddStopInfo = .text:0x80017B3C; // type:function size:0x124
TRKTargetInterrupt = .text:0x80017C60; // type:function size:0x15C scope:global
TRKPostInterruptEvent = .text:0x80017DBC; // type:function size:0xC0 scope:global
TRKTargetCPUType = .text:0x80017E7C; // type:function size:0x60
TRKTargetSupportMask = .text:0x80017EDC; // type:function size:0xA4
TRKTargetVersions = .text:0x80017F80; // type:function size:0x24
TRKTargetAccessExtended2 = .text:0x80017FA4; // type:function size:0x438
TRKTargetAccessExtended1 = .text:0x800183DC; // type:function size:0x170
TRKTargetAccessFP = .text:0x8001854C; // type:function size:0x13C
TRKTargetAccessDefault = .text:0x80018688; // type:function size:0xF4
TRKTargetAccessMemory = .text:0x8001877C; // type:function size:0x14C
TRKValidMemory32 = .text:0x800188C8; // type:function size:0x124
TRKAccessFile = .text:0x800189F0; // type:function size:0x8
TRKOpenFile = .text:0x800189F8; // type:function size:0x8
TRKCloseFile = .text:0x80018A00; // type:function size:0x8
TRKPositionFile = .text:0x80018A08; // type:function size:0x8
InitMetroTRK = .text:0x80018A10; // type:function size:0x94 scope:global
TRKInitializeTarget = .text:0x80018AA4; // type:function size:0x4C scope:global
TRKTargetTranslate = .text:0x80018AF0; // type:function size:0x40
EnableMetroTRKInterrupts = .text:0x80018B30; // type:function size:0x20 scope:global
TRKSaveExtended1Block = .text:0x80018B50; // type:function size:0x1B8 scope:global
TRKRestoreExtended1Block = .text:0x80018D08; // type:function size:0x1B8 scope:global
TRKTargetCPUMinorType = .text:0x80018EC0; // type:function size:0x8
TRK_main = .text:0x80018EC8; // type:function size:0x44 scope:global
TRKLoadContext = .text:0x80018F0C; // type:function size:0x88 scope:global
TRKUARTInterruptHandler = .text:0x80018F94; // type:function size:0x4 scope:global
TRK_board_display = .text:0x80018F98; // type:function size:0x24 scope:global
UnreserveEXI2Port = .text:0x80018FBC; // type:function size:0x30 scope:global
ReserveEXI2Port = .text:0x80018FEC; // type:function size:0x30 scope:global
TRKReadUARTPoll = .text:0x8001901C; // type:function size:0xF0
WriteUART1 = .text:0x8001910C; // type:function size:0x28
WriteUARTFlush = .text:0x80019134; // type:function size:0xE0
EnableEXI2Interrupts = .text:0x80019214; // type:function size:0x30
TRKInitializeIntDrivenUART = .text:0x80019244; // type:function size:0x3C scope:global
InitMetroTRKCommTable = .text:0x80019280; // type:function size:0x100 scope:global
TRKEXICallBack = .text:0x80019380; // type:function size:0x38 scope:global
TRKTargetContinue = .text:0x800193B8; // type:function size:0x34 scope:global
GetUseSerialIO = .text:0x800193EC; // type:function size:0x10
SetUseSerialIO = .text:0x800193FC; // type:function size:0xC
__TRK_write_console = .text:0x80019408; // type:function size:0xBC
__read_console = .text:0x800194C4; // type:function size:0xBC
AIRegisterDMACallback = .text:0x80019580; // type:function size:0x44
AIInitDMA = .text:0x800195C4; // type:function size:0x88
AIStartDMA = .text:0x8001964C; // type:function size:0x18
AISetStreamPlayState = .text:0x80019664; // type:function size:0xD8
AIGetStreamPlayState = .text:0x8001973C; // type:function size:0x10
AISetDSPSampleRate = .text:0x8001974C; // type:function size:0xE0
AIGetDSPSampleRate = .text:0x8001982C; // type:function size:0x14
__AI_set_stream_sample_rate = .text:0x80019840; // type:function size:0xD4
AIGetStreamSampleRate = .text:0x80019914; // type:function size:0x10
AISetStreamVolLeft = .text:0x80019924; // type:function size:0x1C
AIGetStreamVolLeft = .text:0x80019940; // type:function size:0x10
AISetStreamVolRight = .text:0x80019950; // type:function size:0x1C
AIGetStreamVolRight = .text:0x8001996C; // type:function size:0x10
AIInit = .text:0x8001997C; // type:function size:0x16C
__AISHandler = .text:0x80019AE8; // type:function size:0x7C
__AIDHandler = .text:0x80019B64; // type:function size:0xAC
__AICallbackStackSwitch = .text:0x80019C10; // type:function size:0x58
__AI_SRC_INIT = .text:0x80019C68; // type:function size:0x1E4
EXI2_Init = .text:0x80019E4C; // type:function size:0x4 scope:global
EXI2_EnableInterrupts = .text:0x80019E50; // type:function size:0x4 scope:global
EXI2_Poll = .text:0x80019E54; // type:function size:0x8 scope:global
EXI2_ReadN = .text:0x80019E5C; // type:function size:0x8 scope:global
EXI2_WriteN = .text:0x80019E64; // type:function size:0x8 scope:global
EXI2_Reserve = .text:0x80019E6C; // type:function size:0x4 scope:global
EXI2_Unreserve = .text:0x80019E70; // type:function size:0x4 scope:global
AMC_IsStub = .text:0x80019E74; // type:function size:0x8 scope:global
ARRegisterDMACallback = .text:0x80019E7C; // type:function size:0x44
ARStartDMA = .text:0x80019EC0; // type:function size:0xF0
ARAlloc = .text:0x80019FB0; // type:function size:0x68
ARFree = .text:0x8001A018; // type:function size:0x74
ARInit = .text:0x8001A08C; // type:function size:0xC4
__ARHandler = .text:0x8001A150; // type:function size:0x78
__ARChecksize = .text:0x8001A1C8; // type:function size:0x17F4
__ARQServiceQueueLo = .text:0x8001B9BC; // type:function size:0x100
__ARQCallbackHack = .text:0x8001BABC; // type:function size:0x4
__ARQInterruptServiceRoutine = .text:0x8001BAC0; // type:function size:0xCC
ARQInit = .text:0x8001BB8C; // type:function size:0x70
ARQPostRequest = .text:0x8001BBFC; // type:function size:0x15C
AXInit = .text:0x8001BD58; // type:function size:0x3C
__AXGetStackHead = .text:0x8001BD94; // type:function size:0x18
__AXServiceCallbackStack = .text:0x8001BDAC; // type:function size:0x74
__AXAllocInit = .text:0x8001BE20; // type:function size:0xB4
__AXPushFreeStack = .text:0x8001BED4; // type:function size:0x20
__AXPushCallbackStack = .text:0x8001BEF4; // type:function size:0x10
__AXPopCallbackStack = .text:0x8001BF04; // type:function size:0x1C
__AXRemoveFromStack = .text:0x8001BF20; // type:function size:0x94
AXFreeVoice = .text:0x8001BFB4; // type:function size:0x80
AXAcquireVoice = .text:0x8001C034; // type:function size:0x174
__AXAuxInit = .text:0x8001C1A8; // type:function size:0xE4
__AXGetAuxAInput = .text:0x8001C28C; // type:function size:0x34
__AXGetAuxAInputDpl2 = .text:0x8001C2C0; // type:function size:0x20
__AXGetAuxAOutput = .text:0x8001C2E0; // type:function size:0x1C
__AXGetAuxAOutputDpl2R = .text:0x8001C2FC; // type:function size:0x20
__AXGetAuxAOutputDpl2Ls = .text:0x8001C31C; // type:function size:0x20
__AXGetAuxAOutputDpl2Rs = .text:0x8001C33C; // type:function size:0x20
__AXGetAuxBInput = .text:0x8001C35C; // type:function size:0x34
__AXGetAuxBOutput = .text:0x8001C390; // type:function size:0x1C
__AXGetAuxBForDPL2 = .text:0x8001C3AC; // type:function size:0x1C
__AXGetAuxBOutputDPL2 = .text:0x8001C3C8; // type:function size:0x1C
__AXProcessAux = .text:0x8001C3E4; // type:function size:0x23C
AXRegisterAuxACallback = .text:0x8001C620; // type:function size:0xC
AXRegisterAuxBCallback = .text:0x8001C62C; // type:function size:0xC
__AXGetCommandListCycles = .text:0x8001C638; // type:function size:0x8
__AXGetCommandListAddress = .text:0x8001C640; // type:function size:0x3C
__AXNextFrame = .text:0x8001C67C; // type:function size:0x6B0
__AXClInit = .text:0x8001CD2C; // type:function size:0x24
AXSetMode = .text:0x8001CD50; // type:function size:0x14
__AXOutNewFrame = .text:0x8001CD64; // type:function size:0x188
__AXOutAiCallback = .text:0x8001CEEC; // type:function size:0x68
__AXDSPInitCallback = .text:0x8001CF54; // type:function size:0xC
__AXDSPResumeCallback = .text:0x8001CF60; // type:function size:0x58
__AXDSPDoneCallback = .text:0x8001CFB8; // type:function size:0x2C
__AXOutInitDSP = .text:0x8001CFE4; // type:function size:0xCC
__AXOutInit = .text:0x8001D0B0; // type:function size:0x340
AXRegisterCallback = .text:0x8001D3F0; // type:function size:0x8
__AXGetStudio = .text:0x8001D3F8; // type:function size:0xC
__AXPrintStudio = .text:0x8001D404; // type:function size:0x3F8
__AXSPBInit = .text:0x8001D7FC; // type:function size:0x2C
__AXDepopVoice = .text:0x8001D828; // type:function size:0x94
__AXGetNumVoices = .text:0x8001D8BC; // type:function size:0x8
__AXServiceVPB = .text:0x8001D8C4; // type:function size:0x708
__AXSyncPBs = .text:0x8001DFCC; // type:function size:0x268
__AXGetPBs = .text:0x8001E234; // type:function size:0xC
__AXSetPBDefault = .text:0x8001E240; // type:function size:0x3C
__AXVPBInit = .text:0x8001E27C; // type:function size:0x1FC
AXSetVoiceSrcType = .text:0x8001E478; // type:function size:0xC4
AXSetVoiceState = .text:0x8001E53C; // type:function size:0x5C
AXSetVoiceMix = .text:0x8001E598; // type:function size:0x254
AXSetVoiceAddr = .text:0x8001E7EC; // type:function size:0x110
AXSetVoiceAdpcm = .text:0x8001E8FC; // type:function size:0xA4
AXSetVoiceSrc = .text:0x8001E9A0; // type:function size:0x98
AXSetVoiceSrcRatio = .text:0x8001EA38; // type:function size:0x98
AXSetVoiceAdpcmLoop = .text:0x8001EAD0; // type:function size:0x6C
__AXGetCurrentProfile = .text:0x8001EB3C; // type:function size:0x48
ReverbHICreate = .text:0x8001EB84; // type:function size:0x4EC
DoCrossTalk = .text:0x8001F070; // type:function size:0x190
HandleReverb = .text:0x8001F200; // type:function size:0x50C scope:local
AXFXReverbHiInit = .text:0x8001F70C; // type:function size:0x70
AXFXReverbHiCallback = .text:0x8001F77C; // type:function size:0x104
ReverbSTDCreate = .text:0x8001F880; // type:function size:0x40C
HandleReverb = .text:0x8001FC8C; // type:function size:0x3B4 scope:local
AXFXReverbStdInit = .text:0x80020040; // type:function size:0x6C
AXFXReverbStdCallback = .text:0x800200AC; // type:function size:0x30
do_src1 = .text:0x800200DC; // type:function size:0x198
do_src2 = .text:0x80020274; // type:function size:0x1EC
AXFXChorusInit = .text:0x80020460; // type:function size:0x200
AXFXChorusSettings = .text:0x80020660; // type:function size:0xC4
AXFXChorusCallback = .text:0x80020724; // type:function size:0x350
AXFXDelayCallback = .text:0x80020A74; // type:function size:0x1D0
AXFXDelaySettings = .text:0x80020C44; // type:function size:0x204
AXFXDelayInit = .text:0x80020E48; // type:function size:0x48
AXFXDelayShutdown = .text:0x80020E90; // type:function size:0x90
__AXFXAllocFunction = .text:0x80020F20; // type:function size:0x28
__AXFXFreeFunction = .text:0x80020F48; // type:function size:0x28
AXFXSetHooks = .text:0x80020F70; // type:function size:0xC
PPCMfmsr = .text:0x80020F7C; // type:function size:0x8 scope:global
PPCMtmsr = .text:0x80020F84; // type:function size:0x8 scope:global
PPCMfhid0 = .text:0x80020F8C; // type:function size:0x8 scope:global
PPCMthid0 = .text:0x80020F94; // type:function size:0x8
PPCMfl2cr = .text:0x80020F9C; // type:function size:0x8 scope:global
PPCMtl2cr = .text:0x80020FA4; // type:function size:0x8 scope:global
PPCMtdec = .text:0x80020FAC; // type:function size:0x8 scope:weak
PPCSync = .text:0x80020FB4; // type:function size:0x8
PPCHalt = .text:0x80020FBC; // type:function size:0x14 scope:weak
PPCMtmmcr0 = .text:0x80020FD0; // type:function size:0x8 scope:global
PPCMtmmcr1 = .text:0x80020FD8; // type:function size:0x8 scope:global
PPCMtpmc1 = .text:0x80020FE0; // type:function size:0x8 scope:global
PPCMtpmc2 = .text:0x80020FE8; // type:function size:0x8 scope:global
PPCMtpmc3 = .text:0x80020FF0; // type:function size:0x8 scope:global
PPCMtpmc4 = .text:0x80020FF8; // type:function size:0x8 scope:global
PPCMffpscr = .text:0x80021000; // type:function size:0x20 scope:global
PPCMtfpscr = .text:0x80021020; // type:function size:0x28 scope:global
PPCMfhid2 = .text:0x80021048; // type:function size:0x8 scope:global
PPCMthid2 = .text:0x80021050; // type:function size:0x8 scope:global
PPCMtwpar = .text:0x80021058; // type:function size:0x8 scope:global
PPCDisableSpeculation = .text:0x80021060; // type:function size:0x28 scope:global
PPCSetFpNonIEEEMode = .text:0x80021088; // type:function size:0x8 scope:global
__CARDDefaultApiCallback = .text:0x80021090; // type:function size:0x4
__CARDSyncCallback = .text:0x80021094; // type:function size:0x34
__CARDExtHandler = .text:0x800210C8; // type:function size:0xD8
__CARDExiHandler = .text:0x800211A0; // type:function size:0x118
__CARDTxHandler = .text:0x800212B8; // type:function size:0xA8
__CARDUnlockedHandler = .text:0x80021360; // type:function size:0x84
__CARDEnableInterrupt = .text:0x800213E4; // type:function size:0xC0
__CARDReadStatus = .text:0x800214A4; // type:function size:0xF0
__CARDClearStatus = .text:0x80021594; // type:function size:0xAC
TimeoutHandler = .text:0x80021640; // type:function size:0xA4
Retry = .text:0x800216E4; // type:function size:0x22C
UnlockedCallback = .text:0x80021910; // type:function size:0x110
__CARDStart = .text:0x80021A20; // type:function size:0x1B4
__CARDReadSegment = .text:0x80021BD4; // type:function size:0x134
__CARDWritePage = .text:0x80021D08; // type:function size:0x11C
__CARDEraseSector = .text:0x80021E24; // type:function size:0xE0
CARDInit = .text:0x80021F04; // type:function size:0xAC
__CARDGetFontEncode = .text:0x80021FB0; // type:function size:0x8
__CARDSetDiskID = .text:0x80021FB8; // type:function size:0x38
__CARDGetControlBlock = .text:0x80021FF0; // type:function size:0xB8
__CARDPutControlBlock = .text:0x800220A8; // type:function size:0x64
CARDFreeBlocks = .text:0x8002210C; // type:function size:0x150
CARDGetEncoding = .text:0x8002225C; // type:function size:0x88
__CARDSync = .text:0x800222E4; // type:function size:0x98
OnReset = .text:0x8002237C; // type:function size:0x50
bitrev = .text:0x800223CC; // type:function size:0x16C
ReadArrayUnlock = .text:0x80022538; // type:function size:0x144
DummyLen = .text:0x8002267C; // type:function size:0xC4
__CARDUnlock = .text:0x80022740; // type:function size:0xB58
InitCallback = .text:0x80023298; // type:function size:0x70
DoneCallback = .text:0x80023308; // type:function size:0x324
BlockReadCallback = .text:0x8002362C; // type:function size:0xDC
__CARDRead = .text:0x80023708; // type:function size:0x64
BlockWriteCallback = .text:0x8002376C; // type:function size:0xDC
__CARDWrite = .text:0x80023848; // type:function size:0x64
__CARDGetFatBlock = .text:0x800238AC; // type:function size:0x8
WriteCallback = .text:0x800238B4; // type:function size:0xD4 scope:local
EraseCallback = .text:0x80023988; // type:function size:0xC8 scope:local
__CARDAllocBlock = .text:0x80023A50; // type:function size:0x118
__CARDFreeBlock = .text:0x80023B68; // type:function size:0x9C
__CARDUpdateFatBlock = .text:0x80023C04; // type:function size:0xAC
__CARDGetDirBlock = .text:0x80023CB0; // type:function size:0x8
WriteCallback = .text:0x80023CB8; // type:function size:0xD0 scope:local
EraseCallback = .text:0x80023D88; // type:function size:0xC8 scope:local
__CARDUpdateDir = .text:0x80023E50; // type:function size:0xC4
__CARDCheckSum = .text:0x80023F14; // type:function size:0x1B0
VerifyID = .text:0x800240C4; // type:function size:0x284
VerifyDir = .text:0x80024348; // type:function size:0x240
VerifyFAT = .text:0x80024588; // type:function size:0x284
__CARDVerify = .text:0x8002480C; // type:function size:0x8C
CARDCheckExAsync = .text:0x80024898; // type:function size:0x590
CARDCheckAsync = .text:0x80024E28; // type:function size:0x28
CARDCheck = .text:0x80024E50; // type:function size:0x54
IsCard = .text:0x80024EA4; // type:function size:0xCC
CARDProbeEx = .text:0x80024F70; // type:function size:0x17C
DoMount = .text:0x800250EC; // type:function size:0x410
__CARDMountCallback = .text:0x800254FC; // type:function size:0x138
CARDMountAsync = .text:0x80025634; // type:function size:0x1A0
CARDMount = .text:0x800257D4; // type:function size:0x48
DoUnmount = .text:0x8002581C; // type:function size:0x9C
CARDUnmount = .text:0x800258B8; // type:function size:0xAC
FormatCallback = .text:0x80025964; // type:function size:0x144
__CARDFormatRegionAsync = .text:0x80025AA8; // type:function size:0x658
CARDFormatAsync = .text:0x80026100; // type:function size:0x48
CARDFormat = .text:0x80026148; // type:function size:0x54
__CARDCompareFileName = .text:0x8002619C; // type:function size:0x68
__CARDAccess = .text:0x80026204; // type:function size:0x98
__CARDIsPublic = .text:0x8002629C; // type:function size:0x30
__CARDGetFileNo = .text:0x800262CC; // type:function size:0x150
CARDFastOpen = .text:0x8002641C; // type:function size:0x160
CARDOpen = .text:0x8002657C; // type:function size:0x178
CARDClose = .text:0x800266F4; // type:function size:0x54
__CARDIsOpened = .text:0x80026748; // type:function size:0x8
CreateCallbackFat = .text:0x80026750; // type:function size:0x130
CARDCreateAsync = .text:0x80026880; // type:function size:0x220
CARDCreate = .text:0x80026AA0; // type:function size:0x48
__CARDSeek = .text:0x80026AE8; // type:function size:0x1B8
ReadCallback = .text:0x80026CA0; // type:function size:0x130
CARDReadAsync = .text:0x80026DD0; // type:function size:0x148
CARDRead = .text:0x80026F18; // type:function size:0x48
WriteCallback = .text:0x80026F60; // type:function size:0x170 scope:local
EraseCallback = .text:0x800270D0; // type:function size:0xB0 scope:local
CARDWriteAsync = .text:0x80027180; // type:function size:0x114
DeleteCallback = .text:0x80027294; // type:function size:0xA4
CARDFastDeleteAsync = .text:0x80027338; // type:function size:0x12C
CARDDeleteAsync = .text:0x80027464; // type:function size:0x110
CARDDelete = .text:0x80027574; // type:function size:0x48
UpdateIconOffsets = .text:0x800275BC; // type:function size:0x1F8
CARDGetStatus = .text:0x800277B4; // type:function size:0x12C
CARDSetStatusAsync = .text:0x800278E0; // type:function size:0x174
CARDSetStatus = .text:0x80027A54; // type:function size:0x48
CARDGetSerialNo = .text:0x80027A9C; // type:function size:0xC4
DBInit = .text:0x80027B60; // type:function size:0x28 scope:global
__DBExceptionDestinationAux = .text:0x80027B88; // type:function size:0x48
__DBExceptionDestination = .text:0x80027BD0; // type:function size:0x10 scope:global
__DBIsExceptionMarked = .text:0x80027BE0; // type:function size:0x1C scope:global
DBPrintf = .text:0x80027BFC; // type:function size:0x50 scope:global
DSPCheckMailToDSP = .text:0x80027C4C; // type:function size:0x10
DSPCheckMailFromDSP = .text:0x80027C5C; // type:function size:0x10
DSPReadMailFromDSP = .text:0x80027C6C; // type:function size:0x18
DSPSendMailToDSP = .text:0x80027C84; // type:function size:0x14
DSPInit = .text:0x80027C98; // type:function size:0xC4
DSPCheckInit = .text:0x80027D5C; // type:function size:0x8
DSPAddTask = .text:0x80027D64; // type:function size:0x70
DSPAssertTask = .text:0x80027DD4; // type:function size:0xC8
__DSP_debug_printf = .text:0x80027E9C; // type:function size:0x50
__DSPHandler = .text:0x80027EEC; // type:function size:0x424
__DSP_exec_task = .text:0x80028310; // type:function size:0x1A0
__DSP_boot_task = .text:0x800284B0; // type:function size:0x18C
__DSP_insert_task = .text:0x8002863C; // type:function size:0xA0
__DSP_remove_task = .text:0x800286DC; // type:function size:0x94
__DVDInitWA = .text:0x80028770; // type:function size:0x40 scope:weak
__DVDInterruptHandler = .text:0x800287B0; // type:function size:0x2E0 scope:weak
AlarmHandler = .text:0x80028A90; // type:function size:0x84
AlarmHandlerForTimeout = .text:0x80028B14; // type:function size:0x70 scope:local
Read = .text:0x80028B84; // type:function size:0x110
SeekTwiceBeforeRead = .text:0x80028C94; // type:function size:0x80
DVDLowRead = .text:0x80028D14; // type:function size:0x298
DVDLowSeek = .text:0x80028FAC; // type:function size:0x94
DVDLowWaitCoverClose = .text:0x80029040; // type:function size:0x2C scope:weak
DVDLowReadDiskID = .text:0x8002906C; // type:function size:0xA4
DVDLowStopMotor = .text:0x80029110; // type:function size:0x8C scope:weak
DVDLowRequestError = .text:0x8002919C; // type:function size:0x8C
DVDLowInquiry = .text:0x80029228; // type:function size:0x9C
DVDLowAudioStream = .text:0x800292C4; // type:function size:0x98
DVDLowRequestAudioStatus = .text:0x8002935C; // type:function size:0x8C
DVDLowAudioBufferConfig = .text:0x800293E8; // type:function size:0x9C
DVDLowReset = .text:0x80029484; // type:function size:0xBC scope:global
DVDLowBreak = .text:0x80029540; // type:function size:0x14
DVDLowClearCallback = .text:0x80029554; // type:function size:0x18
__DVDLowSetWAType = .text:0x8002956C; // type:function size:0x44 scope:global
__DVDFSInit = .text:0x800295B0; // type:function size:0x38 scope:global
DVDConvertPathToEntrynum = .text:0x800295E8; // type:function size:0x2F4
DVDOpen = .text:0x800298DC; // type:function size:0xC8
DVDClose = .text:0x800299A4; // type:function size:0x24
entryToPath = .text:0x800299C8; // type:function size:0x160
DVDGetCurrentDir = .text:0x80029B28; // type:function size:0xC4
DVDReadAsyncPrio = .text:0x80029BEC; // type:function size:0xC0
cbForReadAsync = .text:0x80029CAC; // type:function size:0x30
DVDReadPrio = .text:0x80029CDC; // type:function size:0x118
cbForReadSync = .text:0x80029DF4; // type:function size:0x24
DVDGetTransferredSize = .text:0x80029E18; // type:function size:0x6C
defaultOptionalCommandChecker = .text:0x80029E84; // type:function size:0x4
DVDInit = .text:0x80029E88; // type:function size:0xCC scope:global
stateReadingFST = .text:0x80029F54; // type:function size:0x94
cbForStateReadingFST = .text:0x80029FE8; // type:function size:0x8C
cbForStateError = .text:0x8002A074; // type:function size:0xAC scope:local
stateTimeout = .text:0x8002A120; // type:function size:0x34
stateGettingError = .text:0x8002A154; // type:function size:0x28
CategorizeError = .text:0x8002A17C; // type:function size:0xB4
cbForStateGettingError = .text:0x8002A230; // type:function size:0x294
cbForUnrecoveredError = .text:0x8002A4C4; // type:function size:0x68
cbForUnrecoveredErrorRetry = .text:0x8002A52C; // type:function size:0x98
stateGoToRetry = .text:0x8002A5C4; // type:function size:0x28
cbForStateGoToRetry = .text:0x8002A5EC; // type:function size:0x158
stateCheckID = .text:0x8002A744; // type:function size:0xE0
stateCheckID3 = .text:0x8002A824; // type:function size:0x34
stateCheckID2a = .text:0x8002A858; // type:function size:0x34
cbForStateCheckID2a = .text:0x8002A88C; // type:function size:0x74
stateCheckID2 = .text:0x8002A900; // type:function size:0x38
cbForStateCheckID1 = .text:0x8002A938; // type:function size:0x114
cbForStateCheckID2 = .text:0x8002AA4C; // type:function size:0xE4
cbForStateCheckID3 = .text:0x8002AB30; // type:function size:0xFC
AlarmHandler = .text:0x8002AC2C; // type:function size:0x44 scope:local
stateCoverClosed = .text:0x8002AC70; // type:function size:0xCC
stateCoverClosed_CMD = .text:0x8002AD3C; // type:function size:0x30
cbForStateCoverClosed = .text:0x8002AD6C; // type:function size:0x70
stateMotorStopped = .text:0x8002ADDC; // type:function size:0x28
cbForStateMotorStopped = .text:0x8002AE04; // type:function size:0xE4 scope:local
stateReady = .text:0x8002AEE8; // type:function size:0x230 scope:local
stateBusy = .text:0x8002B118; // type:function size:0x320 scope:local
cbForStateBusy = .text:0x8002B438; // type:function size:0x638
DVDReadAbsAsyncPrio = .text:0x8002BA70; // type:function size:0xDC
DVDReadAbsAsyncForBS = .text:0x8002BB4C; // type:function size:0xD0
DVDReadDiskID = .text:0x8002BC1C; // type:function size:0xD4 scope:global
DVDCancelStreamAsync = .text:0x8002BCF0; // type:function size:0xBC
DVDInquiryAsync = .text:0x8002BDAC; // type:function size:0xD0 scope:global
DVDReset = .text:0x8002BE7C; // type:function size:0x44 scope:global
DVDGetCommandBlockStatus = .text:0x8002BEC0; // type:function size:0x4C
DVDGetDriveStatus = .text:0x8002BF0C; // type:function size:0xAC scope:global
DVDSetAutoInvalidation = .text:0x8002BFB8; // type:function size:0x10
DVDResume = .text:0x8002BFC8; // type:function size:0x50
DVDCancelAsync = .text:0x8002C018; // type:function size:0x27C
DVDCancel = .text:0x8002C294; // type:function size:0xAC
cbForCancelSync = .text:0x8002C340; // type:function size:0x24
DVDGetCurrentDiskID = .text:0x8002C364; // type:function size:0x8
DVDCheckDisk = .text:0x8002C36C; // type:function size:0xF8
__DVDPrepareResetAsync = .text:0x8002C464; // type:function size:0x11C
__DVDClearWaitingQueue = .text:0x8002C580; // type:function size:0x38 scope:global
__DVDPushWaitingQueue = .text:0x8002C5B8; // type:function size:0x68 scope:global
__DVDPopWaitingQueue = .text:0x8002C620; // type:function size:0xA0 scope:global
__DVDCheckWaitingQueue = .text:0x8002C6C0; // type:function size:0x58 scope:global
__DVDDequeueWaitingQueue = .text:0x8002C718; // type:function size:0x60
ErrorCode2Num = .text:0x8002C778; // type:function size:0x11C scope:local
__DVDStoreErrorCode = .text:0x8002C894; // type:function size:0x7C scope:global
DVDCompareDiskID = .text:0x8002C910; // type:function size:0xF8
__DVDPrintFatalMessage = .text:0x8002CA08; // type:function size:0x30
cb = .text:0x8002CA38; // type:function size:0xD8 scope:local
__fstLoad = .text:0x8002CB10; // type:function size:0x168 scope:global
SetExiInterruptMask = .text:0x8002CC78; // type:function size:0xF4 scope:local
EXIImm = .text:0x8002CD6C; // type:function size:0x25C scope:global
EXIImmEx = .text:0x8002CFC8; // type:function size:0xA0
EXIDma = .text:0x8002D068; // type:function size:0xEC scope:global
EXISync = .text:0x8002D154; // type:function size:0x24C scope:global
EXIClearInterrupts = .text:0x8002D3A0; // type:function size:0x48 scope:global
EXISetExiCallback = .text:0x8002D3E8; // type:function size:0x7C
__EXIProbe = .text:0x8002D464; // type:function size:0x174 scope:local
EXIProbe = .text:0x8002D5D8; // type:function size:0x80
EXIProbeEx = .text:0x8002D658; // type:function size:0xB4
EXIAttach = .text:0x8002D70C; // type:function size:0x10C
EXIDetach = .text:0x8002D818; // type:function size:0xBC
EXISelect = .text:0x8002D8D4; // type:function size:0x12C scope:global
EXIDeselect = .text:0x8002DA00; // type:function size:0x110 scope:global
EXIIntrruptHandler = .text:0x8002DB10; // type:function size:0xC8 scope:local
TCIntrruptHandler = .text:0x8002DBD8; // type:function size:0x218 scope:local
EXTIntrruptHandler = .text:0x8002DDF0; // type:function size:0xD0 scope:local
EXIInit = .text:0x8002DEC0; // type:function size:0x1D4 scope:global
EXILock = .text:0x8002E094; // type:function size:0xF4 scope:global
EXIUnlock = .text:0x8002E188; // type:function size:0xDC scope:global
EXIGetState = .text:0x8002E264; // type:function size:0x18
UnlockedHandler = .text:0x8002E27C; // type:function size:0x28 scope:local
EXIGetID = .text:0x8002E2A4; // type:function size:0x3B0 scope:global
ProbeBarnacle = .text:0x8002E654; // type:function size:0x18C
__OSEnableBarnacle = .text:0x8002E7E0; // type:function size:0x1BC scope:global
InitializeUART = .text:0x8002E99C; // type:function size:0x70
WriteUARTN = .text:0x8002EA0C; // type:function size:0x21C
__GXDefaultTexRegionCallback = .text:0x8002EC28; // type:function size:0x7C
__GXDefaultTlutRegionCallback = .text:0x8002ECA4; // type:function size:0x24
__GXShutdown = .text:0x8002ECC8; // type:function size:0x190
GXInit = .text:0x8002EE58; // type:function size:0x890 scope:global
__GXInitGX = .text:0x8002F6E8; // type:function size:0x8C4 scope:global
fn_8002FFAC = .text:0x8002FFAC; // type:function size:0x134
GXInitFifoBase = .text:0x800300E0; // type:function size:0x6C scope:global
fn_8003014C = .text:0x8003014C; // type:function size:0x70
fn_800301BC = .text:0x800301BC; // type:function size:0xC
GXSetCPUFifo = .text:0x800301C8; // type:function size:0x110 scope:global
GXSetGPFifo = .text:0x800302D8; // type:function size:0x178 scope:global
fn_80030450 = .text:0x80030450; // type:function size:0x44
__GXFifoInit = .text:0x80030494; // type:function size:0x4C scope:global
fn_800304E0 = .text:0x800304E0; // type:function size:0x24
fn_80030504 = .text:0x80030504; // type:function size:0x20
fn_80030524 = .text:0x80030524; // type:function size:0x3C
fn_80030560 = .text:0x80030560; // type:function size:0x3C
fn_8003059C = .text:0x8003059C; // type:function size:0x3C
fn_800305D8 = .text:0x800305D8; // type:function size:0x8
fn_800305E0 = .text:0x800305E0; // type:function size:0x158
fn_80030738 = .text:0x80030738; // type:function size:0x350
fn_80030A88 = .text:0x80030A88; // type:function size:0x54
fn_80030ADC = .text:0x80030ADC; // type:function size:0x124
fn_80030C00 = .text:0x80030C00; // type:function size:0x38
fn_80030C38 = .text:0x80030C38; // type:function size:0x358
fn_80030F90 = .text:0x80030F90; // type:function size:0x378
fn_80031308 = .text:0x80031308; // type:function size:0x9C
fn_800313A4 = .text:0x800313A4; // type:function size:0x8C
fn_80031430 = .text:0x80031430; // type:function size:0x10
fn_80031440 = .text:0x80031440; // type:function size:0x2D0
fn_80031710 = .text:0x80031710; // type:function size:0x40
GXSetMisc = .text:0x80031750; // type:function size:0x94 scope:global
fn_800317E4 = .text:0x800317E4; // type:function size:0x5C
fn_80031840 = .text:0x80031840; // type:function size:0x16C
fn_800319AC = .text:0x800319AC; // type:function size:0x80
fn_80031A2C = .text:0x80031A2C; // type:function size:0x14
fn_80031A40 = .text:0x80031A40; // type:function size:0x14
fn_80031A54 = .text:0x80031A54; // type:function size:0x1C
fn_80031A70 = .text:0x80031A70; // type:function size:0x88
fn_80031AF8 = .text:0x80031AF8; // type:function size:0x1C
fn_80031B14 = .text:0x80031B14; // type:function size:0x14
fn_80031B28 = .text:0x80031B28; // type:function size:0x1C
fn_80031B44 = .text:0x80031B44; // type:function size:0x28
fn_80031B6C = .text:0x80031B6C; // type:function size:0x44
fn_80031BB0 = .text:0x80031BB0; // type:function size:0x88
fn_80031C38 = .text:0x80031C38; // type:function size:0x44
fn_80031C7C = .text:0x80031C7C; // type:function size:0x84
__GXPEInit = .text:0x80031D00; // type:function size:0x80 scope:global
fn_80031D80 = .text:0x80031D80; // type:function size:0xA0
fn_80031E20 = .text:0x80031E20; // type:function size:0xF0
fn_80031F10 = .text:0x80031F10; // type:function size:0x88
fn_80031F98 = .text:0x80031F98; // type:function size:0x48
fn_80031FE0 = .text:0x80031FE0; // type:function size:0x48
fn_80032028 = .text:0x80032028; // type:function size:0x5C
fn_80032084 = .text:0x80032084; // type:function size:0x4C
fn_800320D0 = .text:0x800320D0; // type:function size:0x44
fn_80032114 = .text:0x80032114; // type:function size:0x3C
fn_80032150 = .text:0x80032150; // type:function size:0x24
fn_80032174 = .text:0x80032174; // type:function size:0x120
fn_80032294 = .text:0x80032294; // type:function size:0x90
fn_80032324 = .text:0x80032324; // type:function size:0x90
fn_800323B4 = .text:0x800323B4; // type:function size:0x3C
fn_800323F0 = .text:0x800323F0; // type:function size:0x154
fn_80032544 = .text:0x80032544; // type:function size:0x28
fn_8003256C = .text:0x8003256C; // type:function size:0x68
fn_800325D4 = .text:0x800325D4; // type:function size:0xC8
fn_8003269C = .text:0x8003269C; // type:function size:0x68
fn_80032704 = .text:0x80032704; // type:function size:0x228
fn_8003292C = .text:0x8003292C; // type:function size:0x1C
fn_80032948 = .text:0x80032948; // type:function size:0x15C
fn_80032AA4 = .text:0x80032AA4; // type:function size:0x17C
fn_80032C20 = .text:0x80032C20; // type:function size:0x38
fn_80032C58 = .text:0x80032C58; // type:function size:0x10
fn_80032C68 = .text:0x80032C68; // type:function size:0xC
fn_80032C74 = .text:0x80032C74; // type:function size:0x7C
fn_80032CF0 = .text:0x80032CF0; // type:function size:0xF4
fn_80032DE4 = .text:0x80032DE4; // type:function size:0xF4
fn_80032ED8 = .text:0x80032ED8; // type:function size:0x44
fn_80032F1C = .text:0x80032F1C; // type:function size:0xCC
fn_80032FE8 = .text:0x80032FE8; // type:function size:0x15C
fn_80033144 = .text:0x80033144; // type:function size:0xC8
fn_8003320C = .text:0x8003320C; // type:function size:0x274
fn_80033480 = .text:0x80033480; // type:function size:0x48
fn_800334C8 = .text:0x800334C8; // type:function size:0x194
fn_8003365C = .text:0x8003365C; // type:function size:0x8
fn_80033664 = .text:0x80033664; // type:function size:0x198
fn_800337FC = .text:0x800337FC; // type:function size:0x54
GXInitTexCacheRegion = .text:0x80033850; // type:function size:0x120 scope:global
GXInitTlutRegion = .text:0x80033970; // type:function size:0x48 scope:global
fn_800339B8 = .text:0x800339B8; // type:function size:0x48
fn_80033A00 = .text:0x80033A00; // type:function size:0x14
fn_80033A14 = .text:0x80033A14; // type:function size:0x14
fn_80033A28 = .text:0x80033A28; // type:function size:0xB8
fn_80033AE0 = .text:0x80033AE0; // type:function size:0x17C
__GXSetTmemConfig = .text:0x80033C5C; // type:function size:0x240 scope:global
fn_80033E9C = .text:0x80033E9C; // type:function size:0x9C
fn_80033F38 = .text:0x80033F38; // type:function size:0x160
fn_80034098 = .text:0x80034098; // type:function size:0x17C
fn_80034214 = .text:0x80034214; // type:function size:0x114
fn_80034328 = .text:0x80034328; // type:function size:0x28
fn_80034350 = .text:0x80034350; // type:function size:0x48
fn_80034398 = .text:0x80034398; // type:function size:0x64
fn_800343FC = .text:0x800343FC; // type:function size:0xCC
__GXFlushTextureState = .text:0x800344C8; // type:function size:0x24 scope:global
fn_800344EC = .text:0x800344EC; // type:function size:0x8C
fn_80034578 = .text:0x80034578; // type:function size:0x44
fn_800345BC = .text:0x800345BC; // type:function size:0x44
fn_80034600 = .text:0x80034600; // type:function size:0x68
fn_80034668 = .text:0x80034668; // type:function size:0x68
fn_800346D0 = .text:0x800346D0; // type:function size:0x6C
fn_8003473C = .text:0x8003473C; // type:function size:0x6C
fn_800347A8 = .text:0x800347A8; // type:function size:0x54
fn_800347FC = .text:0x800347FC; // type:function size:0x98
fn_80034894 = .text:0x80034894; // type:function size:0x54
fn_800348E8 = .text:0x800348E8; // type:function size:0x84
fn_8003496C = .text:0x8003496C; // type:function size:0x1D8
fn_80034B44 = .text:0x80034B44; // type:function size:0x30
fn_80034B74 = .text:0x80034B74; // type:function size:0x21C
fn_80034D90 = .text:0x80034D90; // type:function size:0x100
fn_80034E90 = .text:0x80034E90; // type:function size:0x54
fn_80034EE4 = .text:0x80034EE4; // type:function size:0x2C
fn_80034F10 = .text:0x80034F10; // type:function size:0x2C
fn_80034F3C = .text:0x80034F3C; // type:function size:0x34
fn_80034F70 = .text:0x80034F70; // type:function size:0x38
fn_80034FA8 = .text:0x80034FA8; // type:function size:0xE8
fn_80035090 = .text:0x80035090; // type:function size:0x2C
fn_800350BC = .text:0x800350BC; // type:function size:0x3C
fn_800350F8 = .text:0x800350F8; // type:function size:0x38
fn_80035130 = .text:0x80035130; // type:function size:0x7C
fn_800351AC = .text:0x800351AC; // type:function size:0x4
fn_800351B0 = .text:0x800351B0; // type:function size:0x174
fn_80035324 = .text:0x80035324; // type:function size:0xB4
fn_800353D8 = .text:0x800353D8; // type:function size:0xC0
fn_80035498 = .text:0x80035498; // type:function size:0x60
fn_800354F8 = .text:0x800354F8; // type:function size:0x50
fn_80035548 = .text:0x80035548; // type:function size:0x50
fn_80035598 = .text:0x80035598; // type:function size:0x38
fn_800355D0 = .text:0x800355D0; // type:function size:0xB4
fn_80035684 = .text:0x80035684; // type:function size:0x104
fn_80035788 = .text:0x80035788; // type:function size:0x24
fn_800357AC = .text:0x800357AC; // type:function size:0x38
fn_800357E4 = .text:0x800357E4; // type:function size:0x90
fn_80035874 = .text:0x80035874; // type:function size:0x40
fn_800358B4 = .text:0x800358B4; // type:function size:0x28
fn_800358DC = .text:0x800358DC; // type:function size:0x84
fn_80035960 = .text:0x80035960; // type:function size:0x848
fn_800361A8 = .text:0x800361A8; // type:function size:0x10
fn_800361B8 = .text:0x800361B8; // type:function size:0xBC
fn_80036274 = .text:0x80036274; // type:function size:0xC8
fn_8003633C = .text:0x8003633C; // type:function size:0x8
fn_80036344 = .text:0x80036344; // type:function size:0xE7C
fn_800371C0 = .text:0x800371C0; // type:function size:0x20
fn_800371E0 = .text:0x800371E0; // type:function size:0x28
fn_80037208 = .text:0x80037208; // type:function size:0x6C
fn_80037274 = .text:0x80037274; // type:function size:0x107C
fn_800382F0 = .text:0x800382F0; // type:function size:0x2C
fn_8003831C = .text:0x8003831C; // type:function size:0x34
fn_80038350 = .text:0x80038350; // type:function size:0xCC
fn_8003841C = .text:0x8003841C; // type:function size:0xF8
fn_80038514 = .text:0x80038514; // type:function size:0x70
fn_80038584 = .text:0x80038584; // type:function size:0xB0
fn_80038634 = .text:0x80038634; // type:function size:0xB0
fn_800386E4 = .text:0x800386E4; // type:function size:0x70
fn_80038754 = .text:0x80038754; // type:function size:0x34
fn_80038788 = .text:0x80038788; // type:function size:0x28
fn_800387B0 = .text:0x800387B0; // type:function size:0xA4
fn_80038854 = .text:0x80038854; // type:function size:0x18C
fn_800389E0 = .text:0x800389E0; // type:function size:0xCC
fn_80038AAC = .text:0x80038AAC; // type:function size:0x54
fn_80038B00 = .text:0x80038B00; // type:function size:0x54
fn_80038B54 = .text:0x80038B54; // type:function size:0xD0
fn_80038C24 = .text:0x80038C24; // type:function size:0x98
fn_80038CBC = .text:0x80038CBC; // type:function size:0x44
fn_80038D00 = .text:0x80038D00; // type:function size:0x3C
fn_80038D3C = .text:0x80038D3C; // type:function size:0x54
Hu_IsStub = .text:0x80038D90; // type:function size:0x8 scope:weak
__OSFPRInit = .text:0x80038D98; // type:function size:0x128 scope:global
fn_80038EC0 = .text:0x80038EC0; // type:function size:0x28
ClearArena = .text:0x80038EE8; // type:function size:0x128 scope:local
InquiryCallback = .text:0x80039010; // type:function size:0x3C scope:local
OSInit = .text:0x8003904C; // type:function size:0x3D8 scope:global
OSExceptionInit = .text:0x80039424; // type:function size:0x280 scope:local
__OSDBINTSTART = .text:0x800396A4; // type:label scope:global
__OSDBIntegrator = .text:0x800396A4; // type:function size:0x24 scope:local
__OSDBINTEND = .text:0x800396C8; // type:label scope:global
fn_800396C8 = .text:0x800396C8; // type:function size:0x4
__OSDBJUMPEND = .text:0x800396CC; // type:label scope:global
__OSSetExceptionHandler = .text:0x800396CC; // type:function size:0x1C scope:global
__OSGetExceptionHandler = .text:0x800396E8; // type:function size:0x14 scope:global
__OSEVStart = .text:0x800396FC; // type:label scope:global
OSExceptionVector = .text:0x800396FC; // type:function size:0x9C scope:local
__DBVECTOR = .text:0x80039754; // type:label scope:global data:4byte
__OSEVSetNumber = .text:0x80039764; // type:label scope:global data:4byte
__OSEVEnd = .text:0x80039794; // type:label scope:global
OSDefaultExceptionHandler = .text:0x80039798; // type:function size:0x58 scope:global
__OSPSInit = .text:0x800397F0; // type:function size:0x54 scope:global
fn_80039844 = .text:0x80039844; // type:function size:0x14
OSRegisterVersion = .text:0x80039858; // type:function size:0x2C scope:global
OSInitAlarm = .text:0x80039884; // type:function size:0x4C scope:global
OSCreateAlarm = .text:0x800398D0; // type:function size:0x10 scope:global
InsertAlarm = .text:0x800398E0; // type:function size:0x250 scope:local
OSSetAlarm = .text:0x80039B30; // type:function size:0x68 scope:global
fn_80039B98 = .text:0x80039B98; // type:function size:0x11C
DecrementerExceptionCallback = .text:0x80039CB4; // type:function size:0x230 scope:local
DecrementerExceptionHandler = .text:0x80039EE4; // type:function size:0x50 scope:local
fn_80039F34 = .text:0x80039F34; // type:function size:0xAC
fn_80039FE0 = .text:0x80039FE0; // type:function size:0xFC
fn_8003A0DC = .text:0x8003A0DC; // type:function size:0x7C
fn_8003A158 = .text:0x8003A158; // type:function size:0x10
fn_8003A168 = .text:0x8003A168; // type:function size:0x70
fn_8003A1D8 = .text:0x8003A1D8; // type:function size:0x6C
OSGetArenaHi = .text:0x8003A244; // type:function size:0x8 scope:global
OSGetArenaLo = .text:0x8003A24C; // type:function size:0x8 scope:global
OSSetArenaHi = .text:0x8003A254; // type:function size:0x8 scope:global
OSSetArenaLo = .text:0x8003A25C; // type:function size:0x8 scope:global
fn_8003A264 = .text:0x8003A264; // type:function size:0x2C
fn_8003A290 = .text:0x8003A290; // type:function size:0x20
__OSInitAudioSystem = .text:0x8003A2B0; // type:function size:0x1BC scope:global
__OSStopAudioSystem = .text:0x8003A46C; // type:function size:0xD8 scope:global
DCEnable = .text:0x8003A544; // type:function size:0x14 scope:global
DCInvalidateRange = .text:0x8003A558; // type:function size:0x2C scope:global
DCFlushRange = .text:0x8003A584; // type:function size:0x30 scope:global
fn_8003A5B4 = .text:0x8003A5B4; // type:function size:0x30
DCFlushRangeNoSync = .text:0x8003A5E4; // type:function size:0x2C scope:global
ICInvalidateRange = .text:0x8003A610; // type:function size:0x34 scope:global
ICFlashInvalidate = .text:0x8003A644; // type:function size:0x10 scope:global
ICEnable = .text:0x8003A654; // type:function size:0x14 scope:global
fn_8003A668 = .text:0x8003A668; // type:function size:0xCC
fn_8003A734 = .text:0x8003A734; // type:function size:0x38
LCDisable = .text:0x8003A76C; // type:function size:0x28 scope:global
L2GlobalInvalidate = .text:0x8003A794; // type:function size:0x98 scope:global
DMAErrorHandler = .text:0x8003A82C; // type:function size:0x160 scope:global
__OSCacheInit = .text:0x8003A98C; // type:function size:0xF4 scope:global
__OSLoadFPUContext = .text:0x8003AA80; // type:function size:0x124 scope:local
__OSSaveFPUContext = .text:0x8003ABA4; // type:function size:0x128 scope:local
OSSaveFPUContext = .text:0x8003ACCC; // type:function size:0x8 scope:global
OSSetCurrentContext = .text:0x8003ACD4; // type:function size:0x5C scope:global
fn_8003AD30 = .text:0x8003AD30; // type:function size:0xC
fn_8003AD3C = .text:0x8003AD3C; // type:function size:0x80
OSLoadContext = .text:0x8003ADBC; // type:function size:0xD8 scope:global
fn_8003AE94 = .text:0x8003AE94; // type:function size:0x8
OSClearContext = .text:0x8003AE9C; // type:function size:0x24 scope:global
fn_8003AEC0 = .text:0x8003AEC0; // type:function size:0xBC
OSDumpContext = .text:0x8003AF7C; // type:function size:0x2A8 scope:global
OSSwitchFPUContext = .text:0x8003B224; // type:function size:0x84 scope:local
__OSContextInit = .text:0x8003B2A8; // type:function size:0x48 scope:global
OSReport = .text:0x8003B2F0; // type:function size:0x80 scope:global
fn_8003B370 = .text:0x8003B370; // type:function size:0x12C
OSSetErrorHandler = .text:0x8003B49C; // type:function size:0x218 scope:global
__OSUnhandledException = .text:0x8003B6B4; // type:function size:0x2E8 scope:global
fn_8003B99C = .text:0x8003B99C; // type:function size:0x19C
fn_8003BB38 = .text:0x8003BB38; // type:function size:0x174
fn_8003BCAC = .text:0x8003BCAC; // type:function size:0x58
fn_8003BD04 = .text:0x8003BD04; // type:function size:0x8C
fn_8003BD90 = .text:0x8003BD90; // type:function size:0x334
fn_8003C0C4 = .text:0x8003C0C4; // type:function size:0x3B0
fn_8003C474 = .text:0x8003C474; // type:function size:0xE0
fn_8003C554 = .text:0x8003C554; // type:function size:0x1A8
OSDisableInterrupts = .text:0x8003C6FC; // type:function size:0x14 scope:global
OSEnableInterrupts = .text:0x8003C710; // type:function size:0x14 scope:global
OSRestoreInterrupts = .text:0x8003C724; // type:function size:0x24 scope:global
__OSSetInterruptHandler = .text:0x8003C748; // type:function size:0x1C scope:global
fn_8003C764 = .text:0x8003C764; // type:function size:0x14
__OSInterruptInit = .text:0x8003C778; // type:function size:0x74 scope:global
fn_8003C7EC = .text:0x8003C7EC; // type:function size:0x2D8
__OSMaskInterrupts = .text:0x8003CAC4; // type:function size:0x88 scope:global
__OSUnmaskInterrupts = .text:0x8003CB4C; // type:function size:0x88 scope:global
fn_8003CBD4 = .text:0x8003CBD4; // type:function size:0x344
ExternalInterruptHandler = .text:0x8003CF18; // type:function size:0x50 scope:local
fn_8003CF68 = .text:0x8003CF68; // type:function size:0x4
fn_8003CF6C = .text:0x8003CF6C; // type:function size:0x4
fn_8003CF70 = .text:0x8003CF70; // type:function size:0xC
fn_8003CF7C = .text:0x8003CF7C; // type:function size:0x2BC
fn_8003D238 = .text:0x8003D238; // type:function size:0x2E0
fn_8003D518 = .text:0x8003D518; // type:function size:0x24
fn_8003D53C = .text:0x8003D53C; // type:function size:0x3C
fn_8003D578 = .text:0x8003D578; // type:function size:0x238
fn_8003D7B0 = .text:0x8003D7B0; // type:function size:0x1D4
__OSModuleInit = .text:0x8003D984; // type:function size:0x18 scope:global
fn_8003D99C = .text:0x8003D99C; // type:function size:0x3C
MEMIntrruptHandler = .text:0x8003D9D8; // type:function size:0x6C scope:local
Config24MB = .text:0x8003DA44; // type:function size:0x80 scope:local
Config48MB = .text:0x8003DAC4; // type:function size:0x80 scope:local
RealMode = .text:0x8003DB44; // type:function size:0x18 scope:local
__OSInitMemoryProtection = .text:0x8003DB5C; // type:function size:0x118 scope:global
fn_8003DC74 = .text:0x8003DC74; // type:function size:0x70
fn_8003DCE4 = .text:0x8003DCE4; // type:function size:0x10
fn_8003DCF4 = .text:0x8003DCF4; // type:function size:0xC
__OSReboot = .text:0x8003DD00; // type:function size:0x340 scope:global
OSRegisterResetFunction = .text:0x8003E040; // type:function size:0x84 scope:global
Reset = .text:0x8003E0C4; // type:function size:0x70 scope:local
fn_8003E134 = .text:0x8003E134; // type:function size:0x48
OSResetSystem = .text:0x8003E17C; // type:function size:0x288 scope:global
OSGetResetCode = .text:0x8003E404; // type:function size:0x30 scope:global
__OSResetSWInterruptHandler = .text:0x8003E434; // type:function size:0xF4 scope:global
fn_8003E528 = .text:0x8003E528; // type:function size:0x298
fn_8003E7C0 = .text:0x8003E7C0; // type:function size:0x60
fn_8003E820 = .text:0x8003E820; // type:function size:0x118
__OSInitSram = .text:0x8003E938; // type:function size:0x134 scope:global
__OSLockSram = .text:0x8003EA6C; // type:function size:0x5C scope:global
__OSLockSramEx = .text:0x8003EAC8; // type:function size:0x5C scope:global
fn_8003EB24 = .text:0x8003EB24; // type:function size:0x308
__OSUnlockSram = .text:0x8003EE2C; // type:function size:0x24 scope:global
__OSUnlockSramEx = .text:0x8003EE50; // type:function size:0x24 scope:global
__OSSyncSram = .text:0x8003EE74; // type:function size:0x10 scope:global
fn_8003EE84 = .text:0x8003EE84; // type:function size:0x124
fn_8003EFA8 = .text:0x8003EFA8; // type:function size:0x80
fn_8003F028 = .text:0x8003F028; // type:function size:0xA4
fn_8003F0CC = .text:0x8003F0CC; // type:function size:0x6C
fn_8003F138 = .text:0x8003F138; // type:function size:0x70
fn_8003F1A8 = .text:0x8003F1A8; // type:function size:0xA4
fn_8003F24C = .text:0x8003F24C; // type:function size:0x84
fn_8003F2D0 = .text:0x8003F2D0; // type:function size:0xAC
__OSSystemCallVectorStart = .text:0x8003F37C; // type:label scope:global
fn_8003F37C = .text:0x8003F37C; // type:function size:0x20
__OSSystemCallVectorEnd = .text:0x8003F398; // type:label scope:global
__OSInitSystemCall = .text:0x8003F39C; // type:function size:0x64 scope:global
fn_8003F400 = .text:0x8003F400; // type:function size:0x4
__OSThreadInit = .text:0x8003F404; // type:function size:0x158 scope:global
OSInitThreadQueue = .text:0x8003F55C; // type:function size:0x10 scope:global
fn_8003F56C = .text:0x8003F56C; // type:function size:0xC
OSDisableScheduler = .text:0x8003F578; // type:function size:0x40 scope:global
OSEnableScheduler = .text:0x8003F5B8; // type:function size:0x40 scope:global
fn_8003F5F8 = .text:0x8003F5F8; // type:function size:0x68
fn_8003F660 = .text:0x8003F660; // type:function size:0x3C
fn_8003F69C = .text:0x8003F69C; // type:function size:0x1C0
SelectThread = .text:0x8003F85C; // type:function size:0x228 scope:local
__OSReschedule = .text:0x8003FA84; // type:function size:0x30 scope:global
fn_8003FAB4 = .text:0x8003FAB4; // type:function size:0x1E8
fn_8003FC9C = .text:0x8003FC9C; // type:function size:0xE4
OSCancelThread = .text:0x8003FD80; // type:function size:0x1BC scope:global
fn_8003FF3C = .text:0x8003FF3C; // type:function size:0x288
fn_800401C4 = .text:0x800401C4; // type:function size:0x170
fn_80040334 = .text:0x80040334; // type:function size:0xEC
fn_80040420 = .text:0x80040420; // type:function size:0x104
fn_80040524 = .text:0x80040524; // type:function size:0xC0
fn_800405E4 = .text:0x800405E4; // type:function size:0x8
OSClearStack = .text:0x800405EC; // type:function size:0xAC scope:global
OSGetTime = .text:0x80040698; // type:function size:0x18 scope:global
OSGetTick = .text:0x800406B0; // type:function size:0x8 scope:global
__OSGetSystemTime = .text:0x800406B8; // type:function size:0x64 scope:global
InitMetroTRK_BBA = .text:0x8004071C; // type:function size:0x4 scope:weak
__init_user = .text:0x80040720; // type:function size:0x20 scope:global
__init_cpp = .text:0x80040740; // type:function size:0x54 scope:local
_ExitProcess = .text:0x80040794; // type:function size:0x20 scope:global
fn_800407B4 = .text:0x800407B4; // type:function size:0x1A4
fn_80040958 = .text:0x80040958; // type:function size:0xC4
fn_80040A1C = .text:0x80040A1C; // type:function size:0xC0
fn_80040ADC = .text:0x80040ADC; // type:function size:0xD8
fn_80040BB4 = .text:0x80040BB4; // type:function size:0x32C
fn_80040EE0 = .text:0x80040EE0; // type:function size:0x134
fn_80041014 = .text:0x80041014; // type:function size:0x100
fn_80041114 = .text:0x80041114; // type:function size:0x218
fn_8004132C = .text:0x8004132C; // type:function size:0x3AC
fn_800416D8 = .text:0x800416D8; // type:function size:0xA4
fn_8004177C = .text:0x8004177C; // type:function size:0x60
fn_800417DC = .text:0x800417DC; // type:function size:0x174
fn_80041950 = .text:0x80041950; // type:function size:0x174
fn_80041AC4 = .text:0x80041AC4; // type:function size:0x3F8
fn_80041EBC = .text:0x80041EBC; // type:function size:0x194
fn_80042050 = .text:0x80042050; // type:function size:0x60
fn_800420B0 = .text:0x800420B0; // type:function size:0x54
__PADDisableRecalibration = .text:0x80042104; // type:function size:0x7C scope:global
fn_80042180 = .text:0x80042180; // type:function size:0x20
fn_800421A0 = .text:0x800421A0; // type:function size:0x3C
fn_800421DC = .text:0x800421DC; // type:function size:0x2FC
SIInterruptHandler = .text:0x800424D8; // type:function size:0x344 scope:local
fn_8004281C = .text:0x8004281C; // type:function size:0x98
fn_800428B4 = .text:0x800428B4; // type:function size:0xCC
fn_80042980 = .text:0x80042980; // type:function size:0xF4
SIInit = .text:0x80042A74; // type:function size:0xB4 scope:global
fn_80042B28 = .text:0x80042B28; // type:function size:0x20C
fn_80042D34 = .text:0x80042D34; // type:function size:0x7C
fn_80042DB0 = .text:0x80042DB0; // type:function size:0x14
fn_80042DC4 = .text:0x80042DC4; // type:function size:0x10
SISetXY = .text:0x80042DD4; // type:function size:0x6C scope:global
fn_80042E40 = .text:0x80042E40; // type:function size:0x9C
fn_80042EDC = .text:0x80042EDC; // type:function size:0x6C
fn_80042F48 = .text:0x80042F48; // type:function size:0xD4
fn_8004301C = .text:0x8004301C; // type:function size:0xC4
fn_800430E0 = .text:0x800430E0; // type:function size:0x8C
SITransfer = .text:0x8004316C; // type:function size:0x16C scope:global
GetTypeCallback = .text:0x800432D8; // type:function size:0x298 scope:local
SIGetType = .text:0x80043570; // type:function size:0x1C4 scope:global
fn_80043734 = .text:0x80043734; // type:function size:0x13C
SISetSamplingRate = .text:0x80043870; // type:function size:0xE4 scope:global
fn_80043954 = .text:0x80043954; // type:function size:0x24
fn_80043978 = .text:0x80043978; // type:function size:0x230
fn_80043BA8 = .text:0x80043BA8; // type:function size:0x44
fn_80043BEC = .text:0x80043BEC; // type:function size:0xA0
fn_80043C8C = .text:0x80043C8C; // type:function size:0x200
fn_80043E8C = .text:0x80043E8C; // type:function size:0x4B0
fn_8004433C = .text:0x8004433C; // type:function size:0x54
fn_80044390 = .text:0x80044390; // type:function size:0x2D4
fn_80044664 = .text:0x80044664; // type:function size:0x1A0
fn_80044804 = .text:0x80044804; // type:function size:0x828
fn_8004502C = .text:0x8004502C; // type:function size:0x130
fn_8004515C = .text:0x8004515C; // type:function size:0x6C
fn_800451C8 = .text:0x800451C8; // type:function size:0x7C
fn_80045244 = .text:0x80045244; // type:function size:0x68
fn_800452AC = .text:0x800452AC; // type:function size:0x98
VIGetTvFormat = .text:0x80045344; // type:function size:0x68 scope:global
fn_800453AC = .text:0x800453AC; // type:function size:0x24
fn_800453D0 = .text:0x800453D0; // type:function size:0x3C
fn_8004540C = .text:0x8004540C; // type:function size:0x1C
fn_80045428 = .text:0x80045428; // type:function size:0x1C
fn_80045444 = .text:0x80045444; // type:function size:0x28
fn_8004546C = .text:0x8004546C; // type:function size:0x40
fn_800454AC = .text:0x800454AC; // type:function size:0x78
fn_80045524 = .text:0x80045524; // type:function size:0x24
fn_80045548 = .text:0x80045548; // type:function size:0x20
fn_80045568 = .text:0x80045568; // type:function size:0x68
fn_800455D0 = .text:0x800455D0; // type:function size:0x68
fn_80045638 = .text:0x80045638; // type:function size:0x68
fn_800456A0 = .text:0x800456A0; // type:function size:0x2C
fn_800456CC = .text:0x800456CC; // type:function size:0x30
fn_800456FC = .text:0x800456FC; // type:function size:0x30
fn_8004572C = .text:0x8004572C; // type:function size:0x78
fn_800457A4 = .text:0x800457A4; // type:function size:0x70
fn_80045814 = .text:0x80045814; // type:function size:0xAC
fn_800458C0 = .text:0x800458C0; // type:function size:0xAC
fn_8004596C = .text:0x8004596C; // type:function size:0x5C
fn_800459C8 = .text:0x800459C8; // type:function size:0xE4
fn_80045AAC = .text:0x80045AAC; // type:function size:0x244
fn_80045CF0 = .text:0x80045CF0; // type:function size:0x4C
fn_80045D3C = .text:0x80045D3C; // type:function size:0x2C
fn_80045D68 = .text:0x80045D68; // type:function size:0x78
fn_80045DE0 = .text:0x80045DE0; // type:function size:0x78
fn_80045E58 = .text:0x80045E58; // type:function size:0x78
fn_80045ED0 = .text:0x80045ED0; // type:function size:0x70
fn_80045F40 = .text:0x80045F40; // type:function size:0x60
fn_80045FA0 = .text:0x80045FA0; // type:function size:0xB0
fn_80046050 = .text:0x80046050; // type:function size:0x94
fn_800460E4 = .text:0x800460E4; // type:function size:0xA8
fn_8004618C = .text:0x8004618C; // type:function size:0x160
fn_800462EC = .text:0x800462EC; // type:function size:0x214
fn_80046500 = .text:0x80046500; // type:function size:0x30
fn_80046530 = .text:0x80046530; // type:function size:0x5C
fn_8004658C = .text:0x8004658C; // type:function size:0xE4
fn_80046670 = .text:0x80046670; // type:function size:0x44
fn_800466B4 = .text:0x800466B4; // type:function size:0x3C
fn_800466F0 = .text:0x800466F0; // type:function size:0xC4
fn_800467B4 = .text:0x800467B4; // type:function size:0x18
fn_800467CC = .text:0x800467CC; // type:function size:0x40
fn_8004680C = .text:0x8004680C; // type:function size:0x114
fn_80046920 = .text:0x80046920; // type:function size:0x8
fn_80046928 = .text:0x80046928; // type:function size:0x48
fn_80046970 = .text:0x80046970; // type:function size:0xF4
fn_80046A64 = .text:0x80046A64; // type:function size:0x8C
fn_80046AF0 = .text:0x80046AF0; // type:function size:0x2A0
fn_80046D90 = .text:0x80046D90; // type:function size:0x8
fn_80046D98 = .text:0x80046D98; // type:function size:0x8
fn_80046DA0 = .text:0x80046DA0; // type:function size:0x34
fn_80046DD4 = .text:0x80046DD4; // type:function size:0x4
fn_80046DD8 = .text:0x80046DD8; // type:function size:0x1C
fn_80046DF4 = .text:0x80046DF4; // type:function size:0x138
fn_80046F2C = .text:0x80046F2C; // type:function size:0x2F4
fn_80047220 = .text:0x80047220; // type:function size:0x1BC
fn_800473DC = .text:0x800473DC; // type:function size:0x394
fn_80047770 = .text:0x80047770; // type:function size:0x9C
fn_8004780C = .text:0x8004780C; // type:function size:0x24
fn_80047830 = .text:0x80047830; // type:function size:0x2C
fn_8004785C = .text:0x8004785C; // type:function size:0x34
fn_80047890 = .text:0x80047890; // type:function size:0x28
fn_800478B8 = .text:0x800478B8; // type:function size:0x64
fn_8004791C = .text:0x8004791C; // type:function size:0x28
fn_80047944 = .text:0x80047944; // type:function size:0x30
fn_80047974 = .text:0x80047974; // type:function size:0x54
fn_800479C8 = .text:0x800479C8; // type:function size:0x78
fn_80047A40 = .text:0x80047A40; // type:function size:0x78
fn_80047AB8 = .text:0x80047AB8; // type:function size:0x50
fn_80047B08 = .text:0x80047B08; // type:function size:0x2C
fn_80047B34 = .text:0x80047B34; // type:function size:0x24
fn_80047B58 = .text:0x80047B58; // type:function size:0x78
fn_80047BD0 = .text:0x80047BD0; // type:function size:0x2C
fn_80047BFC = .text:0x80047BFC; // type:function size:0x2C
fn_80047C28 = .text:0x80047C28; // type:function size:0x2C
fn_80047C54 = .text:0x80047C54; // type:function size:0x1C
fn_80047C70 = .text:0x80047C70; // type:function size:0x98
fn_80047D08 = .text:0x80047D08; // type:function size:0x2C
fn_80047D34 = .text:0x80047D34; // type:function size:0x164
fn_80047E98 = .text:0x80047E98; // type:function size:0x1D8
fn_80048070 = .text:0x80048070; // type:function size:0x80
fn_800480F0 = .text:0x800480F0; // type:function size:0x80
fn_80048170 = .text:0x80048170; // type:function size:0x4C
fn_800481BC = .text:0x800481BC; // type:function size:0x24
fn_800481E0 = .text:0x800481E0; // type:function size:0x2C
fn_8004820C = .text:0x8004820C; // type:function size:0x58
fn_80048264 = .text:0x80048264; // type:function size:0x80
fn_800482E4 = .text:0x800482E4; // type:function size:0x3C
fn_80048320 = .text:0x80048320; // type:function size:0x68
fn_80048388 = .text:0x80048388; // type:function size:0x2C
fn_800483B4 = .text:0x800483B4; // type:function size:0x60
fn_80048414 = .text:0x80048414; // type:function size:0x58
fn_8004846C = .text:0x8004846C; // type:function size:0x134
fn_800485A0 = .text:0x800485A0; // type:function size:0x4C
fn_800485EC = .text:0x800485EC; // type:function size:0x28
fn_80048614 = .text:0x80048614; // type:function size:0x60
fn_80048674 = .text:0x80048674; // type:function size:0x60
fn_800486D4 = .text:0x800486D4; // type:function size:0x38
fn_8004870C = .text:0x8004870C; // type:function size:0x110
fn_8004881C = .text:0x8004881C; // type:function size:0x5C
fn_80048878 = .text:0x80048878; // type:function size:0x34
fn_800488AC = .text:0x800488AC; // type:function size:0x1B8
fn_80048A64 = .text:0x80048A64; // type:function size:0x50
fn_80048AB4 = .text:0x80048AB4; // type:function size:0xCC
fn_80048B80 = .text:0x80048B80; // type:function size:0x28
fn_80048BA8 = .text:0x80048BA8; // type:function size:0x40
fn_80048BE8 = .text:0x80048BE8; // type:function size:0xC4
fn_80048CAC = .text:0x80048CAC; // type:function size:0x9C
fn_80048D48 = .text:0x80048D48; // type:function size:0x14
fn_80048D5C = .text:0x80048D5C; // type:function size:0x2C
fn_80048D88 = .text:0x80048D88; // type:function size:0x144
fn_80048ECC = .text:0x80048ECC; // type:function size:0x1D4
fn_800490A0 = .text:0x800490A0; // type:function size:0x4C
fn_800490EC = .text:0x800490EC; // type:function size:0xE0
fn_800491CC = .text:0x800491CC; // type:function size:0x58
fn_80049224 = .text:0x80049224; // type:function size:0x74
fn_80049298 = .text:0x80049298; // type:function size:0x44
fn_800492DC = .text:0x800492DC; // type:function size:0x20
fn_800492FC = .text:0x800492FC; // type:function size:0x10
fn_8004930C = .text:0x8004930C; // type:function size:0xC
fn_80049318 = .text:0x80049318; // type:function size:0x38
fn_80049350 = .text:0x80049350; // type:function size:0x28
fn_80049378 = .text:0x80049378; // type:function size:0x44
fn_800493BC = .text:0x800493BC; // type:function size:0x68
fn_80049424 = .text:0x80049424; // type:function size:0x30
fn_80049454 = .text:0x80049454; // type:function size:0x18C
fn_800495E0 = .text:0x800495E0; // type:function size:0x10C
fn_800496EC = .text:0x800496EC; // type:function size:0x34
fn_80049720 = .text:0x80049720; // type:function size:0x80
fn_800497A0 = .text:0x800497A0; // type:function size:0x2C
fn_800497CC = .text:0x800497CC; // type:function size:0xDC
fn_800498A8 = .text:0x800498A8; // type:function size:0x4
fn_800498AC = .text:0x800498AC; // type:function size:0x70
fn_8004991C = .text:0x8004991C; // type:function size:0x98
fn_800499B4 = .text:0x800499B4; // type:function size:0x98
fn_80049A4C = .text:0x80049A4C; // type:function size:0x104
fn_80049B50 = .text:0x80049B50; // type:function size:0xB0
fn_80049C00 = .text:0x80049C00; // type:function size:0x58
fn_80049C58 = .text:0x80049C58; // type:function size:0x58
fn_80049CB0 = .text:0x80049CB0; // type:function size:0x30
fn_80049CE0 = .text:0x80049CE0; // type:function size:0x8
fn_80049CE8 = .text:0x80049CE8; // type:function size:0x8
fn_80049CF0 = .text:0x80049CF0; // type:function size:0x18
fn_80049D08 = .text:0x80049D08; // type:function size:0x4C
fn_80049D54 = .text:0x80049D54; // type:function size:0x104
fn_80049E58 = .text:0x80049E58; // type:function size:0x70
fn_80049EC8 = .text:0x80049EC8; // type:function size:0x18
fn_80049EE0 = .text:0x80049EE0; // type:function size:0x18
fn_80049EF8 = .text:0x80049EF8; // type:function size:0x18
fn_80049F10 = .text:0x80049F10; // type:function size:0x18
fn_80049F28 = .text:0x80049F28; // type:function size:0x68
fn_80049F90 = .text:0x80049F90; // type:function size:0x68
fn_80049FF8 = .text:0x80049FF8; // type:function size:0x18
fn_8004A010 = .text:0x8004A010; // type:function size:0x18
fn_8004A028 = .text:0x8004A028; // type:function size:0x34
fn_8004A05C = .text:0x8004A05C; // type:function size:0x28
fn_8004A084 = .text:0x8004A084; // type:function size:0x7C
fn_8004A100 = .text:0x8004A100; // type:function size:0x24
fn_8004A124 = .text:0x8004A124; // type:function size:0x4
fn_8004A128 = .text:0x8004A128; // type:function size:0xBC
fn_8004A1E4 = .text:0x8004A1E4; // type:function size:0xC8
fn_8004A2AC = .text:0x8004A2AC; // type:function size:0x14
fn_8004A2C0 = .text:0x8004A2C0; // type:function size:0xF4
fn_8004A3B4 = .text:0x8004A3B4; // type:function size:0x208
fn_8004A5BC = .text:0x8004A5BC; // type:function size:0x4
fn_8004A5C0 = .text:0x8004A5C0; // type:function size:0xC
fn_8004A5CC = .text:0x8004A5CC; // type:function size:0x18
fn_8004A5E4 = .text:0x8004A5E4; // type:function size:0xF4
fn_8004A6D8 = .text:0x8004A6D8; // type:function size:0x14C
fn_8004A824 = .text:0x8004A824; // type:function size:0xCC
fn_8004A8F0 = .text:0x8004A8F0; // type:function size:0x11C
fn_8004AA0C = .text:0x8004AA0C; // type:function size:0x38
fn_8004AA44 = .text:0x8004AA44; // type:function size:0xC
fn_8004AA50 = .text:0x8004AA50; // type:function size:0x14
fn_8004AA64 = .text:0x8004AA64; // type:function size:0x38
fn_8004AA9C = .text:0x8004AA9C; // type:function size:0x1C
fn_8004AAB8 = .text:0x8004AAB8; // type:function size:0x34
fn_8004AAEC = .text:0x8004AAEC; // type:function size:0x134
fn_8004AC20 = .text:0x8004AC20; // type:function size:0x50
fn_8004AC70 = .text:0x8004AC70; // type:function size:0x138
fn_8004ADA8 = .text:0x8004ADA8; // type:function size:0x23C
fn_8004AFE4 = .text:0x8004AFE4; // type:function size:0x24
fn_8004B008 = .text:0x8004B008; // type:function size:0x24
fn_8004B02C = .text:0x8004B02C; // type:function size:0x24
fn_8004B050 = .text:0x8004B050; // type:function size:0x14
fn_8004B064 = .text:0x8004B064; // type:function size:0xC
fn_8004B070 = .text:0x8004B070; // type:function size:0x2C
fn_8004B09C = .text:0x8004B09C; // type:function size:0x2C
fn_8004B0C8 = .text:0x8004B0C8; // type:function size:0x2C
fn_8004B0F4 = .text:0x8004B0F4; // type:function size:0x28
fn_8004B11C = .text:0x8004B11C; // type:function size:0x28
fn_8004B144 = .text:0x8004B144; // type:function size:0x54
fn_8004B198 = .text:0x8004B198; // type:function size:0x64
fn_8004B1FC = .text:0x8004B1FC; // type:function size:0x38
fn_8004B234 = .text:0x8004B234; // type:function size:0x8
fn_8004B23C = .text:0x8004B23C; // type:function size:0xC
fn_8004B248 = .text:0x8004B248; // type:function size:0x2C
fn_8004B274 = .text:0x8004B274; // type:function size:0x8
fn_8004B27C = .text:0x8004B27C; // type:function size:0x54
fn_8004B2D0 = .text:0x8004B2D0; // type:function size:0x7C
fn_8004B34C = .text:0x8004B34C; // type:function size:0x5C
fn_8004B3A8 = .text:0x8004B3A8; // type:function size:0x134
fn_8004B4DC = .text:0x8004B4DC; // type:function size:0x140
fn_8004B61C = .text:0x8004B61C; // type:function size:0x58
fn_8004B674 = .text:0x8004B674; // type:function size:0x100
fn_8004B774 = .text:0x8004B774; // type:function size:0x2FC
fn_8004BA70 = .text:0x8004BA70; // type:function size:0xD8
fn_8004BB48 = .text:0x8004BB48; // type:function size:0xD8
fn_8004BC20 = .text:0x8004BC20; // type:function size:0x3C
fn_8004BC5C = .text:0x8004BC5C; // type:function size:0xE4
fn_8004BD40 = .text:0x8004BD40; // type:function size:0x78
fn_8004BDB8 = .text:0x8004BDB8; // type:function size:0xEC
fn_8004BEA4 = .text:0x8004BEA4; // type:function size:0x28
fn_8004BECC = .text:0x8004BECC; // type:function size:0x28
fn_8004BEF4 = .text:0x8004BEF4; // type:function size:0x28
fn_8004BF1C = .text:0x8004BF1C; // type:function size:0x28
fn_8004BF44 = .text:0x8004BF44; // type:function size:0x28
fn_8004BF6C = .text:0x8004BF6C; // type:function size:0x4
fn_8004BF70 = .text:0x8004BF70; // type:function size:0x104
fn_8004C074 = .text:0x8004C074; // type:function size:0x168
fn_8004C1DC = .text:0x8004C1DC; // type:function size:0x78
fn_8004C254 = .text:0x8004C254; // type:function size:0xA0
fn_8004C2F4 = .text:0x8004C2F4; // type:function size:0x78
fn_8004C36C = .text:0x8004C36C; // type:function size:0x34
fn_8004C3A0 = .text:0x8004C3A0; // type:function size:0x94
fn_8004C434 = .text:0x8004C434; // type:function size:0x44
fn_8004C478 = .text:0x8004C478; // type:function size:0x108
fn_8004C580 = .text:0x8004C580; // type:function size:0x24
fn_8004C5A4 = .text:0x8004C5A4; // type:function size:0x38
fn_8004C5DC = .text:0x8004C5DC; // type:function size:0x28
fn_8004C604 = .text:0x8004C604; // type:function size:0xD0
fn_8004C6D4 = .text:0x8004C6D4; // type:function size:0x4
fn_8004C6D8 = .text:0x8004C6D8; // type:function size:0xC
fn_8004C6E4 = .text:0x8004C6E4; // type:function size:0x14
fn_8004C6F8 = .text:0x8004C6F8; // type:function size:0x4C
fn_8004C744 = .text:0x8004C744; // type:function size:0x20
fn_8004C764 = .text:0x8004C764; // type:function size:0x94
fn_8004C7F8 = .text:0x8004C7F8; // type:function size:0x44
fn_8004C83C = .text:0x8004C83C; // type:function size:0x4
fn_8004C840 = .text:0x8004C840; // type:function size:0x10
fn_8004C850 = .text:0x8004C850; // type:function size:0xC
fn_8004C85C = .text:0x8004C85C; // type:function size:0x14
fn_8004C870 = .text:0x8004C870; // type:function size:0x20
fn_8004C890 = .text:0x8004C890; // type:function size:0xB4
fn_8004C944 = .text:0x8004C944; // type:function size:0x44
fn_8004C988 = .text:0x8004C988; // type:function size:0x4
fn_8004C98C = .text:0x8004C98C; // type:function size:0x10
fn_8004C99C = .text:0x8004C99C; // type:function size:0xC
fn_8004C9A8 = .text:0x8004C9A8; // type:function size:0x14
fn_8004C9BC = .text:0x8004C9BC; // type:function size:0x54
fn_8004CA10 = .text:0x8004CA10; // type:function size:0xB4
fn_8004CAC4 = .text:0x8004CAC4; // type:function size:0x40
fn_8004CB04 = .text:0x8004CB04; // type:function size:0x4C
fn_8004CB50 = .text:0x8004CB50; // type:function size:0x58
fn_8004CBA8 = .text:0x8004CBA8; // type:function size:0xB8
fn_8004CC60 = .text:0x8004CC60; // type:function size:0x40
fn_8004CCA0 = .text:0x8004CCA0; // type:function size:0x4C
fn_8004CCEC = .text:0x8004CCEC; // type:function size:0x128
fn_8004CE14 = .text:0x8004CE14; // type:function size:0x274
fn_8004D088 = .text:0x8004D088; // type:function size:0x11C
fn_8004D1A4 = .text:0x8004D1A4; // type:function size:0x248
fn_8004D3EC = .text:0x8004D3EC; // type:function size:0x4EC
fn_8004D8D8 = .text:0x8004D8D8; // type:function size:0xF0
fn_8004D9C8 = .text:0x8004D9C8; // type:function size:0xC
fn_8004D9D4 = .text:0x8004D9D4; // type:function size:0x14
fn_8004D9E8 = .text:0x8004D9E8; // type:function size:0x10
fn_8004D9F8 = .text:0x8004D9F8; // type:function size:0x4
fn_8004D9FC = .text:0x8004D9FC; // type:function size:0x534
fn_8004DF30 = .text:0x8004DF30; // type:function size:0x5C0
fn_8004E4F0 = .text:0x8004E4F0; // type:function size:0x4
fn_8004E4F4 = .text:0x8004E4F4; // type:function size:0x10
fn_8004E504 = .text:0x8004E504; // type:function size:0xC
fn_8004E510 = .text:0x8004E510; // type:function size:0x14
fn_8004E524 = .text:0x8004E524; // type:function size:0xDC
fn_8004E600 = .text:0x8004E600; // type:function size:0x60
fn_8004E660 = .text:0x8004E660; // type:function size:0x4B4
fn_8004EB14 = .text:0x8004EB14; // type:function size:0x3AC
fn_8004EEC0 = .text:0x8004EEC0; // type:function size:0x8C
fn_8004EF4C = .text:0x8004EF4C; // type:function size:0x38
fn_8004EF84 = .text:0x8004EF84; // type:function size:0x98
fn_8004F01C = .text:0x8004F01C; // type:function size:0x4
fn_8004F020 = .text:0x8004F020; // type:function size:0x8C
fn_8004F0AC = .text:0x8004F0AC; // type:function size:0xB4
fn_8004F160 = .text:0x8004F160; // type:function size:0x8C
fn_8004F1EC = .text:0x8004F1EC; // type:function size:0xC8
fn_8004F2B4 = .text:0x8004F2B4; // type:function size:0x4
fn_8004F2B8 = .text:0x8004F2B8; // type:function size:0xA4
fn_8004F35C = .text:0x8004F35C; // type:function size:0xB0
fn_8004F40C = .text:0x8004F40C; // type:function size:0x4C
fn_8004F458 = .text:0x8004F458; // type:function size:0xC4
fn_8004F51C = .text:0x8004F51C; // type:function size:0x4
fn_8004F520 = .text:0x8004F520; // type:function size:0xA0
fn_8004F5C0 = .text:0x8004F5C0; // type:function size:0xD8
fn_8004F698 = .text:0x8004F698; // type:function size:0xA0
fn_8004F738 = .text:0x8004F738; // type:function size:0xE8
fn_8004F820 = .text:0x8004F820; // type:function size:0x4
fn_8004F824 = .text:0x8004F824; // type:function size:0xA0
fn_8004F8C4 = .text:0x8004F8C4; // type:function size:0x1FC
fn_8004FAC0 = .text:0x8004FAC0; // type:function size:0x4
fn_8004FAC4 = .text:0x8004FAC4; // type:function size:0x54
fn_8004FB18 = .text:0x8004FB18; // type:function size:0xA8
fn_8004FBC0 = .text:0x8004FBC0; // type:function size:0x70
fn_8004FC30 = .text:0x8004FC30; // type:function size:0xC8
fn_8004FCF8 = .text:0x8004FCF8; // type:function size:0x8
fn_8004FD00 = .text:0x8004FD00; // type:function size:0x84
fn_8004FD84 = .text:0x8004FD84; // type:function size:0x88
fn_8004FE0C = .text:0x8004FE0C; // type:function size:0x1CC
fn_8004FFD8 = .text:0x8004FFD8; // type:function size:0x4
fn_8004FFDC = .text:0x8004FFDC; // type:function size:0x54
fn_80050030 = .text:0x80050030; // type:function size:0x4B4
fn_800504E4 = .text:0x800504E4; // type:function size:0x458
fn_8005093C = .text:0x8005093C; // type:function size:0x4C
fn_80050988 = .text:0x80050988; // type:function size:0x74
fn_800509FC = .text:0x800509FC; // type:function size:0x5C
fn_80050A58 = .text:0x80050A58; // type:function size:0x5C
fn_80050AB4 = .text:0x80050AB4; // type:function size:0x38
fn_80050AEC = .text:0x80050AEC; // type:function size:0x34
fn_80050B20 = .text:0x80050B20; // type:function size:0xA0
fn_80050BC0 = .text:0x80050BC0; // type:function size:0x48
fn_80050C08 = .text:0x80050C08; // type:function size:0x9C
fn_80050CA4 = .text:0x80050CA4; // type:function size:0x64
fn_80050D08 = .text:0x80050D08; // type:function size:0x6C
fn_80050D74 = .text:0x80050D74; // type:function size:0x144
fn_80050EB8 = .text:0x80050EB8; // type:function size:0x4
fn_80050EBC = .text:0x80050EBC; // type:function size:0x28
fn_80050EE4 = .text:0x80050EE4; // type:function size:0x10
fn_80050EF4 = .text:0x80050EF4; // type:function size:0x10
fn_80050F04 = .text:0x80050F04; // type:function size:0x10
fn_80050F14 = .text:0x80050F14; // type:function size:0x10
fn_80050F24 = .text:0x80050F24; // type:function size:0x30
fn_80050F54 = .text:0x80050F54; // type:function size:0x8
fn_80050F5C = .text:0x80050F5C; // type:function size:0x34
fn_80050F90 = .text:0x80050F90; // type:function size:0x10
fn_80050FA0 = .text:0x80050FA0; // type:function size:0xA4
fn_80051044 = .text:0x80051044; // type:function size:0x2C
fn_80051070 = .text:0x80051070; // type:function size:0x84
fn_800510F4 = .text:0x800510F4; // type:function size:0x40
fn_80051134 = .text:0x80051134; // type:function size:0x8
fn_8005113C = .text:0x8005113C; // type:function size:0x98
DBClose = .text:0x800511D4; // type:function size:0x4 scope:global
DBOpen = .text:0x800511D8; // type:function size:0x4 scope:global
DBWrite = .text:0x800511DC; // type:function size:0x260 scope:global
DBRead = .text:0x8005143C; // type:function size:0x8C scope:global
DBQueryData = .text:0x800514C8; // type:function size:0x9C scope:global
DBInitInterrupts = .text:0x80051564; // type:function size:0x54 scope:global
DBInitComm = .text:0x800515B8; // type:function size:0x78 scope:global
fn_80051630 = .text:0x80051630; // type:function size:0x40
fn_80051670 = .text:0x80051670; // type:function size:0x3C
fn_800516AC = .text:0x800516AC; // type:function size:0xAC
fn_80051758 = .text:0x80051758; // type:function size:0xDC
fn_80051834 = .text:0x80051834; // type:function size:0xDC
fn_80051910 = .text:0x80051910; // type:function size:0xAC
fn_800519BC = .text:0x800519BC; // type:function size:0x298
fn_80051C54 = .text:0x80051C54; // type:function size:0x90
fn_80051CE4 = .text:0x80051CE4; // type:function size:0x13C
fn_80051E20 = .text:0x80051E20; // type:function size:0x24
fn_80051E44 = .text:0x80051E44; // type:function size:0x24
fn_80051E68 = .text:0x80051E68; // type:function size:0x2C
fn_80051E94 = .text:0x80051E94; // type:function size:0x24
fn_80051EB8 = .text:0x80051EB8; // type:function size:0x24
fn_80051EDC = .text:0x80051EDC; // type:function size:0x24
fn_80051F00 = .text:0x80051F00; // type:function size:0x24
fn_80051F24 = .text:0x80051F24; // type:function size:0x24
fn_80051F48 = .text:0x80051F48; // type:function size:0x8
fn_80051F50 = .text:0x80051F50; // type:function size:0x24
fn_80051F74 = .text:0x80051F74; // type:function size:0x24
fn_80051F98 = .text:0x80051F98; // type:function size:0x24
fn_80051FBC = .text:0x80051FBC; // type:function size:0x24
fn_80051FE0 = .text:0x80051FE0; // type:function size:0x24
fn_80052004 = .text:0x80052004; // type:function size:0x24
fn_80052028 = .text:0x80052028; // type:function size:0x24
fn_8005204C = .text:0x8005204C; // type:function size:0x24
fn_80052070 = .text:0x80052070; // type:function size:0x24
fn_80052094 = .text:0x80052094; // type:function size:0x24
fn_800520B8 = .text:0x800520B8; // type:function size:0x24
fn_800520DC = .text:0x800520DC; // type:function size:0x8
fn_800520E4 = .text:0x800520E4; // type:function size:0x8
fn_800520EC = .text:0x800520EC; // type:function size:0x8
fn_800520F4 = .text:0x800520F4; // type:function size:0xC
fn_80052100 = .text:0x80052100; // type:function size:0x8
fn_80052108 = .text:0x80052108; // type:function size:0x8
fn_80052110 = .text:0x80052110; // type:function size:0x280
fn_80052390 = .text:0x80052390; // type:function size:0x258
fn_800525E8 = .text:0x800525E8; // type:function size:0x234
fn_8005281C = .text:0x8005281C; // type:function size:0xF8
fn_80052914 = .text:0x80052914; // type:function size:0x1F4
fn_80052B08 = .text:0x80052B08; // type:function size:0x38
fn_80052B40 = .text:0x80052B40; // type:function size:0x40
fn_80052B80 = .text:0x80052B80; // type:function size:0x24
fn_80052BA4 = .text:0x80052BA4; // type:function size:0x4C
fn_80052BF0 = .text:0x80052BF0; // type:function size:0x4C
fn_80052C3C = .text:0x80052C3C; // type:function size:0xC
fn_80052C48 = .text:0x80052C48; // type:function size:0x54
fn_80052C9C = .text:0x80052C9C; // type:function size:0x290
fn_80052F2C = .text:0x80052F2C; // type:function size:0x30
fn_80052F5C = .text:0x80052F5C; // type:function size:0x34
fn_80052F90 = .text:0x80052F90; // type:function size:0x4C
fn_80052FDC = .text:0x80052FDC; // type:function size:0x68
fn_80053044 = .text:0x80053044; // type:function size:0x3B0
fn_800533F4 = .text:0x800533F4; // type:function size:0x3A4
fn_80053798 = .text:0x80053798; // type:function size:0x32C
fn_80053AC4 = .text:0x80053AC4; // type:function size:0xEC
fn_80053BB0 = .text:0x80053BB0; // type:function size:0x268
fn_80053E18 = .text:0x80053E18; // type:function size:0x2C
fn_80053E44 = .text:0x80053E44; // type:function size:0x24
fn_80053E68 = .text:0x80053E68; // type:function size:0x38
fn_80053EA0 = .text:0x80053EA0; // type:function size:0x34
fn_80053ED4 = .text:0x80053ED4; // type:function size:0x338
fn_8005420C = .text:0x8005420C; // type:function size:0x3B0
fn_800545BC = .text:0x800545BC; // type:function size:0x184
fn_80054740 = .text:0x80054740; // type:function size:0x68
fn_800547A8 = .text:0x800547A8; // type:function size:0x270
fn_80054A18 = .text:0x80054A18; // type:function size:0x44
fn_80054A5C = .text:0x80054A5C; // type:function size:0x3C4
fn_80054E20 = .text:0x80054E20; // type:function size:0x338
fn_80055158 = .text:0x80055158; // type:function size:0x3B0
fn_80055508 = .text:0x80055508; // type:function size:0x178
fn_80055680 = .text:0x80055680; // type:function size:0x68
fn_800556E8 = .text:0x800556E8; // type:function size:0x208
fn_800558F0 = .text:0x800558F0; // type:function size:0x8C
fn_8005597C = .text:0x8005597C; // type:function size:0x404
fn_80055D80 = .text:0x80055D80; // type:function size:0x8
fn_80055D88 = .text:0x80055D88; // type:function size:0x8
fn_80055D90 = .text:0x80055D90; // type:function size:0x48
fn_80055DD8 = .text:0x80055DD8; // type:function size:0x38
fn_80055E10 = .text:0x80055E10; // type:function size:0x18
fn_80055E28 = .text:0x80055E28; // type:function size:0x70
fn_80055E98 = .text:0x80055E98; // type:function size:0x8
fn_80055EA0 = .text:0x80055EA0; // type:function size:0x4C
fn_80055EEC = .text:0x80055EEC; // type:function size:0x4C
fn_80055F38 = .text:0x80055F38; // type:function size:0x8
fn_80055F40 = .text:0x80055F40; // type:function size:0x8
fn_80055F48 = .text:0x80055F48; // type:function size:0x8
fn_80055F50 = .text:0x80055F50; // type:function size:0x8
fn_80055F58 = .text:0x80055F58; // type:function size:0x8
fn_80055F60 = .text:0x80055F60; // type:function size:0x8
fn_80055F68 = .text:0x80055F68; // type:function size:0x8
fn_80055F70 = .text:0x80055F70; // type:function size:0x6C
fn_80055FDC = .text:0x80055FDC; // type:function size:0xC
fn_80055FE8 = .text:0x80055FE8; // type:function size:0x8
fn_80055FF0 = .text:0x80055FF0; // type:function size:0x8
fn_80055FF8 = .text:0x80055FF8; // type:function size:0x8
fn_80056000 = .text:0x80056000; // type:function size:0xC
fn_8005600C = .text:0x8005600C; // type:function size:0x10C
fn_80056118 = .text:0x80056118; // type:function size:0x680
fn_80056798 = .text:0x80056798; // type:function size:0x4C
fn_800567E4 = .text:0x800567E4; // type:function size:0x198
fn_8005697C = .text:0x8005697C; // type:function size:0x1C
fn_80056998 = .text:0x80056998; // type:function size:0x30
fn_800569C8 = .text:0x800569C8; // type:function size:0x48
fn_80056A10 = .text:0x80056A10; // type:function size:0x34
fn_80056A44 = .text:0x80056A44; // type:function size:0x2D8
fn_80056D1C = .text:0x80056D1C; // type:function size:0xEC
fn_80056E08 = .text:0x80056E08; // type:function size:0x124
fn_80056F2C = .text:0x80056F2C; // type:function size:0x8
fn_80056F34 = .text:0x80056F34; // type:function size:0xC
fn_80056F40 = .text:0x80056F40; // type:function size:0x1B8
fn_800570F8 = .text:0x800570F8; // type:function size:0x44
fn_8005713C = .text:0x8005713C; // type:function size:0x38
fn_80057174 = .text:0x80057174; // type:function size:0x44
fn_800571B8 = .text:0x800571B8; // type:function size:0x10
fn_800571C8 = .text:0x800571C8; // type:function size:0x9C
fn_80057264 = .text:0x80057264; // type:function size:0x38
fn_8005729C = .text:0x8005729C; // type:function size:0x11C
fn_800573B8 = .text:0x800573B8; // type:function size:0xD0
fn_80057488 = .text:0x80057488; // type:function size:0x50
fn_800574D8 = .text:0x800574D8; // type:function size:0x48
fn_80057520 = .text:0x80057520; // type:function size:0xF0
fn_80057610 = .text:0x80057610; // type:function size:0x7C
fn_8005768C = .text:0x8005768C; // type:function size:0x1E8
fn_80057874 = .text:0x80057874; // type:function size:0x4DC
fn_80057D50 = .text:0x80057D50; // type:function size:0x80
fn_80057DD0 = .text:0x80057DD0; // type:function size:0x64
fn_80057E34 = .text:0x80057E34; // type:function size:0x30
fn_80057E64 = .text:0x80057E64; // type:function size:0x48
fn_80057EAC = .text:0x80057EAC; // type:function size:0x48
fn_80057EF4 = .text:0x80057EF4; // type:function size:0x8C
fn_80057F80 = .text:0x80057F80; // type:function size:0x1A8
fn_80058128 = .text:0x80058128; // type:function size:0x18
fn_80058140 = .text:0x80058140; // type:function size:0x18
fn_80058158 = .text:0x80058158; // type:function size:0x5C
fn_800581B4 = .text:0x800581B4; // type:function size:0x190
fn_80058344 = .text:0x80058344; // type:function size:0x8C
fn_800583D0 = .text:0x800583D0; // type:function size:0x1C
fn_800583EC = .text:0x800583EC; // type:function size:0xC
fn_800583F8 = .text:0x800583F8; // type:function size:0x100
fn_800584F8 = .text:0x800584F8; // type:function size:0x8C
fn_80058584 = .text:0x80058584; // type:function size:0x600
fn_80058B84 = .text:0x80058B84; // type:function size:0x44
fn_80058BC8 = .text:0x80058BC8; // type:function size:0x44
fn_80058C0C = .text:0x80058C0C; // type:function size:0xF0C
fn_80059B18 = .text:0x80059B18; // type:function size:0x230
fn_80059D48 = .text:0x80059D48; // type:function size:0x29C
fn_80059FE4 = .text:0x80059FE4; // type:function size:0x240
fn_8005A224 = .text:0x8005A224; // type:function size:0x234
fn_8005A458 = .text:0x8005A458; // type:function size:0x4C8
fn_8005A920 = .text:0x8005A920; // type:function size:0xC
fn_8005A92C = .text:0x8005A92C; // type:function size:0x90
fn_8005A9BC = .text:0x8005A9BC; // type:function size:0x8
fn_8005A9C4 = .text:0x8005A9C4; // type:function size:0x8
fn_8005A9CC = .text:0x8005A9CC; // type:function size:0xC
fn_8005A9D8 = .text:0x8005A9D8; // type:function size:0x10
fn_8005A9E8 = .text:0x8005A9E8; // type:function size:0x18
fn_8005AA00 = .text:0x8005AA00; // type:function size:0x7C
fn_8005AA7C = .text:0x8005AA7C; // type:function size:0x218
fn_8005AC94 = .text:0x8005AC94; // type:function size:0x3CC
fn_8005B060 = .text:0x8005B060; // type:function size:0x48
fn_8005B0A8 = .text:0x8005B0A8; // type:function size:0xC
fn_8005B0B4 = .text:0x8005B0B4; // type:function size:0xF4
fn_8005B1A8 = .text:0x8005B1A8; // type:function size:0x70
fn_8005B218 = .text:0x8005B218; // type:function size:0x50
fn_8005B268 = .text:0x8005B268; // type:function size:0x58
fn_8005B2C0 = .text:0x8005B2C0; // type:function size:0x1C
fn_8005B2DC = .text:0x8005B2DC; // type:function size:0x50
fn_8005B32C = .text:0x8005B32C; // type:function size:0xC
fn_8005B338 = .text:0x8005B338; // type:function size:0x1C4
fn_8005B4FC = .text:0x8005B4FC; // type:function size:0x94
fn_8005B590 = .text:0x8005B590; // type:function size:0xBC
fn_8005B64C = .text:0x8005B64C; // type:function size:0x5C
fn_8005B6A8 = .text:0x8005B6A8; // type:function size:0x294
fn_8005B93C = .text:0x8005B93C; // type:function size:0x2BC
fn_8005BBF8 = .text:0x8005BBF8; // type:function size:0x4
fn_8005BBFC = .text:0x8005BBFC; // type:function size:0x34
fn_8005BC30 = .text:0x8005BC30; // type:function size:0x180
fn_8005BDB0 = .text:0x8005BDB0; // type:function size:0x30
fn_8005BDE0 = .text:0x8005BDE0; // type:function size:0x94
fn_8005BE74 = .text:0x8005BE74; // type:function size:0x8
fn_8005BE7C = .text:0x8005BE7C; // type:function size:0x164
fn_8005BFE0 = .text:0x8005BFE0; // type:function size:0x20
fn_8005C000 = .text:0x8005C000; // type:function size:0x4
fn_8005C004 = .text:0x8005C004; // type:function size:0x4
fn_8005C008 = .text:0x8005C008; // type:function size:0x150
fn_8005C158 = .text:0x8005C158; // type:function size:0x48
fn_8005C1A0 = .text:0x8005C1A0; // type:function size:0x3C
fn_8005C1DC = .text:0x8005C1DC; // type:function size:0xBC
fn_8005C298 = .text:0x8005C298; // type:function size:0x8
fn_8005C2A0 = .text:0x8005C2A0; // type:function size:0x38
fn_8005C2D8 = .text:0x8005C2D8; // type:function size:0x38
fn_8005C310 = .text:0x8005C310; // type:function size:0x3C
fn_8005C34C = .text:0x8005C34C; // type:function size:0x40
fn_8005C38C = .text:0x8005C38C; // type:function size:0x44
fn_8005C3D0 = .text:0x8005C3D0; // type:function size:0x68
fn_8005C438 = .text:0x8005C438; // type:function size:0x58
fn_8005C490 = .text:0x8005C490; // type:function size:0x58
fn_8005C4E8 = .text:0x8005C4E8; // type:function size:0x58
fn_8005C540 = .text:0x8005C540; // type:function size:0x4F4
fn_8005CA34 = .text:0x8005CA34; // type:function size:0x40
fn_8005CA74 = .text:0x8005CA74; // type:function size:0x120
fn_8005CB94 = .text:0x8005CB94; // type:function size:0x210
fn_8005CDA4 = .text:0x8005CDA4; // type:function size:0x148
fn_8005CEEC = .text:0x8005CEEC; // type:function size:0x284
fn_8005D170 = .text:0x8005D170; // type:function size:0x418
fn_8005D588 = .text:0x8005D588; // type:function size:0x94
fn_8005D61C = .text:0x8005D61C; // type:function size:0xF8
fn_8005D714 = .text:0x8005D714; // type:function size:0x308
fn_8005DA1C = .text:0x8005DA1C; // type:function size:0x434
fn_8005DE50 = .text:0x8005DE50; // type:function size:0x2E0
fn_8005E130 = .text:0x8005E130; // type:function size:0x78
fn_8005E1A8 = .text:0x8005E1A8; // type:function size:0x180
fn_8005E328 = .text:0x8005E328; // type:function size:0xA8
fn_8005E3D0 = .text:0x8005E3D0; // type:function size:0xF8
fn_8005E4C8 = .text:0x8005E4C8; // type:function size:0x8
fn_8005E4D0 = .text:0x8005E4D0; // type:function size:0x18
fn_8005E4E8 = .text:0x8005E4E8; // type:function size:0x34
fn_8005E51C = .text:0x8005E51C; // type:function size:0x20
fn_8005E53C = .text:0x8005E53C; // type:function size:0x34
fn_8005E570 = .text:0x8005E570; // type:function size:0x38
fn_8005E5A8 = .text:0x8005E5A8; // type:function size:0x8
fn_8005E5B0 = .text:0x8005E5B0; // type:function size:0x38
fn_8005E5E8 = .text:0x8005E5E8; // type:function size:0x1C
fn_8005E604 = .text:0x8005E604; // type:function size:0x10
fn_8005E614 = .text:0x8005E614; // type:function size:0x24
fn_8005E638 = .text:0x8005E638; // type:function size:0x24
fn_8005E65C = .text:0x8005E65C; // type:function size:0x30
fn_8005E68C = .text:0x8005E68C; // type:function size:0x158
fn_8005E7E4 = .text:0x8005E7E4; // type:function size:0x30
fn_8005E814 = .text:0x8005E814; // type:function size:0x1C
fn_8005E830 = .text:0x8005E830; // type:function size:0x218
fn_8005EA48 = .text:0x8005EA48; // type:function size:0x20
fn_8005EA68 = .text:0x8005EA68; // type:function size:0xCC
fn_8005EB34 = .text:0x8005EB34; // type:function size:0x58
fn_8005EB8C = .text:0x8005EB8C; // type:function size:0xB0
fn_8005EC3C = .text:0x8005EC3C; // type:function size:0x30
fn_8005EC6C = .text:0x8005EC6C; // type:function size:0xBC
fn_8005ED28 = .text:0x8005ED28; // type:function size:0x64
fn_8005ED8C = .text:0x8005ED8C; // type:function size:0xB4
fn_8005EE40 = .text:0x8005EE40; // type:function size:0x20
fn_8005EE60 = .text:0x8005EE60; // type:function size:0x20
fn_8005EE80 = .text:0x8005EE80; // type:function size:0x20
fn_8005EEA0 = .text:0x8005EEA0; // type:function size:0x20
fn_8005EEC0 = .text:0x8005EEC0; // type:function size:0xC0
fn_8005EF80 = .text:0x8005EF80; // type:function size:0x24
fn_8005EFA4 = .text:0x8005EFA4; // type:function size:0x24
fn_8005EFC8 = .text:0x8005EFC8; // type:function size:0x20
fn_8005EFE8 = .text:0x8005EFE8; // type:function size:0x24
fn_8005F00C = .text:0x8005F00C; // type:function size:0x4
fn_8005F010 = .text:0x8005F010; // type:function size:0x20
fn_8005F030 = .text:0x8005F030; // type:function size:0x20
fn_8005F050 = .text:0x8005F050; // type:function size:0x20
fn_8005F070 = .text:0x8005F070; // type:function size:0x20
fn_8005F090 = .text:0x8005F090; // type:function size:0x20
fn_8005F0B0 = .text:0x8005F0B0; // type:function size:0x20
fn_8005F0D0 = .text:0x8005F0D0; // type:function size:0x20
fn_8005F0F0 = .text:0x8005F0F0; // type:function size:0x20
fn_8005F110 = .text:0x8005F110; // type:function size:0x20
fn_8005F130 = .text:0x8005F130; // type:function size:0x20
fn_8005F150 = .text:0x8005F150; // type:function size:0x20
fn_8005F170 = .text:0x8005F170; // type:function size:0x44
fn_8005F1B4 = .text:0x8005F1B4; // type:function size:0x20
fn_8005F1D4 = .text:0x8005F1D4; // type:function size:0x20
fn_8005F1F4 = .text:0x8005F1F4; // type:function size:0x20
fn_8005F214 = .text:0x8005F214; // type:function size:0x20
fn_8005F234 = .text:0x8005F234; // type:function size:0x64
fn_8005F298 = .text:0x8005F298; // type:function size:0x260
fn_8005F4F8 = .text:0x8005F4F8; // type:function size:0x2F0
fn_8005F7E8 = .text:0x8005F7E8; // type:function size:0x154
fn_8005F93C = .text:0x8005F93C; // type:function size:0x38
fn_8005F974 = .text:0x8005F974; // type:function size:0xFC
fn_8005FA70 = .text:0x8005FA70; // type:function size:0x38
fn_8005FAA8 = .text:0x8005FAA8; // type:function size:0x38
fn_8005FAE0 = .text:0x8005FAE0; // type:function size:0x24
fn_8005FB04 = .text:0x8005FB04; // type:function size:0x38
fn_8005FB3C = .text:0x8005FB3C; // type:function size:0x9C
fn_8005FBD8 = .text:0x8005FBD8; // type:function size:0xAC
fn_8005FC84 = .text:0x8005FC84; // type:function size:0x20
fn_8005FCA4 = .text:0x8005FCA4; // type:function size:0x290
fn_8005FF34 = .text:0x8005FF34; // type:function size:0x190
fn_800600C4 = .text:0x800600C4; // type:function size:0x2C4
fn_80060388 = .text:0x80060388; // type:function size:0x5C
fn_800603E4 = .text:0x800603E4; // type:function size:0x2C0
fn_800606A4 = .text:0x800606A4; // type:function size:0x29C
fn_80060940 = .text:0x80060940; // type:function size:0x278
fn_80060BB8 = .text:0x80060BB8; // type:function size:0x3D0
fn_80060F88 = .text:0x80060F88; // type:function size:0x20
fn_80060FA8 = .text:0x80060FA8; // type:function size:0x230
fn_800611D8 = .text:0x800611D8; // type:function size:0x54
fn_8006122C = .text:0x8006122C; // type:function size:0x250
fn_8006147C = .text:0x8006147C; // type:function size:0x50
fn_800614CC = .text:0x800614CC; // type:function size:0x34
fn_80061500 = .text:0x80061500; // type:function size:0xC0
fn_800615C0 = .text:0x800615C0; // type:function size:0x68
fn_80061628 = .text:0x80061628; // type:function size:0xC0
fn_800616E8 = .text:0x800616E8; // type:function size:0xC0
fn_800617A8 = .text:0x800617A8; // type:function size:0xC0
fn_80061868 = .text:0x80061868; // type:function size:0xBC
fn_80061924 = .text:0x80061924; // type:function size:0x664
fn_80061F88 = .text:0x80061F88; // type:function size:0x134
fn_800620BC = .text:0x800620BC; // type:function size:0x27C
fn_80062338 = .text:0x80062338; // type:function size:0x40
fn_80062378 = .text:0x80062378; // type:function size:0x4
fn_8006237C = .text:0x8006237C; // type:function size:0x60
fn_800623DC = .text:0x800623DC; // type:function size:0xE4
fn_800624C0 = .text:0x800624C0; // type:function size:0x60
fn_80062520 = .text:0x80062520; // type:function size:0x64
fn_80062584 = .text:0x80062584; // type:function size:0x1A0
fn_80062724 = .text:0x80062724; // type:function size:0x428
fn_80062B4C = .text:0x80062B4C; // type:function size:0x60
fn_80062BAC = .text:0x80062BAC; // type:function size:0xCC
fn_80062C78 = .text:0x80062C78; // type:function size:0x1C4
fn_80062E3C = .text:0x80062E3C; // type:function size:0x210
fn_8006304C = .text:0x8006304C; // type:function size:0x164
fn_800631B0 = .text:0x800631B0; // type:function size:0x14
fn_800631C4 = .text:0x800631C4; // type:function size:0x178
fn_8006333C = .text:0x8006333C; // type:function size:0x6C
fn_800633A8 = .text:0x800633A8; // type:function size:0xC
fn_800633B4 = .text:0x800633B4; // type:function size:0xC0
fn_80063474 = .text:0x80063474; // type:function size:0x34
fn_800634A8 = .text:0x800634A8; // type:function size:0x20
fn_800634C8 = .text:0x800634C8; // type:function size:0x20
fn_800634E8 = .text:0x800634E8; // type:function size:0x3C
fn_80063524 = .text:0x80063524; // type:function size:0x40
fn_80063564 = .text:0x80063564; // type:function size:0x40
fn_800635A4 = .text:0x800635A4; // type:function size:0x64
fn_80063608 = .text:0x80063608; // type:function size:0x100
fn_80063708 = .text:0x80063708; // type:function size:0x100
fn_80063808 = .text:0x80063808; // type:function size:0x100
fn_80063908 = .text:0x80063908; // type:function size:0x90
fn_80063998 = .text:0x80063998; // type:function size:0x40
fn_800639D8 = .text:0x800639D8; // type:function size:0x44
fn_80063A1C = .text:0x80063A1C; // type:function size:0x6C
fn_80063A88 = .text:0x80063A88; // type:function size:0xBC
fn_80063B44 = .text:0x80063B44; // type:function size:0x110
fn_80063C54 = .text:0x80063C54; // type:function size:0x240
fn_80063E94 = .text:0x80063E94; // type:function size:0x30
fn_80063EC4 = .text:0x80063EC4; // type:function size:0x8
fn_80063ECC = .text:0x80063ECC; // type:function size:0xD8
fn_80063FA4 = .text:0x80063FA4; // type:function size:0x18C
fn_80064130 = .text:0x80064130; // type:function size:0xA4
fn_800641D4 = .text:0x800641D4; // type:function size:0x78
fn_8006424C = .text:0x8006424C; // type:function size:0x248
fn_80064494 = .text:0x80064494; // type:function size:0x4C
fn_800644E0 = .text:0x800644E0; // type:function size:0x4C
fn_8006452C = .text:0x8006452C; // type:function size:0xB8
fn_800645E4 = .text:0x800645E4; // type:function size:0x130
fn_80064714 = .text:0x80064714; // type:function size:0x94
fn_800647A8 = .text:0x800647A8; // type:function size:0xE8
fn_80064890 = .text:0x80064890; // type:function size:0x5C
fn_800648EC = .text:0x800648EC; // type:function size:0x14
fn_80064900 = .text:0x80064900; // type:function size:0xC
fn_8006490C = .text:0x8006490C; // type:function size:0x8
fn_80064914 = .text:0x80064914; // type:function size:0x40
fn_80064954 = .text:0x80064954; // type:function size:0x128
fn_80064A7C = .text:0x80064A7C; // type:function size:0x48
fn_80064AC4 = .text:0x80064AC4; // type:function size:0x54
fn_80064B18 = .text:0x80064B18; // type:function size:0x4
fn_80064B1C = .text:0x80064B1C; // type:function size:0x18
fn_80064B34 = .text:0x80064B34; // type:function size:0x8
fn_80064B3C = .text:0x80064B3C; // type:function size:0x8
fn_80064B44 = .text:0x80064B44; // type:function size:0x8
fn_80064B4C = .text:0x80064B4C; // type:function size:0x10C
fn_80064C58 = .text:0x80064C58; // type:function size:0x1AC
fn_80064E04 = .text:0x80064E04; // type:function size:0x15C
fn_80064F60 = .text:0x80064F60; // type:function size:0x1B4
fn_80065114 = .text:0x80065114; // type:function size:0x5C
fn_80065170 = .text:0x80065170; // type:function size:0x2C
fn_8006519C = .text:0x8006519C; // type:function size:0xC
fn_800651A8 = .text:0x800651A8; // type:function size:0x8
fn_800651B0 = .text:0x800651B0; // type:function size:0x50
fn_80065200 = .text:0x80065200; // type:function size:0x190
fn_80065390 = .text:0x80065390; // type:function size:0x48
fn_800653D8 = .text:0x800653D8; // type:function size:0x60
fn_80065438 = .text:0x80065438; // type:function size:0x4
fn_8006543C = .text:0x8006543C; // type:function size:0x48
fn_80065484 = .text:0x80065484; // type:function size:0x54
fn_800654D8 = .text:0x800654D8; // type:function size:0x214
fn_800656EC = .text:0x800656EC; // type:function size:0x64
fn_80065750 = .text:0x80065750; // type:function size:0x114
fn_80065864 = .text:0x80065864; // type:function size:0xA8
fn_8006590C = .text:0x8006590C; // type:function size:0x98
fn_800659A4 = .text:0x800659A4; // type:function size:0x90
fn_80065A34 = .text:0x80065A34; // type:function size:0x90
fn_80065AC4 = .text:0x80065AC4; // type:function size:0x90
fn_80065B54 = .text:0x80065B54; // type:function size:0x90
fn_80065BE4 = .text:0x80065BE4; // type:function size:0x10
fn_80065BF4 = .text:0x80065BF4; // type:function size:0x10
fn_80065C04 = .text:0x80065C04; // type:function size:0xF0
fn_80065CF4 = .text:0x80065CF4; // type:function size:0x44
fn_80065D38 = .text:0x80065D38; // type:function size:0x104
fn_80065E3C = .text:0x80065E3C; // type:function size:0x1B4
fn_80065FF0 = .text:0x80065FF0; // type:function size:0x148
fn_80066138 = .text:0x80066138; // type:function size:0x17C
fn_800662B4 = .text:0x800662B4; // type:function size:0x58
fn_8006630C = .text:0x8006630C; // type:function size:0xD8
fn_800663E4 = .text:0x800663E4; // type:function size:0x90
fn_80066474 = .text:0x80066474; // type:function size:0x90
fn_80066504 = .text:0x80066504; // type:function size:0x90
fn_80066594 = .text:0x80066594; // type:function size:0x90
fn_80066624 = .text:0x80066624; // type:function size:0x68
fn_8006668C = .text:0x8006668C; // type:function size:0x68
fn_800666F4 = .text:0x800666F4; // type:function size:0x68
fn_8006675C = .text:0x8006675C; // type:function size:0x68
fn_800667C4 = .text:0x800667C4; // type:function size:0x90
fn_80066854 = .text:0x80066854; // type:function size:0x68
fn_800668BC = .text:0x800668BC; // type:function size:0x60
fn_8006691C = .text:0x8006691C; // type:function size:0x98
fn_800669B4 = .text:0x800669B4; // type:function size:0x60
fn_80066A14 = .text:0x80066A14; // type:function size:0x64
fn_80066A78 = .text:0x80066A78; // type:function size:0x70
fn_80066AE8 = .text:0x80066AE8; // type:function size:0x288
fn_80066D70 = .text:0x80066D70; // type:function size:0x60
fn_80066DD0 = .text:0x80066DD0; // type:function size:0xF4
fn_80066EC4 = .text:0x80066EC4; // type:function size:0x98
fn_80066F5C = .text:0x80066F5C; // type:function size:0x230
fn_8006718C = .text:0x8006718C; // type:function size:0x10C
fn_80067298 = .text:0x80067298; // type:function size:0x14
fn_800672AC = .text:0x800672AC; // type:function size:0xC
fn_800672B8 = .text:0x800672B8; // type:function size:0x14
fn_800672CC = .text:0x800672CC; // type:function size:0x58
fn_80067324 = .text:0x80067324; // type:function size:0x14
fn_80067338 = .text:0x80067338; // type:function size:0x20
fn_80067358 = .text:0x80067358; // type:function size:0x20
fn_80067378 = .text:0x80067378; // type:function size:0x10
fn_80067388 = .text:0x80067388; // type:function size:0x8
fn_80067390 = .text:0x80067390; // type:function size:0x8
fn_80067398 = .text:0x80067398; // type:function size:0x10
fn_800673A8 = .text:0x800673A8; // type:function size:0xB4
fn_8006745C = .text:0x8006745C; // type:function size:0xAC
fn_80067508 = .text:0x80067508; // type:function size:0x154
fn_8006765C = .text:0x8006765C; // type:function size:0x10
fn_8006766C = .text:0x8006766C; // type:function size:0x5C
fn_800676C8 = .text:0x800676C8; // type:function size:0x338
fn_80067A00 = .text:0x80067A00; // type:function size:0xCC
fn_80067ACC = .text:0x80067ACC; // type:function size:0xDC
fn_80067BA8 = .text:0x80067BA8; // type:function size:0x178
fn_80067D20 = .text:0x80067D20; // type:function size:0x58
fn_80067D78 = .text:0x80067D78; // type:function size:0x5C
fn_80067DD4 = .text:0x80067DD4; // type:function size:0x1A0
fn_80067F74 = .text:0x80067F74; // type:function size:0x200
fn_80068174 = .text:0x80068174; // type:function size:0xD0
fn_80068244 = .text:0x80068244; // type:function size:0x6EC
fn_80068930 = .text:0x80068930; // type:function size:0x94
fn_800689C4 = .text:0x800689C4; // type:function size:0x120
fn_80068AE4 = .text:0x80068AE4; // type:function size:0x74
fn_80068B58 = .text:0x80068B58; // type:function size:0x20
fn_80068B78 = .text:0x80068B78; // type:function size:0x18
fn_80068B90 = .text:0x80068B90; // type:function size:0x18
fn_80068BA8 = .text:0x80068BA8; // type:function size:0x14
fn_80068BBC = .text:0x80068BBC; // type:function size:0x108
fn_80068CC4 = .text:0x80068CC4; // type:function size:0x16C
fn_80068E30 = .text:0x80068E30; // type:function size:0x178
fn_80068FA8 = .text:0x80068FA8; // type:function size:0x16C
fn_80069114 = .text:0x80069114; // type:function size:0x154
fn_80069268 = .text:0x80069268; // type:function size:0x108
fn_80069370 = .text:0x80069370; // type:function size:0xAC
fn_8006941C = .text:0x8006941C; // type:function size:0x138
fn_80069554 = .text:0x80069554; // type:function size:0xB0
fn_80069604 = .text:0x80069604; // type:function size:0xF8
fn_800696FC = .text:0x800696FC; // type:function size:0x168
fn_80069864 = .text:0x80069864; // type:function size:0xB0
fn_80069914 = .text:0x80069914; // type:function size:0x134
fn_80069A48 = .text:0x80069A48; // type:function size:0x48
fn_80069A90 = .text:0x80069A90; // type:function size:0x18
fn_80069AA8 = .text:0x80069AA8; // type:function size:0x60
fn_80069B08 = .text:0x80069B08; // type:function size:0x7C
fn_80069B84 = .text:0x80069B84; // type:function size:0xC0
fn_80069C44 = .text:0x80069C44; // type:function size:0x9C
fn_80069CE0 = .text:0x80069CE0; // type:function size:0x134
fn_80069E14 = .text:0x80069E14; // type:function size:0x30
fn_80069E44 = .text:0x80069E44; // type:function size:0x28
fn_80069E6C = .text:0x80069E6C; // type:function size:0x34
fn_80069EA0 = .text:0x80069EA0; // type:function size:0x54
fn_80069EF4 = .text:0x80069EF4; // type:function size:0x20
fn_80069F14 = .text:0x80069F14; // type:function size:0x44
fn_80069F58 = .text:0x80069F58; // type:function size:0x5BC
fn_8006A514 = .text:0x8006A514; // type:function size:0xAC
fn_8006A5C0 = .text:0x8006A5C0; // type:function size:0x1F0
fn_8006A7B0 = .text:0x8006A7B0; // type:function size:0x28
fn_8006A7D8 = .text:0x8006A7D8; // type:function size:0x88
fn_8006A860 = .text:0x8006A860; // type:function size:0x20
fn_8006A880 = .text:0x8006A880; // type:function size:0x44
fn_8006A8C4 = .text:0x8006A8C4; // type:function size:0x2A8
fn_8006AB6C = .text:0x8006AB6C; // type:function size:0x610
fn_8006B17C = .text:0x8006B17C; // type:function size:0x124
fn_8006B2A0 = .text:0x8006B2A0; // type:function size:0xA0
fn_8006B340 = .text:0x8006B340; // type:function size:0x790
fn_8006BAD0 = .text:0x8006BAD0; // type:function size:0x2B4
fn_8006BD84 = .text:0x8006BD84; // type:function size:0x240
fn_8006BFC4 = .text:0x8006BFC4; // type:function size:0xAC
fn_8006C070 = .text:0x8006C070; // type:function size:0x144
fn_8006C1B4 = .text:0x8006C1B4; // type:function size:0x1D0
fn_8006C384 = .text:0x8006C384; // type:function size:0xC0
fn_8006C444 = .text:0x8006C444; // type:function size:0x28
fn_8006C46C = .text:0x8006C46C; // type:function size:0x70
fn_8006C4DC = .text:0x8006C4DC; // type:function size:0xBC
fn_8006C598 = .text:0x8006C598; // type:function size:0x70
fn_8006C608 = .text:0x8006C608; // type:function size:0xBC
fn_8006C6C4 = .text:0x8006C6C4; // type:function size:0xD0
fn_8006C794 = .text:0x8006C794; // type:function size:0x20C
fn_8006C9A0 = .text:0x8006C9A0; // type:function size:0x300
fn_8006CCA0 = .text:0x8006CCA0; // type:function size:0x8C
fn_8006CD2C = .text:0x8006CD2C; // type:function size:0x1A4
fn_8006CED0 = .text:0x8006CED0; // type:function size:0xE0
fn_8006CFB0 = .text:0x8006CFB0; // type:function size:0x9C
fn_8006D04C = .text:0x8006D04C; // type:function size:0x50
fn_8006D09C = .text:0x8006D09C; // type:function size:0x1C
fn_8006D0B8 = .text:0x8006D0B8; // type:function size:0x198
fn_8006D250 = .text:0x8006D250; // type:function size:0x2C0
fn_8006D510 = .text:0x8006D510; // type:function size:0x240
fn_8006D750 = .text:0x8006D750; // type:function size:0xDC
fn_8006D82C = .text:0x8006D82C; // type:function size:0xF0
fn_8006D91C = .text:0x8006D91C; // type:function size:0x98
fn_8006D9B4 = .text:0x8006D9B4; // type:function size:0xDC
fn_8006DA90 = .text:0x8006DA90; // type:function size:0x44
fn_8006DAD4 = .text:0x8006DAD4; // type:function size:0x6C
fn_8006DB40 = .text:0x8006DB40; // type:function size:0x6C
fn_8006DBAC = .text:0x8006DBAC; // type:function size:0xB8
fn_8006DC64 = .text:0x8006DC64; // type:function size:0x190
fn_8006DDF4 = .text:0x8006DDF4; // type:function size:0x60
fn_8006DE54 = .text:0x8006DE54; // type:function size:0x1B0
fn_8006E004 = .text:0x8006E004; // type:function size:0x1B8
fn_8006E1BC = .text:0x8006E1BC; // type:function size:0xB8
fn_8006E274 = .text:0x8006E274; // type:function size:0x28
fn_8006E29C = .text:0x8006E29C; // type:function size:0x98
fn_8006E334 = .text:0x8006E334; // type:function size:0xF4
fn_8006E428 = .text:0x8006E428; // type:function size:0x74
fn_8006E49C = .text:0x8006E49C; // type:function size:0x1C
fn_8006E4B8 = .text:0x8006E4B8; // type:function size:0x90
fn_8006E548 = .text:0x8006E548; // type:function size:0x164
fn_8006E6AC = .text:0x8006E6AC; // type:function size:0x598
_ctors = .ctors:0x8006EC60; // type:label scope:global data:4byte
_dtors = .dtors:0x8006EC80; // type:label scope:global data:4byte
__destroy_global_chain_reference = .dtors:0x8006EC80; // type:object size:0x4 scope:global
__constants = .rodata:0x8006ECA0; // type:object size:0x18 data:double
lbl_8006ECB8 = .rodata:0x8006ECB8; // type:object size:0x36 data:string
lbl_8006ECF0 = .rodata:0x8006ECF0; // type:object size:0x39 data:string
fix_pool_sizes = .rodata:0x8006ED30; // type:object size:0x18 data:4byte
@stringBase0 = .rodata:0x8006ED48; // type:object size:0xDD scope:local data:string_table
@stringBase0 = .rodata:0x8006EE28; // type:object size:0x5 scope:local data:string_table
@stringBase0 = .rodata:0x8006EE30; // type:object size:0x25 scope:local data:string_table
lbl_8006EE58 = .rodata:0x8006EE58; // type:object size:0x28 data:4byte
lbl_8006EE80 = .rodata:0x8006EE80; // type:object size:0x2A
lbl_8006EEAC = .rodata:0x8006EEAC; // type:object size:0x9 data:string
bp = .rodata:0x8006EEB8; // type:object size:0x10 data:double
dp_h = .rodata:0x8006EEC8; // type:object size:0x10 data:double
dp_l = .rodata:0x8006EED8; // type:object size:0x10 data:double
two_over_pi = .rodata:0x8006EEE8; // type:object size:0x108
npio2_hw = .rodata:0x8006EFF0; // type:object size:0x80 data:float
init_jk = .rodata:0x8006F070; // type:object size:0x10
PIo2 = .rodata:0x8006F080; // type:object size:0x40 data:double
T = .rodata:0x8006F0C0; // type:object size:0x68 data:double
atanhi = .rodata:0x8006F128; // type:object size:0x20 data:double
atanlo = .rodata:0x8006F148; // type:object size:0x20 data:double
aT = .rodata:0x8006F168; // type:object size:0x58 data:double
@62 = .rodata:0x8006F1C0; // type:object size:0x1C scope:local data:string
lbl_8006F1E0 = .rodata:0x8006F1E0; // type:object size:0x1D data:string
gTRKMemMap = .rodata:0x8006F200; // type:object size:0x10 data:4byte
lbl_8006F210 = .rodata:0x8006F210; // type:object size:0x28 data:4byte
lbl_8006F238 = .rodata:0x8006F238; // type:object size:0x28 data:4byte
lbl_8006F260 = .rodata:0x8006F260; // type:object size:0x28 data:4byte
@154 = .rodata:0x8006F288; // type:object size:0x21 scope:local data:string
@155 = .rodata:0x8006F2AC; // type:object size:0x24 scope:local data:string
lbl_8006F2D0 = .rodata:0x8006F2D0; // type:object size:0x10
lbl_8006F2E0 = .rodata:0x8006F2E0; // type:object size:0x10 data:4byte
lbl_8006F2F0 = .rodata:0x8006F2F0; // type:object size:0x30 data:4byte
lbl_8006F320 = .rodata:0x8006F320; // type:object size:0x20
lbl_8006F340 = .rodata:0x8006F340; // type:object size:0x10
lbl_8006F350 = .rodata:0x8006F350; // type:object size:0x10
lbl_8006F360 = .rodata:0x8006F360; // type:object size:0x20
lbl_8006F380 = .rodata:0x8006F380; // type:object size:0x30
lbl_8006F3B0 = .rodata:0x8006F3B0; // type:object size:0x8 data:4byte
lbl_8006F3B8 = .rodata:0x8006F3B8; // type:object size:0x20
lbl_8006F3D8 = .rodata:0x8006F3D8; // type:object size:0x28
lbl_8006F400 = .rodata:0x8006F400; // type:object size:0x8
lbl_8006F408 = .rodata:0x8006F408; // type:object size:0x8
lbl_8006F410 = .rodata:0x8006F410; // type:object size:0x8
lbl_8006F418 = .rodata:0x8006F418; // type:object size:0x8
lbl_8006F420 = .rodata:0x8006F420; // type:object size:0x8
lbl_8006F428 = .rodata:0x8006F428; // type:object size:0x8
lbl_8006F430 = .rodata:0x8006F430; // type:object size:0x8
lbl_8006F438 = .rodata:0x8006F438; // type:object size:0x8
lbl_8006F440 = .rodata:0x8006F440; // type:object size:0x888
lbl_8006FCC8 = .rodata:0x8006FCC8; // type:object size:0x8
lbl_8006FCD0 = .rodata:0x8006FCD0; // type:object size:0x8
lbl_8006FCD8 = .rodata:0x8006FCD8; // type:object size:0x4 data:float
lbl_8006FCE0 = .rodata:0x8006FCE0; // type:object size:0x8 data:double
lbl_8006FCE8 = .rodata:0x8006FCE8; // type:object size:0x8 data:double
lbl_8006FCF0 = .rodata:0x8006FCF0; // type:object size:0x8 data:double
lbl_8006FCF8 = .rodata:0x8006FCF8; // type:object size:0x4 data:float
lbl_8006FCFC = .rodata:0x8006FCFC; // type:object size:0x4 data:float
lbl_8006FD00 = .rodata:0x8006FD00; // type:object size:0x4 data:float
lbl_8006FD04 = .rodata:0x8006FD04; // type:object size:0x4 data:float
lbl_8006FD08 = .rodata:0x8006FD08; // type:object size:0x8 data:double
lbl_8006FD10 = .rodata:0x8006FD10; // type:object size:0x8
lbl_8006FD18 = .rodata:0x8006FD18; // type:object size:0x8
lbl_8006FD20 = .rodata:0x8006FD20; // type:object size:0x8 data:double
lbl_8006FD28 = .rodata:0x8006FD28; // type:object size:0x8 data:double
lbl_8006FD30 = .rodata:0x8006FD30; // type:object size:0x30
lbl_8006FD60 = .rodata:0x8006FD60; // type:object size:0x60
lbl_8006FDC0 = .rodata:0x8006FDC0; // type:object size:0x38 data:double
lbl_8006FDF8 = .rodata:0x8006FDF8; // type:object size:0x114
lbl_8006FF0C = .rodata:0x8006FF0C; // type:object size:0x30
lbl_8006FF3C = .rodata:0x8006FF3C; // type:object size:0xC4
lbl_80070000 = .rodata:0x80070000; // type:object size:0x28 data:string
lbl_80070028 = .rodata:0x80070028; // type:object size:0x2C
lbl_80070054 = .rodata:0x80070054; // type:object size:0x8C
lbl_800700E0 = .rodata:0x800700E0; // type:object size:0x60
lbl_80070140 = .rodata:0x80070140; // type:object size:0x2C
lbl_8007016C = .rodata:0x8007016C; // type:object size:0x2C
lbl_80070198 = .rodata:0x80070198; // type:object size:0x2C
lbl_800701C4 = .rodata:0x800701C4; // type:object size:0x2C
lbl_800701F0 = .rodata:0x800701F0; // type:object size:0x2C
lbl_8007021C = .rodata:0x8007021C; // type:object size:0x84
lbl_800702A0 = .rodata:0x800702A0; // type:object size:0x64
lbl_80070304 = .rodata:0x80070304; // type:object size:0x28
lbl_8007032C = .rodata:0x8007032C; // type:object size:0x28 data:string
lbl_80070354 = .rodata:0x80070354; // type:object size:0x28 data:string
lbl_8007037C = .rodata:0x8007037C; // type:object size:0x28
lbl_800703A4 = .rodata:0x800703A4; // type:object size:0x4 data:float
lbl_800703A8 = .rodata:0x800703A8; // type:object size:0x2C
lbl_800703D4 = .rodata:0x800703D4; // type:object size:0x2C
lbl_80070400 = .rodata:0x80070400; // type:object size:0x28
lbl_80070428 = .rodata:0x80070428; // type:object size:0x2C
lbl_80070454 = .rodata:0x80070454; // type:object size:0x40
lbl_80070494 = .rodata:0x80070494; // type:object size:0x2C
lbl_800704C0 = .rodata:0x800704C0; // type:object size:0x2C data:string
lbl_800704EC = .rodata:0x800704EC; // type:object size:0x4 data:4byte
lbl_800704F0 = .rodata:0x800704F0; // type:object size:0x38
lbl_80070528 = .rodata:0x80070528; // type:object size:0x48
lbl_80070570 = .rodata:0x80070570; // type:object size:0x40
lbl_800705B0 = .rodata:0x800705B0; // type:object size:0x10
lbl_800705C0 = .rodata:0x800705C0; // type:object size:0x30
lbl_800705F0 = .rodata:0x800705F0; // type:object size:0x8 data:4byte
lbl_800705F8 = .rodata:0x800705F8; // type:object size:0x2C data:string
lbl_80070624 = .rodata:0x80070624; // type:object size:0x24
lbl_80070648 = .rodata:0x80070648; // type:object size:0x11C
lbl_80070764 = .rodata:0x80070764; // type:object size:0x24 data:string
lbl_80070788 = .rodata:0x80070788; // type:object size:0x1FC
lbl_80070984 = .rodata:0x80070984; // type:object size:0x38
lbl_800709BC = .rodata:0x800709BC; // type:object size:0x1EC
lbl_80070BA8 = .rodata:0x80070BA8; // type:object size:0x8B8
lbl_80071460 = .rodata:0x80071460; // type:object size:0x1C data:string
lbl_8007147C = .rodata:0x8007147C; // type:object size:0x88
lbl_80071504 = .rodata:0x80071504; // type:object size:0x1C
lbl_80071520 = .rodata:0x80071520; // type:object size:0x18 data:string
lbl_80071538 = .rodata:0x80071538; // type:object size:0x1C
lbl_80071554 = .rodata:0x80071554; // type:object size:0x18
lbl_8007156C = .rodata:0x8007156C; // type:object size:0x1C
lbl_80071588 = .rodata:0x80071588; // type:object size:0x18
lbl_800715A0 = .rodata:0x800715A0; // type:object size:0x1C
lbl_800715BC = .rodata:0x800715BC; // type:object size:0xCC
lbl_80071688 = .rodata:0x80071688; // type:object size:0x28
lbl_800716B0 = .rodata:0x800716B0; // type:object size:0xB8
lbl_80071768 = .rodata:0x80071768; // type:object size:0x2C
lbl_80071794 = .rodata:0x80071794; // type:object size:0x18 data:string
lbl_800717AC = .rodata:0x800717AC; // type:object size:0x18 data:string
lbl_800717C4 = .rodata:0x800717C4; // type:object size:0x1C
lbl_800717E0 = .rodata:0x800717E0; // type:object size:0x1C0
lbl_800719A0 = .rodata:0x800719A0; // type:object size:0x24
lbl_800719C4 = .rodata:0x800719C4; // type:object size:0x24
lbl_800719E8 = .rodata:0x800719E8; // type:object size:0x24
lbl_80071A0C = .rodata:0x80071A0C; // type:object size:0x20 data:string
lbl_80071A2C = .rodata:0x80071A2C; // type:object size:0x24
lbl_80071A50 = .rodata:0x80071A50; // type:object size:0x2C
lbl_80071A7C = .rodata:0x80071A7C; // type:object size:0x2C
lbl_80071AA8 = .rodata:0x80071AA8; // type:object size:0x30
lbl_80071AD8 = .rodata:0x80071AD8; // type:object size:0x8 data:4byte
lbl_80071AE0 = .rodata:0x80071AE0; // type:object size:0x18
lbl_80071AF8 = .rodata:0x80071AF8; // type:object size:0x10
lbl_80071B08 = .rodata:0x80071B08; // type:object size:0x2C data:string
lbl_80071B34 = .rodata:0x80071B34; // type:object size:0x4 data:4byte
lbl_80071B38 = .rodata:0x80071B38; // type:object size:0x10
lbl_80071B48 = .rodata:0x80071B48; // type:object size:0x34
lbl_80071B7C = .rodata:0x80071B7C; // type:object size:0x120
lbl_80071C9C = .rodata:0x80071C9C; // type:object size:0x20 data:string
lbl_80071CBC = .rodata:0x80071CBC; // type:object size:0x34
lbl_80071CF0 = .rodata:0x80071CF0; // type:object size:0x30
lbl_80071D20 = .rodata:0x80071D20; // type:object size:0x90 data:4byte
lbl_80071DB0 = .rodata:0x80071DB0; // type:object size:0x40
lbl_80071DF0 = .rodata:0x80071DF0; // type:object size:0x3C
lbl_80071E2C = .rodata:0x80071E2C; // type:object size:0x18 data:string
lbl_80071E44 = .rodata:0x80071E44; // type:object size:0x18 data:string
lbl_80071E5C = .rodata:0x80071E5C; // type:object size:0x78
lbl_80071ED4 = .rodata:0x80071ED4; // type:object size:0x1C
lbl_80071EF0 = .rodata:0x80071EF0; // type:object size:0x98
lbl_80071F88 = .rodata:0x80071F88; // type:object size:0x2C data:string
lbl_80071FB4 = .rodata:0x80071FB4; // type:object size:0x4 data:4byte
lbl_80071FB8 = .rodata:0x80071FB8; // type:object size:0x4 data:string
lbl_80071FBC = .rodata:0x80071FBC; // type:object size:0xC
lbl_80071FC8 = .rodata:0x80071FC8; // type:object size:0x1B8
lbl_80072180 = .rodata:0x80072180; // type:object size:0x24 data:string
lbl_800721A4 = .rodata:0x800721A4; // type:object size:0x2C
lbl_800721D0 = .rodata:0x800721D0; // type:object size:0x24
lbl_800721F4 = .rodata:0x800721F4; // type:object size:0x10 data:string
lbl_80072204 = .rodata:0x80072204; // type:object size:0x2C
lbl_80072230 = .rodata:0x80072230; // type:object size:0x40 data:string
lbl_80072270 = .rodata:0x80072270; // type:object size:0x40
lbl_800722B0 = .rodata:0x800722B0; // type:object size:0x38
lbl_800722E8 = .rodata:0x800722E8; // type:object size:0x18
lbl_80072300 = .rodata:0x80072300; // type:object size:0x30
lbl_80072330 = .rodata:0x80072330; // type:object size:0x1A data:string
lbl_80072360 = .data:0x80072360; // type:object size:0x3C
lbl_8007239C = .data:0x8007239C; // type:object size:0x10
lbl_800723AC = .data:0x800723AC; // type:object size:0x618
jumptable_800729C4 = .data:0x800729C4; // type:object size:0x34 scope:local
__files = .data:0x800729F8; // type:object size:0x140 scope:global
pow_10$415 = .data:0x80072B38; // type:object size:0x40 data:double
jumptable_80072B78 = .data:0x80072B78; // type:object size:0x124 scope:local
__ctype_map = .data:0x80072CA0; // type:object size:0x100
__lower_map = .data:0x80072DA0; // type:object size:0x100
__upper_map = .data:0x80072EA0; // type:object size:0x100
__lconv = .data:0x80072FA0; // type:object size:0x38 data:4byte
@1249 = .data:0x80072FD8; // type:object size:0x84 scope:local
jumptable_8007305C = .data:0x8007305C; // type:object size:0x84 scope:local
jumptable_800730E0 = .data:0x800730E0; // type:object size:0xE0 scope:local
jumptable_800731C0 = .data:0x800731C0; // type:object size:0x44 scope:local
jumptable_80073208 = .data:0x80073208; // type:object size:0xD0 scope:local
jumptable_800732D8 = .data:0x800732D8; // type:object size:0x44 scope:local
jumptable_8007331C = .data:0x8007331C; // type:object size:0x44 scope:local
gTRKDispatchTable = .data:0x80073360; // type:object size:0x84
jumptable_800733E8 = .data:0x800733E8; // type:object size:0x1C scope:local
jumptable_80073404 = .data:0x80073404; // type:object size:0x1C scope:local
gTRKRestoreFlags = .data:0x80073420; // type:object size:0x9 scope:global data:byte
gTRKExceptionStatus = .data:0x8007342C; // type:object size:0x10 scope:local data:4byte
gTRKStepStatus = .data:0x8007343C; // type:object size:0x14 data:4byte
TRK_ISR_OFFSETS = .data:0x80073450; // type:object size:0x3C data:4byte
gDBCommTable = .data:0x80073490; // type:object size:0x1C scope:global data:4byte
lbl_800734B0 = .data:0x800734B0; // type:object size:0x44 data:string
lbl_800734F8 = .data:0x800734F8; // type:object size:0x44 data:string
lbl_80073540 = .data:0x80073540; // type:object size:0x45 data:string
lbl_80073588 = .data:0x80073588; // type:object size:0x44 data:string
__AXSrcCycles = .data:0x800735D0; // type:object size:0x14
__AXMainMixCycles = .data:0x800735E4; // type:object size:0x40
__AXAuxMixCycles = .data:0x80073624; // type:object size:0x80
__AXCompressorTable = .data:0x800736C0; // type:object size:0x1A40
axDspSlave = .data:0x80075100; // type:object size:0x1F20
lens$108 = .data:0x80077020; // type:object size:0x20 scope:local data:4byte
lens$108 = .data:0x80077040; // type:object size:0x10 scope:local data:4byte
rsmpTab12khz = .data:0x80077050; // type:object size:0x800
lbl_80077850 = .data:0x80077850; // type:object size:0x46 data:string
ResetFunctionInfo = .data:0x80077898; // type:object size:0x10
CardData = .data:0x800778C0; // type:object size:0x160
SectorSizeTable = .data:0x80077A20; // type:object size:0x20
LatencyTable = .data:0x80077A40; // type:object size:0x20
lbl_80077A60 = .data:0x80077A60; // type:object size:0x18 data:string
lbl_80077A78 = .data:0x80077A78; // type:object size:0x45 data:string
lbl_80077AC0 = .data:0x80077AC0; // type:object size:0x1E data:string
lbl_80077AE0 = .data:0x80077AE0; // type:object size:0xC data:string
lbl_80077AEC = .data:0x80077AEC; // type:object size:0x9 data:string
lbl_80077AF8 = .data:0x80077AF8; // type:object size:0x1D data:string
lbl_80077B18 = .data:0x80077B18; // type:object size:0x2D data:string
lbl_80077B48 = .data:0x80077B48; // type:object size:0x2D data:string
lbl_80077B78 = .data:0x80077B78; // type:object size:0x2D data:string
lbl_80077BA8 = .data:0x80077BA8; // type:object size:0x2D data:string
lbl_80077BD8 = .data:0x80077BD8; // type:object size:0x2D data:string
lbl_80077C08 = .data:0x80077C08; // type:object size:0x2B data:string
lbl_80077C38 = .data:0x80077C38; // type:object size:0xC8 data:string
lbl_80077D00 = .data:0x80077D00; // type:object size:0x37 data:string
lbl_80077D38 = .data:0x80077D38; // type:object size:0x34 data:string
lbl_80077D6C = .data:0x80077D6C; // type:object size:0x2F data:string
lbl_80077DA0 = .data:0x80077DA0; // type:object size:0x45 data:string
@18 = .data:0x80077DE8; // type:object size:0xA scope:local data:string
lbl_80077DF4 = .data:0x80077DF4; // type:object size:0x34 data:string
jumptable_80077E28 = .data:0x80077E28; // type:object size:0x40 scope:local
ImmCommand = .data:0x80077E68; // type:object size:0xC data:4byte
lbl_80077E74 = .data:0x80077E74; // type:object size:0x41 data:string
jumptable_80077EB8 = .data:0x80077EB8; // type:object size:0x34 scope:local
jumptable_80077EEC = .data:0x80077EEC; // type:object size:0x34 scope:local
ErrorTable = .data:0x80077F20; // type:object size:0x48 data:4byte
@36 = .data:0x80077F68; // type:object size:0x1A scope:local data:string
lbl_80077F84 = .data:0x80077F84; // type:object size:0x16 scope:local data:string
lbl_80077F9C = .data:0x80077F9C; // type:object size:0x14 scope:local data:string
lbl_80077FB0 = .data:0x80077FB0; // type:object size:0x14 scope:local data:string
lbl_80077FC4 = .data:0x80077FC4; // type:object size:0x14 scope:local data:string
lbl_80077FD8 = .data:0x80077FD8; // type:object size:0x45 data:string
lbl_80078020 = .data:0x80078020; // type:object size:0xF data:string
lbl_80078030 = .data:0x80078030; // type:object size:0x10 data:string
lbl_80078040 = .data:0x80078040; // type:object size:0x10 data:string
lbl_80078050 = .data:0x80078050; // type:object size:0x10 data:string
lbl_80078060 = .data:0x80078060; // type:object size:0x11 data:string
lbl_80078074 = .data:0x80078074; // type:object size:0x11 data:string
lbl_80078088 = .data:0x80078088; // type:object size:0xC data:string
lbl_80078094 = .data:0x80078094; // type:object size:0x9 data:string
lbl_800780A0 = .data:0x800780A0; // type:object size:0xD data:string
lbl_800780B0 = .data:0x800780B0; // type:object size:0x12 data:string
lbl_800780C4 = .data:0x800780C4; // type:object size:0xE data:string
lbl_800780D4 = .data:0x800780D4; // type:object size:0xE data:string
lbl_800780E8 = .data:0x800780E8; // type:object size:0x44 data:string
lbl_8007812C = .data:0x8007812C; // type:object size:0xD0
lbl_800781FC = .data:0x800781FC; // type:object size:0x1C
GXResetFuncInfo = .data:0x80078218; // type:object size:0x10 scope:local
jumptable_80078228 = .data:0x80078228; // type:object size:0x68 scope:local
jumptable_80078290 = .data:0x80078290; // type:object size:0x44 scope:local
jumptable_800782D4 = .data:0x800782D4; // type:object size:0x44 scope:local
jumptable_80078318 = .data:0x80078318; // type:object size:0x1C scope:local
jumptable_80078334 = .data:0x80078334; // type:object size:0x54 scope:local
lbl_80078388 = .data:0x80078388; // type:object size:0x3C
lbl_800783C4 = .data:0x800783C4; // type:object size:0x3C
lbl_80078400 = .data:0x80078400; // type:object size:0x3C
lbl_8007843C = .data:0x8007843C; // type:object size:0x3C
jumptable_80078478 = .data:0x80078478; // type:object size:0xF4 scope:local
jumptable_8007856C = .data:0x8007856C; // type:object size:0xF4 scope:local
jumptable_80078660 = .data:0x80078660; // type:object size:0x3C scope:local
lbl_800786A0 = .data:0x800786A0; // type:object size:0x50
lbl_800786F0 = .data:0x800786F0; // type:object size:0x28
lbl_80078718 = .data:0x80078718; // type:object size:0x20
jumptable_80078738 = .data:0x80078738; // type:object size:0x5C scope:local
jumptable_80078794 = .data:0x80078794; // type:object size:0x90 scope:local
lbl_80078828 = .data:0x80078828; // type:object size:0xBC0
@1 = .data:0x800793E8; // type:object size:0x44 scope:local data:string
DSPInitCode = .data:0x800795E0; // type:object size:0x80 scope:local
@69 = .data:0x80079660; // type:object size:0x29 scope:local data:string
lbl_80079890 = .data:0x80079890; // type:object size:0x1B4
@74 = .data:0x80079A44; // type:object size:0x23 scope:local data:string
@13 = .data:0x80079A68; // type:object size:0x16 scope:local data:string
@87 = .data:0x80079D44; // type:object size:0x40 scope:local
lbl_80079D88 = .data:0x80079D88; // type:object size:0x180
lbl_80079F08 = .data:0x80079F08; // type:object size:0x990
lbl_8007A898 = .data:0x8007A898; // type:object size:0x30 data:4byte
lbl_8007A8C8 = .data:0x8007A8C8; // type:object size:0x28
lbl_8007A8F0 = .data:0x8007A8F0; // type:object size:0x28
ResetFunctionInfo = .data:0x8007A918; // type:object size:0x10 scope:local
lbl_8007A928 = .data:0x8007A928; // type:object size:0x48
lbl_8007A970 = .data:0x8007A970; // type:object size:0x10
lbl_8007A980 = .data:0x8007A980; // type:object size:0x44 data:string
Si = .data:0x8007A9C4; // type:object size:0x14 scope:local data:4byte
Type = .data:0x8007A9D8; // type:object size:0x10 scope:local
XYNTSC = .data:0x8007AA98; // type:object size:0x30 scope:local
lbl_8007AB30 = .data:0x8007AB30; // type:object size:0x1F4
jumptable_8007AD24 = .data:0x8007AD24; // type:object size:0x6C scope:local
@724 = .data:0x8007AEE4; // type:object size:0x1C scope:local
lbl_8007AF00 = .data:0x8007AF00; // type:object size:0x18
lbl_8007AF18 = .data:0x8007AF18; // type:object size:0xC
lbl_8007AF24 = .data:0x8007AF24; // type:object size:0xC
lbl_8007AF30 = .data:0x8007AF30; // type:object size:0x10 data:4byte
lbl_8007AF40 = .data:0x8007AF40; // type:object size:0x10 data:string
jumptable_8007AF50 = .data:0x8007AF50; // type:object size:0x28 scope:local
lbl_8007AF78 = .data:0x8007AF78; // type:object size:0x20
lbl_8007AF98 = .data:0x8007AF98; // type:object size:0x28
lbl_8007AFC0 = .data:0x8007AFC0; // type:object size:0x28
lbl_8007AFE8 = .data:0x8007AFE8; // type:object size:0x18
lbl_8007B000 = .data:0x8007B000; // type:object size:0xC
lbl_8007B00C = .data:0x8007B00C; // type:object size:0x2C
lbl_8007B038 = .data:0x8007B038; // type:object size:0x2C data:string
lbl_8007B064 = .data:0x8007B064; // type:object size:0x38
lbl_8007B09C = .data:0x8007B09C; // type:object size:0x2C data:string
lbl_8007B0C8 = .data:0x8007B0C8; // type:object size:0x38
lbl_8007B100 = .data:0x8007B100; // type:object size:0x30 data:string
lbl_8007B130 = .data:0x8007B130; // type:object size:0x10
lbl_8007B140 = .data:0x8007B140; // type:object size:0x20
lbl_8007B160 = .data:0x8007B160; // type:object size:0x20
lbl_8007B180 = .data:0x8007B180; // type:object size:0x8 data:4byte
lbl_8007B188 = .data:0x8007B188; // type:object size:0x4 data:4byte
lbl_8007B18C = .data:0x8007B18C; // type:object size:0x4 data:4byte
lbl_8007B190 = .data:0x8007B190; // type:object size:0x200
lbl_8007B390 = .data:0x8007B390; // type:object size:0x4 data:4byte
lbl_8007B394 = .data:0x8007B394; // type:object size:0x4 data:4byte
lbl_8007B398 = .data:0x8007B398; // type:object size:0x10 data:4byte
lbl_8007B3A8 = .data:0x8007B3A8; // type:object size:0x8 data:4byte
lbl_8007B3B0 = .data:0x8007B3B0; // type:object size:0x18 data:4byte
lbl_8007B3C8 = .data:0x8007B3C8; // type:object size:0x8 data:4byte
lbl_8007B3D0 = .data:0x8007B3D0; // type:object size:0x68
lbl_8007B438 = .data:0x8007B438; // type:object size:0x8 data:4byte
lbl_8007B440 = .data:0x8007B440; // type:object size:0x30
lbl_8007B470 = .data:0x8007B470; // type:object size:0x30
lbl_8007B4A0 = .data:0x8007B4A0; // type:object size:0x1C0
lbl_8007B660 = .data:0x8007B660; // type:object size:0x68
lbl_8007B6C8 = .data:0x8007B6C8; // type:object size:0x4 data:4byte
lbl_8007B6CC = .data:0x8007B6CC; // type:object size:0x7C data:4byte
lbl_8007B748 = .data:0x8007B748; // type:object size:0x2008
lbl_8007D750 = .data:0x8007D750; // type:object size:0x660
lbl_8007DDC0 = .bss:0x8007DDC0; // type:object size:0xC
lbl_8007DDCC = .bss:0x8007DDCC; // type:object size:0xB84
__atexit_funcs = .bss:0x8007E950; // type:object size:0x100 scope:local
protopool$192 = .bss:0x8007EA50; // type:object size:0x38 data:4byte
stderr_buff = .bss:0x8007EA88; // type:object size:0x100
stdout_buff = .bss:0x8007EB88; // type:object size:0x100
stdin_buff = .bss:0x8007EC88; // type:object size:0x100
gTRKEventQueue = .bss:0x8007ED88; // type:object size:0x28
gTRKBigEndian = .bss:0x8007EDB0; // type:object size:0x4 scope:global data:4byte
gTRKMsgBufs = .bss:0x8007EDB8; // type:object size:0x19B0
gTRKInputPendingPtr = .bss:0x80080768; // type:object size:0x4 scope:global data:4byte
gTRKFramingState = .bss:0x8008076C; // type:object size:0x14 data:4byte
gTRKDispatchTableSize = .bss:0x80080780; // type:object size:0x4 data:4byte
IsTRKConnected = .bss:0x80080788; // type:object size:0x4 data:4byte
TRK_saved_exceptionID = .bss:0x80080790; // type:object size:0x2 scope:local data:2byte
gTRKState = .bss:0x80080794; // type:object size:0xA4 scope:global data:4byte
gTRKCPUState = .bss:0x80080838; // type:object size:0x430 scope:global
gTRKSaveState = .bss:0x80080C68; // type:object size:0x94 scope:global data:4byte
TRKvalue128_temp = .bss:0x80080CFC; // type:object size:0x10
lc_base = .bss:0x80080D10; // type:object size:0x4 data:4byte
TRK_mainError = .bss:0x80080D18; // type:object size:0x4 scope:local data:4byte
gWritePos = .bss:0x80080D20; // type:object size:0x4 data:4byte
gReadPos = .bss:0x80080D24; // type:object size:0x4 data:4byte
gReadCount = .bss:0x80080D28; // type:object size:0x4 data:4byte
_MetroTRK_Has_Framing = .bss:0x80080D2C; // type:object size:0x4 data:4byte
gReadBuf = .bss:0x80080D30; // type:object size:0x110A
gWriteBuf = .bss:0x80081E3C; // type:object size:0x110A
bUseSerialIO = .bss:0x80082F48; // type:object size:0x1 data:byte
__AXStackHead = .bss:0x80082F50; // type:object size:0x80 data:4byte
__AXStackTail = .bss:0x80082FD0; // type:object size:0x80 data:4byte
__AXBufferAuxA = .bss:0x80083060; // type:object size:0x1680 data:4byte
__AXBufferAuxB = .bss:0x800846E0; // type:object size:0x1680 data:4byte
__AXCommandList = .bss:0x80085D60; // type:object size:0x600
__AXOutBuffer = .bss:0x80086360; // type:object size:0x500 data:4byte
__AXOutSBuffer = .bss:0x80086860; // type:object size:0x280
__AXDSPTask = .bss:0x80086AE0; // type:object size:0x50
__AXDramImage = .bss:0x80086B30; // type:object size:0x4000
__AXLocalProfile = .bss:0x8008AB30; // type:object size:0x38
__AXStudio = .bss:0x8008AB80; // type:object size:0x36
__AXPB = .bss:0x8008ABC0; // type:object size:0x3B00 data:2byte
__AXITD = .bss:0x8008E6C0; // type:object size:0x1000
__AXUpdates = .bss:0x8008F6C0; // type:object size:0x4000
__AXVPB = .bss:0x800936C0; // type:object size:0x8900
__CARDBlock = .bss:0x8009BFC0; // type:object size:0x220 data:4byte
__CARDDiskNone = .bss:0x8009C1E0; // type:object size:0x20
CommandList = .bss:0x8009C200; // type:object size:0x3C scope:local data:4byte
AlarmForTimeout = .bss:0x8009C268; // type:object size:0x28 scope:local
BB2 = .bss:0x8009C2E0; // type:object size:0x20 scope:local
CurrDiskID = .bss:0x8009C300; // type:object size:0x20
DummyCommandBlock = .bss:0x8009C320; // type:object size:0x30 scope:local
ResetAlarm = .bss:0x8009C350; // type:object size:0x28 scope:local
WaitingQueue = .bss:0x8009C378; // type:object size:0x20 scope:local data:4byte
bb2Buf = .bss:0x8009C398; // type:object size:0x3F scope:local
block$16 = .bss:0x8009C3D8; // type:object size:0x30 scope:local
Ecb = .bss:0x8009C408; // type:object size:0xC0 scope:local data:4byte
gxData = .bss:0x8009C4C8; // type:object size:0x4F8 scope:local
lbl_8009CA40 = .bss:0x8009CA40; // type:object size:0x1800 data:4byte
DriveInfo = .bss:0x8009E240; // type:object size:0x20 scope:local
__OSErrorTable = .bss:0x8009E290; // type:object size:0x44 scope:global data:4byte
lbl_8009E2E0 = .bss:0x8009E2E0; // type:object size:0x20
Scb = .bss:0x8009E300; // type:object size:0x54 scope:local data:4byte
RunQueue = .bss:0x8009E358; // type:object size:0x100 scope:local data:4byte
lbl_8009ED50 = .bss:0x8009ED50; // type:object size:0x10
lbl_8009ED60 = .bss:0x8009ED60; // type:object size:0x40
Packet = .bss:0x8009EDA0; // type:object size:0x80 scope:local data:4byte
lbl_8009EE20 = .bss:0x8009EE20; // type:object size:0xA0
TypeTime = .bss:0x8009EEC0; // type:object size:0x20 scope:local
lbl_8009EEE0 = .bss:0x8009EEE0; // type:object size:0x20
lbl_8009EF00 = .bss:0x8009EF00; // type:object size:0x40
lbl_8009EF40 = .bss:0x8009EF40; // type:object size:0x60 data:4byte
lbl_8009EFA0 = .bss:0x8009EFA0; // type:object size:0x148 data:2byte
lbl_8009F0E8 = .bss:0x8009F0E8; // type:object size:0x80
lbl_8009F168 = .bss:0x8009F168; // type:object size:0x10
lbl_8009F178 = .bss:0x8009F178; // type:object size:0x500
lbl_8009F678 = .bss:0x8009F678; // type:object size:0xF0
lbl_8009F768 = .bss:0x8009F768; // type:object size:0xC data:4byte
lbl_8009F774 = .bss:0x8009F774; // type:object size:0x20 data:4byte
lbl_8009F794 = .bss:0x8009F794; // type:object size:0x30
lbl_8009F7C4 = .bss:0x8009F7C4; // type:object size:0x10 data:float
lbl_8009F7D4 = .bss:0x8009F7D4; // type:object size:0x28 data:float
lbl_8009F7FC = .bss:0x8009F7FC; // type:object size:0x34 data:float
lbl_8009F830 = .bss:0x8009F830; // type:object size:0x20
lbl_8009F850 = .bss:0x8009F850; // type:object size:0x20
lbl_8009F870 = .bss:0x8009F870; // type:object size:0x100
lbl_8009F970 = .bss:0x8009F970; // type:object size:0x30
lbl_8009F9A0 = .bss:0x8009F9A0; // type:object size:0x100
lbl_8009FAA0 = .bss:0x8009FAA0; // type:object size:0x1E0
lbl_8009FC80 = .bss:0x8009FC80; // type:object size:0x28 data:4byte
lbl_8009FCA8 = .bss:0x8009FCA8; // type:object size:0x10 data:4byte
lbl_8009FCB8 = .bss:0x8009FCB8; // type:object size:0x4 data:4byte
lbl_8009FCBC = .bss:0x8009FCBC; // type:object size:0xC04 data:byte
lbl_800A08C0 = .bss:0x800A08C0; // type:object size:0x9C0 data:byte
lbl_800A1280 = .bss:0x800A1280; // type:object size:0x4 data:4byte
lbl_800A1284 = .bss:0x800A1284; // type:object size:0x4 data:4byte
lbl_800A1288 = .bss:0x800A1288; // type:object size:0x14 data:4byte
lbl_800A129C = .bss:0x800A129C; // type:object size:0xC84 data:2byte
lbl_800A1F20 = .bss:0x800A1F20; // type:object size:0x8 data:4byte
lbl_800A1F28 = .bss:0x800A1F28; // type:object size:0x8 data:4byte
lbl_800A1F30 = .bss:0x800A1F30; // type:object size:0x4 data:4byte
lbl_800A1F34 = .bss:0x800A1F34; // type:object size:0x4 data:4byte
lbl_800A1F38 = .bss:0x800A1F38; // type:object size:0x120
lbl_800A2058 = .bss:0x800A2058; // type:object size:0x8 data:4byte
lbl_800A2060 = .bss:0x800A2060; // type:object size:0x40
lbl_800A20A0 = .bss:0x800A20A0; // type:object size:0x400
lbl_800A24A0 = .bss:0x800A24A0; // type:object size:0x8 data:4byte
lbl_800A24A8 = .bss:0x800A24A8; // type:object size:0x9D0 data:4byte
lbl_800A2E78 = .bss:0x800A2E78; // type:object size:0x16C0 data:byte
lbl_800A4538 = .bss:0x800A4538; // type:object size:0x4 data:4byte
lbl_800A453C = .bss:0x800A453C; // type:object size:0x4 data:4byte
lbl_800A4540 = .bss:0x800A4540; // type:object size:0x4 data:4byte
lbl_800A4544 = .bss:0x800A4544; // type:object size:0x4 data:4byte
lbl_800A4548 = .bss:0x800A4548; // type:object size:0xE60 data:byte
lbl_800A53A8 = .bss:0x800A53A8; // type:object size:0x4 data:4byte
lbl_800A53AC = .bss:0x800A53AC; // type:object size:0x20 data:4byte
lbl_800A53CC = .bss:0x800A53CC; // type:object size:0x10 data:4byte
lbl_800A53DC = .bss:0x800A53DC; // type:object size:0x14 data:4byte
lbl_800A53F0 = .bss:0x800A53F0; // type:object size:0x10 data:4byte
lbl_800A5400 = .bss:0x800A5400; // type:object size:0x4 data:4byte
lbl_800A5404 = .bss:0x800A5404; // type:object size:0x3C4 data:4byte
lbl_800A57C8 = .bss:0x800A57C8; // type:object size:0x4
lbl_800A57CC = .bss:0x800A57CC; // type:object size:0x7CAC data:4byte
lbl_800AD478 = .bss:0x800AD478; // type:object size:0x4 data:4byte
lbl_800AD47C = .bss:0x800AD47C; // type:object size:0x4 data:4byte
lbl_800AD480 = .bss:0x800AD480; // type:object size:0x8 data:4byte
lbl_800AD488 = .bss:0x800AD488; // type:object size:0x4 data:4byte
lbl_800AD48C = .bss:0x800AD48C; // type:object size:0x4 data:4byte
lbl_800AD490 = .bss:0x800AD490; // type:object size:0x4 data:4byte
lbl_800AD494 = .bss:0x800AD494; // type:object size:0x4 data:4byte
lbl_800AD498 = .bss:0x800AD498; // type:object size:0x4 data:4byte
lbl_800AD49C = .bss:0x800AD49C; // type:object size:0x20
lbl_800AD4BC = .bss:0x800AD4BC; // type:object size:0x100
lbl_800AD5BC = .bss:0x800AD5BC; // type:object size:0x4 data:4byte
lbl_800AD5C0 = .bss:0x800AD5C0; // type:object size:0x400
lbl_800AD9C0 = .bss:0x800AD9C0; // type:object size:0x440 data:byte
lbl_800ADE00 = .bss:0x800ADE00; // type:object size:0x4 data:4byte
lbl_800ADE04 = .bss:0x800ADE04; // type:object size:0x4 data:4byte
lbl_800ADE08 = .bss:0x800ADE08; // type:object size:0x2080
lbl_800AFE88 = .bss:0x800AFE88; // type:object size:0x4 data:4byte
lbl_800AFE8C = .bss:0x800AFE8C; // type:object size:0x140 data:4byte
lbl_800AFFCC = .bss:0x800AFFCC; // type:object size:0x344 data:4byte
lbl_800B0310 = .bss:0x800B0310; // type:object size:0xC data:4byte
lbl_800B031C = .bss:0x800B031C; // type:object size:0x4 data:4byte
lbl_800B0320 = .bss:0x800B0320; // type:object size:0x4 data:4byte
lbl_800B0324 = .bss:0x800B0324; // type:object size:0xFA4 data:byte
lbl_800B12C8 = .bss:0x800B12C8; // type:object size:0x100
lbl_800B13C8 = .bss:0x800B13C8; // type:object size:0x4 data:4byte
lbl_800B13CC = .bss:0x800B13CC; // type:object size:0x104 data:4byte
lbl_800B14D0 = .bss:0x800B14D0; // type:object size:0x10 data:4byte
lbl_800B14E0 = .bss:0x800B14E0; // type:object size:0x4 data:4byte
lbl_800B14E4 = .bss:0x800B14E4; // type:object size:0x2384 data:byte
lbl_800B3868 = .bss:0x800B3868; // type:object size:0x4 data:4byte
lbl_800B386C = .bss:0x800B386C; // type:object size:0x4 data:4byte
lbl_800B3870 = .bss:0x800B3870; // type:object size:0x4 data:4byte
lbl_800B3874 = .bss:0x800B3874; // type:object size:0x484
lbl_800B3CF8 = .bss:0x800B3CF8; // type:object size:0x4 data:4byte
lbl_800B3CFC = .bss:0x800B3CFC; // type:object size:0x4004 data:4byte
lbl_800B7D00 = .bss:0x800B7D00; // type:object size:0x4 data:4byte
lbl_800B7D04 = .bss:0x800B7D04; // type:object size:0xC04
lbl_800B8908 = .bss:0x800B8908; // type:object size:0x30 data:4byte
lbl_800B8938 = .bss:0x800B8938; // type:object size:0x80
lbl_800B89B8 = .bss:0x800B89B8; // type:object size:0x8 data:4byte
lbl_800B89C0 = .bss:0x800B89C0; // type:object size:0x8 data:4byte
lbl_800B89C8 = .bss:0x800B89C8; // type:object size:0x8 data:4byte
lbl_800B89D0 = .bss:0x800B89D0; // type:object size:0x200
lbl_800B8BD0 = .bss:0x800B8BD0; // type:object size:0x4 data:4byte
lbl_800B8BD4 = .bss:0x800B8BD4; // type:object size:0x9F4 data:4byte
lbl_800B95C8 = .bss:0x800B95C8; // type:object size:0x4 data:4byte
lbl_800B95CC = .bss:0x800B95CC; // type:object size:0x104 data:4byte
lbl_800B96D0 = .bss:0x800B96D0; // type:object size:0x4 data:4byte
lbl_800B96D4 = .bss:0x800B96D4; // type:object size:0x4 data:4byte
lbl_800B96D8 = .bss:0x800B96D8; // type:object size:0x8 data:4byte
lbl_800B96E0 = .bss:0x800B96E0; // type:object size:0x4 data:4byte
lbl_800B96E4 = .bss:0x800B96E4; // type:object size:0x10C0
lbl_800BA7A4 = .bss:0x800BA7A4; // type:object size:0xE84 data:byte
lbl_800BB628 = .bss:0x800BB628; // type:object size:0x14 data:4byte
lbl_800BB63C = .bss:0x800BB63C; // type:object size:0x180 data:4byte
@wstringBase0 = .sdata:0x800BB7C0; // type:object size:0x2 scope:local
next = .sdata:0x800BB7C8; // type:object size:0x4 scope:local data:4byte
__float_nan = .sdata:0x800BB7D0; // type:object size:0x4 data:float
__float_huge = .sdata:0x800BB7D4; // type:object size:0x4 data:float
__double_max = .sdata:0x800BB7D8; // type:object size:0x8 data:double
__double_huge = .sdata:0x800BB7E0; // type:object size:0x8 data:double
__extended_min = .sdata:0x800BB7E8; // type:object size:0x8 data:double
__extended_max = .sdata:0x800BB7F0; // type:object size:0x8 data:double
__AIVersion = .sdata:0x800BB7F8; // type:object size:0x4 data:4byte
__ARVersion = .sdata:0x800BB800; // type:object size:0x4 data:4byte
__ARQVersion = .sdata:0x800BB808; // type:object size:0x4 data:4byte
__AXVersion = .sdata:0x800BB810; // type:object size:0x4 data:4byte
axDspSlaveLength = .sdata:0x800BB818; // type:object size:0x2 data:2byte
__AXFXAlloc = .sdata:0x800BB820; // type:object size:0x4 data:4byte
__AXFXFree = .sdata:0x800BB824; // type:object size:0x4 data:4byte
__CARDVersion = .sdata:0x800BB828; // type:object size:0x4 data:4byte
next = .sdata:0x800BB830; // type:object size:0x4 scope:local data:4byte
__CARDVendorID = .sdata:0x800BB838; // type:object size:0x2 data:2byte
__DSPVersion = .sdata:0x800BB840; // type:object size:0x4 data:4byte
FirstRead = .sdata:0x800BB848; // type:object size:0x4 data:4byte
lbl_800BB850 = .sdata:0x800BB850; // type:object size:0x8 data:string
__DVDVersion = .sdata:0x800BB858; // type:object size:0x4 scope:global data:4byte
autoInvalidation = .sdata:0x800BB85C; // type:object size:0x4 scope:local data:4byte
checkOptionalCommand = .sdata:0x800BB860; // type:object size:0x4 data:4byte
lbl_800BB864 = .sdata:0x800BB864; // type:object size:0x6 data:string
DmaCommand = .sdata:0x800BB86C; // type:object size:0x4 data:4byte
@35 = .sdata:0x800BB870; // type:object size:0x2 scope:local data:string
@40 = .sdata:0x800BB874; // type:object size:0x4 scope:local data:string
@41 = .sdata:0x800BB878; // type:object size:0x3 scope:local data:string
__EXIVersion = .sdata:0x800BB880; // type:object size:0x4 scope:global data:4byte
__GXVersion = .sdata:0x800BB888; // type:object size:0x4 scope:global data:4byte
lbl_800BB890 = .sdata:0x800BB890; // type:object size:0x4
lbl_800BB894 = .sdata:0x800BB894; // type:object size:0x4
lbl_800BB898 = .sdata:0x800BB898; // type:object size:0x8
lbl_800BB8A0 = .sdata:0x800BB8A0; // type:object size:0x8
lbl_800BB8A8 = .sdata:0x800BB8A8; // type:object size:0x8
lbl_800BB8B0 = .sdata:0x800BB8B0; // type:object size:0x8
lbl_800BB8B8 = .sdata:0x800BB8B8; // type:object size:0x8
lbl_800BB8C0 = .sdata:0x800BB8C0; // type:object size:0x8
lbl_800BB8C8 = .sdata:0x800BB8C8; // type:object size:0x8
lbl_800BB8D0 = .sdata:0x800BB8D0; // type:object size:0x8
lbl_800BB8D8 = .sdata:0x800BB8D8; // type:object size:0x8
lbl_800BB8E0 = .sdata:0x800BB8E0; // type:object size:0x8
__OSVersion = .sdata:0x800BB8E8; // type:object size:0x4 scope:global data:4byte
@97 = .sdata:0x800BB8EC; // type:object size:0x6 scope:local data:string
lbl_800BB8F4 = .sdata:0x800BB8F4; // type:object size:0x4 data:string
lbl_800BB8F8 = .sdata:0x800BB8F8; // type:object size:0x8 data:4byte
__OSArenaLo = .sdata:0x800BB900; // type:object size:0x4 scope:local data:4byte
lbl_800BB908 = .sdata:0x800BB908; // type:object size:0x4 data:4byte
@76 = .sdata:0x800BB90C; // type:object size:0x2 scope:local data:string
lbl_800BB910 = .sdata:0x800BB910; // type:object size:0x8 data:2byte
SwitchThreadCallback = .sdata:0x800BB918; // type:object size:0x4 scope:local data:4byte
lbl_800BB920 = .sdata:0x800BB920; // type:object size:0x4 data:4byte
lbl_800BB924 = .sdata:0x800BB924; // type:object size:0x4 data:4byte
lbl_800BB928 = .sdata:0x800BB928; // type:object size:0x4 data:4byte
lbl_800BB92C = .sdata:0x800BB92C; // type:object size:0x4 data:4byte
lbl_800BB930 = .sdata:0x800BB930; // type:object size:0x4 data:4byte
lbl_800BB934 = .sdata:0x800BB934; // type:object size:0x4 data:4byte
lbl_800BB938 = .sdata:0x800BB938; // type:object size:0x4
lbl_800BB93C = .sdata:0x800BB93C; // type:object size:0x4
__SIVersion = .sdata:0x800BB940; // type:object size:0x4 scope:global data:4byte
lbl_800BB948 = .sdata:0x800BB948; // type:object size:0x4 data:4byte
lbl_800BB94C = .sdata:0x800BB94C; // type:object size:0xC
lbl_800BB958 = .sdata:0x800BB958; // type:object size:0x8 data:4byte
lbl_800BB960 = .sdata:0x800BB960; // type:object size:0xC
lbl_800BB96C = .sdata:0x800BB96C; // type:object size:0x8 data:float
lbl_800BB974 = .sdata:0x800BB974; // type:object size:0x4 data:float
lbl_800BB978 = .sdata:0x800BB978; // type:object size:0x8 data:4byte
lbl_800BB980 = .sdata:0x800BB980; // type:object size:0x8
lbl_800BB988 = .sdata:0x800BB988; // type:object size:0x8 data:4byte
lbl_800BB990 = .sdata:0x800BB990; // type:object size:0x1 data:byte
lbl_800BB9A0 = .sbss:0x800BB9A0; // type:object size:0x4 data:4byte
lbl_800BB9A4 = .sbss:0x800BB9A4; // type:object size:0x4 data:4byte
lbl_800BB9A8 = .sbss:0x800BB9A8; // type:object size:0x4 data:4byte
lbl_800BB9AC = .sbss:0x800BB9AC; // type:object size:0x4 data:4byte
lbl_800BB9B0 = .sbss:0x800BB9B0; // type:object size:0x4 data:4byte
lbl_800BB9B4 = .sbss:0x800BB9B4; // type:object size:0x4 data:4byte
lbl_800BB9B8 = .sbss:0x800BB9B8; // type:object size:0x4 data:4byte
lbl_800BB9BC = .sbss:0x800BB9BC; // type:object size:0x4 data:4byte
lbl_800BB9C0 = .sbss:0x800BB9C0; // type:object size:0x4 data:4byte
lbl_800BB9C4 = .sbss:0x800BB9C4; // type:object size:0x4 data:4byte
lbl_800BB9C8 = .sbss:0x800BB9C8; // type:object size:0x8 data:4byte
lbl_800BB9D0 = .sbss:0x800BB9D0; // type:object size:0x8 data:4byte
__global_destructor_chain = .sbss:0x800BB9D8; // type:object size:0x4 scope:global data:4byte
__aborting = .sbss:0x800BB9E0; // type:object size:0x4 scope:global data:4byte
__atexit_curr_func = .sbss:0x800BB9E4; // type:object size:0x4 scope:local data:4byte
__stdio_exit = .sbss:0x800BB9E8; // type:object size:0x4 scope:global data:4byte
__console_exit = .sbss:0x800BB9EC; // type:object size:0x4 scope:global data:4byte
init$193 = .sbss:0x800BB9F0; // type:object size:0x1 data:byte
errno = .sbss:0x800BB9F8; // type:object size:0x4 data:4byte
initialized$16 = .sbss:0x800BBA00; // type:object size:0x4 data:4byte
zero = .sbss:0x800BBA08; // type:object size:0x8 scope:local data:double
zero = .sbss:0x800BBA10; // type:object size:0x8 scope:local data:double
__AIS_Callback = .sbss:0x800BBA18; // type:object size:0x4 data:4byte
__AID_Callback = .sbss:0x800BBA1C; // type:object size:0x4 data:4byte
__CallbackStack = .sbss:0x800BBA20; // type:object size:0x4 data:4byte
__OldStack = .sbss:0x800BBA24; // type:object size:0x4 data:4byte
__AI_init_flag = .sbss:0x800BBA28; // type:object size:0x4 data:4byte
__AID_Active = .sbss:0x800BBA2C; // type:object size:0x4 data:4byte
bound_32KHz = .sbss:0x800BBA30; // type:object size:0x8 data:4byte
bound_48KHz = .sbss:0x800BBA38; // type:object size:0x8 data:4byte
min_wait = .sbss:0x800BBA40; // type:object size:0x8 data:4byte
max_wait = .sbss:0x800BBA48; // type:object size:0x8 data:4byte
buffer = .sbss:0x800BBA50; // type:object size:0x8 data:4byte
__AR_Callback = .sbss:0x800BBA58; // type:object size:0x4 data:4byte
__AR_Size = .sbss:0x800BBA5C; // type:object size:0x4 data:4byte
__AR_InternalSize = .sbss:0x800BBA60; // type:object size:0x4 data:4byte
__AR_ExpansionSize = .sbss:0x800BBA64; // type:object size:0x4 data:4byte
__AR_StackPointer = .sbss:0x800BBA68; // type:object size:0x4 data:4byte
__AR_FreeBlocks = .sbss:0x800BBA6C; // type:object size:0x4 data:4byte
__AR_BlockLength = .sbss:0x800BBA70; // type:object size:0x4 data:4byte
__AR_init_flag = .sbss:0x800BBA74; // type:object size:0x4 data:4byte
__ARQRequestQueueHi = .sbss:0x800BBA78; // type:object size:0x4 data:4byte
__ARQRequestTailHi = .sbss:0x800BBA7C; // type:object size:0x4 data:4byte
__ARQRequestQueueLo = .sbss:0x800BBA80; // type:object size:0x4 data:4byte
__ARQRequestTailLo = .sbss:0x800BBA84; // type:object size:0x4 data:4byte
__ARQRequestPendingHi = .sbss:0x800BBA88; // type:object size:0x4 data:4byte
__ARQRequestPendingLo = .sbss:0x800BBA8C; // type:object size:0x4 data:4byte
__ARQCallbackHi = .sbss:0x800BBA90; // type:object size:0x4 data:4byte
__ARQCallbackLo = .sbss:0x800BBA94; // type:object size:0x4 data:4byte
__ARQChunkSize = .sbss:0x800BBA98; // type:object size:0x4 data:4byte
__ARQ_init_flag = .sbss:0x800BBA9C; // type:object size:0x4 data:4byte
__AXCallbackStack = .sbss:0x800BBAA0; // type:object size:0x4 data:4byte
__AXCallbackAuxA = .sbss:0x800BBAA8; // type:object size:0x4 data:4byte
__AXCallbackAuxB = .sbss:0x800BBAAC; // type:object size:0x4 data:4byte
__AXContextAuxA = .sbss:0x800BBAB0; // type:object size:0x4 data:4byte
__AXContextAuxB = .sbss:0x800BBAB4; // type:object size:0x4 data:4byte
__AXAuxADspWrite = .sbss:0x800BBAB8; // type:object size:0x4 data:4byte
__AXAuxADspRead = .sbss:0x800BBABC; // type:object size:0x4 data:4byte
__AXAuxBDspWrite = .sbss:0x800BBAC0; // type:object size:0x4 data:4byte
__AXAuxBDspRead = .sbss:0x800BBAC4; // type:object size:0x4 data:4byte
__AXAuxDspWritePosition = .sbss:0x800BBAC8; // type:object size:0x4 data:4byte
__AXAuxDspReadPosition = .sbss:0x800BBACC; // type:object size:0x4 data:4byte
__AXAuxDspWritePositionDpl2 = .sbss:0x800BBAD0; // type:object size:0x4 data:4byte
__AXAuxDspReadPositionDpl2 = .sbss:0x800BBAD4; // type:object size:0x4 data:4byte
__AXAuxCpuReadWritePosition = .sbss:0x800BBAD8; // type:object size:0x4 data:4byte
__AXCommandListPosition = .sbss:0x800BBAE0; // type:object size:0x4 data:4byte
__AXClWrite = .sbss:0x800BBAE4; // type:object size:0x4 data:4byte
__AXCommandListCycles = .sbss:0x800BBAE8; // type:object size:0x4 data:4byte
__AXCompressor = .sbss:0x800BBAEC; // type:object size:0x4 data:4byte
__AXClMode = .sbss:0x800BBAF0; // type:object size:0x4 data:4byte
__AXOutFrame = .sbss:0x800BBAF8; // type:object size:0x4 data:4byte
__AXOutDspReady = .sbss:0x800BBAFC; // type:object size:0x4 data:4byte
__AXOsTime = .sbss:0x800BBB00; // type:object size:0x8 data:4byte
__AXUserFrameCallback = .sbss:0x800BBB08; // type:object size:0x4 data:4byte
__AXDSPInitFlag = .sbss:0x800BBB0C; // type:object size:0x4 data:4byte
__AXDSPDoneFlag = .sbss:0x800BBB10; // type:object size:0x4 data:4byte
__AXDebugSteppingMode = .sbss:0x800BBB14; // type:object size:0x4 data:4byte
__AXOutThreadQueue = .sbss:0x800BBB18; // type:object size:0x8
__AXSpbAL = .sbss:0x800BBB20; // type:object size:0x4 data:4byte
__AXSpbAR = .sbss:0x800BBB24; // type:object size:0x4 data:4byte
__AXSpbAS = .sbss:0x800BBB28; // type:object size:0x4 data:4byte
__AXSpbAAL = .sbss:0x800BBB2C; // type:object size:0x4 data:4byte
__AXSpbAAR = .sbss:0x800BBB30; // type:object size:0x4 data:4byte
__AXSpbAAS = .sbss:0x800BBB34; // type:object size:0x4 data:4byte
__AXSpbABL = .sbss:0x800BBB38; // type:object size:0x4 data:4byte
__AXSpbABR = .sbss:0x800BBB3C; // type:object size:0x4 data:4byte
__AXSpbABS = .sbss:0x800BBB40; // type:object size:0x4 data:4byte
__AXMaxDspCycles = .sbss:0x800BBB48; // type:object size:0x4 data:4byte
__AXRecDspCycles = .sbss:0x800BBB4C; // type:object size:0x4 data:4byte
__AXNumVoices = .sbss:0x800BBB50; // type:object size:0x4 data:4byte
__AXProfile = .sbss:0x800BBB58; // type:object size:0x4 data:4byte
__AXMaxProfiles = .sbss:0x800BBB5C; // type:object size:0x4 data:4byte
__AXCurrentProfile = .sbss:0x800BBB60; // type:object size:0x4 data:4byte
__AXProfileInitialized = .sbss:0x800BBB64; // type:object size:0x4 data:4byte
__CARDEncode = .sbss:0x800BBB68; // type:object size:0x2 data:2byte
__DBInterface = .sbss:0x800BBB70; // type:object size:0x4 scope:global data:4byte
DBVerbose = .sbss:0x800BBB74; // type:object size:0x4 scope:global data:4byte
__DSP_init_flag = .sbss:0x800BBB78; // type:object size:0x4 data:4byte
__DSP_rude_task_pending = .sbss:0x800BBB80; // type:object size:0x4 data:4byte
__DSP_rude_task = .sbss:0x800BBB84; // type:object size:0x4 data:4byte
__DSP_tmp_task = .sbss:0x800BBB88; // type:object size:0x4 data:4byte
__DSP_last_task = .sbss:0x800BBB8C; // type:object size:0x4 data:4byte
__DSP_first_task = .sbss:0x800BBB90; // type:object size:0x4 data:4byte
__DSP_curr_task = .sbss:0x800BBB94; // type:object size:0x4 data:4byte
StopAtNextInt = .sbss:0x800BBB98; // type:object size:0x4 scope:local data:4byte
LastLength = .sbss:0x800BBB9C; // type:object size:0x4 data:4byte
Callback = .sbss:0x800BBBA0; // type:object size:0x4 scope:local data:4byte
ResetCoverCallback = .sbss:0x800BBBA4; // type:object size:0x4 data:4byte
LastResetEnd = .sbss:0x800BBBA8; // type:object size:0x8 scope:local data:4byte
ResetOccurred = .sbss:0x800BBBB0; // type:object size:0x4 scope:local data:4byte
WaitingCoverClose = .sbss:0x800BBBB4; // type:object size:0x4 scope:local data:4byte
Breaking = .sbss:0x800BBBB8; // type:object size:0x4 data:4byte
WorkAroundType = .sbss:0x800BBBBC; // type:object size:0x4 scope:local data:4byte
WorkAroundSeekLocation = .sbss:0x800BBBC0; // type:object size:0x4 scope:local data:4byte
LastReadFinished = .sbss:0x800BBBC8; // type:object size:0x8 data:4byte
LastReadIssued = .sbss:0x800BBBD0; // type:object size:0x8 data:4byte
LastCommandWasRead = .sbss:0x800BBBD8; // type:object size:0x4 data:4byte
NextCommandNumber = .sbss:0x800BBBDC; // type:object size:0x4 scope:local data:4byte
BootInfo = .sbss:0x800BBBE0; // type:object size:0x4 scope:local data:4byte
FstStart = .sbss:0x800BBBE4; // type:object size:0x4 scope:local data:4byte
FstStringStart = .sbss:0x800BBBE8; // type:object size:0x4 scope:local data:4byte
MaxEntryNum = .sbss:0x800BBBEC; // type:object size:0x4 scope:local data:4byte
currentDirectory = .sbss:0x800BBBF0; // type:object size:0x4 data:4byte
__DVDLongFileNameFlag = .sbss:0x800BBBF4; // type:object size:0x4 scope:global data:4byte
__DVDThreadQueue = .sbss:0x800BBBF8; // type:object size:0x8 scope:global
executing = .sbss:0x800BBC00; // type:object size:0x4 scope:local data:4byte
IDShouldBe = .sbss:0x800BBC04; // type:object size:0x4 scope:local data:4byte
bootInfo = .sbss:0x800BBC08; // type:object size:0x4 scope:local data:4byte
PauseFlag = .sbss:0x800BBC0C; // type:object size:0x4 scope:local data:4byte
PausingFlag = .sbss:0x800BBC10; // type:object size:0x4 scope:local data:4byte
AutoFinishing = .sbss:0x800BBC14; // type:object size:0x4 data:4byte
FatalErrorFlag = .sbss:0x800BBC18; // type:object size:0x4 scope:local data:4byte
CurrCommand = .sbss:0x800BBC1C; // type:object size:0x4 scope:local data:4byte
Canceling = .sbss:0x800BBC20; // type:object size:0x4 data:4byte
CancelCallback = .sbss:0x800BBC24; // type:object size:0x4 data:4byte
ResumeFromHere = .sbss:0x800BBC28; // type:object size:0x4 scope:local data:4byte
CancelLastError = .sbss:0x800BBC2C; // type:object size:0x4 scope:local data:4byte
LastError = .sbss:0x800BBC30; // type:object size:0x4 data:4byte
NumInternalRetry = .sbss:0x800BBC34; // type:object size:0x4 data:4byte
ResetRequired = .sbss:0x800BBC38; // type:object size:0x4 scope:local data:4byte
FirstTimeInBootrom = .sbss:0x800BBC3C; // type:object size:0x4 scope:local data:4byte
DVDInitialized = .sbss:0x800BBC40; // type:object size:0x4 scope:local data:4byte
LastState = .sbss:0x800BBC44; // type:object size:0x4 data:4byte
FatalFunc = .sbss:0x800BBC48; // type:object size:0x4 data:4byte
status = .sbss:0x800BBC50; // type:object size:0x4 data:4byte
bb2 = .sbss:0x800BBC54; // type:object size:0x4 scope:local data:4byte
idTmp = .sbss:0x800BBC58; // type:object size:0x4 scope:local data:4byte
IDSerialPort1 = .sbss:0x800BBC60; // type:object size:0x4 scope:local data:4byte
Chan = .sbss:0x800BBC68; // type:object size:0x4 data:4byte
Dev = .sbss:0x800BBC6C; // type:object size:0x4 data:4byte
Enabled = .sbss:0x800BBC70; // type:object size:0x4 data:4byte
BarnacleEnabled = .sbss:0x800BBC74; // type:object size:0x4 data:4byte
__piReg = .sbss:0x800BBC78; // type:object size:0x4 scope:global data:4byte
__cpReg = .sbss:0x800BBC7C; // type:object size:0x4 scope:global data:4byte
__peReg = .sbss:0x800BBC80; // type:object size:0x4 scope:global data:4byte
__memReg = .sbss:0x800BBC84; // type:object size:0x4 scope:global data:4byte
lbl_800BBC88 = .sbss:0x800BBC88; // type:object size:0x8 data:4byte
lbl_800BBC90 = .sbss:0x800BBC90; // type:object size:0x4 data:4byte
lbl_800BBC94 = .sbss:0x800BBC94; // type:object size:0x4 data:4byte
lbl_800BBC98 = .sbss:0x800BBC98; // type:object size:0x4 data:4byte
resetFuncRegistered$63 = .sbss:0x800BBC9C; // type:object size:0x4 scope:local data:4byte
lbl_800BBCA0 = .sbss:0x800BBCA0; // type:object size:0x4 data:4byte
lbl_800BBCA4 = .sbss:0x800BBCA4; // type:object size:0x4 data:4byte
lbl_800BBCA8 = .sbss:0x800BBCA8; // type:object size:0x4 data:4byte
lbl_800BBCAC = .sbss:0x800BBCAC; // type:object size:0x1 data:byte
lbl_800BBCB0 = .sbss:0x800BBCB0; // type:object size:0x4 data:4byte
lbl_800BBCB4 = .sbss:0x800BBCB4; // type:object size:0x4 data:4byte
lbl_800BBCB8 = .sbss:0x800BBCB8; // type:object size:0x8 data:4byte
lbl_800BBCC0 = .sbss:0x800BBCC0; // type:object size:0x4 data:4byte
lbl_800BBCC4 = .sbss:0x800BBCC4; // type:object size:0x4 data:4byte
lbl_800BBCC8 = .sbss:0x800BBCC8; // type:object size:0x1 data:byte
lbl_800BBCCC = .sbss:0x800BBCCC; // type:object size:0xC
lbl_800BBCD8 = .sbss:0x800BBCD8; // type:object size:0x4 data:4byte
lbl_800BBCDC = .sbss:0x800BBCDC; // type:object size:0x4 data:4byte
lbl_800BBCE0 = .sbss:0x800BBCE0; // type:object size:0x8 data:4byte
BootInfo = .sbss:0x800BBCE8; // type:object size:0x4 scope:local data:4byte
BI2DebugFlag = .sbss:0x800BBCEC; // type:object size:0x4 scope:local data:4byte
BI2DebugFlagHolder = .sbss:0x800BBCF0; // type:object size:0x4 scope:local data:4byte
__OSIsGcam = .sbss:0x800BBCF4; // type:object size:0x4 scope:weak data:4byte
ZeroF = .sbss:0x800BBCF8; // type:object size:0x8 scope:local data:double
ZeroPS = .sbss:0x800BBD00; // type:object size:0x8 scope:local
AreWeInitialized = .sbss:0x800BBD08; // type:object size:0x4 scope:local data:4byte
OSExceptionTable = .sbss:0x800BBD0C; // type:object size:0x4 scope:local data:4byte
__OSSavedRegionEnd = .sbss:0x800BBD10; // type:object size:0x4 scope:global data:4byte
__OSSavedRegionStart = .sbss:0x800BBD14; // type:object size:0x4 scope:global data:4byte
__OSInIPL = .sbss:0x800BBD18; // type:object size:0x4 scope:global data:4byte
__OSStartTime = .sbss:0x800BBD20; // type:object size:0x8 scope:global data:4byte
AlarmQueue = .sbss:0x800BBD28; // type:object size:0x8 scope:local data:4byte
lbl_800BBD30 = .sbss:0x800BBD30; // type:object size:0x4 data:4byte
lbl_800BBD34 = .sbss:0x800BBD34; // type:object size:0x4 data:4byte
lbl_800BBD38 = .sbss:0x800BBD38; // type:object size:0x4 data:4byte
lbl_800BBD3C = .sbss:0x800BBD3C; // type:object size:0x4 data:4byte
__OSArenaHi = .sbss:0x800BBD40; // type:object size:0x4 scope:local data:4byte
lbl_800BBD48 = .sbss:0x800BBD48; // type:object size:0x4 data:4byte
lbl_800BBD4C = .sbss:0x800BBD4C; // type:object size:0x4 data:4byte
lbl_800BBD50 = .sbss:0x800BBD50; // type:object size:0x4 data:4byte
lbl_800BBD54 = .sbss:0x800BBD54; // type:object size:0x4 data:4byte
InterruptHandlerTable = .sbss:0x800BBD58; // type:object size:0x4 scope:local data:4byte
__OSLastInterruptSrr0 = .sbss:0x800BBD5C; // type:object size:0x4 scope:global data:4byte
__OSLastInterrupt = .sbss:0x800BBD60; // type:object size:0x2 scope:global data:2byte
__OSLastInterruptTime = .sbss:0x800BBD68; // type:object size:0x8 scope:global data:4byte
lbl_800BBD70 = .sbss:0x800BBD70; // type:object size:0x4 data:4byte
lbl_800BBD74 = .sbss:0x800BBD74; // type:object size:0x4 data:4byte
lbl_800BBD78 = .sbss:0x800BBD78; // type:object size:0x8 data:4byte
ResetFunctionQueue = .sbss:0x800BBD80; // type:object size:0x8 scope:local data:4byte
lbl_800BBD88 = .sbss:0x800BBD88; // type:object size:0x4 data:4byte
lbl_800BBD8C = .sbss:0x800BBD8C; // type:object size:0x4 data:4byte
lbl_800BBD90 = .sbss:0x800BBD90; // type:object size:0x8 data:4byte
lbl_800BBD98 = .sbss:0x800BBD98; // type:object size:0x4 data:4byte
lbl_800BBD9C = .sbss:0x800BBD9C; // type:object size:0x4 data:4byte
lbl_800BBDA0 = .sbss:0x800BBDA0; // type:object size:0x4 data:4byte
lbl_800BBDA4 = .sbss:0x800BBDA4; // type:object size:0x4 data:4byte
RunQueueBits = .sbss:0x800BBDA8; // type:object size:0x4 scope:local data:4byte
RunQueueHint = .sbss:0x800BBDAC; // type:object size:0x4 scope:local data:4byte
Reschedule = .sbss:0x800BBDB0; // type:object size:0x4 scope:local data:4byte
Debug_BBA = .sbss:0x800BBDB8; // type:object size:0x1 scope:local data:byte
lbl_800BBDC0 = .sbss:0x800BBDC0; // type:object size:0x4 data:4byte
lbl_800BBDC4 = .sbss:0x800BBDC4; // type:object size:0x4 data:4byte
lbl_800BBDC8 = .sbss:0x800BBDC8; // type:object size:0x4 data:4byte
lbl_800BBDCC = .sbss:0x800BBDCC; // type:object size:0x4 data:4byte
lbl_800BBDD0 = .sbss:0x800BBDD0; // type:object size:0x4 data:4byte
lbl_800BBDD4 = .sbss:0x800BBDD4; // type:object size:0x4 data:4byte
lbl_800BBDD8 = .sbss:0x800BBDD8; // type:object size:0x4 data:4byte
lbl_800BBDDC = .sbss:0x800BBDDC; // type:object size:0x4 data:4byte
lbl_800BBDE0 = .sbss:0x800BBDE0; // type:object size:0x4 data:4byte
__PADSpec = .sbss:0x800BBDE4; // type:object size:0x4 scope:global data:4byte
lbl_800BBDE8 = .sbss:0x800BBDE8; // type:object size:0x4
cmdTypeAndStatus$371 = .sbss:0x800BBDEC; // type:object size:0x4 scope:local
lbl_800BBDF0 = .sbss:0x800BBDF0; // type:object size:0x8 data:4byte
SamplingRate = .sbss:0x800BBDF8; // type:object size:0x4 scope:local data:4byte
lbl_800BBE00 = .sbss:0x800BBE00; // type:object size:0x4 data:4byte
lbl_800BBE04 = .sbss:0x800BBE04; // type:object size:0x4 data:4byte
lbl_800BBE08 = .sbss:0x800BBE08; // type:object size:0x4 data:4byte
lbl_800BBE0C = .sbss:0x800BBE0C; // type:object size:0x8
lbl_800BBE14 = .sbss:0x800BBE14; // type:object size:0x4 data:4byte
lbl_800BBE18 = .sbss:0x800BBE18; // type:object size:0x4 data:4byte
lbl_800BBE1C = .sbss:0x800BBE1C; // type:object size:0x4 data:4byte
lbl_800BBE20 = .sbss:0x800BBE20; // type:object size:0x2 data:2byte
lbl_800BBE22 = .sbss:0x800BBE22; // type:object size:0x2 data:2byte
lbl_800BBE24 = .sbss:0x800BBE24; // type:object size:0x4 data:4byte
lbl_800BBE28 = .sbss:0x800BBE28; // type:object size:0x4 data:4byte
lbl_800BBE2C = .sbss:0x800BBE2C; // type:object size:0x4 data:4byte
lbl_800BBE30 = .sbss:0x800BBE30; // type:object size:0x8 data:4byte
lbl_800BBE38 = .sbss:0x800BBE38; // type:object size:0x4 data:4byte
lbl_800BBE3C = .sbss:0x800BBE3C; // type:object size:0x4 data:4byte
lbl_800BBE40 = .sbss:0x800BBE40; // type:object size:0x4 data:4byte
CurrTvMode = .sbss:0x800BBE44; // type:object size:0x4 scope:local data:4byte
lbl_800BBE48 = .sbss:0x800BBE48; // type:object size:0x4 data:4byte
lbl_800BBE4C = .sbss:0x800BBE4C; // type:object size:0x4 data:4byte
lbl_800BBE50 = .sbss:0x800BBE50; // type:object size:0x4 data:4byte
lbl_800BBE54 = .sbss:0x800BBE54; // type:object size:0x4 data:4byte
lbl_800BBE58 = .sbss:0x800BBE58; // type:object size:0x8
lbl_800BBE60 = .sbss:0x800BBE60; // type:object size:0x4 data:4byte
lbl_800BBE64 = .sbss:0x800BBE64; // type:object size:0x4 data:4byte
lbl_800BBE68 = .sbss:0x800BBE68; // type:object size:0x4 data:4byte
lbl_800BBE6C = .sbss:0x800BBE6C; // type:object size:0x4 data:4byte
lbl_800BBE70 = .sbss:0x800BBE70; // type:object size:0x4 data:4byte
lbl_800BBE74 = .sbss:0x800BBE74; // type:object size:0x4 data:4byte
lbl_800BBE78 = .sbss:0x800BBE78; // type:object size:0x4 data:4byte
lbl_800BBE7C = .sbss:0x800BBE7C; // type:object size:0x4 data:4byte
lbl_800BBE80 = .sbss:0x800BBE80; // type:object size:0x4 data:float
lbl_800BBE84 = .sbss:0x800BBE84; // type:object size:0x4 data:4byte
lbl_800BBE88 = .sbss:0x800BBE88; // type:object size:0x8 data:4byte
lbl_800BBE90 = .sbss:0x800BBE90; // type:object size:0x4 data:4byte
lbl_800BBE94 = .sbss:0x800BBE94; // type:object size:0x4 data:4byte
lbl_800BBE98 = .sbss:0x800BBE98; // type:object size:0x4 data:4byte
lbl_800BBE9C = .sbss:0x800BBE9C; // type:object size:0x4 data:4byte
lbl_800BBEA0 = .sbss:0x800BBEA0; // type:object size:0x4 data:4byte
lbl_800BBEA4 = .sbss:0x800BBEA4; // type:object size:0x4 data:4byte
lbl_800BBEA8 = .sbss:0x800BBEA8; // type:object size:0x4 data:4byte
lbl_800BBEAC = .sbss:0x800BBEAC; // type:object size:0x4 data:4byte
lbl_800BBEB0 = .sbss:0x800BBEB0; // type:object size:0x4 data:4byte
lbl_800BBEB4 = .sbss:0x800BBEB4; // type:object size:0x4 data:4byte
lbl_800BBEB8 = .sbss:0x800BBEB8; // type:object size:0x4 data:4byte
lbl_800BBEBC = .sbss:0x800BBEBC; // type:object size:0x4 data:4byte
lbl_800BBEC0 = .sbss:0x800BBEC0; // type:object size:0x4 data:4byte
lbl_800BBEC4 = .sbss:0x800BBEC4; // type:object size:0x4 data:4byte
lbl_800BBEC8 = .sbss:0x800BBEC8; // type:object size:0x4 data:4byte
lbl_800BBECC = .sbss:0x800BBECC; // type:object size:0x4 data:4byte
lbl_800BBED0 = .sbss:0x800BBED0; // type:object size:0x4 data:4byte
lbl_800BBED4 = .sbss:0x800BBED4; // type:object size:0x4 data:4byte
lbl_800BBED8 = .sbss:0x800BBED8; // type:object size:0x8 data:4byte
lbl_800BBEE0 = .sbss:0x800BBEE0; // type:object size:0x4 data:4byte
lbl_800BBEE4 = .sbss:0x800BBEE4; // type:object size:0x4 data:4byte
lbl_800BBEE8 = .sbss:0x800BBEE8; // type:object size:0x4 data:4byte
lbl_800BBEEC = .sbss:0x800BBEEC; // type:object size:0x4 data:4byte
lbl_800BBEF0 = .sbss:0x800BBEF0; // type:object size:0x8 data:4byte
lbl_800BBEF8 = .sbss:0x800BBEF8; // type:object size:0x4 data:4byte
lbl_800BBEFC = .sbss:0x800BBEFC; // type:object size:0x4 data:4byte
lbl_800BBF00 = .sbss:0x800BBF00; // type:object size:0x4 data:4byte
lbl_800BBF04 = .sbss:0x800BBF04; // type:object size:0x4 data:4byte
lbl_800BBF08 = .sbss:0x800BBF08; // type:object size:0x4 data:4byte
lbl_800BBF0C = .sbss:0x800BBF0C; // type:object size:0x2 data:2byte
lbl_800BBF10 = .sbss:0x800BBF10; // type:object size:0x4 data:4byte
lbl_800BBF14 = .sbss:0x800BBF14; // type:object size:0x4 data:4byte
lbl_800BBF18 = .sbss:0x800BBF18; // type:object size:0x4 data:4byte
lbl_800BBF1C = .sbss:0x800BBF1C; // type:object size:0x4 data:4byte
lbl_800BBF20 = .sbss:0x800BBF20; // type:object size:0x4 data:4byte
lbl_800BBF24 = .sbss:0x800BBF24; // type:object size:0x4 data:4byte
lbl_800BBF28 = .sbss:0x800BBF28; // type:object size:0x4 data:4byte
lbl_800BBF2C = .sbss:0x800BBF2C; // type:object size:0x1 data:byte
lbl_800BBF30 = .sbss:0x800BBF30; // type:object size:0x4 data:4byte
lbl_800BBF34 = .sbss:0x800BBF34; // type:object size:0x4 data:4byte
lbl_800BBF40 = .sdata2:0x800BBF40; // type:object size:0x4 data:4byte
lbl_800BBF44 = .sdata2:0x800BBF44; // type:object size:0x4 data:float
lbl_800BBF48 = .sdata2:0x800BBF48; // type:object size:0x4 data:float
lbl_800BBF50 = .sdata2:0x800BBF50; // type:object size:0x8 data:double
lbl_800BBF58 = .sdata2:0x800BBF58; // type:object size:0x4 data:float
lbl_800BBF60 = .sdata2:0x800BBF60; // type:object size:0x8 data:double
lbl_800BBF68 = .sdata2:0x800BBF68; // type:object size:0x8 data:double
lbl_800BBF70 = .sdata2:0x800BBF70; // type:object size:0x8 data:double
lbl_800BBF78 = .sdata2:0x800BBF78; // type:object size:0x8 data:double
lbl_800BBF80 = .sdata2:0x800BBF80; // type:object size:0x8 data:double
lbl_800BBF88 = .sdata2:0x800BBF88; // type:object size:0x8 data:double
lbl_800BBF90 = .sdata2:0x800BBF90; // type:object size:0x4 data:4byte
lbl_800BBF98 = .sdata2:0x800BBF98; // type:object size:0x8 data:double
lbl_800BBFA0 = .sdata2:0x800BBFA0; // type:object size:0x4 data:string
lbl_800BBFA4 = .sdata2:0x800BBFA4; // type:object size:0x1 data:string
lbl_800BBFA8 = .sdata2:0x800BBFA8; // type:object size:0x8 data:double
lbl_800BBFB0 = .sdata2:0x800BBFB0; // type:object size:0x8 data:double
lbl_800BBFB8 = .sdata2:0x800BBFB8; // type:object size:0x8 data:double
lbl_800BBFC0 = .sdata2:0x800BBFC0; // type:object size:0x8 data:double
lbl_800BBFC8 = .sdata2:0x800BBFC8; // type:object size:0x8 data:double
lbl_800BBFD0 = .sdata2:0x800BBFD0; // type:object size:0x8 data:double
lbl_800BBFD8 = .sdata2:0x800BBFD8; // type:object size:0x8 data:double
lbl_800BBFE0 = .sdata2:0x800BBFE0; // type:object size:0x8 data:double
lbl_800BBFE8 = .sdata2:0x800BBFE8; // type:object size:0x8 data:double
lbl_800BBFF0 = .sdata2:0x800BBFF0; // type:object size:0x8 data:double
lbl_800BBFF8 = .sdata2:0x800BBFF8; // type:object size:0x8 data:double
lbl_800BC000 = .sdata2:0x800BC000; // type:object size:0x8 data:double
lbl_800BC008 = .sdata2:0x800BC008; // type:object size:0x8 data:double
lbl_800BC010 = .sdata2:0x800BC010; // type:object size:0x8 data:double
lbl_800BC018 = .sdata2:0x800BC018; // type:object size:0x8 data:double
lbl_800BC020 = .sdata2:0x800BC020; // type:object size:0x8 data:double
lbl_800BC028 = .sdata2:0x800BC028; // type:object size:0x8 data:double
lbl_800BC030 = .sdata2:0x800BC030; // type:object size:0x8 data:double
lbl_800BC038 = .sdata2:0x800BC038; // type:object size:0x8 data:double
lbl_800BC040 = .sdata2:0x800BC040; // type:object size:0x8 data:double
lbl_800BC048 = .sdata2:0x800BC048; // type:object size:0x8 data:double
lbl_800BC050 = .sdata2:0x800BC050; // type:object size:0x8 data:double
lbl_800BC058 = .sdata2:0x800BC058; // type:object size:0x8 data:double
lbl_800BC060 = .sdata2:0x800BC060; // type:object size:0x8 data:double
lbl_800BC068 = .sdata2:0x800BC068; // type:object size:0x8 data:double
lbl_800BC070 = .sdata2:0x800BC070; // type:object size:0x8 data:double
lbl_800BC078 = .sdata2:0x800BC078; // type:object size:0x8 data:double
lbl_800BC080 = .sdata2:0x800BC080; // type:object size:0x8 data:double
lbl_800BC088 = .sdata2:0x800BC088; // type:object size:0x8 data:double
lbl_800BC090 = .sdata2:0x800BC090; // type:object size:0x8 data:double
lbl_800BC098 = .sdata2:0x800BC098; // type:object size:0x8 data:double
lbl_800BC0A0 = .sdata2:0x800BC0A0; // type:object size:0x8 data:double
lbl_800BC0A8 = .sdata2:0x800BC0A8; // type:object size:0x8 data:double
lbl_800BC0B0 = .sdata2:0x800BC0B0; // type:object size:0x8 data:double
lbl_800BC0B8 = .sdata2:0x800BC0B8; // type:object size:0x8 data:double
lbl_800BC0C0 = .sdata2:0x800BC0C0; // type:object size:0x8 data:double
lbl_800BC0C8 = .sdata2:0x800BC0C8; // type:object size:0x8 data:double
lbl_800BC0D0 = .sdata2:0x800BC0D0; // type:object size:0x8 data:double
lbl_800BC0D8 = .sdata2:0x800BC0D8; // type:object size:0x8 data:double
lbl_800BC0E0 = .sdata2:0x800BC0E0; // type:object size:0x8 data:double
lbl_800BC0E8 = .sdata2:0x800BC0E8; // type:object size:0x8 data:double
lbl_800BC0F0 = .sdata2:0x800BC0F0; // type:object size:0x8 data:double
lbl_800BC0F8 = .sdata2:0x800BC0F8; // type:object size:0x8 data:double
lbl_800BC100 = .sdata2:0x800BC100; // type:object size:0x8 data:double
lbl_800BC108 = .sdata2:0x800BC108; // type:object size:0x8 data:double
lbl_800BC110 = .sdata2:0x800BC110; // type:object size:0x8 data:double
lbl_800BC118 = .sdata2:0x800BC118; // type:object size:0x8 data:double
lbl_800BC120 = .sdata2:0x800BC120; // type:object size:0x8 data:double
lbl_800BC128 = .sdata2:0x800BC128; // type:object size:0x8 data:double
lbl_800BC130 = .sdata2:0x800BC130; // type:object size:0x8 data:double
lbl_800BC138 = .sdata2:0x800BC138; // type:object size:0x8 data:double
lbl_800BC140 = .sdata2:0x800BC140; // type:object size:0x8 data:double
lbl_800BC148 = .sdata2:0x800BC148; // type:object size:0x8 data:double
lbl_800BC150 = .sdata2:0x800BC150; // type:object size:0x8 data:double
lbl_800BC158 = .sdata2:0x800BC158; // type:object size:0x8 data:double
lbl_800BC160 = .sdata2:0x800BC160; // type:object size:0x8 data:double
lbl_800BC168 = .sdata2:0x800BC168; // type:object size:0x8 data:double
lbl_800BC170 = .sdata2:0x800BC170; // type:object size:0x8 data:double
lbl_800BC178 = .sdata2:0x800BC178; // type:object size:0x8 data:double
lbl_800BC180 = .sdata2:0x800BC180; // type:object size:0x8 data:double
lbl_800BC188 = .sdata2:0x800BC188; // type:object size:0x8 data:double
lbl_800BC190 = .sdata2:0x800BC190; // type:object size:0x8 data:double
lbl_800BC198 = .sdata2:0x800BC198; // type:object size:0x8 data:double
lbl_800BC1A0 = .sdata2:0x800BC1A0; // type:object size:0x8 data:double
lbl_800BC1A8 = .sdata2:0x800BC1A8; // type:object size:0x8 data:double
lbl_800BC1B0 = .sdata2:0x800BC1B0; // type:object size:0x8 data:double
lbl_800BC1B8 = .sdata2:0x800BC1B8; // type:object size:0x8 data:double
lbl_800BC1C0 = .sdata2:0x800BC1C0; // type:object size:0x8 data:double
lbl_800BC1C8 = .sdata2:0x800BC1C8; // type:object size:0x8 data:double
lbl_800BC1D0 = .sdata2:0x800BC1D0; // type:object size:0x8 data:double
lbl_800BC1D8 = .sdata2:0x800BC1D8; // type:object size:0x8 data:double
lbl_800BC1E0 = .sdata2:0x800BC1E0; // type:object size:0x8 data:double
lbl_800BC1E8 = .sdata2:0x800BC1E8; // type:object size:0x8 data:double
lbl_800BC1F0 = .sdata2:0x800BC1F0; // type:object size:0x8 data:double
lbl_800BC1F8 = .sdata2:0x800BC1F8; // type:object size:0x8 data:double
lbl_800BC200 = .sdata2:0x800BC200; // type:object size:0x8 data:double
lbl_800BC208 = .sdata2:0x800BC208; // type:object size:0x8 data:double
lbl_800BC210 = .sdata2:0x800BC210; // type:object size:0x8 data:double
lbl_800BC218 = .sdata2:0x800BC218; // type:object size:0x8 data:double
lbl_800BC220 = .sdata2:0x800BC220; // type:object size:0x8 data:double
lbl_800BC228 = .sdata2:0x800BC228; // type:object size:0x8 data:double
lbl_800BC230 = .sdata2:0x800BC230; // type:object size:0x8 data:double
lbl_800BC238 = .sdata2:0x800BC238; // type:object size:0x8 data:double
lbl_800BC240 = .sdata2:0x800BC240; // type:object size:0x8 data:double
lbl_800BC248 = .sdata2:0x800BC248; // type:object size:0x8 data:double
lbl_800BC250 = .sdata2:0x800BC250; // type:object size:0x8 data:double
lbl_800BC258 = .sdata2:0x800BC258; // type:object size:0x8 data:double
lbl_800BC260 = .sdata2:0x800BC260; // type:object size:0x8 data:double
lbl_800BC268 = .sdata2:0x800BC268; // type:object size:0x8 data:double
lbl_800BC270 = .sdata2:0x800BC270; // type:object size:0x8 data:double
lbl_800BC278 = .sdata2:0x800BC278; // type:object size:0x8 data:double
lbl_800BC280 = .sdata2:0x800BC280; // type:object size:0x8 data:double
lbl_800BC288 = .sdata2:0x800BC288; // type:object size:0x8 data:double
lbl_800BC290 = .sdata2:0x800BC290; // type:object size:0x8 data:double
lbl_800BC298 = .sdata2:0x800BC298; // type:object size:0x8 data:double
lbl_800BC2A0 = .sdata2:0x800BC2A0; // type:object size:0x8 data:double
lbl_800BC2A8 = .sdata2:0x800BC2A8; // type:object size:0x8 data:double
lbl_800BC2B0 = .sdata2:0x800BC2B0; // type:object size:0x8 data:double
lbl_800BC2B8 = .sdata2:0x800BC2B8; // type:object size:0x8 data:double
lbl_800BC2C0 = .sdata2:0x800BC2C0; // type:object size:0x8 data:double
lbl_800BC2C8 = .sdata2:0x800BC2C8; // type:object size:0x8 data:double
lbl_800BC2D0 = .sdata2:0x800BC2D0; // type:object size:0x8 data:double
lbl_800BC2D8 = .sdata2:0x800BC2D8; // type:object size:0x8 data:double
lbl_800BC2E0 = .sdata2:0x800BC2E0; // type:object size:0x8 data:double
lbl_800BC2E8 = .sdata2:0x800BC2E8; // type:object size:0x8 data:double
lbl_800BC2F0 = .sdata2:0x800BC2F0; // type:object size:0x8 data:double
lbl_800BC2F8 = .sdata2:0x800BC2F8; // type:object size:0x8 data:double
lbl_800BC300 = .sdata2:0x800BC300; // type:object size:0x8 data:double
lbl_800BC308 = .sdata2:0x800BC308; // type:object size:0x8 data:double
lbl_800BC310 = .sdata2:0x800BC310; // type:object size:0x8 data:double
lbl_800BC318 = .sdata2:0x800BC318; // type:object size:0x8 data:double
lbl_800BC320 = .sdata2:0x800BC320; // type:object size:0x8 data:double
lbl_800BC328 = .sdata2:0x800BC328; // type:object size:0x8 data:double
lbl_800BC330 = .sdata2:0x800BC330; // type:object size:0x8 data:double
lbl_800BC338 = .sdata2:0x800BC338; // type:object size:0x8 data:double
lbl_800BC340 = .sdata2:0x800BC340; // type:object size:0x8 data:double
lbl_800BC348 = .sdata2:0x800BC348; // type:object size:0x8 data:double
lbl_800BC350 = .sdata2:0x800BC350; // type:object size:0x8 data:double
lbl_800BC358 = .sdata2:0x800BC358; // type:object size:0x8 data:double
lbl_800BC360 = .sdata2:0x800BC360; // type:object size:0x8 data:double
lbl_800BC368 = .sdata2:0x800BC368; // type:object size:0x8 data:double
lbl_800BC370 = .sdata2:0x800BC370; // type:object size:0x8 data:double
lbl_800BC378 = .sdata2:0x800BC378; // type:object size:0x8 data:double
lbl_800BC380 = .sdata2:0x800BC380; // type:object size:0x8 data:double
lbl_800BC388 = .sdata2:0x800BC388; // type:object size:0x8 data:double
lbl_800BC390 = .sdata2:0x800BC390; // type:object size:0x8 data:double
lbl_800BC398 = .sdata2:0x800BC398; // type:object size:0x8 data:double
lbl_800BC3A0 = .sdata2:0x800BC3A0; // type:object size:0x8 data:double
lbl_800BC3A8 = .sdata2:0x800BC3A8; // type:object size:0x8 data:double
lbl_800BC3B0 = .sdata2:0x800BC3B0; // type:object size:0x8 data:double
lbl_800BC3B8 = .sdata2:0x800BC3B8; // type:object size:0x8 data:double
lbl_800BC3C0 = .sdata2:0x800BC3C0; // type:object size:0x8 data:double
lbl_800BC3C8 = .sdata2:0x800BC3C8; // type:object size:0x8 data:double
lbl_800BC3D0 = .sdata2:0x800BC3D0; // type:object size:0x8 data:double
lbl_800BC3D8 = .sdata2:0x800BC3D8; // type:object size:0x8 data:double
lbl_800BC3E0 = .sdata2:0x800BC3E0; // type:object size:0x8 data:double
lbl_800BC3E8 = .sdata2:0x800BC3E8; // type:object size:0x8 data:double
lbl_800BC3F0 = .sdata2:0x800BC3F0; // type:object size:0x8 data:double
lbl_800BC3F8 = .sdata2:0x800BC3F8; // type:object size:0x8 data:double
lbl_800BC400 = .sdata2:0x800BC400; // type:object size:0x8 data:double
lbl_800BC408 = .sdata2:0x800BC408; // type:object size:0x8 data:double
lbl_800BC410 = .sdata2:0x800BC410; // type:object size:0x8 data:double
lbl_800BC418 = .sdata2:0x800BC418; // type:object size:0x8 data:double
lbl_800BC420 = .sdata2:0x800BC420; // type:object size:0x8 data:double
lbl_800BC428 = .sdata2:0x800BC428; // type:object size:0x8 data:double
lbl_800BC430 = .sdata2:0x800BC430; // type:object size:0x8 data:double
lbl_800BC438 = .sdata2:0x800BC438; // type:object size:0x8 data:double
lbl_800BC440 = .sdata2:0x800BC440; // type:object size:0x8 data:double
lbl_800BC448 = .sdata2:0x800BC448; // type:object size:0x8 data:double
lbl_800BC450 = .sdata2:0x800BC450; // type:object size:0x8 data:double
lbl_800BC458 = .sdata2:0x800BC458; // type:object size:0x8 data:double
lbl_800BC460 = .sdata2:0x800BC460; // type:object size:0x8 data:double
lbl_800BC468 = .sdata2:0x800BC468; // type:object size:0x8 data:double
lbl_800BC470 = .sdata2:0x800BC470; // type:object size:0x8 data:double
lbl_800BC478 = .sdata2:0x800BC478; // type:object size:0x8 data:double
lbl_800BC480 = .sdata2:0x800BC480; // type:object size:0x8 data:double
lbl_800BC488 = .sdata2:0x800BC488; // type:object size:0x8 data:double
lbl_800BC490 = .sdata2:0x800BC490; // type:object size:0x8 data:double
lbl_800BC498 = .sdata2:0x800BC498; // type:object size:0x8 data:double
lbl_800BC4A0 = .sdata2:0x800BC4A0; // type:object size:0x8 data:double
lbl_800BC4A8 = .sdata2:0x800BC4A8; // type:object size:0x8 data:double
lbl_800BC4B0 = .sdata2:0x800BC4B0; // type:object size:0x8 data:double
lbl_800BC4B8 = .sdata2:0x800BC4B8; // type:object size:0x8 data:double
lbl_800BC4C0 = .sdata2:0x800BC4C0; // type:object size:0x8 data:double
lbl_800BC4C8 = .sdata2:0x800BC4C8; // type:object size:0x8 data:double
lbl_800BC4D0 = .sdata2:0x800BC4D0; // type:object size:0x8 data:double
lbl_800BC4D8 = .sdata2:0x800BC4D8; // type:object size:0x4 data:float
lbl_800BC4E0 = .sdata2:0x800BC4E0; // type:object size:0x8 data:double
lbl_800BC4E8 = .sdata2:0x800BC4E8; // type:object size:0x8 data:double
lbl_800BC4F0 = .sdata2:0x800BC4F0; // type:object size:0x8 data:double
lbl_800BC4F8 = .sdata2:0x800BC4F8; // type:object size:0x4 data:float
lbl_800BC500 = .sdata2:0x800BC500; // type:object size:0x4 data:float
lbl_800BC504 = .sdata2:0x800BC504; // type:object size:0x4 data:float
lbl_800BC508 = .sdata2:0x800BC508; // type:object size:0x4 data:float
lbl_800BC50C = .sdata2:0x800BC50C; // type:object size:0x4 data:float
lbl_800BC510 = .sdata2:0x800BC510; // type:object size:0x4 data:float
lbl_800BC514 = .sdata2:0x800BC514; // type:object size:0x4 data:float
lbl_800BC518 = .sdata2:0x800BC518; // type:object size:0x4 data:float
lbl_800BC51C = .sdata2:0x800BC51C; // type:object size:0x4 data:float
lbl_800BC520 = .sdata2:0x800BC520; // type:object size:0x8 data:double
i2fMagic = .sdata2:0x800BC528; // type:object size:0x8 scope:local data:double
value1_0 = .sdata2:0x800BC530; // type:object size:0x4 data:float
value0_3 = .sdata2:0x800BC534; // type:object size:0x4 scope:local data:float
value0_6 = .sdata2:0x800BC538; // type:object size:0x4 scope:local data:float
lbl_800BC53C = .sdata2:0x800BC53C; // type:object size:0x4 data:float
lbl_800BC540 = .sdata2:0x800BC540; // type:object size:0x4 data:float
lbl_800BC544 = .sdata2:0x800BC544; // type:object size:0x4 data:float
lbl_800BC548 = .sdata2:0x800BC548; // type:object size:0x4 data:float
lbl_800BC54C = .sdata2:0x800BC54C; // type:object size:0x4 data:float
lbl_800BC550 = .sdata2:0x800BC550; // type:object size:0x4 data:float
lbl_800BC554 = .sdata2:0x800BC554; // type:object size:0x4 data:float
lbl_800BC558 = .sdata2:0x800BC558; // type:object size:0x4 data:float
lbl_800BC55C = .sdata2:0x800BC55C; // type:object size:0x4 data:float
lbl_800BC560 = .sdata2:0x800BC560; // type:object size:0x8 data:double
value0_3 = .sdata2:0x800BC568; // type:object size:0x4 scope:local data:float
value0_6 = .sdata2:0x800BC56C; // type:object size:0x4 scope:local data:float
i2fMagic = .sdata2:0x800BC570; // type:object size:0x8 scope:local data:double
i2fMagic = .sdata2:0x800BC578; // type:object size:0x8 scope:local data:double
gx = .sdata2:0x800BC580; // type:object size:0x4 scope:global data:4byte
lbl_800BC584 = .sdata2:0x800BC584; // type:object size:0x4 data:4byte
lbl_800BC588 = .sdata2:0x800BC588; // type:object size:0x4 data:4byte
lbl_800BC58C = .sdata2:0x800BC58C; // type:object size:0x4 data:4byte
lbl_800BC590 = .sdata2:0x800BC590; // type:object size:0x4 data:float
lbl_800BC594 = .sdata2:0x800BC594; // type:object size:0x4 data:float
lbl_800BC598 = .sdata2:0x800BC598; // type:object size:0x4 data:float
lbl_800BC5A0 = .sdata2:0x800BC5A0; // type:object size:0x8 data:double
lbl_800BC5A8 = .sdata2:0x800BC5A8; // type:object size:0x8 data:float
lbl_800BC5B0 = .sdata2:0x800BC5B0; // type:object size:0x4 data:float
lbl_800BC5B8 = .sdata2:0x800BC5B8; // type:object size:0x8 data:double
lbl_800BC5C0 = .sdata2:0x800BC5C0; // type:object size:0x4 data:float
lbl_800BC5C4 = .sdata2:0x800BC5C4; // type:object size:0x4 data:float
lbl_800BC5C8 = .sdata2:0x800BC5C8; // type:object size:0x4 data:float
lbl_800BC5CC = .sdata2:0x800BC5CC; // type:object size:0x4 data:float
lbl_800BC5D0 = .sdata2:0x800BC5D0; // type:object size:0x4 data:float
lbl_800BC5D4 = .sdata2:0x800BC5D4; // type:object size:0x4 data:float
lbl_800BC5D8 = .sdata2:0x800BC5D8; // type:object size:0x8 data:float
lbl_800BC5E0 = .sdata2:0x800BC5E0; // type:object size:0x4 data:float
lbl_800BC5E4 = .sdata2:0x800BC5E4; // type:object size:0x4 data:float
lbl_800BC5E8 = .sdata2:0x800BC5E8; // type:object size:0x4 data:float
lbl_800BC5F0 = .sdata2:0x800BC5F0; // type:object size:0x8 data:double
lbl_800BC5F8 = .sdata2:0x800BC5F8; // type:object size:0x4 data:float
lbl_800BC600 = .sdata2:0x800BC600; // type:object size:0x8 data:double
lbl_800BC608 = .sdata2:0x800BC608; // type:object size:0x4 data:float
lbl_800BC610 = .sdata2:0x800BC610; // type:object size:0x8 data:double
lbl_800BC618 = .sdata2:0x800BC618; // type:object size:0x4 data:float
lbl_800BC61C = .sdata2:0x800BC61C; // type:object size:0x4 data:float
lbl_800BC620 = .sdata2:0x800BC620; // type:object size:0x4 data:float
lbl_800BC628 = .sdata2:0x800BC628; // type:object size:0x8 data:double
lbl_800BC630 = .sdata2:0x800BC630; // type:object size:0x4 data:float
lbl_800BC634 = .sdata2:0x800BC634; // type:object size:0x4 data:float
lbl_800BC638 = .sdata2:0x800BC638; // type:object size:0x4 data:float
lbl_800BC63C = .sdata2:0x800BC63C; // type:object size:0x4 data:float
lbl_800BC640 = .sdata2:0x800BC640; // type:object size:0x4 data:float
lbl_800BC644 = .sdata2:0x800BC644; // type:object size:0x4 data:float
lbl_800BC648 = .sdata2:0x800BC648; // type:object size:0x4 data:float
lbl_800BC64C = .sdata2:0x800BC64C; // type:object size:0x4 data:float
lbl_800BC650 = .sdata2:0x800BC650; // type:object size:0x4 data:float
lbl_800BC654 = .sdata2:0x800BC654; // type:object size:0x4 data:float
lbl_800BC658 = .sdata2:0x800BC658; // type:object size:0x4 data:float
lbl_800BC65C = .sdata2:0x800BC65C; // type:object size:0x4 data:float
lbl_800BC660 = .sdata2:0x800BC660; // type:object size:0x4 data:float
lbl_800BC664 = .sdata2:0x800BC664; // type:object size:0x4 data:float
lbl_800BC668 = .sdata2:0x800BC668; // type:object size:0x4 data:float
lbl_800BC66C = .sdata2:0x800BC66C; // type:object size:0x4 data:float
lbl_800BC670 = .sdata2:0x800BC670; // type:object size:0x4 data:4byte
lbl_800BC674 = .sdata2:0x800BC674; // type:object size:0x4 data:4byte
lbl_800BC678 = .sdata2:0x800BC678; // type:object size:0x8 data:float
lbl_800BC680 = .sdata2:0x800BC680; // type:object size:0x4 data:float
lbl_800BC684 = .sdata2:0x800BC684; // type:object size:0x4 data:float
lbl_800BC688 = .sdata2:0x800BC688; // type:object size:0x4 data:float
lbl_800BC690 = .sdata2:0x800BC690; // type:object size:0x8 data:double
lbl_800BC698 = .sdata2:0x800BC698; // type:object size:0x8 data:double
lbl_800BC6A0 = .sdata2:0x800BC6A0; // type:object size:0x4 data:float
lbl_800BC6A4 = .sdata2:0x800BC6A4; // type:object size:0x4 data:float
lbl_800BC6A8 = .sdata2:0x800BC6A8; // type:object size:0x8 data:float
lbl_800BC6B0 = .sdata2:0x800BC6B0; // type:object size:0x4 data:float
lbl_800BC6B4 = .sdata2:0x800BC6B4; // type:object size:0x4 data:float
lbl_800BC6B8 = .sdata2:0x800BC6B8; // type:object size:0x8 data:float
lbl_800BC6C0 = .sdata2:0x800BC6C0; // type:object size:0x4 data:float
lbl_800BC6C8 = .sdata2:0x800BC6C8; // type:object size:0x8 data:double
lbl_800BC6D0 = .sdata2:0x800BC6D0; // type:object size:0x4 data:4byte
lbl_800BC6D4 = .sdata2:0x800BC6D4; // type:object size:0x4 data:4byte
lbl_800BC6D8 = .sdata2:0x800BC6D8; // type:object size:0x4 data:float
lbl_800BC6DC = .sdata2:0x800BC6DC; // type:object size:0x4 data:float
lbl_800BC6E0 = .sdata2:0x800BC6E0; // type:object size:0x4 data:float
lbl_800BC6E4 = .sdata2:0x800BC6E4; // type:object size:0x4 data:float
lbl_800BC6E8 = .sdata2:0x800BC6E8; // type:object size:0x4 data:float
lbl_800BC6EC = .sdata2:0x800BC6EC; // type:object size:0x4 data:float
lbl_800BC6F0 = .sdata2:0x800BC6F0; // type:object size:0x8 data:double
lbl_800BC6F8 = .sdata2:0x800BC6F8; // type:object size:0x8 data:double
lbl_800BC700 = .sdata2:0x800BC700; // type:object size:0x8 data:double
lbl_800BC708 = .sdata2:0x800BC708; // type:object size:0x4 data:float
lbl_800BC710 = .sdata2:0x800BC710; // type:object size:0x8 data:double
lbl_800BC718 = .sdata2:0x800BC718; // type:object size:0x4 data:float
lbl_800BC71C = .sdata2:0x800BC71C; // type:object size:0x4 data:float
lbl_800BC720 = .sdata2:0x800BC720; // type:object size:0x8 data:double
lbl_800BC728 = .sdata2:0x800BC728; // type:object size:0x8 data:double
lbl_800BC730 = .sdata2:0x800BC730; // type:object size:0x4 data:float
lbl_800BC734 = .sdata2:0x800BC734; // type:object size:0x4 data:float
lbl_800BC738 = .sdata2:0x800BC738; // type:object size:0x8 data:double
lbl_800BC740 = .sdata2:0x800BC740; // type:object size:0x4 data:float
lbl_800BC744 = .sdata2:0x800BC744; // type:object size:0x4 data:float
lbl_800BC748 = .sdata2:0x800BC748; // type:object size:0x4 data:float
lbl_800BC750 = .sdata2:0x800BC750; // type:object size:0x8 data:double
lbl_800BC758 = .sdata2:0x800BC758; // type:object size:0x8 data:double
lbl_800BC760 = .sdata2:0x800BC760; // type:object size:0x8 data:double
lbl_800BC768 = .sdata2:0x800BC768; // type:object size:0x8 data:double
lbl_800BC770 = .sdata2:0x800BC770; // type:object size:0x8 data:double
lbl_800BC778 = .sdata2:0x800BC778; // type:object size:0x8 data:double
lbl_800BC780 = .sdata2:0x800BC780; // type:object size:0x8 data:double
lbl_800BC788 = .sdata2:0x800BC788; // type:object size:0x4 data:float
lbl_800BC78C = .sdata2:0x800BC78C; // type:object size:0x4 data:float
lbl_800BC790 = .sdata2:0x800BC790; // type:object size:0x4 data:float
lbl_800BC794 = .sdata2:0x800BC794; // type:object size:0x4 data:float
lbl_800BC798 = .sdata2:0x800BC798; // type:object size:0x4 data:float
lbl_800BC7A0 = .sdata2:0x800BC7A0; // type:object size:0x8 data:double
lbl_800BC7A8 = .sdata2:0x800BC7A8; // type:object size:0x4 data:float
lbl_800BC7AC = .sdata2:0x800BC7AC; // type:object size:0x4 data:float
lbl_800BC7B0 = .sdata2:0x800BC7B0; // type:object size:0x4 data:float
lbl_800BC7B4 = .sdata2:0x800BC7B4; // type:object size:0x4 data:float
lbl_800BC7B8 = .sdata2:0x800BC7B8; // type:object size:0x4 data:float
lbl_800BC7BC = .sdata2:0x800BC7BC; // type:object size:0x4 data:float
lbl_800BC7C0 = .sdata2:0x800BC7C0; // type:object size:0x8 data:float
lbl_800BC7C8 = .sdata2:0x800BC7C8; // type:object size:0x4 data:float
lbl_800BC7CC = .sdata2:0x800BC7CC; // type:object size:0x4 data:float
lbl_800BC7D0 = .sdata2:0x800BC7D0; // type:object size:0x8 data:float
lbl_800BC7D8 = .sdata2:0x800BC7D8; // type:object size:0x4 data:float
lbl_800BC7DC = .sdata2:0x800BC7DC; // type:object size:0x4 data:float
lbl_800BC7E0 = .sdata2:0x800BC7E0; // type:object size:0x8 data:float
lbl_800BC7E8 = .sdata2:0x800BC7E8; // type:object size:0x8 data:float
lbl_800BC7F0 = .sdata2:0x800BC7F0; // type:object size:0x4 data:float
lbl_800BC7F4 = .sdata2:0x800BC7F4; // type:object size:0x4 data:float
lbl_800BC7F8 = .sdata2:0x800BC7F8; // type:object size:0x8 data:double
lbl_800BC800 = .sdata2:0x800BC800; // type:object size:0x8 data:double
lbl_800BC808 = .sdata2:0x800BC808; // type:object size:0x8 data:float
lbl_800BC810 = .sdata2:0x800BC810; // type:object size:0x8 data:float
lbl_800BC818 = .sdata2:0x800BC818; // type:object size:0x4 data:float
lbl_800BC820 = .sdata2:0x800BC820; // type:object size:0x8 data:double
lbl_800BC828 = .sdata2:0x800BC828; // type:object size:0x8 data:float
lbl_800BC830 = .sdata2:0x800BC830; // type:object size:0x4 data:float
lbl_800BC834 = .sdata2:0x800BC834; // type:object size:0x4 data:float
lbl_800BC838 = .sdata2:0x800BC838; // type:object size:0x8 data:double
lbl_800BC840 = .sdata2:0x800BC840; // type:object size:0x8 data:double
lbl_800BC848 = .sdata2:0x800BC848; // type:object size:0x4 data:float
lbl_800BC84C = .sdata2:0x800BC84C; // type:object size:0x4 data:float
lbl_800BC850 = .sdata2:0x800BC850; // type:object size:0x8 data:double
lbl_800BC858 = .sdata2:0x800BC858; // type:object size:0x4 data:float
lbl_800BC860 = .sdata2:0x800BC860; // type:object size:0x8 data:double
lbl_800BC868 = .sdata2:0x800BC868; // type:object size:0x4 data:float
lbl_800BC86C = .sdata2:0x800BC86C; // type:object size:0x4 data:float
lbl_800BC870 = .sdata2:0x800BC870; // type:object size:0x4 data:float
lbl_800BC878 = .sdata2:0x800BC878; // type:object size:0x8 data:double
lbl_800BC880 = .sdata2:0x800BC880; // type:object size:0x4 data:float
lbl_800BC884 = .sdata2:0x800BC884; // type:object size:0x4 data:float
lbl_800BC888 = .sdata2:0x800BC888; // type:object size:0x4 data:float
lbl_800BC88C = .sdata2:0x800BC88C; // type:object size:0x4 data:float
lbl_800BC890 = .sdata2:0x800BC890; // type:object size:0x8 data:float
lbl_800BC898 = .sdata2:0x800BC898; // type:object size:0x4 data:float
lbl_800BC89C = .sdata2:0x800BC89C; // type:object size:0x4 data:float
lbl_800BC8A0 = .sdata2:0x800BC8A0; // type:object size:0x4 data:float
lbl_800BC8A4 = .sdata2:0x800BC8A4; // type:object size:0x4 data:float
lbl_800BC8A8 = .sdata2:0x800BC8A8; // type:object size:0x8 data:float
lbl_800BC8B0 = .sdata2:0x800BC8B0; // type:object size:0x8 data:float
lbl_800BC8B8 = .sdata2:0x800BC8B8; // type:object size:0x4 data:float
lbl_800BC8BC = .sdata2:0x800BC8BC; // type:object size:0x4 data:float
lbl_800BC8C0 = .sdata2:0x800BC8C0; // type:object size:0x4 data:float
lbl_800BC8C4 = .sdata2:0x800BC8C4; // type:object size:0x4 data:float
lbl_800BC8C8 = .sdata2:0x800BC8C8; // type:object size:0x8 data:double
lbl_800BC8D0 = .sdata2:0x800BC8D0; // type:object size:0x8 data:double
lbl_800BC8D8 = .sdata2:0x800BC8D8; // type:object size:0x8 data:double
lbl_800BC8E0 = .sdata2:0x800BC8E0; // type:object size:0x8 data:double
lbl_800BC8E8 = .sdata2:0x800BC8E8; // type:object size:0x4 data:float
lbl_800BC8EC = .sdata2:0x800BC8EC; // type:object size:0x4 data:float
lbl_800BC8F0 = .sdata2:0x800BC8F0; // type:object size:0x4 data:float
lbl_800BC8F4 = .sdata2:0x800BC8F4; // type:object size:0x4 data:float
lbl_800BC8F8 = .sdata2:0x800BC8F8; // type:object size:0x4 data:float
lbl_800BC8FC = .sdata2:0x800BC8FC; // type:object size:0x4 data:float
lbl_800BC900 = .sdata2:0x800BC900; // type:object size:0x4 data:float
lbl_800BC904 = .sdata2:0x800BC904; // type:object size:0x4 data:float
lbl_800BC908 = .sdata2:0x800BC908; // type:object size:0x4 data:float
lbl_800BC90C = .sdata2:0x800BC90C; // type:object size:0x4 data:float
lbl_800BC910 = .sdata2:0x800BC910; // type:object size:0x4 data:float
lbl_800BC914 = .sdata2:0x800BC914; // type:object size:0x4 data:float
lbl_800BC918 = .sdata2:0x800BC918; // type:object size:0x4 data:float
lbl_800BC91C = .sdata2:0x800BC91C; // type:object size:0x4 data:float
lbl_800BC920 = .sdata2:0x800BC920; // type:object size:0x4 data:float
lbl_800BC928 = .sdata2:0x800BC928; // type:object size:0x8 data:double
lbl_800BC930 = .sdata2:0x800BC930; // type:object size:0x4 data:float
lbl_800BC934 = .sdata2:0x800BC934; // type:object size:0x4 data:float
lbl_800BC938 = .sdata2:0x800BC938; // type:object size:0x8 data:double
lbl_800BC940 = .sdata2:0x800BC940; // type:object size:0x8 data:double
lbl_800BC948 = .sdata2:0x800BC948; // type:object size:0x4 data:float
lbl_800BC950 = .sdata2:0x800BC950; // type:object size:0x8 data:double
lbl_800BC958 = .sdata2:0x800BC958; // type:object size:0x8 data:double
lbl_800BC960 = .sdata2:0x800BC960; // type:object size:0x8 data:double
lbl_800BC968 = .sdata2:0x800BC968; // type:object size:0x4 data:float
lbl_800BC96C = .sdata2:0x800BC96C; // type:object size:0x4 data:float
lbl_800BC970 = .sdata2:0x800BC970; // type:object size:0x4 data:float
lbl_800BC974 = .sdata2:0x800BC974; // type:object size:0x4 data:float
lbl_800BC978 = .sdata2:0x800BC978; // type:object size:0x8 data:float
lbl_800BC980 = .sdata2:0x800BC980; // type:object size:0x4 data:float
lbl_800BC984 = .sdata2:0x800BC984; // type:object size:0x4 data:float
lbl_800BC988 = .sdata2:0x800BC988; // type:object size:0x4 data:float
lbl_800BC98C = .sdata2:0x800BC98C; // type:object size:0x4 data:float
lbl_800BC990 = .sdata2:0x800BC990; // type:object size:0x4 data:float
lbl_800BC994 = .sdata2:0x800BC994; // type:object size:0x4 data:float
lbl_800BC998 = .sdata2:0x800BC998; // type:object size:0x4 data:float
lbl_800BC9A0 = .sdata2:0x800BC9A0; // type:object size:0x8 data:double
lbl_800BC9A8 = .sdata2:0x800BC9A8; // type:object size:0x4 data:float
lbl_800BC9AC = .sdata2:0x800BC9AC; // type:object size:0x4 data:float
lbl_800BC9B0 = .sdata2:0x800BC9B0; // type:object size:0x4 data:float
lbl_800BC9B8 = .sdata2:0x800BC9B8; // type:object size:0x8 data:double
lbl_800BC9C0 = .sdata2:0x800BC9C0; // type:object size:0x8 data:double
lbl_800BC9E0 = .sbss2:0x800BC9E0; // type:object size:0x4 data:4byte
lbl_800BC9E4 = .sbss2:0x800BC9E4; // type:object size:0x4 data:4byte
